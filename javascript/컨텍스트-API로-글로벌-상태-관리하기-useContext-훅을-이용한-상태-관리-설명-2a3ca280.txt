1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-API%EB%A1%9C-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0-useContext-%ED%9B%85%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-%EC%84%A4%EB%AA%85-2a3ca280","d"],{"children":["__PAGE__?{\"slug\":\"컨텍스트-API로-글로벌-상태-관리하기-useContext-훅을-이용한-상태-관리-설명-2a3ca280\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-API%EB%A1%9C-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0-useContext-%ED%9B%85%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-%EC%84%A4%EB%AA%85-2a3ca280","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"컨텍스트-API로-글로벌-상태-관리하기-useContext-훅을-이용한-상태-관리-설명-2a3ca280\"}"},"styles":[]}],"segment":["slug","%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-API%EB%A1%9C-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0-useContext-%ED%9B%85%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-%EC%84%A4%EB%AA%85-2a3ca280","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"컨텍스트 API로 글로벌 상태 관리하기: useContext 훅을 이용한 상태 관리 설명. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 React 애플리케이션에서 글로벌 상태 관리를 위해 컨텍스트 API를 사용하는 방법과 useContext 훅을 이용한 상태 관리에 대해 설명합니다."}],["$","meta","3",{"name":"keywords","content":"React,useContext,Context API,상태 관리"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-API%EB%A1%9C-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0-useContext-%ED%9B%85%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-%EC%84%A4%EB%AA%85-2a3ca280"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"컨텍스트 API로 글로벌 상태 관리하기: useContext 훅을 이용한 상태 관리 설명. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"컨텍스트 API로 글로벌 상태 관리하기: useContext 훅을 이용한 상태 관리 설명. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 React 애플리케이션에서 글로벌 상태 관리를 위해 컨텍스트 API를 사용하는 방법과 useContext 훅을 이용한 상태 관리에 대해 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-API%EB%A1%9C-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0-useContext-%ED%9B%85%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-%EC%84%A4%EB%AA%85-2a3ca280"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"컨텍스트 API로 글로벌 상태 관리하기: useContext 훅을 이용한 상태 관리 설명. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 React 애플리케이션에서 글로벌 상태 관리를 위해 컨텍스트 API를 사용하는 방법과 useContext 훅을 이용한 상태 관리에 대해 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"컨텍스트 API로 글로벌 상태 관리하기: useContext 훅을 이용한 상태 관리 설명."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"컨텍스트 API로 글로벌 상태 관리하기: useContext 훅을 이용한 상태 관리 설명."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-23"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"0eed2e64","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"컨텍스트 API로 글로벌 상태 관리하기: useContext 훅을 이용한 상태 관리 설명"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["React는 상태 관리가 중요한 프레임워크입니다. 전역 상태를 다루기 위해 여러 가지 방법이 있으며, 그 중에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"컨텍스트 API","position":{"start":{"line":4,"column":64,"offset":117},"end":{"line":4,"column":74,"offset":127}}}],"position":{"start":{"line":4,"column":64,"offset":117},"end":{"line":4,"column":74,"offset":127}}},"children":"컨텍스트 API"}}],"는 간단하고 강력한 도구입니다. 이 글에서는 React의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"컨텍스트 API","position":{"start":{"line":4,"column":106,"offset":159},"end":{"line":4,"column":116,"offset":169}}}],"position":{"start":{"line":4,"column":106,"offset":159},"end":{"line":4,"column":116,"offset":169}}},"children":"컨텍스트 API"}}],"를 사용하여 글로벌 상태를 관리하는 방법과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useContext","position":{"start":{"line":4,"column":140,"offset":193},"end":{"line":4,"column":152,"offset":205}}}],"position":{"start":{"line":4,"column":140,"offset":193},"end":{"line":4,"column":152,"offset":205}}},"children":"useContext"}}]," 훅을 이용한 상태 관리 방법을 설명하겠습니다."]}],"\n",["$","h2",null,{"id":"e384d912","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"컨텍스트 API란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"React의 컨텍스트 API는 트리 구조의 컴포넌트를 통해 글로벌 상태를 전달할 수 있게 해줍니다. 이를 통해 모든 컴포넌트가 별도의 props drilling 없이 데이터를 공유할 수 있습니다. 컨텍스트는 복잡한 상태를 관리할 때 특히 유용합니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"컨텍스트 API를 사용하는 주요 단계는 다음과 같습니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":["컨텍스트 생성(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React.createContext","position":{"start":{"line":12,"column":12,"offset":433},"end":{"line":12,"column":33,"offset":454}}}],"position":{"start":{"line":12,"column":12,"offset":433},"end":{"line":12,"column":33,"offset":454}}},"children":"React.createContext"}}],")"]}],"\n",["$","li","li-1",{"children":["컨텍스트 프로바이더(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Context.Provider","position":{"start":{"line":13,"column":15,"offset":471},"end":{"line":13,"column":33,"offset":489}}}],"position":{"start":{"line":13,"column":15,"offset":471},"end":{"line":13,"column":33,"offset":489}}},"children":"Context.Provider"}}],") 설정"]}],"\n",["$","li","li-2",{"children":["컨텍스트 소비(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useContext","position":{"start":{"line":14,"column":12,"offset":505},"end":{"line":14,"column":24,"offset":517}}}],"position":{"start":{"line":14,"column":12,"offset":505},"end":{"line":14,"column":24,"offset":517}}},"children":"useContext"}}],")하여 상태 접근"]}],"\n"]}],"\n",["$","h2",null,{"id":"68e81ae3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"컨텍스트 생성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["첫 번째 단계는 컨텍스트를 생성하는 것입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React.createContext","position":{"start":{"line":18,"column":27,"offset":566},"end":{"line":18,"column":48,"offset":587}}}],"position":{"start":{"line":18,"column":27,"offset":566},"end":{"line":18,"column":48,"offset":587}}},"children":"React.createContext"}}]," 함수를 사용하여 컨텍스트를 생성합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React from 'react';\n\nconst MyContext = React.createContext();\n"}],"position":{"start":{"line":20,"column":1,"offset":611},"end":{"line":24,"column":4,"offset":697}}},"children":"import React from 'react';\n\nconst MyContext = React.createContext();\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"MyContext","position":{"start":{"line":26,"column":4,"offset":702},"end":{"line":26,"column":15,"offset":713}}}],"position":{"start":{"line":26,"column":4,"offset":702},"end":{"line":26,"column":15,"offset":713}}},"children":"MyContext"}}],"를 통해 글로벌 상태를 관리할 준비가 되었습니다."]}],"\n",["$","h2",null,{"id":"1b2e0368","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"컨텍스트 프로바이더 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"두 번째 단계는 컨텍스트 프로바이더를 설정하는 것입니다. 프로바이더는 컨텍스트를 생성하고 값을 전달합니다. 보통 상위 컴포넌트에서 컨텍스트 프로바이더를 설정합니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { useState } from 'react';\nimport MyContext from './MyContext';\n\nconst MyProvider = ({ children }) => {\n  const [state, setState] = useState('Hello, World!');\n\n  return (\n    <MyContext.Provider value={{ state, setState }}>\n      {children}\n    </MyContext.Provider>\n  );\n};\n"}],"position":{"start":{"line":32,"column":1,"offset":853},"end":{"line":45,"column":4,"offset":1159}}},"children":"import React, { useState } from 'react';\nimport MyContext from './MyContext';\n\nconst MyProvider = ({ children }) => {\n  const [state, setState] = useState('Hello, World!');\n\n  return (\n    <MyContext.Provider value={{ state, setState }}>\n      {children}\n    </MyContext.Provider>\n  );\n};\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"MyProvider","position":{"start":{"line":47,"column":1,"offset":1161},"end":{"line":47,"column":13,"offset":1173}}}],"position":{"start":{"line":47,"column":1,"offset":1161},"end":{"line":47,"column":13,"offset":1173}}},"children":"MyProvider"}}]," 컴포넌트는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"MyContext.Provider","position":{"start":{"line":47,"column":20,"offset":1180},"end":{"line":47,"column":40,"offset":1200}}}],"position":{"start":{"line":47,"column":20,"offset":1180},"end":{"line":47,"column":40,"offset":1200}}},"children":"MyContext.Provider"}}],"를 사용하여 상태와 상태 업데이트 함수를 제공합니다. 이제 이 프로바이더를 애플리케이션의 루트에 추가합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport MyProvider from './MyProvider';\n\nReactDOM.render(\n  <MyProvider>\n    <App />\n  </MyProvider>,\n  document.getElementById('root')\n);\n"}],"position":{"start":{"line":49,"column":1,"offset":1262},"end":{"line":61,"column":4,"offset":1503}}},"children":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport MyProvider from './MyProvider';\n\nReactDOM.render(\n  <MyProvider>\n    <App />\n  </MyProvider>,\n  document.getElementById('root')\n);\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 모든 하위 컴포넌트가 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"MyContext","position":{"start":{"line":63,"column":16,"offset":1520},"end":{"line":63,"column":27,"offset":1531}}}],"position":{"start":{"line":63,"column":16,"offset":1520},"end":{"line":63,"column":27,"offset":1531}}},"children":"MyContext"}}],"를 통해 전달된 상태에 접근할 수 있습니다."]}],"\n",["$","h2",null,{"id":"ea24895d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"useContext 훅 사용하여 상태 접근"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["마지막 단계는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useContext","position":{"start":{"line":67,"column":9,"offset":1593},"end":{"line":67,"column":21,"offset":1605}}}],"position":{"start":{"line":67,"column":9,"offset":1593},"end":{"line":67,"column":21,"offset":1605}}},"children":"useContext"}}]," 훅을 사용하여 상태에 접근하는 것입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useContext","position":{"start":{"line":67,"column":45,"offset":1629},"end":{"line":67,"column":57,"offset":1641}}}],"position":{"start":{"line":67,"column":45,"offset":1629},"end":{"line":67,"column":57,"offset":1641}}},"children":"useContext"}}]," 훅은 컨텍스트를 소비하고, 컨텍스트 프로바이더에서 전달된 값을 반환합니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { useContext } from 'react';\nimport MyContext from './MyContext';\n\nconst MyComponent = () => {\n  const { state, setState } = useContext(MyContext);\n\n  return (\n    <div>\n      <p>{state}</p>\n      <button onClick={() => setState('Hello, Context!')}>Change State</button>\n    </div>\n  );\n};\n"}],"position":{"start":{"line":69,"column":1,"offset":1685},"end":{"line":83,"column":4,"offset":2006}}},"children":"import React, { useContext } from 'react';\nimport MyContext from './MyContext';\n\nconst MyComponent = () => {\n  const { state, setState } = useContext(MyContext);\n\n  return (\n    <div>\n      <p>{state}</p>\n      <button onClick={() => setState('Hello, Context!')}>Change State</button>\n    </div>\n  );\n};\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"MyComponent","position":{"start":{"line":85,"column":1,"offset":2008},"end":{"line":85,"column":14,"offset":2021}}}],"position":{"start":{"line":85,"column":1,"offset":2008},"end":{"line":85,"column":14,"offset":2021}}},"children":"MyComponent"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useContext","position":{"start":{"line":85,"column":16,"offset":2023},"end":{"line":85,"column":28,"offset":2035}}}],"position":{"start":{"line":85,"column":16,"offset":2023},"end":{"line":85,"column":28,"offset":2035}}},"children":"useContext"}}]," 훅을 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"MyContext","position":{"start":{"line":85,"column":37,"offset":2044},"end":{"line":85,"column":48,"offset":2055}}}],"position":{"start":{"line":85,"column":37,"offset":2044},"end":{"line":85,"column":48,"offset":2055}}},"children":"MyContext"}}],"의 상태와 상태 업데이트 함수를 사용합니다. 이렇게 하면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props drilling","position":{"start":{"line":85,"column":80,"offset":2087},"end":{"line":85,"column":96,"offset":2103}}}],"position":{"start":{"line":85,"column":80,"offset":2087},"end":{"line":85,"column":96,"offset":2103}}},"children":"props drilling"}}]," 없이도 원하는 상태에 쉽게 접근하고 수정할 수 있습니다."]}],"\n",["$","h2",null,{"id":"7bd334aa","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"컨텍스트 API의 장단점"}],"\n",["$","h3",null,{"id":"0e91a822","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"장점"}],"\n",["$","ol","ol-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"글로벌 상태 관리 용이"}],": 상태를 글로벌하게 관리할 수 있어, 함수 컴포넌트나 클래스 컴포넌트 어디에서든지 접근이 가능합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"코드 간결화"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props drilling","position":{"start":{"line":92,"column":16,"offset":2255},"end":{"line":92,"column":32,"offset":2271}}}],"position":{"start":{"line":92,"column":16,"offset":2255},"end":{"line":92,"column":32,"offset":2271}}},"children":"props drilling"}}]," 문제를 해결하여 코드가 간결해지고 유지보수가 쉬워집니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"유연성"}],": 다양한 유형의 상태를 관리할 수 있으며, 필요에 따라 다양한 컨텍스트를 생성하여 사용 가능합니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"7c7251f1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"단점"}],"\n",["$","ol","ol-2",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"성능 이슈"}],": 컨텍스트 값이 변경될 때마다 모든 소비자 컴포넌트가 다시 렌더링됩니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"복잡성 증가"}],": 컨텍스트를 남발하면 코드가 복잡해질 수 있습니다. 따라서 적절히 사용해야 합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["React의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"컨텍스트 API","position":{"start":{"line":102,"column":8,"offset":2510},"end":{"line":102,"column":18,"offset":2520}}}],"position":{"start":{"line":102,"column":8,"offset":2510},"end":{"line":102,"column":18,"offset":2520}}},"children":"컨텍스트 API"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useContext","position":{"start":{"line":102,"column":20,"offset":2522},"end":{"line":102,"column":32,"offset":2534}}}],"position":{"start":{"line":102,"column":20,"offset":2522},"end":{"line":102,"column":32,"offset":2534}}},"children":"useContext"}}]," 훅을 사용하여 글로벌 상태를 관리하는 방법을 살펴보았습니다. 이를 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props drilling","position":{"start":{"line":102,"column":73,"offset":2575},"end":{"line":102,"column":89,"offset":2591}}}],"position":{"start":{"line":102,"column":73,"offset":2575},"end":{"line":102,"column":89,"offset":2591}}},"children":"props drilling"}}]," 문제를 해결하고 코드의 가독성을 높일 수 있습니다. 하지만 성능 이슈와 복잡성 문제를 고려하여 적절한 상황에서 사용해야 합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"컨텍스트 API","position":{"start":{"line":102,"column":162,"offset":2664},"end":{"line":102,"column":172,"offset":2674}}}],"position":{"start":{"line":102,"column":162,"offset":2664},"end":{"line":102,"column":172,"offset":2674}}},"children":"컨텍스트 API"}}],"는 간단한 글로벌 상태 관리에 매우 유용하므로, 프로젝트의 필요에 따라 적극적으로 활용해 보세요."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"컨텍스트 API로 글로벌 상태 관리하기: useContext 훅을 이용한 상태 관리 설명.","toc":[{"tagName":"h1","title":"컨텍스트 API로 글로벌 상태 관리하기: useContext 훅을 이용한 상태 관리 설명","id":"0eed2e64"},{"tagName":"h2","title":"컨텍스트 API란?","id":"e384d912"},{"tagName":"h2","title":"컨텍스트 생성","id":"68e81ae3"},{"tagName":"h2","title":"컨텍스트 프로바이더 설정","id":"1b2e0368"},{"tagName":"h2","title":"useContext 훅 사용하여 상태 접근","id":"ea24895d"},{"tagName":"h2","title":"컨텍스트 API의 장단점","id":"7bd334aa"},{"tagName":"h3","title":"장점","id":"0e91a822"},{"tagName":"h3","title":"단점","id":"7c7251f1"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
