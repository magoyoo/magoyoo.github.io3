1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["algorithm",{"children":[["slug","algorithm-%EB%84%88%EB%B9%84-%EC%9A%B0%EC%84%A0-%ED%83%90%EC%83%89-BFS-%EC%9D%B4%EB%9E%80","d"],{"children":["__PAGE__?{\"slug\":\"algorithm-너비-우선-탐색-BFS-이란\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children",["slug","algorithm-%EB%84%88%EB%B9%84-%EC%9A%B0%EC%84%A0-%ED%83%90%EC%83%89-BFS-%EC%9D%B4%EB%9E%80","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"algorithm-너비-우선-탐색-BFS-이란\"}"},"styles":[]}],"segment":["slug","algorithm-%EB%84%88%EB%B9%84-%EC%9A%B0%EC%84%A0-%ED%83%90%EC%83%89-BFS-%EC%9D%B4%EB%9E%80","d"]},"styles":[]}],"segment":"algorithm"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"너비 우선 탐색(BFS)이란? 정점에서 정점으로! 그래 네가 정점이다 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"너비 우선 탐색(Breadth-First Search, BFS)은 그래프 탐색 알고리즘으로, 시작 정점에서부터 모든 인접 정점을 먼저 탐색한 후, 그 다음 단계로 이동하는 방식입니다. BFS는 주로 큐를 사용하여 각 단계에서 탐색할 정점을 추적하며, 최단 경로 찾기, 웹 크롤링, 소셜 네트워크 분석, 망 연결 확인, 퍼즐 해결 등 다양한 문제 해결에 활용됩니다. 이 글에서는 BFS의 기본 개념, 구현 방법, 응용 사례, 장단점, 최적화 기법을 설명합니다."}],["$","meta","3",{"name":"keywords","content":"알고리즘"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/algorithm/algorithm-%EB%84%88%EB%B9%84-%EC%9A%B0%EC%84%A0-%ED%83%90%EC%83%89-BFS-%EC%9D%B4%EB%9E%80"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"너비 우선 탐색(BFS)이란? 정점에서 정점으로! 그래 네가 정점이다 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"너비 우선 탐색(BFS)이란? 정점에서 정점으로! 그래 네가 정점이다 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"너비 우선 탐색(Breadth-First Search, BFS)은 그래프 탐색 알고리즘으로, 시작 정점에서부터 모든 인접 정점을 먼저 탐색한 후, 그 다음 단계로 이동하는 방식입니다. BFS는 주로 큐를 사용하여 각 단계에서 탐색할 정점을 추적하며, 최단 경로 찾기, 웹 크롤링, 소셜 네트워크 분석, 망 연결 확인, 퍼즐 해결 등 다양한 문제 해결에 활용됩니다. 이 글에서는 BFS의 기본 개념, 구현 방법, 응용 사례, 장단점, 최적화 기법을 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/algorithm/algorithm-%EB%84%88%EB%B9%84-%EC%9A%B0%EC%84%A0-%ED%83%90%EC%83%89-BFS-%EC%9D%B4%EB%9E%80"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/algorithmImg.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"너비 우선 탐색(BFS)이란? 정점에서 정점으로! 그래 네가 정점이다 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"너비 우선 탐색(Breadth-First Search, BFS)은 그래프 탐색 알고리즘으로, 시작 정점에서부터 모든 인접 정점을 먼저 탐색한 후, 그 다음 단계로 이동하는 방식입니다. BFS는 주로 큐를 사용하여 각 단계에서 탐색할 정점을 추적하며, 최단 경로 찾기, 웹 크롤링, 소셜 네트워크 분석, 망 연결 확인, 퍼즐 해결 등 다양한 문제 해결에 활용됩니다. 이 글에서는 BFS의 기본 개념, 구현 방법, 응용 사례, 장단점, 최적화 기법을 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/algorithmImg.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/algorithmImg.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"너비 우선 탐색(BFS)이란? 정점에서 정점으로! 그래 네가 정점이다"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"너비 우선 탐색(BFS)이란? 정점에서 정점으로! 그래 네가 정점이다"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-05-30"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h2",null,{"id":"1daf8c78","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"너비 우선 탐색(BFS)이란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"너비 우선 탐색(Breadth-First Search, BFS)은 그래프 탐색 알고리즘 중 하나로, 시작 정점에서부터 모든 인접한 정점을 먼저 탐색한 후, 그 다음 단계로 이동하는 방식으로 작동합니다. BFS는 주로 큐(queue)를 사용하여 각 단계에서 탐색할 정점을 추적합니다. 이 글에서는 BFS의 기본 개념, 구현 방법, 응용 사례, 그리고 장단점에 대해 자세히 설명하겠습니다."}],"\n",["$","h3",null,{"id":"cdb775b1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 너비 우선 탐색의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"BFS는 시작 정점에서 출발하여 각 정점을 너비 방향으로 탐색합니다. 이는 각 정점에서 가장 가까운 정점을 먼저 방문하고, 그 다음으로 먼 정점을 방문하는 방식으로 진행됩니다. BFS는 다음과 같은 단계를 통해 수행됩니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"시작 정점 선택"}],": 탐색을 시작할 정점을 선택합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"방문 표시"}],": 현재 정점을 방문했다고 표시합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"큐에 추가"}],": 방문한 정점을 큐에 추가합니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"인접 정점 탐색"}],": 큐에서 정점을 하나씩 꺼내어, 그 정점과 인접한 모든 정점을 탐색하고, 아직 방문하지 않은 정점을 큐에 추가합니다."]}],"\n",["$","li","li-4",{"children":[["$","strong",null,{"className":"font-black","children":"반복"}],": 큐가 빌 때까지 3-4 단계를 반복합니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"119c6df7","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 너비 우선 탐색의 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"BFS는 주로 큐를 사용하여 구현됩니다. Python을 사용한 BFS의 구현 예제는 다음과 같습니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"BFS 구현 예제"}],":"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"from collections import deque\n\ndef bfs(graph, start):\n    visited = set()\n    queue = deque([start])\n    visited.add(start)\n\n    while queue:\n        vertex = queue.popleft()\n        print(vertex, end=' ')\n\n        for neighbor in graph[vertex]:\n            if neighbor not in visited:\n                visited.add(neighbor)\n                queue.append(neighbor)\n\n# 그래프를 인접 리스트로 표현\ngraph = {\n    0: [1, 2],\n    1: [0, 3, 4],\n    2: [0, 5],\n    3: [1],\n    4: [1],\n    5: [2]\n}\n\n# BFS 호출\nbfs(graph, 0)\n"}],"position":{"start":{"line":22,"column":1,"offset":704},"end":{"line":51,"column":4,"offset":1218}}},"children":"from collections import deque\n\ndef bfs(graph, start):\n    visited = set()\n    queue = deque([start])\n    visited.add(start)\n\n    while queue:\n        vertex = queue.popleft()\n        print(vertex, end=' ')\n\n        for neighbor in graph[vertex]:\n            if neighbor not in visited:\n                visited.add(neighbor)\n                queue.append(neighbor)\n\n# 그래프를 인접 리스트로 표현\ngraph = {\n    0: [1, 2],\n    1: [0, 3, 4],\n    2: [0, 5],\n    3: [1],\n    4: [1],\n    5: [2]\n}\n\n# BFS 호출\nbfs(graph, 0)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 코드는 그래프를 인접 리스트로 표현하고, BFS를 사용하여 시작 정점에서 모든 정점을 탐색합니다."}],"\n",["$","h3",null,{"id":"3c4a50f1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 너비 우선 탐색의 응용 사례"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"BFS는 다양한 실제 문제 해결에 사용될 수 있습니다. 다음은 BFS가 적용되는 몇 가지 대표적인 사례입니다:"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"최단 경로 찾기"}],": 무가중치 그래프에서 두 정점 사이의 최단 경로를 찾는 데 사용됩니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"웹 크롤링"}],": 웹 페이지를 탐색하여 데이터를 수집하는 데 사용됩니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"소셜 네트워크 분석"}],": 소셜 네트워크에서 사용자 간의 연결 관계를 분석하고, 특정 사용자로부터 다른 사용자까지의 거리를 계산하는 데 사용됩니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"망 연결 확인"}],": 네트워크에서 모든 노드가 서로 연결되어 있는지 확인하는 데 사용됩니다."]}],"\n",["$","li","li-4",{"children":[["$","strong",null,{"className":"font-black","children":"퍼즐 해결"}],": 퍼즐 문제에서 상태 공간을 탐색하여 목표 상태를 찾는 데 사용됩니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"b960703b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"4. 너비 우선 탐색의 장단점"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"BFS는 여러 가지 장점과 단점을 가지고 있습니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"장점"}],":"]}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"최단 경로 보장"}],": 무가중치 그래프에서 두 정점 사이의 최단 경로를 항상 찾을 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"간단한 구현"}],": 큐를 사용하여 간단하게 구현할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"모든 경로 탐색"}],": 모든 정점과 간선을 탐색하므로, 그래프의 전체 구조를 이해하는 데 유용합니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"단점"}],":"]}],"\n",["$","ul","ul-2",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"메모리 사용량"}],": BFS는 많은 메모리를 필요로 합니다. 특히, 큰 그래프에서는 큐에 많은 정점이 저장될 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"가중치 그래프 비효율성"}],": 가중치가 있는 그래프에서는 최단 경로를 찾는 데 비효율적입니다. 이 경우 다익스트라 알고리즘을 사용하는 것이 좋습니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"64d4a85f","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"5. 너비 우선 탐색의 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"BFS의 성능을 최적화하기 위해 다음과 같은 기법을 사용할 수 있습니다:"}],"\n",["$","ul","ul-3",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"방문 확인 최적화"}],": 방문 여부를 효율적으로 확인할 수 있는 데이터 구조를 사용합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"큐 최적화"}],": 큐를 효율적으로 관리하여 메모리 사용을 최소화합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"병렬 처리"}],": 여러 정점을 동시에 탐색하여 성능을 향상시킬 수 있습니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"5b12bcf2","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"너비 우선 탐색(BFS)은 그래프 탐색에서 중요한 역할을 하는 알고리즘으로, 다양한 문제 해결에 사용될 수 있습니다. BFS는 간단한 구현과 최단 경로 보장으로 인해 많은 응용 분야에서 사용되지만, 메모리 사용량이 많고 가중치 그래프에서 비효율적일 수 있다는 단점도 가지고 있습니다. 이 글에서 설명한 BFS의 개념과 구현, 응용 사례, 그리고 최적화 기법을 이해하면, 그래프 탐색 문제를 효과적으로 해결하는 데 도움이 될 것입니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"너비 우선 탐색(BFS)이란? 정점에서 정점으로! 그래 네가 정점이다","toc":[{"tagName":"h2","title":"너비 우선 탐색(BFS)이란?","id":"1daf8c78"},{"tagName":"h3","title":"1. 너비 우선 탐색의 기본 개념","id":"cdb775b1"},{"tagName":"h3","title":"2. 너비 우선 탐색의 구현","id":"119c6df7"},{"tagName":"h3","title":"3. 너비 우선 탐색의 응용 사례","id":"3c4a50f1"},{"tagName":"h3","title":"4. 너비 우선 탐색의 장단점","id":"b960703b"},{"tagName":"h3","title":"5. 너비 우선 탐색의 최적화","id":"64d4a85f"},{"tagName":"h3","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
