1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","UIImage%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95-%ED%95%84%ED%84%B0-%EB%A7%8C%EB%93%A4%EA%B8%B0-%ED%95%84%ED%84%B0%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95-%ED%9B%84%EC%9D%98-%ED%92%88%EC%A7%88%EC%9D%84-%EA%B0%9C%EC%84%A0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-b2e445d2","d"],{"children":["__PAGE__?{\"slug\":\"UIImage를-위한-사용자-정의-리사이징-필터-만들기-필터를-사용하여-이미지-리사이징-후의-품질을-개선하는-방법-b2e445d2\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","UIImage%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95-%ED%95%84%ED%84%B0-%EB%A7%8C%EB%93%A4%EA%B8%B0-%ED%95%84%ED%84%B0%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95-%ED%9B%84%EC%9D%98-%ED%92%88%EC%A7%88%EC%9D%84-%EA%B0%9C%EC%84%A0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-b2e445d2","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"UIImage를-위한-사용자-정의-리사이징-필터-만들기-필터를-사용하여-이미지-리사이징-후의-품질을-개선하는-방법-b2e445d2\"}"},"styles":[]}],"segment":["slug","UIImage%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95-%ED%95%84%ED%84%B0-%EB%A7%8C%EB%93%A4%EA%B8%B0-%ED%95%84%ED%84%B0%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95-%ED%9B%84%EC%9D%98-%ED%92%88%EC%A7%88%EC%9D%84-%EA%B0%9C%EC%84%A0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-b2e445d2","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"UIImage를 위한 사용자 정의 리사이징 필터 만들기: 필터를 사용하여 이미지 리사이징 후의 품질을 개선하는 방법. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 Swift에서 UIImage를 위한 사용자 정의 리사이징 필터를 만드는 방법에 대해 다룹니다. 이미지 리사이징 후의 품질을 개선하기 위한 구체적인 방법과 코드 예제를 제공합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,UIImage,이미지 리사이징,필터"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/UIImage%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95-%ED%95%84%ED%84%B0-%EB%A7%8C%EB%93%A4%EA%B8%B0-%ED%95%84%ED%84%B0%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95-%ED%9B%84%EC%9D%98-%ED%92%88%EC%A7%88%EC%9D%84-%EA%B0%9C%EC%84%A0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-b2e445d2"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"UIImage를 위한 사용자 정의 리사이징 필터 만들기: 필터를 사용하여 이미지 리사이징 후의 품질을 개선하는 방법. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"UIImage를 위한 사용자 정의 리사이징 필터 만들기: 필터를 사용하여 이미지 리사이징 후의 품질을 개선하는 방법. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 Swift에서 UIImage를 위한 사용자 정의 리사이징 필터를 만드는 방법에 대해 다룹니다. 이미지 리사이징 후의 품질을 개선하기 위한 구체적인 방법과 코드 예제를 제공합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/UIImage%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95-%ED%95%84%ED%84%B0-%EB%A7%8C%EB%93%A4%EA%B8%B0-%ED%95%84%ED%84%B0%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95-%ED%9B%84%EC%9D%98-%ED%92%88%EC%A7%88%EC%9D%84-%EA%B0%9C%EC%84%A0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-b2e445d2"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"UIImage를 위한 사용자 정의 리사이징 필터 만들기: 필터를 사용하여 이미지 리사이징 후의 품질을 개선하는 방법. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 Swift에서 UIImage를 위한 사용자 정의 리사이징 필터를 만드는 방법에 대해 다룹니다. 이미지 리사이징 후의 품질을 개선하기 위한 구체적인 방법과 코드 예제를 제공합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"UIImage를 위한 사용자 정의 리사이징 필터 만들기: 필터를 사용하여 이미지 리사이징 후의 품질을 개선하는 방법."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"UIImage를 위한 사용자 정의 리사이징 필터 만들기: 필터를 사용하여 이미지 리사이징 후의 품질을 개선하는 방법."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-22"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"3f4bb58f","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"UIImage를 위한 사용자 정의 리사이징 필터 만들기: 필터를 사용하여 이미지 리사이징 후의 품질을 개선하는 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이미지를 리사이즈할 때 품질이 저하되는 문제가 종종 발생합니다. 특히 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIImage","position":{"start":{"line":4,"column":40,"offset":108},"end":{"line":4,"column":49,"offset":117}}}],"position":{"start":{"line":4,"column":40,"offset":108},"end":{"line":4,"column":49,"offset":117}}},"children":"UIImage"}}],"를 처리할 때 이러한 문제가 두드러지는데, 이는 표준 라이브러리의 제한에 기인할 수 있습니다. 이 글에서는 Swift를 사용하여 이미지 리사이징 후에도 높은 품질을 유지할 수 있는 사용자 정의 리사이징 필터를 만드는 방법에 대해 다룹니다."]}],"\n",["$","h2",null,{"id":"3a269444","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"리사이징의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이미지 리사이징은 원본 이미지의 크기를 변경하여 메모리 사용량을 줄이거나 특정 해상도에 맞추는 중요한 과정입니다. 그러나 리사이징 후에도 원본 이미지의 품질을 최대한 유지하는 것이 매우 중요합니다. 기본적으로 제공되는 리사이징 알고리즘으로는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CoreGraphics","position":{"start":{"line":8,"column":136,"offset":403},"end":{"line":8,"column":150,"offset":417}}}],"position":{"start":{"line":8,"column":136,"offset":403},"end":{"line":8,"column":150,"offset":417}}},"children":"CoreGraphics"}}]," 프레임워크의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(in:)","position":{"start":{"line":8,"column":158,"offset":425},"end":{"line":8,"column":169,"offset":436}}}],"position":{"start":{"line":8,"column":158,"offset":425},"end":{"line":8,"column":169,"offset":436}}},"children":"draw(in:)"}}]," 메서드를 사용할 수 있습니다."]}],"\n",["$","h2",null,{"id":"d8ce1144","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"기본 리사이징 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"아래 코드는 기본적인 이미지 리사이징을 수행하는 예제입니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nextension UIImage {\n    func resized(to size: CGSize) -> UIImage? {\n        UIGraphicsBeginImageContextWithOptions(size, false, 0.0)\n        self.draw(in: CGRect(origin: .zero, size: size))\n        let newImage = UIGraphicsGetImageFromCurrentImageContext()\n        UIGraphicsEndImageContext()\n        return newImage\n    }\n}\n"}],"position":{"start":{"line":14,"column":1,"offset":505},"end":{"line":26,"column":4,"offset":856}}},"children":"import UIKit\n\nextension UIImage {\n    func resized(to size: CGSize) -> UIImage? {\n        UIGraphicsBeginImageContextWithOptions(size, false, 0.0)\n        self.draw(in: CGRect(origin: .zero, size: size))\n        let newImage = UIGraphicsGetImageFromCurrentImageContext()\n        UIGraphicsEndImageContext()\n        return newImage\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIGraphicsBeginImageContextWithOptions","position":{"start":{"line":28,"column":8,"offset":865},"end":{"line":28,"column":48,"offset":905}}}],"position":{"start":{"line":28,"column":8,"offset":865},"end":{"line":28,"column":48,"offset":905}}},"children":"UIGraphicsBeginImageContextWithOptions"}}],"를 사용하여 새로운 사이즈의 이미지를 생성합니다. 그러나 이 방식은 고해상도의 이미지일수록 품질이 저하될 가능성이 큽니다."]}],"\n",["$","h2",null,{"id":"32f7ad57","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"사용자 정의 리사이징 필터의 필요성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["기본 방법으로 리사이징할 때 품질 저하 문제가 발생할 수 있으므로, 사용자 정의 리사이징 필터를 사용하여 품질을 개선할 필요가 있습니다. 이를 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Core Image","position":{"start":{"line":32,"column":84,"offset":1082},"end":{"line":32,"column":96,"offset":1094}}}],"position":{"start":{"line":32,"column":84,"offset":1082},"end":{"line":32,"column":96,"offset":1094}}},"children":"Core Image"}}]," 프레임워크를 사용할 수 있습니다."]}],"\n",["$","h2",null,{"id":"b3c20b1f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Core Image 프레임워크의 활용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Core Image","position":{"start":{"line":36,"column":1,"offset":1140},"end":{"line":36,"column":13,"offset":1152}}}],"position":{"start":{"line":36,"column":1,"offset":1140},"end":{"line":36,"column":13,"offset":1152}}},"children":"Core Image"}}],"는 이미지 필터링과 처리에 매우 강력한 프레임워크입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Core Image","position":{"start":{"line":36,"column":45,"offset":1184},"end":{"line":36,"column":57,"offset":1196}}}],"position":{"start":{"line":36,"column":45,"offset":1184},"end":{"line":36,"column":57,"offset":1196}}},"children":"Core Image"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CIFilter","position":{"start":{"line":36,"column":59,"offset":1198},"end":{"line":36,"column":69,"offset":1208}}}],"position":{"start":{"line":36,"column":59,"offset":1198},"end":{"line":36,"column":69,"offset":1208}}},"children":"CIFilter"}}],"를 사용하면 이미지의 리사이징 품질을 개선할 수 있습니다."]}],"\n",["$","h3",null,{"id":"9cf2358e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"CIFilter를 사용한 리사이징 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CILanczosScaleTransform","position":{"start":{"line":40,"column":5,"offset":1273},"end":{"line":40,"column":30,"offset":1298}}}],"position":{"start":{"line":40,"column":5,"offset":1273},"end":{"line":40,"column":30,"offset":1298}}},"children":"CILanczosScaleTransform"}}]," 필터를 사용하여 이미지를 리사이징하는 예제입니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\nimport CoreImage\n\nextension UIImage {\n    func resizedWithCIFilter(to size: CGSize) -> UIImage? {\n        guard let cgImage = self.cgImage else { return nil }\n        let ciImage = CIImage(cgImage: cgImage)\n        let scale = size.width / self.size.width\n        let parameters: [String: Any] = [\n            kCIInputImageKey: ciImage,\n            kCIInputScaleKey: scale,\n            kCIInputAspectRatioKey: size.width / size.height\n        ]\n        let filter = CIFilter(name: \"CILanczosScaleTransform\", parameters: parameters)\n        guard let outputImage = filter?.outputImage else { return nil }\n        let context = CIContext(options: nil)\n        guard let outputCGImage = context.createCGImage(outputImage, from: outputImage.extent) else { return nil }\n        return UIImage(cgImage: outputCGImage)\n    }\n}\n"}],"position":{"start":{"line":42,"column":1,"offset":1328},"end":{"line":63,"column":4,"offset":2173}}},"children":"import UIKit\nimport CoreImage\n\nextension UIImage {\n    func resizedWithCIFilter(to size: CGSize) -> UIImage? {\n        guard let cgImage = self.cgImage else { return nil }\n        let ciImage = CIImage(cgImage: cgImage)\n        let scale = size.width / self.size.width\n        let parameters: [String: Any] = [\n            kCIInputImageKey: ciImage,\n            kCIInputScaleKey: scale,\n            kCIInputAspectRatioKey: size.width / size.height\n        ]\n        let filter = CIFilter(name: \"CILanczosScaleTransform\", parameters: parameters)\n        guard let outputImage = filter?.outputImage else { return nil }\n        let context = CIContext(options: nil)\n        guard let outputCGImage = context.createCGImage(outputImage, from: outputImage.extent) else { return nil }\n        return UIImage(cgImage: outputCGImage)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CILanczosScaleTransform","position":{"start":{"line":65,"column":8,"offset":2182},"end":{"line":65,"column":33,"offset":2207}}}],"position":{"start":{"line":65,"column":8,"offset":2182},"end":{"line":65,"column":33,"offset":2207}}},"children":"CILanczosScaleTransform"}}]," 필터를 사용하여 이미지를 리사이즈합니다. 이를 통해 기본 리사이징 방법보다 높은 품질의 이미지를 얻을 수 있습니다."]}],"\n",["$","h3",null,{"id":"d0b3c807","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"성능 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이미지 리사이징 작업은 매우 많은 계산을 요구할 수 있습니다. 따라서 성능 최적화는 매우 중요합니다. 다음의 팁을 참고하세요:"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"배치 작업 사용"}],": 여러 이미지를 한꺼번에 처리할 때 배치 작업을 사용하는 것이 효율적입니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"백그라운드 스레드 사용"}],": 메인 스레드에서 이미지 처리를 피하기 위해 백그라운드 스레드에서 리사이징 작업을 수행하십시오."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"캐싱"}],": 이미 처리된 이미지를 캐싱하여 불필요한 중복 처리를 피함으로써 성능을 크게 향상시킬 수 있습니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"8a95b64d","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제: 배치 작업"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"아래 코드는 여러 개의 이미지를 배치로 리사이징하는 방법을 보여줍니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func resizeImages(_ images: [UIImage], to size: CGSize) -> [UIImage] {\n    var resizedImages: [UIImage] = []\n    let dispatchGroup = DispatchGroup()\n\n    images.forEach { image in\n        dispatchGroup.enter()\n        DispatchQueue.global(qos: .userInitiated).async {\n            if let resizedImage = image.resizedWithCIFilter(to: size) {\n                DispatchQueue.main.async {\n                    resizedImages.append(resizedImage)\n                    dispatchGroup.leave()\n                }\n            } else {\n                dispatchGroup.leave()\n            }\n        }\n    }\n\n    dispatchGroup.wait()\n    return resizedImages\n}\n"}],"position":{"start":{"line":79,"column":1,"offset":2611},"end":{"line":101,"column":4,"offset":3263}}},"children":"func resizeImages(_ images: [UIImage], to size: CGSize) -> [UIImage] {\n    var resizedImages: [UIImage] = []\n    let dispatchGroup = DispatchGroup()\n\n    images.forEach { image in\n        dispatchGroup.enter()\n        DispatchQueue.global(qos: .userInitiated).async {\n            if let resizedImage = image.resizedWithCIFilter(to: size) {\n                DispatchQueue.main.async {\n                    resizedImages.append(resizedImage)\n                    dispatchGroup.leave()\n                }\n            } else {\n                dispatchGroup.leave()\n            }\n        }\n    }\n\n    dispatchGroup.wait()\n    return resizedImages\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위의 코드는 디스패치 그룹과 글로벌 큐를 사용하여 다수의 이미지를 동시에 리사이즈합니다. 이를 통해 성능을 최적화할 수 있습니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["UIImage의 리사이징 품질을 개선하는 것은 애플리케이션의 전반적인 사용자 경험을 향상시킬 수 있습니다. 사용자 정의 리사이징 필터, 특히 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Core Image","position":{"start":{"line":107,"column":80,"offset":3425},"end":{"line":107,"column":92,"offset":3437}}}],"position":{"start":{"line":107,"column":80,"offset":3425},"end":{"line":107,"column":92,"offset":3437}}},"children":"Core Image"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CIFilter","position":{"start":{"line":107,"column":94,"offset":3439},"end":{"line":107,"column":104,"offset":3449}}}],"position":{"start":{"line":107,"column":94,"offset":3439},"end":{"line":107,"column":104,"offset":3449}}},"children":"CIFilter"}}],"를 활용하여 높은 품질의 이미지를 유지할 수 있습니다. 이번 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CILanczosScaleTransform","position":{"start":{"line":107,"column":143,"offset":3488},"end":{"line":107,"column":168,"offset":3513}}}],"position":{"start":{"line":107,"column":143,"offset":3488},"end":{"line":107,"column":168,"offset":3513}}},"children":"CILanczosScaleTransform"}}]," 필터를 사용한 리사이징 예제와 성능 최적화 방법에 대해 다뤘습니다. 이를 통해 여러분의 프로젝트에서 이미지 리사이징 품질을 크게 개선할 수 있을 것입니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"UIImage를 위한 사용자 정의 리사이징 필터 만들기: 필터를 사용하여 이미지 리사이징 후의 품질을 개선하는 방법.","toc":[{"tagName":"h1","title":"UIImage를 위한 사용자 정의 리사이징 필터 만들기: 필터를 사용하여 이미지 리사이징 후의 품질을 개선하는 방법","id":"3f4bb58f"},{"tagName":"h2","title":"리사이징의 기본 개념","id":"3a269444"},{"tagName":"h2","title":"기본 리사이징 방법","id":"d8ce1144"},{"tagName":"h2","title":"사용자 정의 리사이징 필터의 필요성","id":"32f7ad57"},{"tagName":"h2","title":"Core Image 프레임워크의 활용","id":"b3c20b1f"},{"tagName":"h3","title":"CIFilter를 사용한 리사이징 예제","id":"9cf2358e"},{"tagName":"h3","title":"성능 최적화","id":"d0b3c807"},{"tagName":"h3","title":"예제: 배치 작업","id":"8a95b64d"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
