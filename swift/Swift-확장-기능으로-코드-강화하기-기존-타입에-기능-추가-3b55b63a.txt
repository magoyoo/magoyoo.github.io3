1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-%ED%99%95%EC%9E%A5-%EA%B8%B0%EB%8A%A5%EC%9C%BC%EB%A1%9C-%EC%BD%94%EB%93%9C-%EA%B0%95%ED%99%94%ED%95%98%EA%B8%B0-%EA%B8%B0%EC%A1%B4-%ED%83%80%EC%9E%85%EC%97%90-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80-3b55b63a","d"],{"children":["__PAGE__?{\"slug\":\"Swift-확장-기능으로-코드-강화하기-기존-타입에-기능-추가-3b55b63a\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-%ED%99%95%EC%9E%A5-%EA%B8%B0%EB%8A%A5%EC%9C%BC%EB%A1%9C-%EC%BD%94%EB%93%9C-%EA%B0%95%ED%99%94%ED%95%98%EA%B8%B0-%EA%B8%B0%EC%A1%B4-%ED%83%80%EC%9E%85%EC%97%90-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80-3b55b63a","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-확장-기능으로-코드-강화하기-기존-타입에-기능-추가-3b55b63a\"}"},"styles":[]}],"segment":["slug","Swift-%ED%99%95%EC%9E%A5-%EA%B8%B0%EB%8A%A5%EC%9C%BC%EB%A1%9C-%EC%BD%94%EB%93%9C-%EA%B0%95%ED%99%94%ED%95%98%EA%B8%B0-%EA%B8%B0%EC%A1%B4-%ED%83%80%EC%9E%85%EC%97%90-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80-3b55b63a","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift 확장 기능으로 코드 강화하기: 기존 타입에 기능 추가 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Swift의 확장 기능을 사용하여 기존 타입에 새로운 기능을 추가하는 방법에 대해 다룹니다. 확장은 코드의 재사용성을 높이고 모듈화를 돕기 때문에 매우 유용합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,프로그램밍,확장,모듈화"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-%ED%99%95%EC%9E%A5-%EA%B8%B0%EB%8A%A5%EC%9C%BC%EB%A1%9C-%EC%BD%94%EB%93%9C-%EA%B0%95%ED%99%94%ED%95%98%EA%B8%B0-%EA%B8%B0%EC%A1%B4-%ED%83%80%EC%9E%85%EC%97%90-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80-3b55b63a"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift 확장 기능으로 코드 강화하기: 기존 타입에 기능 추가 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift 확장 기능으로 코드 강화하기: 기존 타입에 기능 추가 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Swift의 확장 기능을 사용하여 기존 타입에 새로운 기능을 추가하는 방법에 대해 다룹니다. 확장은 코드의 재사용성을 높이고 모듈화를 돕기 때문에 매우 유용합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-%ED%99%95%EC%9E%A5-%EA%B8%B0%EB%8A%A5%EC%9C%BC%EB%A1%9C-%EC%BD%94%EB%93%9C-%EA%B0%95%ED%99%94%ED%95%98%EA%B8%B0-%EA%B8%B0%EC%A1%B4-%ED%83%80%EC%9E%85%EC%97%90-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80-3b55b63a"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift 확장 기능으로 코드 강화하기: 기존 타입에 기능 추가 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Swift의 확장 기능을 사용하여 기존 타입에 새로운 기능을 추가하는 방법에 대해 다룹니다. 확장은 코드의 재사용성을 높이고 모듈화를 돕기 때문에 매우 유용합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift 확장 기능으로 코드 강화하기: 기존 타입에 기능 추가"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift 확장 기능으로 코드 강화하기: 기존 타입에 기능 추가"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-28"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"0fdd51e3","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift 확장 기능으로 코드 강화하기: 기존 타입에 기능 추가"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift는 현대적인 프로그래밍 언어로, 다양한 기능을 제공하여 개발자의 생산성을 높여줍니다. 그 중 하나가 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"확장(Extensions)","position":{"start":{"line":4,"column":62,"offset":101},"end":{"line":4,"column":78,"offset":117}}}],"position":{"start":{"line":4,"column":62,"offset":101},"end":{"line":4,"column":78,"offset":117}}},"children":"확장(Extensions)"}}],"입니다. 확장은 기존 타입에 새로운 기능을 추가할 수 있도록 해주며, 코드의 재사용성을 높이고 모듈화를 용이하게 합니다. 이 글에서는 확장이 무엇인지, 왜 사용하는지, 그리고 어떻게 사용하는지에 대해 깊이 탐구해보겠습니다."]}],"\n",["$","h2",null,{"id":"6abee4ec","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"확장이란 무엇인가?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"확장은 간단히 말해 기존의 클래스, 구조체, 열거형, 또는 프로토콜 타입에 새로운 기능을 추가할 수 있게 해주는 기능입니다. 확장을 사용하면 원래의 소스 코드를 변경할 필요 없이, 그리고 상속을 사용하지 않고도 기능을 확장할 수 있습니다. 따라서 확장은 매우 강력한 도구입니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"확장에는 다음과 같은 항목들을 추가할 수 있습니다:"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":"계산된 속성 (Computed properties)"}],"\n",["$","li","li-1",{"children":"새로운 메서드 (Methods)"}],"\n",["$","li","li-2",{"children":"새로운 서브스크립트 (Subscripts)"}],"\n",["$","li","li-3",{"children":"새로운 중첩 타입 (Nested types)"}],"\n",["$","li","li-4",{"children":"기존 타입의 초기화 함수 (Initializers) 확장"}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["예를 들어, 우리는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Int","position":{"start":{"line":18,"column":12,"offset":595},"end":{"line":18,"column":17,"offset":600}}}],"position":{"start":{"line":18,"column":12,"offset":595},"end":{"line":18,"column":17,"offset":600}}},"children":"Int"}}]," 타입에 계산된 속성을 추가하여 숫자가 짝수인지 아닌지를 확인하는 기능을 제공할 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"extension Int {\n    var isEven: Bool {\n        return self % 2 == 0\n    }\n}\n"}],"position":{"start":{"line":20,"column":1,"offset":654},"end":{"line":26,"column":4,"offset":742}}},"children":"extension Int {\n    var isEven: Bool {\n        return self % 2 == 0\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 우리는 임의의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Int","position":{"start":{"line":27,"column":12,"offset":754},"end":{"line":27,"column":17,"offset":759}}}],"position":{"start":{"line":27,"column":12,"offset":754},"end":{"line":27,"column":17,"offset":759}}},"children":"Int"}}]," 값에 대해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"isEven","position":{"start":{"line":27,"column":24,"offset":766},"end":{"line":27,"column":32,"offset":774}}}],"position":{"start":{"line":27,"column":24,"offset":766},"end":{"line":27,"column":32,"offset":774}}},"children":"isEven"}}]," 속성을 사용할 수 있게 됩니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let number = 4\nif number.isEven {\n    print(\"\number는 짝수입니다.\")\n}\n"}],"position":{"start":{"line":29,"column":1,"offset":794},"end":{"line":35,"column":4,"offset":870}}},"children":"let number = 4\nif number.isEven {\n    print(\"\number는 짝수입니다.\")\n}\n"}}]}],"\n",["$","h2",null,{"id":"a259970a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"왜 확장을 사용하는가?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"확장은 다양한 장점을 제공합니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"코드의 재사용성 증가"}],": 확장을 사용하면 한 곳에만 정의하고 여러 곳에서 사용할 수 있기 때문에 코드의 재사용성이 높아집니다."]}],"\n"]}],"\n",["$","li","li-1",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"코드의 가독성 향상"}],": 기능을 관련 있는 타입에 직접 추가함으로써 코드의 가독성을 향상시킬 수 있습니다."]}],"\n"]}],"\n",["$","li","li-2",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"모듈화 용이"}],": 특정 기능을 별도의 확장 파일로 분리하여 모듈화를 쉽게 할 수 있습니다."]}],"\n"]}],"\n",["$","li","li-3",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"테스트 용이"}],": 확장은 독립적인 기능들을 별도로 테스트할 수 있게 도와줍니다."]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"예를 들어, 문자열에 특정 패턴이 포함되어 있는지 확인하는 메서드를 추가해보겠습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"extension String {\n    func contains(pattern: String) -> Bool {\n        return self.range(of: pattern) != nil\n    }\n}\n"}],"position":{"start":{"line":51,"column":1,"offset":1210},"end":{"line":57,"column":4,"offset":1340}}},"children":"extension String {\n    func contains(pattern: String) -> Bool {\n        return self.range(of: pattern) != nil\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 문자열에 대해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"contains(pattern:)","position":{"start":{"line":58,"column":12,"offset":1352},"end":{"line":58,"column":32,"offset":1372}}}],"position":{"start":{"line":58,"column":12,"offset":1352},"end":{"line":58,"column":32,"offset":1372}}},"children":"contains(pattern:)"}}]," 메서드를 사용할 수 있게 되었습니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let text = \"Hello, Swift!\"\nif text.contains(pattern: \"Swift\") {\n    print(\"'Swift' 문자가 포함되어 있습니다.\")\n}\n"}],"position":{"start":{"line":60,"column":1,"offset":1395},"end":{"line":65,"column":4,"offset":1509}}},"children":"let text = \"Hello, Swift!\"\nif text.contains(pattern: \"Swift\") {\n    print(\"'Swift' 문자가 포함되어 있습니다.\")\n}\n"}}]}],"\n",["$","h2",null,{"id":"6efd6d69","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"초기화 함수 추가하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["확장을 이용하면 기존 타입에 새로운 초기화 함수를 추가할 수 있습니다. 초기화 함수는 객체를 생성하는 데 필요한 설정을 수행합니다. 예를 들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIColor","position":{"start":{"line":69,"column":82,"offset":1608},"end":{"line":69,"column":91,"offset":1617}}}],"position":{"start":{"line":69,"column":82,"offset":1608},"end":{"line":69,"column":91,"offset":1617}}},"children":"UIColor"}}]," 클래스에 편리한 초기화 함수를 추가해보겠습니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nextension UIColor {\n    convenience init(hex: String) {\n        let scanner = Scanner(string: hex)\n        scanner.scanLocation = 0\n\n        var rgbValue: UInt64 = 0\n        scanner.scanHexInt64(&rgbValue)\n\n        let red = CGFloat((rgbValue & 0xff0000) >> 16) / 255.0\n        let green = CGFloat((rgbValue & 0x00ff00) >> 8) / 255.0\n        let blue = CGFloat(rgbValue & 0x0000ff) / 255.0\n\n        self.init(red: red, green: green, blue: blue, alpha: 1.0)\n    }\n}\n"}],"position":{"start":{"line":71,"column":1,"offset":1646},"end":{"line":89,"column":4,"offset":2137}}},"children":"import UIKit\n\nextension UIColor {\n    convenience init(hex: String) {\n        let scanner = Scanner(string: hex)\n        scanner.scanLocation = 0\n\n        var rgbValue: UInt64 = 0\n        scanner.scanHexInt64(&rgbValue)\n\n        let red = CGFloat((rgbValue & 0xff0000) >> 16) / 255.0\n        let green = CGFloat((rgbValue & 0x00ff00) >> 8) / 255.0\n        let blue = CGFloat(rgbValue & 0x0000ff) / 255.0\n\n        self.init(red: red, green: green, blue: blue, alpha: 1.0)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 우리는 헥스 문자열을 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIColor","position":{"start":{"line":90,"column":21,"offset":2158},"end":{"line":90,"column":30,"offset":2167}}}],"position":{"start":{"line":90,"column":21,"offset":2158},"end":{"line":90,"column":30,"offset":2167}}},"children":"UIColor"}}]," 객체를 생성할 수 있습니다:"]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let color = UIColor(hex: \"#3498db\")\n"}],"position":{"start":{"line":92,"column":1,"offset":2185},"end":{"line":94,"column":4,"offset":2233}}},"children":"let color = UIColor(hex: \"#3498db\")\n"}}]}],"\n",["$","h2",null,{"id":"03999da0","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"메서드와 서브스크립트 추가하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"확장을 이용하면 기존 타입에 새로운 메서드와 서브스크립트를 추가할 수도 있습니다. 예를 들어, 배열에 대해 특정 인덱스를 안전하게 접근할 수 있는 메서드를 추가해보겠습니다."}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"extension Array {\n    func safe(index: Int) -> Element? {\n        return indices.contains(index) ? self[index] : nil\n    }\n}\n"}],"position":{"start":{"line":100,"column":1,"offset":2354},"end":{"line":106,"column":4,"offset":2491}}},"children":"extension Array {\n    func safe(index: Int) -> Element? {\n        return indices.contains(index) ? self[index] : nil\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 배열에 대해 안전한 인덱스 접근을 할 수 있습니다:"}],"\n",["$","pre","pre-7",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let array = [1, 2, 3, 4, 5]\nif let element = array.safe(index: 10) {\n    print(element)\n} else {\n    print(\"인덱스가 범위를 벗어났습니다.\")\n}\n"}],"position":{"start":{"line":109,"column":1,"offset":2525},"end":{"line":116,"column":4,"offset":2666}}},"children":"let array = [1, 2, 3, 4, 5]\nif let element = array.safe(index: 10) {\n    print(element)\n} else {\n    print(\"인덱스가 범위를 벗어났습니다.\")\n}\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift의 확장 기능은 매우 강력하며, 기존 타입에 새로운 기능을 추가할 수 있는 편리한 방법을 제공합니다. 이를 통해 코드의 재사용성을 높이고, 가독성을 향상시키며, 모듈화를 용이하게 할 수 있습니다. 따라서 확장을 적절히 활용하면 더욱 유지보수하기 쉽고 효율적인 코드를 작성할 수 있습니다. 앞으로 Swift로 개발할 때 확장 기능을 적극적으로 활용해보세요!"}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift 확장 기능으로 코드 강화하기: 기존 타입에 기능 추가","toc":[{"tagName":"h1","title":"Swift 확장 기능으로 코드 강화하기: 기존 타입에 기능 추가","id":"0fdd51e3"},{"tagName":"h2","title":"확장이란 무엇인가?","id":"6abee4ec"},{"tagName":"h2","title":"왜 확장을 사용하는가?","id":"a259970a"},{"tagName":"h2","title":"초기화 함수 추가하기","id":"6efd6d69"},{"tagName":"h2","title":"메서드와 서브스크립트 추가하기","id":"03999da0"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
