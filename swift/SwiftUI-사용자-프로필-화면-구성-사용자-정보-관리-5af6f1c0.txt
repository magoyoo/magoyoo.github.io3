1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI-%EC%82%AC%EC%9A%A9%EC%9E%90-%ED%94%84%EB%A1%9C%ED%95%84-%ED%99%94%EB%A9%B4-%EA%B5%AC%EC%84%B1-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EB%B3%B4-%EA%B4%80%EB%A6%AC-5af6f1c0","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI-사용자-프로필-화면-구성-사용자-정보-관리-5af6f1c0\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI-%EC%82%AC%EC%9A%A9%EC%9E%90-%ED%94%84%EB%A1%9C%ED%95%84-%ED%99%94%EB%A9%B4-%EA%B5%AC%EC%84%B1-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EB%B3%B4-%EA%B4%80%EB%A6%AC-5af6f1c0","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI-사용자-프로필-화면-구성-사용자-정보-관리-5af6f1c0\"}"},"styles":[]}],"segment":["slug","SwiftUI-%EC%82%AC%EC%9A%A9%EC%9E%90-%ED%94%84%EB%A1%9C%ED%95%84-%ED%99%94%EB%A9%B4-%EA%B5%AC%EC%84%B1-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EB%B3%B4-%EA%B4%80%EB%A6%AC-5af6f1c0","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI 사용자 프로필 화면 구성: 사용자 정보 관리 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"SwiftUI를 사용하여 사용자 프로필 화면을 구성하고 사용자 정보를 관리하는 방법에 대해 다룹니다. SwiftUI의 강력한 기능을 활용해 사용자 프로필 화면을 쉽게 생성하고, 사용자 정보를 효과적으로 관리하는 노하우를 제공합니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,사용자 프로필,iOS 개발,Swift"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI-%EC%82%AC%EC%9A%A9%EC%9E%90-%ED%94%84%EB%A1%9C%ED%95%84-%ED%99%94%EB%A9%B4-%EA%B5%AC%EC%84%B1-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EB%B3%B4-%EA%B4%80%EB%A6%AC-5af6f1c0"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI 사용자 프로필 화면 구성: 사용자 정보 관리 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI 사용자 프로필 화면 구성: 사용자 정보 관리 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"SwiftUI를 사용하여 사용자 프로필 화면을 구성하고 사용자 정보를 관리하는 방법에 대해 다룹니다. SwiftUI의 강력한 기능을 활용해 사용자 프로필 화면을 쉽게 생성하고, 사용자 정보를 효과적으로 관리하는 노하우를 제공합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI-%EC%82%AC%EC%9A%A9%EC%9E%90-%ED%94%84%EB%A1%9C%ED%95%84-%ED%99%94%EB%A9%B4-%EA%B5%AC%EC%84%B1-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EB%B3%B4-%EA%B4%80%EB%A6%AC-5af6f1c0"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI 사용자 프로필 화면 구성: 사용자 정보 관리 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"SwiftUI를 사용하여 사용자 프로필 화면을 구성하고 사용자 정보를 관리하는 방법에 대해 다룹니다. SwiftUI의 강력한 기능을 활용해 사용자 프로필 화면을 쉽게 생성하고, 사용자 정보를 효과적으로 관리하는 노하우를 제공합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
14:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
15:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T47f,import SwiftUI

struct UserProfileView: View {
    // 사용자 정보를 담는 데이터 모델
    @State private var user = User(name: "홍길동", email: "hong@gmail.com", age: 28, bio: "안녕하세요! 저는 iOS 개발자입니다.")

    var body: some View {
        VStack(alignment: .leading, spacing: 20) {
            Text("프로필")
                .font(.largeTitle)
                .fontWeight(.bold)

            HStack {
                VStack(alignment: .leading) {
                    Text("이름: \(user.name)")
                    Text("이메일: \(user.email)")
                    Text("나이: \(user.age)")
                }
                Spacer()
            }
            .padding()

            Text("소개")
                .font(.headline)
                .padding(.top)

            Text(user.bio)
                .padding(.bottom)

            Spacer()
        }
        .padding()
    }
}

struct UserProfileView_Previews: PreviewProvider {
    static var previews: some View {
        UserProfileView()
    }
}

struct User {
    var name: String
    var email: String
    var age: Int
    var bio: String
}
f:T47f,import SwiftUI

struct UserProfileView: View {
    // 사용자 정보를 담는 데이터 모델
    @State private var user = User(name: "홍길동", email: "hong@gmail.com", age: 28, bio: "안녕하세요! 저는 iOS 개발자입니다.")

    var body: some View {
        VStack(alignment: .leading, spacing: 20) {
            Text("프로필")
                .font(.largeTitle)
                .fontWeight(.bold)

            HStack {
                VStack(alignment: .leading) {
                    Text("이름: \(user.name)")
                    Text("이메일: \(user.email)")
                    Text("나이: \(user.age)")
                }
                Spacer()
            }
            .padding()

            Text("소개")
                .font(.headline)
                .padding(.top)

            Text(user.bio)
                .padding(.bottom)

            Spacer()
        }
        .padding()
    }
}

struct UserProfileView_Previews: PreviewProvider {
    static var previews: some View {
        UserProfileView()
    }
}

struct User {
    var name: String
    var email: String
    var age: Int
    var bio: String
}
10:T6cb,struct UserProfileView: View {
    @State private var user = User(name: "홍길동", email: "hong@gmail.com", age: 28, bio: "안녕하세요! 저는 iOS 개발자입니다.")
    @State private var isEditing = false

    var body: some View {
        VStack(alignment: .leading, spacing: 20) {
            Text("프로필")
                .font(.largeTitle)
                .fontWeight(.bold)

            if isEditing {
                TextField("이름", text: $user.name)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                TextField("이메일", text: $user.email)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                SecureField("비밀번호", text: $user.password)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
            } else {
                Text("이름: \(user.name)")
                Text("이메일: \(user.email)")
            }

            Text("소개")
                .font(.headline)
                .padding(.top)

            if isEditing {
                TextEditor(text: $user.bio)
                    .frame(height: 100)
                    .overlay(RoundedRectangle(cornerRadius: 8).stroke(Color.gray, lineWidth: 1))
            } else {
                Text(user.bio)
            }

            Button(isEditing ? "저장" : "편집") {
                isEditing.toggle()
            }
            .padding()
            .background(Color.blue)
            .foregroundColor(.white)
            .cornerRadius(8)
            .padding(.top)

            Spacer()
        }
        .padding()
    }
}

struct User {
    var name: String
    var email: String
    var password: String = ""
    var age: Int
    var bio: String
}
11:T6cb,struct UserProfileView: View {
    @State private var user = User(name: "홍길동", email: "hong@gmail.com", age: 28, bio: "안녕하세요! 저는 iOS 개발자입니다.")
    @State private var isEditing = false

    var body: some View {
        VStack(alignment: .leading, spacing: 20) {
            Text("프로필")
                .font(.largeTitle)
                .fontWeight(.bold)

            if isEditing {
                TextField("이름", text: $user.name)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                TextField("이메일", text: $user.email)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                SecureField("비밀번호", text: $user.password)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
            } else {
                Text("이름: \(user.name)")
                Text("이메일: \(user.email)")
            }

            Text("소개")
                .font(.headline)
                .padding(.top)

            if isEditing {
                TextEditor(text: $user.bio)
                    .frame(height: 100)
                    .overlay(RoundedRectangle(cornerRadius: 8).stroke(Color.gray, lineWidth: 1))
            } else {
                Text(user.bio)
            }

            Button(isEditing ? "저장" : "편집") {
                isEditing.toggle()
            }
            .padding()
            .background(Color.blue)
            .foregroundColor(.white)
            .cornerRadius(8)
            .padding(.top)

            Spacer()
        }
        .padding()
    }
}

struct User {
    var name: String
    var email: String
    var password: String = ""
    var age: Int
    var bio: String
}
12:T918,import SwiftUI

struct UserProfileView: View {
    @State private var user = loadUser() // 사용자 정보를 불러옵니다.
    @State private var isEditing = false

    var body: some View {
        VStack(alignment: .leading, spacing: 20) {
            Text("프로필")
                .font(.largeTitle)
                .fontWeight(.bold)

            if isEditing {
                TextField("이름", text: $user.name)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                TextField("이메일", text: $user.email)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
            } else {
                Text("이름: \(user.name)")
                Text("이메일: \(user.email)")
            }

            Text("소개")
                .font(.headline)
                .padding(.top)

            if isEditing {
                TextEditor(text: $user.bio)
                    .frame(height: 100)
                    .overlay(RoundedRectangle(cornerRadius: 8).stroke(Color.gray, lineWidth: 1))
            } else {
                Text(user.bio)
            }

            Button(isEditing ? "저장" : "편집") {
                if isEditing {
                    saveUser(user) // 사용자 정보를 저장합니다.
                }
                isEditing.toggle()
            }
            .padding()
            .background(Color.blue)
            .foregroundColor(.white)
            .cornerRadius(8)
            .padding(.top)

            Spacer()
        }
        .padding()
    }
}

struct User: Codable {
    var name: String
    var email: String
    var password: String = ""
    var age: Int
    var bio: String
}

// 사용자 정보를 디스크에 저장하는 함수
func saveUser(_ user: User) {
    let encoder = JSONEncoder()
    if let encoded = try? encoder.encode(user) {
        UserDefaults.standard.set(encoded, forKey: "user")
    }
}

// 사용자 정보를 디스크에서 불러오는 함수
func loadUser() -> User {
    if let savedUser = UserDefaults.standard.object(forKey: "user") as? Data {
        let decoder = JSONDecoder()
        if let loadedUser = try? decoder.decode(User.self, from: savedUser) {
            return loadedUser
        }
    }
    return User(name: "", email: "", age: 0, bio: "") // 기본값 반환
}
13:T918,import SwiftUI

struct UserProfileView: View {
    @State private var user = loadUser() // 사용자 정보를 불러옵니다.
    @State private var isEditing = false

    var body: some View {
        VStack(alignment: .leading, spacing: 20) {
            Text("프로필")
                .font(.largeTitle)
                .fontWeight(.bold)

            if isEditing {
                TextField("이름", text: $user.name)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                TextField("이메일", text: $user.email)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
            } else {
                Text("이름: \(user.name)")
                Text("이메일: \(user.email)")
            }

            Text("소개")
                .font(.headline)
                .padding(.top)

            if isEditing {
                TextEditor(text: $user.bio)
                    .frame(height: 100)
                    .overlay(RoundedRectangle(cornerRadius: 8).stroke(Color.gray, lineWidth: 1))
            } else {
                Text(user.bio)
            }

            Button(isEditing ? "저장" : "편집") {
                if isEditing {
                    saveUser(user) // 사용자 정보를 저장합니다.
                }
                isEditing.toggle()
            }
            .padding()
            .background(Color.blue)
            .foregroundColor(.white)
            .cornerRadius(8)
            .padding(.top)

            Spacer()
        }
        .padding()
    }
}

struct User: Codable {
    var name: String
    var email: String
    var password: String = ""
    var age: Int
    var bio: String
}

// 사용자 정보를 디스크에 저장하는 함수
func saveUser(_ user: User) {
    let encoder = JSONEncoder()
    if let encoded = try? encoder.encode(user) {
        UserDefaults.standard.set(encoded, forKey: "user")
    }
}

// 사용자 정보를 디스크에서 불러오는 함수
func loadUser() -> User {
    if let savedUser = UserDefaults.standard.object(forKey: "user") as? Data {
        let decoder = JSONDecoder()
        if let loadedUser = try? decoder.decode(User.self, from: savedUser) {
            return loadedUser
        }
    }
    return User(name: "", email: "", age: 0, bio: "") // 기본값 반환
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner5.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI 사용자 프로필 화면 구성: 사용자 정보 관리"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI 사용자 프로필 화면 구성: 사용자 정보 관리"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-13"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"678fb492","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI 사용자 프로필 화면 구성: 사용자 정보 관리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 iOS 애플리케이션 개발을 훨씬 더 직관적이고 간편하게 할 수 있게 해주는 프레임워크입니다. 이 글에서는 사용자 프로필 화면을 구성하고, 사용자 정보를 관리하는 방법에 대해 SwiftUI를 사용하여 설명합니다."}],"\n",["$","h2",null,{"id":"9d0ec472","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"사용자 프로필 화면 구성하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"사용자 프로필 화면을 구성하는 첫 번째 단계는 화면의 레이아웃을 설계하는 것입니다. SwiftUI에서는 뷰(View)와 스택(Stack) 컴포지션을 사용하여 이를 쉽게 구현할 수 있습니다. 다음은 간단한 사용자 프로필 화면의 예제 코드입니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":10,"column":1,"offset":322},"end":{"line":58,"column":4,"offset":1403}}},"children":"$f"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"VStack","position":{"start":{"line":60,"column":7,"offset":1411},"end":{"line":60,"column":15,"offset":1419}}}],"position":{"start":{"line":60,"column":7,"offset":1411},"end":{"line":60,"column":15,"offset":1419}}},"children":"VStack"}}],"을 사용하여 프로필 화면을 구성합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"User","position":{"start":{"line":60,"column":37,"offset":1441},"end":{"line":60,"column":43,"offset":1447}}}],"position":{"start":{"line":60,"column":37,"offset":1441},"end":{"line":60,"column":43,"offset":1447}}},"children":"User"}}]," 구조체는 사용자 정보를 담고 있으며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@State","position":{"start":{"line":60,"column":65,"offset":1469},"end":{"line":60,"column":73,"offset":1477}}}],"position":{"start":{"line":60,"column":65,"offset":1469},"end":{"line":60,"column":73,"offset":1477}}},"children":"@State"}}]," 키워드를 통해 뷰 상태로 관리됩니다. 프로필과 관련된 텍스트들은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"HStack","position":{"start":{"line":60,"column":110,"offset":1514},"end":{"line":60,"column":118,"offset":1522}}}],"position":{"start":{"line":60,"column":110,"offset":1514},"end":{"line":60,"column":118,"offset":1522}}},"children":"HStack"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"VStack","position":{"start":{"line":60,"column":120,"offset":1524},"end":{"line":60,"column":128,"offset":1532}}}],"position":{"start":{"line":60,"column":120,"offset":1524},"end":{"line":60,"column":128,"offset":1532}}},"children":"VStack"}}],"을 적절히 배치하여 정렬했습니다."]}],"\n",["$","h2",null,{"id":"43d934c8","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"사용자 정보 수정 기능 추가하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["프로필 화면에 사용자 정보 수정 기능을 추가하려면, 편집 가능한 필드를 구현해야 합니다. 다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TextField","position":{"start":{"line":64,"column":55,"offset":1628},"end":{"line":64,"column":66,"offset":1639}}}],"position":{"start":{"line":64,"column":55,"offset":1628},"end":{"line":64,"column":66,"offset":1639}}},"children":"TextField"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SecureField","position":{"start":{"line":64,"column":68,"offset":1641},"end":{"line":64,"column":81,"offset":1654}}}],"position":{"start":{"line":64,"column":68,"offset":1641},"end":{"line":64,"column":81,"offset":1654}}},"children":"SecureField"}}],"를 사용하여 이름, 이메일, 비밀번호를 수정할 수 있는 간단한 예제입니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$10"}],"position":{"start":{"line":66,"column":1,"offset":1697},"end":{"line":123,"column":4,"offset":3370}}},"children":"$11"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"isEditing","position":{"start":{"line":125,"column":7,"offset":3378},"end":{"line":125,"column":18,"offset":3389}}}],"position":{"start":{"line":125,"column":7,"offset":3378},"end":{"line":125,"column":18,"offset":3389}}},"children":"isEditing"}}],"이라는 상태 변수를 도입하여 편집 모드와 보기 모드를 전환할 수 있도록 했습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TextField","position":{"start":{"line":125,"column":64,"offset":3435},"end":{"line":125,"column":75,"offset":3446}}}],"position":{"start":{"line":125,"column":64,"offset":3435},"end":{"line":125,"column":75,"offset":3446}}},"children":"TextField"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SecureField","position":{"start":{"line":125,"column":77,"offset":3448},"end":{"line":125,"column":90,"offset":3461}}}],"position":{"start":{"line":125,"column":77,"offset":3448},"end":{"line":125,"column":90,"offset":3461}}},"children":"SecureField"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TextEditor","position":{"start":{"line":125,"column":92,"offset":3463},"end":{"line":125,"column":104,"offset":3475}}}],"position":{"start":{"line":125,"column":92,"offset":3463},"end":{"line":125,"column":104,"offset":3475}}},"children":"TextEditor"}}],"를 사용하여 사용자 정보를 입력하고 수정할 수 있게 구성했습니다. 이와 함께, 편집 모드에서는 정보를 입력 받을 수 있도록 하고, 저장 버튼을 클릭하면 편집 모드가 종료되게 했습니다."]}],"\n",["$","h2",null,{"id":"752b08a7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"사용자 정보 관리 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"사용자 정보를 관리할 때 가장 중요한 것 중 하나는 데이터의 일관성을 유지하는 것입니다. 이를 위해서는 데이터 저장 및 불러오기 기능을 추가해야 합니다. 다음은 사용자 정보를 디스크에 저장하고 불러오는 간단한 예제입니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$12"}],"position":{"start":{"line":131,"column":1,"offset":3722},"end":{"line":210,"column":4,"offset":5904}}},"children":"$13"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UserDefaults","position":{"start":{"line":212,"column":7,"offset":5912},"end":{"line":212,"column":21,"offset":5926}}}],"position":{"start":{"line":212,"column":7,"offset":5912},"end":{"line":212,"column":21,"offset":5926}}},"children":"UserDefaults"}}],"를 사용하여 사용자 정보를 디스크에 저장하고 불러오는 기능을 구현합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"JSONEncoder","position":{"start":{"line":212,"column":62,"offset":5967},"end":{"line":212,"column":75,"offset":5980}}}],"position":{"start":{"line":212,"column":62,"offset":5967},"end":{"line":212,"column":75,"offset":5980}}},"children":"JSONEncoder"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"JSONDecoder","position":{"start":{"line":212,"column":77,"offset":5982},"end":{"line":212,"column":90,"offset":5995}}}],"position":{"start":{"line":212,"column":77,"offset":5982},"end":{"line":212,"column":90,"offset":5995}}},"children":"JSONDecoder"}}],"를 활용하여 사용자 정보를 JSON 형식으로 인코딩 및 디코딩합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI를 사용하면 사용자 프로필 화면을 쉽게 구성하고 사용자 정보를 관리할 수 있습니다. 이 글에서는 사용자 프로필 화면을 구성하는 방법, 사용자 정보 수정 기능을 추가하는 방법, 그리고 데이터를 저장하고 불러오는 방법에 대해 설명했습니다. 이 예제를 바탕으로 더 복잡한 사용자 정보 관리 시스템을 구현해보세요."}]]}]}],["$","$L14",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L15",null,{"articleTitle":"SwiftUI 사용자 프로필 화면 구성: 사용자 정보 관리","toc":[{"tagName":"h1","title":"SwiftUI 사용자 프로필 화면 구성: 사용자 정보 관리","id":"678fb492"},{"tagName":"h2","title":"사용자 프로필 화면 구성하기","id":"9d0ec472"},{"tagName":"h2","title":"사용자 정보 수정 기능 추가하기","id":"43d934c8"},{"tagName":"h2","title":"사용자 정보 관리 최적화","id":"752b08a7"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
