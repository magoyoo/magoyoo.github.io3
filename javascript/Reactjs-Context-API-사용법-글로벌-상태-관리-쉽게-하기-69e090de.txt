1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","Reactjs-Context-API-%EC%82%AC%EC%9A%A9%EB%B2%95-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-%EC%89%BD%EA%B2%8C-%ED%95%98%EA%B8%B0-69e090de","d"],{"children":["__PAGE__?{\"slug\":\"Reactjs-Context-API-사용법-글로벌-상태-관리-쉽게-하기-69e090de\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","Reactjs-Context-API-%EC%82%AC%EC%9A%A9%EB%B2%95-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-%EC%89%BD%EA%B2%8C-%ED%95%98%EA%B8%B0-69e090de","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Reactjs-Context-API-사용법-글로벌-상태-관리-쉽게-하기-69e090de\"}"},"styles":[]}],"segment":["slug","Reactjs-Context-API-%EC%82%AC%EC%9A%A9%EB%B2%95-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-%EC%89%BD%EA%B2%8C-%ED%95%98%EA%B8%B0-69e090de","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"React.js Context API 사용법: 글로벌 상태 관리 쉽게 하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"React.js의 Context API는 글로벌 상태 관리를 더욱 쉽게 해주는 도구입니다. 이 글에서는 Context API의 개념부터 사용법, 그리고 일반적인 사용 사례까지 다루어 글로벌 상태 관리를 더욱 쉽게 하는 방법을 알아봅니다."}],["$","meta","3",{"name":"keywords","content":"React.js,Context API,글로벌 상태 관리,프런트엔드 개발"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/Reactjs-Context-API-%EC%82%AC%EC%9A%A9%EB%B2%95-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-%EC%89%BD%EA%B2%8C-%ED%95%98%EA%B8%B0-69e090de"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"React.js Context API 사용법: 글로벌 상태 관리 쉽게 하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"React.js Context API 사용법: 글로벌 상태 관리 쉽게 하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"React.js의 Context API는 글로벌 상태 관리를 더욱 쉽게 해주는 도구입니다. 이 글에서는 Context API의 개념부터 사용법, 그리고 일반적인 사용 사례까지 다루어 글로벌 상태 관리를 더욱 쉽게 하는 방법을 알아봅니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/Reactjs-Context-API-%EC%82%AC%EC%9A%A9%EB%B2%95-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-%EC%89%BD%EA%B2%8C-%ED%95%98%EA%B8%B0-69e090de"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"React.js Context API 사용법: 글로벌 상태 관리 쉽게 하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"React.js의 Context API는 글로벌 상태 관리를 더욱 쉽게 해주는 도구입니다. 이 글에서는 Context API의 개념부터 사용법, 그리고 일반적인 사용 사례까지 다루어 글로벌 상태 관리를 더욱 쉽게 하는 방법을 알아봅니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"React.js Context API 사용법: 글로벌 상태 관리 쉽게 하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"React.js Context API 사용법: 글로벌 상태 관리 쉽게 하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-25"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"b62102eb","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"React.js Context API 사용법: 글로벌 상태 관리 쉽게 하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"React.js는 현대 웹 개발에서 가장 널리 사용되는 JavaScript 라이브러리 중 하나입니다. 하지만, 어플리케이션 규모가 커질수록 상태 관리가 그만큼 복잡해집니다. React 자체에는 손쉬운 상태 관리 도구가 포함되어 있지 않으므로 추가적인 라이브러리를 사용하는 경우가 많습니다. 다행히, Context API를 활용하면 이 문제를 보다 간단하게 해결할 수 있습니다."}],"\n",["$","h2",null,{"id":"2aaecec5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Context API란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Context API는 React v16.3.0으로 도입된 기능으로, 컴포넌트 트리를 통해 데이터를 전파할 때 props drilling을 피할 수 있게 해줍니다. 일반적으로 부모 컴포넌트에서 자식 컴포넌트로 데이터를 전달할 때, 여러 계층의 컴포넌트를 거쳐야 하는 경우가 많아 관리가 어려울 수 있습니다. Context API는 이 문제를 해결하는 데 도움을 줍니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Context API를 사용하면 여러 계층의 컴포넌트를 경유하지 않고도 전역적으로 데이터와 상태를 공유할 수 있습니다. 이로 인해 코드가 간결해지고 유지 보수가 용이해집니다."}],"\n",["$","h2",null,{"id":"4545dcc8","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Context API의 기본 구성 요소"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Context API는 세 가지 주요 구성 요소로 이루어져 있습니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"React.createContext()"}],": Context 객체를 생성합니다. 이 객체는 Provider와 Consumer라는 두 가지 주요 컴포넌트를 포함하고 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"Provider"}],": Value prop을 받아 하위 컴포넌트들이 접근할 수 있도록 전파합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"Consumer"}],": Provider에서 전달한 데이터를 소비합니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"af7af39c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"사용 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"간단한 카운터 어플리케이션을 예제로 Context API를 사용하는 방법을 소개하겠습니다."}],"\n",["$","h3",null,{"id":"850156ef","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. Context 객체 생성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"먼저, Context 객체를 생성합니다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { createContext, useState } from 'react';\n\nconst CounterContext = createContext();\n"}],"position":{"start":{"line":28,"column":1,"offset":963},"end":{"line":32,"column":4,"offset":1077}}},"children":"import React, { createContext, useState } from 'react';\n\nconst CounterContext = createContext();\n"}}]}],"\n",["$","h3",null,{"id":"96e297b5","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. Provider 생성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음으로, Provider를 정의하고 데이터를 전파합니다:"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const CounterProvider = ({ children }) => {\n  const [count, setCount] = useState(0);\n\n  return (\n    <CounterContext.Provider value={{ count, setCount }}>\n      {children}\n    </CounterContext.Provider>\n  );\n};\n"}],"position":{"start":{"line":38,"column":1,"offset":1133},"end":{"line":48,"column":4,"offset":1361}}},"children":"const CounterProvider = ({ children }) => {\n  const [count, setCount] = useState(0);\n\n  return (\n    <CounterContext.Provider value={{ count, setCount }}>\n      {children}\n    </CounterContext.Provider>\n  );\n};\n"}}]}],"\n",["$","h3",null,{"id":"5bf42b93","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. Consumer 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"생성된 Context를 실제 컴포넌트에서 소비합니다:"}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { useContext } from 'react';\nimport { CounterContext } from './CounterContext';\n\nconst Counter = () => {\n  const { count, setCount } = useContext(CounterContext);\n\n  return (\n    <div>\n      <h1>{count}</h1>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n    </div>\n  );\n};\n\nexport default Counter;\n"}],"position":{"start":{"line":54,"column":1,"offset":1414},"end":{"line":70,"column":4,"offset":1766}}},"children":"import React, { useContext } from 'react';\nimport { CounterContext } from './CounterContext';\n\nconst Counter = () => {\n  const { count, setCount } = useContext(CounterContext);\n\n  return (\n    <div>\n      <h1>{count}</h1>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n    </div>\n  );\n};\n\nexport default Counter;\n"}}]}],"\n",["$","h3",null,{"id":"6bd3d8da","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"4. Context Provider 적용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"마지막으로, 어플리케이션에 Provider를 적용합니다:"}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CounterProvider } from './CounterContext';\nimport Counter from './Counter';\n\nconst App = () => (\n  <CounterProvider>\n    <Counter />\n  </CounterProvider>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"}],"position":{"start":{"line":76,"column":1,"offset":1829},"end":{"line":89,"column":4,"offset":2133}}},"children":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CounterProvider } from './CounterContext';\nimport Counter from './Counter';\n\nconst App = () => (\n  <CounterProvider>\n    <Counter />\n  </CounterProvider>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"}}]}],"\n",["$","h2",null,{"id":"125e7a21","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Context API의 장점과 단점"}],"\n",["$","h3",null,{"id":"0e91a822","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"장점"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"간결함"}],": state가 여러 컴포넌트 계층을 지나치지 않아 코드가 훨씬 단순해집니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"유연성"}],": 복잡한 상태 관리 로직이 필요하지 않다면, Context API 하나로도 상당 부분 해결 가능합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"캡슐화"}],": 각 Context가 독립적으로 존재하며, 글로벌 상태를 잘 캡슐화합니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"7c7251f1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"단점"}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"성능 문제"}],": 많은 수의 Consumer들이 Provider로부터 업데이트를 받을 때 성능 저하가 발생할 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"복잡성 증가"}],": 아주 복잡한 상태 관리가 필요하다면, Redux와 같은 완전한 상태 관리 라이브러리가 더 적합할 수 있습니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Context API는 작은 규모의 애플리케이션이나 특정 부분에서 상태 관리를 간단히 하고 싶을 때 매우 유용합니다. 기본적인 사용법을 익히고 다양한 활용 사례를 접하다 보면, 복잡도를 줄이고 애플리케이션을 더 효율적으로 관리할 수 있을 것입니다. React의 다른 상태 관리 도구와 함께 사용한다면, 더욱 강력하고 유연한 애플리케이션을 개발할 수 있습니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"React.js Context API 사용법: 글로벌 상태 관리 쉽게 하기","toc":[{"tagName":"h1","title":"React.js Context API 사용법: 글로벌 상태 관리 쉽게 하기","id":"b62102eb"},{"tagName":"h2","title":"Context API란?","id":"2aaecec5"},{"tagName":"h2","title":"Context API의 기본 구성 요소","id":"4545dcc8"},{"tagName":"h3","title":"사용 예제","id":"af7af39c"},{"tagName":"h3","title":"1. Context 객체 생성","id":"850156ef"},{"tagName":"h3","title":"2. Provider 생성","id":"96e297b5"},{"tagName":"h3","title":"3. Consumer 사용","id":"5bf42b93"},{"tagName":"h3","title":"4. Context Provider 적용","id":"6bd3d8da"},{"tagName":"h2","title":"Context API의 장점과 단점","id":"125e7a21"},{"tagName":"h3","title":"장점","id":"0e91a822"},{"tagName":"h3","title":"단점","id":"7c7251f1"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
