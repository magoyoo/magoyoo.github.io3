1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI%EC%97%90%EC%84%9C-CollectionView-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%96%B8%EC%A0%9C-%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%A0%EA%B9%8C","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI에서-CollectionView-사용법-언제-왜-사용할까\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI%EC%97%90%EC%84%9C-CollectionView-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%96%B8%EC%A0%9C-%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%A0%EA%B9%8C","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI에서-CollectionView-사용법-언제-왜-사용할까\"}"},"styles":[]}],"segment":["slug","SwiftUI%EC%97%90%EC%84%9C-CollectionView-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%96%B8%EC%A0%9C-%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%A0%EA%B9%8C","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI에서 CollectionView 사용법: 언제, 왜 사용할까? | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"SwiftUI에서 CollectionView를 사용하는 방법과 그 필요성을 이해하여 더욱 유연하고 강력한 사용자 인터페이스를 개발하세요. 이 가이드는 SwiftUI와 UICollectionView의 결합을 통해 다양한 데이터를 시각적으로 표현하는 방법을 소개합니다."}],["$","meta","3",{"name":"keywords","content":"swift,SwiftUI"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI%EC%97%90%EC%84%9C-CollectionView-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%96%B8%EC%A0%9C-%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%A0%EA%B9%8C"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI에서 CollectionView 사용법: 언제, 왜 사용할까? | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI에서 CollectionView 사용법: 언제, 왜 사용할까? | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"SwiftUI에서 CollectionView를 사용하는 방법과 그 필요성을 이해하여 더욱 유연하고 강력한 사용자 인터페이스를 개발하세요. 이 가이드는 SwiftUI와 UICollectionView의 결합을 통해 다양한 데이터를 시각적으로 표현하는 방법을 소개합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI%EC%97%90%EC%84%9C-CollectionView-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%96%B8%EC%A0%9C-%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%A0%EA%B9%8C"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI에서 CollectionView 사용법: 언제, 왜 사용할까? | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"SwiftUI에서 CollectionView를 사용하는 방법과 그 필요성을 이해하여 더욱 유연하고 강력한 사용자 인터페이스를 개발하세요. 이 가이드는 SwiftUI와 UICollectionView의 결합을 통해 다양한 데이터를 시각적으로 표현하는 방법을 소개합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBasic.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI에서 CollectionView 사용법: 언제, 왜 사용할까?"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI에서 CollectionView 사용법: 언제, 왜 사용할까?"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-03"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h2",null,{"id":"5fc1cbe1","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"SwiftUI에서 CollectionView 사용법: 언제, 왜 사용할까?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 애플의 최신 UI 프레임워크로, 더욱 선언적이고 직관적인 방법으로 사용자 인터페이스를 구성할 수 있게 해줍니다. 하지만 SwiftUI가 제공하는 기본 컴포넌트만으로는 복잡한 레이아웃을 구현하는 데 한계가 있을 수 있습니다. 특히, 다양한 데이터를 시각적으로 표현하고 관리해야 하는 경우, UIKit의 UICollectionView를 활용하는 것이 유용합니다. 이 글에서는 SwiftUI에서 CollectionView를 사용하는 방법과 그 필요성에 대해 알아보겠습니다."}],"\n",["$","h3",null,{"id":"f92a206e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"SwiftUI와 UICollectionView의 결합"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 강력하지만, 복잡한 그리드 레이아웃이나 데이터 시각화를 위해 여전히 UIKit의 UICollectionView가 필요할 때가 있습니다. UICollectionView는 다양한 레이아웃 옵션과 데이터 관리를 제공하여 복잡한 UI를 쉽게 구성할 수 있습니다. SwiftUI와 UICollectionView를 결합하면, 두 프레임워크의 장점을 모두 활용할 수 있습니다."}],"\n",["$","h3",null,{"id":"ded2f75b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"SwiftUI에서 UICollectionView 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI에서 UICollectionView를 사용하려면, UIViewControllerRepresentable 프로토콜을 사용하여 UIKit의 뷰를 SwiftUI에서 사용할 수 있도록 해야 합니다. 다음은 SwiftUI에서 UICollectionView를 사용하는 기본적인 예제입니다."}],"\n",["$","h4","h4-0",{"children":"1. UICollectionViewCell 생성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"먼저, UICollectionView에서 사용할 커스텀 셀을 생성합니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass CustomCollectionViewCell: UICollectionViewCell {\n    static let identifier = \"CustomCollectionViewCell\"\n\n    private let label: UILabel = {\n        let label = UILabel()\n        label.textAlignment = .center\n        label.translatesAutoresizingMaskIntoConstraints = false\n        return label\n    }()\n\n    override init(frame: CGRect) {\n        super.init(frame: frame)\n        contentView.addSubview(label)\n        NSLayoutConstraint.activate([\n            label.centerXAnchor.constraint(equalTo: contentView.centerXAnchor),\n            label.centerYAnchor.constraint(equalTo: contentView.centerYAnchor)\n        ])\n    }\n\n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n\n    func configure(with text: String) {\n        label.text = text\n    }\n}\n"}],"position":{"start":{"line":18,"column":1,"offset":844},"end":{"line":48,"column":4,"offset":1677}}},"children":"import UIKit\n\nclass CustomCollectionViewCell: UICollectionViewCell {\n    static let identifier = \"CustomCollectionViewCell\"\n\n    private let label: UILabel = {\n        let label = UILabel()\n        label.textAlignment = .center\n        label.translatesAutoresizingMaskIntoConstraints = false\n        return label\n    }()\n\n    override init(frame: CGRect) {\n        super.init(frame: frame)\n        contentView.addSubview(label)\n        NSLayoutConstraint.activate([\n            label.centerXAnchor.constraint(equalTo: contentView.centerXAnchor),\n            label.centerYAnchor.constraint(equalTo: contentView.centerYAnchor)\n        ])\n    }\n\n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n\n    func configure(with text: String) {\n        label.text = text\n    }\n}\n"}}]}],"\n",["$","h4","h4-1",{"children":"2. UICollectionViewController 생성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음으로, UICollectionViewController를 생성합니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass CustomCollectionViewController: UICollectionViewController {\n    private let items = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"]\n\n    init() {\n        let layout = UICollectionViewFlowLayout()\n        super.init(collectionViewLayout: layout)\n        collectionView.register(CustomCollectionViewCell.self, forCellWithReuseIdentifier: CustomCollectionViewCell.identifier)\n    }\n\n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n\n    override func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {\n        return items.count\n    }\n\n    override func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {\n        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: CustomCollectionViewCell.identifier, for: indexPath) as! CustomCollectionViewCell\n        cell.configure(with: items[indexPath.row])\n        return cell\n    }\n}\n"}],"position":{"start":{"line":54,"column":1,"offset":1760},"end":{"line":80,"column":4,"offset":2786}}},"children":"import UIKit\n\nclass CustomCollectionViewController: UICollectionViewController {\n    private let items = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"]\n\n    init() {\n        let layout = UICollectionViewFlowLayout()\n        super.init(collectionViewLayout: layout)\n        collectionView.register(CustomCollectionViewCell.self, forCellWithReuseIdentifier: CustomCollectionViewCell.identifier)\n    }\n\n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n\n    override func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {\n        return items.count\n    }\n\n    override func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {\n        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: CustomCollectionViewCell.identifier, for: indexPath) as! CustomCollectionViewCell\n        cell.configure(with: items[indexPath.row])\n        return cell\n    }\n}\n"}}]}],"\n",["$","h4","h4-2",{"children":"3. UIViewControllerRepresentable 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 SwiftUI에서 UICollectionView를 사용할 수 있도록 UIViewControllerRepresentable을 구현합니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct CollectionView: UIViewControllerRepresentable {\n    func makeUIViewController(context: Context) -> some UIViewController {\n        return CustomCollectionViewController()\n    }\n\n    func updateUIViewController(_ uiViewController: UIViewControllerType, context: Context) {\n        // 업데이트 로직이 필요하다면 여기에 추가\n    }\n}\n"}],"position":{"start":{"line":86,"column":1,"offset":2910},"end":{"line":98,"column":4,"offset":3258}}},"children":"import SwiftUI\n\nstruct CollectionView: UIViewControllerRepresentable {\n    func makeUIViewController(context: Context) -> some UIViewController {\n        return CustomCollectionViewController()\n    }\n\n    func updateUIViewController(_ uiViewController: UIViewControllerType, context: Context) {\n        // 업데이트 로직이 필요하다면 여기에 추가\n    }\n}\n"}}]}],"\n",["$","h4","h4-3",{"children":"4. SwiftUI에서 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"마지막으로, SwiftUI 뷰에서 CollectionView를 사용합니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    var body: some View {\n        CollectionView()\n            .edgesIgnoringSafeArea(.all)\n    }\n}\n\nstruct ContentView_Previews: PreviewProvider {\n    static var previews: some View {\n        ContentView()\n    }\n}\n"}],"position":{"start":{"line":104,"column":1,"offset":3325},"end":{"line":117,"column":4,"offset":3579}}},"children":"struct ContentView: View {\n    var body: some View {\n        CollectionView()\n            .edgesIgnoringSafeArea(.all)\n    }\n}\n\nstruct ContentView_Previews: PreviewProvider {\n    static var previews: some View {\n        ContentView()\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"9dfd8517","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"언제, 왜 UICollectionView를 사용할까?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI의 List와 Grid는 많은 경우에 충분하지만, UICollectionView는 특정 상황에서 더욱 강력한 기능을 제공합니다."}],"\n",["$","h4","h4-4",{"children":"복잡한 레이아웃 필요 시"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI의 기본 컴포넌트로는 구현하기 어려운 복잡한 레이아웃이 필요한 경우 UICollectionView를 사용하는 것이 좋습니다. UICollectionView는 다양한 레이아웃 옵션을 제공하며, 이를 통해 그리드, 스택, 커스텀 레이아웃 등을 쉽게 구현할 수 있습니다."}],"\n",["$","h4","h4-5",{"children":"성능 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UICollectionView는 대량의 데이터를 효율적으로 관리하고 표시할 수 있는 성능 최적화 기능을 제공합니다. 셀 재사용 및 가상화 덕분에 성능 저하 없이 대규모 데이터 세트를 표시할 수 있습니다. 이는 특히 스크롤 가능한 콘텐츠가 많은 앱에서 중요합니다."}],"\n",["$","h4","h4-6",{"children":"커스텀 셀"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI의 기본 셀 구성 요소보다 더 복잡한 커스텀 셀을 구현해야 할 때 UICollectionView가 유리합니다. UIKit을 사용하면 셀의 모양과 동작을 세밀하게 제어할 수 있습니다."}],"\n",["$","h3",null,{"id":"5b12bcf2","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI에서 UICollectionView를 사용하는 방법과 그 필요성에 대해 알아보았습니다. SwiftUI와 UIKit의 결합을 통해 두 프레임워크의 장점을 모두 활용하여 더욱 강력하고 유연한 사용자 인터페이스를 구축할 수 있습니다. UICollectionView는 복잡한 레이아웃, 성능 최적화, 커스텀 셀 구현에 있어 강력한 도구이므로, SwiftUI 프로젝트에서 이러한 요구사항이 있을 때 적극적으로 활용해보세요. SwiftUI와 UICollectionView의 결합은 여러분의 앱을 한 단계 더 발전시킬 수 있는 강력한 방법입니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI에서 CollectionView 사용법: 언제, 왜 사용할까?","toc":[{"tagName":"h2","title":"SwiftUI에서 CollectionView 사용법: 언제, 왜 사용할까?","id":"5fc1cbe1"},{"tagName":"h3","title":"SwiftUI와 UICollectionView의 결합","id":"f92a206e"},{"tagName":"h3","title":"SwiftUI에서 UICollectionView 사용하기","id":"ded2f75b"},{"tagName":"h3","title":"언제, 왜 UICollectionView를 사용할까?","id":"9dfd8517"},{"tagName":"h3","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
