1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","JSX%EC%97%90%EC%84%9C-%EB%B3%80%EC%88%98%EC%99%80-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%ED%95%B8%EB%93%A4%EB%A7%81-JSX-%EB%82%B4%EC%97%90%EC%84%9C-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B3%A0-%EC%9D%B4%EB%B2%A4%ED%8A%B8%EB%A5%BC-%EB%8B%A4%EB%A3%A8%EB%8A%94-%EA%B5%AC%EC%B2%B4%EC%A0%81%EC%9D%B8-%EC%98%88%EC%A0%9C-a86b7f38","d"],{"children":["__PAGE__?{\"slug\":\"JSX에서-변수와-이벤트-핸들링-JSX-내에서-변수를-사용하고-이벤트를-다루는-구체적인-예제-a86b7f38\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","JSX%EC%97%90%EC%84%9C-%EB%B3%80%EC%88%98%EC%99%80-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%ED%95%B8%EB%93%A4%EB%A7%81-JSX-%EB%82%B4%EC%97%90%EC%84%9C-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B3%A0-%EC%9D%B4%EB%B2%A4%ED%8A%B8%EB%A5%BC-%EB%8B%A4%EB%A3%A8%EB%8A%94-%EA%B5%AC%EC%B2%B4%EC%A0%81%EC%9D%B8-%EC%98%88%EC%A0%9C-a86b7f38","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"JSX에서-변수와-이벤트-핸들링-JSX-내에서-변수를-사용하고-이벤트를-다루는-구체적인-예제-a86b7f38\"}"},"styles":[]}],"segment":["slug","JSX%EC%97%90%EC%84%9C-%EB%B3%80%EC%88%98%EC%99%80-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%ED%95%B8%EB%93%A4%EB%A7%81-JSX-%EB%82%B4%EC%97%90%EC%84%9C-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B3%A0-%EC%9D%B4%EB%B2%A4%ED%8A%B8%EB%A5%BC-%EB%8B%A4%EB%A3%A8%EB%8A%94-%EA%B5%AC%EC%B2%B4%EC%A0%81%EC%9D%B8-%EC%98%88%EC%A0%9C-a86b7f38","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"JSX에서 변수와 이벤트 핸들링: JSX 내에서 변수를 사용하고 이벤트를 다루는 구체적인 예제. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"JSX에서 변수와 이벤트 핸들링은 리액트를 사용한 웹 개발에서 중요합니다. 이 글에서는 JSX 내에서 변수 사용법과 이벤트 핸들링을 구체적인 예제로 설명합니다."}],["$","meta","3",{"name":"keywords","content":"JSX,React,이벤트 핸들링,변수"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/JSX%EC%97%90%EC%84%9C-%EB%B3%80%EC%88%98%EC%99%80-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%ED%95%B8%EB%93%A4%EB%A7%81-JSX-%EB%82%B4%EC%97%90%EC%84%9C-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B3%A0-%EC%9D%B4%EB%B2%A4%ED%8A%B8%EB%A5%BC-%EB%8B%A4%EB%A3%A8%EB%8A%94-%EA%B5%AC%EC%B2%B4%EC%A0%81%EC%9D%B8-%EC%98%88%EC%A0%9C-a86b7f38"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"JSX에서 변수와 이벤트 핸들링: JSX 내에서 변수를 사용하고 이벤트를 다루는 구체적인 예제. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"JSX에서 변수와 이벤트 핸들링: JSX 내에서 변수를 사용하고 이벤트를 다루는 구체적인 예제. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"JSX에서 변수와 이벤트 핸들링은 리액트를 사용한 웹 개발에서 중요합니다. 이 글에서는 JSX 내에서 변수 사용법과 이벤트 핸들링을 구체적인 예제로 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/JSX%EC%97%90%EC%84%9C-%EB%B3%80%EC%88%98%EC%99%80-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%ED%95%B8%EB%93%A4%EB%A7%81-JSX-%EB%82%B4%EC%97%90%EC%84%9C-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B3%A0-%EC%9D%B4%EB%B2%A4%ED%8A%B8%EB%A5%BC-%EB%8B%A4%EB%A3%A8%EB%8A%94-%EA%B5%AC%EC%B2%B4%EC%A0%81%EC%9D%B8-%EC%98%88%EC%A0%9C-a86b7f38"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner5.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"JSX에서 변수와 이벤트 핸들링: JSX 내에서 변수를 사용하고 이벤트를 다루는 구체적인 예제. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"JSX에서 변수와 이벤트 핸들링은 리액트를 사용한 웹 개발에서 중요합니다. 이 글에서는 JSX 내에서 변수 사용법과 이벤트 핸들링을 구체적인 예제로 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner5.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner5.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"JSX에서 변수와 이벤트 핸들링: JSX 내에서 변수를 사용하고 이벤트를 다루는 구체적인 예제."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"JSX에서 변수와 이벤트 핸들링: JSX 내에서 변수를 사용하고 이벤트를 다루는 구체적인 예제."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-25"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"e2fa7608","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"JSX에서 변수와 이벤트 핸들링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"JSX는 리액트(React)를 사용할 때, UI를 정의하는 데 사용되는 문법 확장입니다. JSX는 자바스크립트 코드를 HTML과 비슷한 형태로 작성할 수 있게 도와주어 개발자가 더욱 직관적으로 코드를 작성할 수 있도록 합니다. 이번 글에서는 JSX 내에서 변수를 선언하고 사용하는 방법과 다양한 이벤트를 핸들링하는 방법을 구체적인 예제로 설명하겠습니다."}],"\n",["$","h2",null,{"id":"297dd13e","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"JSX 내에서 변수 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["JSX 내에서 변수를 사용하는 것은 매우 간단합니다. 기본적으로 우리는 자바스크립트 코드를 JSX 내에 중괄호 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{}","position":{"start":{"line":8,"column":63,"offset":303},"end":{"line":8,"column":67,"offset":307}}}],"position":{"start":{"line":8,"column":63,"offset":303},"end":{"line":8,"column":67,"offset":307}}},"children":"{}"}}],"를 사용하여 삽입할 수 있습니다. 예를 들어, 다음은 간단한 변수 선언과 JSX 내에서의 사용법입니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const name = 'John Doe';\n\nclass Greeting extends React.Component {\n  render() {\n    return <h1>Hello, {name}!</h1>;\n  }\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":366},"end":{"line":18,"column":4,"offset":505}}},"children":"const name = 'John Doe';\n\nclass Greeting extends React.Component {\n  render() {\n    return <h1>Hello, {name}!</h1>;\n  }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 보듯이, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name","position":{"start":{"line":20,"column":13,"offset":519},"end":{"line":20,"column":19,"offset":525}}}],"position":{"start":{"line":20,"column":13,"offset":519},"end":{"line":20,"column":19,"offset":525}}},"children":"name"}}]," 변수를 중괄호 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{name}","position":{"start":{"line":20,"column":28,"offset":534},"end":{"line":20,"column":36,"offset":542}}}],"position":{"start":{"line":20,"column":28,"offset":534},"end":{"line":20,"column":36,"offset":542}}},"children":"{name}"}}],"로 감싸서 JSX 내에서 사용하고 있습니다. 이를 통해 JSX는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hello, John Doe!","position":{"start":{"line":20,"column":72,"offset":578},"end":{"line":20,"column":90,"offset":596}}}],"position":{"start":{"line":20,"column":72,"offset":578},"end":{"line":20,"column":90,"offset":596}}},"children":"Hello, John Doe!"}}],"를 출력하게 됩니다."]}],"\n",["$","h3",null,{"id":"6fa05500","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"동적 변수와 함수 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"JSX 내에서는 정적 변수뿐만 아니라 동적 변수도 사용할 수 있습니다. 동적 변수는 주로 함수나 조건문과 함께 사용됩니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function formatName(user) {\n  return user.firstName + ' ' + user.lastName;\n}\n\nconst user = {\n  firstName: 'John',\n  lastName: 'Doe'\n};\n\nclass Greeting extends React.Component {\n  render() {\n    return <h1>Hello, {formatName(user)}!</h1>;\n  }\n}\n"}],"position":{"start":{"line":26,"column":1,"offset":697},"end":{"line":41,"column":4,"offset":958}}},"children":"function formatName(user) {\n  return user.firstName + ' ' + user.lastName;\n}\n\nconst user = {\n  firstName: 'John',\n  lastName: 'Doe'\n};\n\nclass Greeting extends React.Component {\n  render() {\n    return <h1>Hello, {formatName(user)}!</h1>;\n  }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"formatName","position":{"start":{"line":43,"column":6,"offset":965},"end":{"line":43,"column":18,"offset":977}}}],"position":{"start":{"line":43,"column":6,"offset":965},"end":{"line":43,"column":18,"offset":977}}},"children":"formatName"}}],"이라는 함수를 정의하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"user","position":{"start":{"line":43,"column":32,"offset":991},"end":{"line":43,"column":38,"offset":997}}}],"position":{"start":{"line":43,"column":32,"offset":991},"end":{"line":43,"column":38,"offset":997}}},"children":"user"}}]," 객체를 함께 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hello, John Doe!","position":{"start":{"line":43,"column":51,"offset":1010},"end":{"line":43,"column":69,"offset":1028}}}],"position":{"start":{"line":43,"column":51,"offset":1010},"end":{"line":43,"column":69,"offset":1028}}},"children":"Hello, John Doe!"}}],"를 출력합니다. 이 방법은 더 복잡한 데이터를 처리할 때 유용합니다."]}],"\n",["$","h2",null,{"id":"a7e7995f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"이벤트 핸들링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"JSX 내에서 이벤트를 핸들링하는 것은 HTML에서의 이벤트 핸들링과 매우 유사하지만, 자바스크립트 코드를 JSX 내에 포함시켜야 합니다. 다음은 클릭 이벤트를 처리하는 간단한 예제입니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"class Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n\n    // 이 바인딩은 콜백에서 `this`가 작동하려면 필요합니다.\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? 'ON' : 'OFF'}\n      </button>\n    );\n  }\n}\n"}],"position":{"start":{"line":49,"column":1,"offset":1187},"end":{"line":73,"column":4,"offset":1661}}},"children":"class Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n\n    // 이 바인딩은 콜백에서 `this`가 작동하려면 필요합니다.\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? 'ON' : 'OFF'}\n      </button>\n    );\n  }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleClick","position":{"start":{"line":75,"column":8,"offset":1670},"end":{"line":75,"column":21,"offset":1683}}}],"position":{"start":{"line":75,"column":8,"offset":1670},"end":{"line":75,"column":21,"offset":1683}}},"children":"handleClick"}}]," 메서드는 버튼이 클릭될 때마다 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"state","position":{"start":{"line":75,"column":39,"offset":1701},"end":{"line":75,"column":46,"offset":1708}}}],"position":{"start":{"line":75,"column":39,"offset":1701},"end":{"line":75,"column":46,"offset":1708}}},"children":"state"}}],"를 업데이트합니다. 이 업데이트는 버튼의 텍스트를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ON","position":{"start":{"line":75,"column":74,"offset":1736},"end":{"line":75,"column":78,"offset":1740}}}],"position":{"start":{"line":75,"column":74,"offset":1736},"end":{"line":75,"column":78,"offset":1740}}},"children":"ON"}}],"에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"OFF","position":{"start":{"line":75,"column":81,"offset":1743},"end":{"line":75,"column":86,"offset":1748}}}],"position":{"start":{"line":75,"column":81,"offset":1743},"end":{"line":75,"column":86,"offset":1748}}},"children":"OFF"}}],"로, 또는 그 반대로 전환합니다."]}],"\n",["$","h3",null,{"id":"7b405402","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"이벤트 핸들링과 매개변수"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이벤트 핸들러에 매개변수를 전달해야 하는 경우가 발생할 수 있습니다. 이를 위해서는 화살표 함수나 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Function.prototype.bind","position":{"start":{"line":79,"column":56,"offset":1842},"end":{"line":79,"column":81,"offset":1867}}}],"position":{"start":{"line":79,"column":56,"offset":1842},"end":{"line":79,"column":81,"offset":1867}}},"children":"Function.prototype.bind"}}]," 메서드를 사용할 수 있습니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"class LoggingButton extends React.Component {\n  handleClick(id, event) {\n    console.log('Button clicked: ', id);\n  }\n\n  render() {\n    return (\n      <button onClick={(e) => this.handleClick(this.props.id, e)}>\n        Click me\n      </button>\n    );\n  }\n}\n"}],"position":{"start":{"line":81,"column":1,"offset":1886},"end":{"line":95,"column":4,"offset":2161}}},"children":"class LoggingButton extends React.Component {\n  handleClick(id, event) {\n    console.log('Button clicked: ', id);\n  }\n\n  render() {\n    return (\n      <button onClick={(e) => this.handleClick(this.props.id, e)}>\n        Click me\n      </button>\n    );\n  }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleClick","position":{"start":{"line":97,"column":8,"offset":2170},"end":{"line":97,"column":21,"offset":2183}}}],"position":{"start":{"line":97,"column":8,"offset":2170},"end":{"line":97,"column":21,"offset":2183}}},"children":"handleClick"}}]," 메서드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id","position":{"start":{"line":97,"column":27,"offset":2189},"end":{"line":97,"column":31,"offset":2193}}}],"position":{"start":{"line":97,"column":27,"offset":2189},"end":{"line":97,"column":31,"offset":2193}}},"children":"id"}}],"와 이벤트 객체 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"event","position":{"start":{"line":97,"column":40,"offset":2202},"end":{"line":97,"column":47,"offset":2209}}}],"position":{"start":{"line":97,"column":40,"offset":2202},"end":{"line":97,"column":47,"offset":2209}}},"children":"event"}}],"를 매개변수로 받습니다. 이벤트 핸들러가 호출될 때, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this.props.id","position":{"start":{"line":97,"column":77,"offset":2239},"end":{"line":97,"column":92,"offset":2254}}}],"position":{"start":{"line":97,"column":77,"offset":2239},"end":{"line":97,"column":92,"offset":2254}}},"children":"this.props.id"}}],"와 이벤트 객체가 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleClick","position":{"start":{"line":97,"column":102,"offset":2264},"end":{"line":97,"column":115,"offset":2277}}}],"position":{"start":{"line":97,"column":102,"offset":2264},"end":{"line":97,"column":115,"offset":2277}}},"children":"handleClick"}}]," 메서드에 전달됩니다."]}],"\n",["$","h2",null,{"id":"99ddb79e","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"조건부 렌더링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"JSX 내에서 조건부 렌더링을 사용하는 것은 매우 중요합니다. 이는 특정 조건에 따라 다른 UI 요소를 보여줄 수 있게 합니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"class LoginControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isLoggedIn: false};\n    this.handleLoginClick = this.handleLoginClick.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n  }\n\n  handleLoginClick() {\n    this.setState({isLoggedIn: true});\n  }\n\n  handleLogoutClick() {\n    this.setState({isLoggedIn: false});\n  }\n\n  render() {\n    const isLoggedIn = this.state.isLoggedIn;\n    let button;\n\n    if (isLoggedIn) {\n      button = <button onClick={this.handleLogoutClick}>Logout</button>;\n    } else {\n      button = <button onClick={this.handleLoginClick}>Login</button>;\n    }\n\n    return (\n      <div>\n        <h1>{isLoggedIn ? 'Welcome back!' : 'Please sign in.'}</h1>\n        {button}\n      </div>\n    );\n  }\n}\n"}],"position":{"start":{"line":103,"column":1,"offset":2376},"end":{"line":138,"column":4,"offset":3182}}},"children":"class LoginControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isLoggedIn: false};\n    this.handleLoginClick = this.handleLoginClick.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n  }\n\n  handleLoginClick() {\n    this.setState({isLoggedIn: true});\n  }\n\n  handleLogoutClick() {\n    this.setState({isLoggedIn: false});\n  }\n\n  render() {\n    const isLoggedIn = this.state.isLoggedIn;\n    let button;\n\n    if (isLoggedIn) {\n      button = <button onClick={this.handleLogoutClick}>Logout</button>;\n    } else {\n      button = <button onClick={this.handleLoginClick}>Login</button>;\n    }\n\n    return (\n      <div>\n        <h1>{isLoggedIn ? 'Welcome back!' : 'Please sign in.'}</h1>\n        {button}\n      </div>\n    );\n  }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LoginControl","position":{"start":{"line":140,"column":8,"offset":3191},"end":{"line":140,"column":22,"offset":3205}}}],"position":{"start":{"line":140,"column":8,"offset":3191},"end":{"line":140,"column":22,"offset":3205}}},"children":"LoginControl"}}]," 컴포넌트는 로그인 상태에 따라 다른 버튼을 렌더링합니다. 이처럼 조건부 렌더링을 통해 매우 유연한 UI를 만들 수 있습니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 글에서는 JSX 내에서 변수를 선언하고 사용하는 방법과 다양한 이벤트를 핸들링하는 방법을 구체적인 예제로 설명했습니다. 이러한 기술들은 리액트로 웹 애플리케이션을 개발할 때 매우 유용하며, 코드의 가독성을 높이고 유지보수를 쉽게 해줍니다. 앞으로도 꾸준히 연습하며 자신만의 노하우를 개발해 나가길 바랍니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"JSX에서 변수와 이벤트 핸들링: JSX 내에서 변수를 사용하고 이벤트를 다루는 구체적인 예제.","toc":[{"tagName":"h1","title":"JSX에서 변수와 이벤트 핸들링","id":"e2fa7608"},{"tagName":"h2","title":"JSX 내에서 변수 사용하기","id":"297dd13e"},{"tagName":"h3","title":"동적 변수와 함수 사용","id":"6fa05500"},{"tagName":"h2","title":"이벤트 핸들링","id":"a7e7995f"},{"tagName":"h3","title":"이벤트 핸들링과 매개변수","id":"7b405402"},{"tagName":"h2","title":"조건부 렌더링","id":"99ddb79e"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
