1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","React%EC%97%90%EC%84%9C-Class%ED%98%95-Component%EB%8A%94-%EA%B5%AC%EC%8B%9C%EB%8C%80%EC%9D%98-%EC%82%B0%EB%AC%BC%EC%9D%B8%EA%B0%80-%EC%96%B8%EC%A0%9C-%ED%99%9C%EC%9A%A9%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C--c16d7d27","d"],{"children":["__PAGE__?{\"slug\":\"React에서-Class형-Component는-구시대의-산물인가-언제-활용해야할까--c16d7d27\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","React%EC%97%90%EC%84%9C-Class%ED%98%95-Component%EB%8A%94-%EA%B5%AC%EC%8B%9C%EB%8C%80%EC%9D%98-%EC%82%B0%EB%AC%BC%EC%9D%B8%EA%B0%80-%EC%96%B8%EC%A0%9C-%ED%99%9C%EC%9A%A9%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C--c16d7d27","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"React에서-Class형-Component는-구시대의-산물인가-언제-활용해야할까--c16d7d27\"}"},"styles":[]}],"segment":["slug","React%EC%97%90%EC%84%9C-Class%ED%98%95-Component%EB%8A%94-%EA%B5%AC%EC%8B%9C%EB%8C%80%EC%9D%98-%EC%82%B0%EB%AC%BC%EC%9D%B8%EA%B0%80-%EC%96%B8%EC%A0%9C-%ED%99%9C%EC%9A%A9%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C--c16d7d27","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"React에서 Class형 Component는 구시대의 산물인가 ? 언제 활용해야할까 ? | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"React에서 클래스형 컴포넌트는 최근 함수형 컴포넌트로 대체되며 구시대의 산물로 여겨지고 있습니다. 그렇다면 클래스형 컴포넌트를 언제 활용하는 것이 좋을까요? 이 글에서는 클래스형 컴포넌트의 특징과 사용처에 대해 알아봅니다."}],["$","meta","3",{"name":"keywords","content":"React,Class Component,Function Component,Javascript"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/React%EC%97%90%EC%84%9C-Class%ED%98%95-Component%EB%8A%94-%EA%B5%AC%EC%8B%9C%EB%8C%80%EC%9D%98-%EC%82%B0%EB%AC%BC%EC%9D%B8%EA%B0%80-%EC%96%B8%EC%A0%9C-%ED%99%9C%EC%9A%A9%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C--c16d7d27"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"React에서 Class형 Component는 구시대의 산물인가 ? 언제 활용해야할까 ? | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"React에서 Class형 Component는 구시대의 산물인가 ? 언제 활용해야할까 ? | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"React에서 클래스형 컴포넌트는 최근 함수형 컴포넌트로 대체되며 구시대의 산물로 여겨지고 있습니다. 그렇다면 클래스형 컴포넌트를 언제 활용하는 것이 좋을까요? 이 글에서는 클래스형 컴포넌트의 특징과 사용처에 대해 알아봅니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/React%EC%97%90%EC%84%9C-Class%ED%98%95-Component%EB%8A%94-%EA%B5%AC%EC%8B%9C%EB%8C%80%EC%9D%98-%EC%82%B0%EB%AC%BC%EC%9D%B8%EA%B0%80-%EC%96%B8%EC%A0%9C-%ED%99%9C%EC%9A%A9%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C--c16d7d27"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"React에서 Class형 Component는 구시대의 산물인가 ? 언제 활용해야할까 ? | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"React에서 클래스형 컴포넌트는 최근 함수형 컴포넌트로 대체되며 구시대의 산물로 여겨지고 있습니다. 그렇다면 클래스형 컴포넌트를 언제 활용하는 것이 좋을까요? 이 글에서는 클래스형 컴포넌트의 특징과 사용처에 대해 알아봅니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"React에서 Class형 Component는 구시대의 산물인가 ? 언제 활용해야할까 ?"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"React에서 Class형 Component는 구시대의 산물인가 ? 언제 활용해야할까 ?"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-07"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"4ba9be09","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"React에서 Class형 Component는 구시대의 산물인가? 언제 활용해야할까?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["React는 처음 등장한 이후로 많은 변화를 겪어왔습니다. 그 중 가장 큰 변화 중 하나는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"class","position":{"start":{"line":4,"column":52,"offset":103},"end":{"line":4,"column":59,"offset":110}}}],"position":{"start":{"line":4,"column":52,"offset":103},"end":{"line":4,"column":59,"offset":110}}},"children":"class"}}],"형 컴포넌트에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function","position":{"start":{"line":4,"column":68,"offset":119},"end":{"line":4,"column":78,"offset":129}}}],"position":{"start":{"line":4,"column":68,"offset":119},"end":{"line":4,"column":78,"offset":129}}},"children":"function"}}],"형 컴포넌트로의 전환입니다. 함수형 컴포넌트는 리액트 훅(Hooks)과 함께 더 많은 유연성을 제공하며, 더 간결해진 문법 덕분에 최근 개발자들 사이에서 더욱 선호되고 있습니다. 하지만 그렇다고 해서 클래스형 컴포넌트가 완전히 사라진 것은 아닙니다. 이 글에서는 클래스형 컴포넌트가 과연 구시대의 산물인지, 실제로 언제 활용하는 것이 좋을지에 대해 알아보겠습니다."]}],"\n",["$","h2",null,{"id":"3fdfc814","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"클래스형 컴포넌트의 특징"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["클래스형 컴포넌트는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React.Component","position":{"start":{"line":8,"column":12,"offset":363},"end":{"line":8,"column":29,"offset":380}}}],"position":{"start":{"line":8,"column":12,"offset":363},"end":{"line":8,"column":29,"offset":380}}},"children":"React.Component"}}],"를 상속받아 만들어집니다. 다음은 클래스형 컴포넌트의 주요 특징들입니다."]}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"상태 관리(State Management):"}]," ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this.state","position":{"start":{"line":10,"column":33,"offset":454},"end":{"line":10,"column":45,"offset":466}}}],"position":{"start":{"line":10,"column":33,"offset":454},"end":{"line":10,"column":45,"offset":466}}},"children":"this.state"}}],"를 통해 컴포넌트 상태를 관리하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this.setState","position":{"start":{"line":10,"column":65,"offset":486},"end":{"line":10,"column":80,"offset":501}}}],"position":{"start":{"line":10,"column":65,"offset":486},"end":{"line":10,"column":80,"offset":501}}},"children":"this.setState"}}],"를 사용하여 상태를 업데이트합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"라이프사이클 메서드(Lifecycle Methods):"}]," ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentDidMount","position":{"start":{"line":11,"column":39,"offset":559},"end":{"line":11,"column":58,"offset":578}}}],"position":{"start":{"line":11,"column":39,"offset":559},"end":{"line":11,"column":58,"offset":578}}},"children":"componentDidMount"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentDidUpdate","position":{"start":{"line":11,"column":60,"offset":580},"end":{"line":11,"column":80,"offset":600}}}],"position":{"start":{"line":11,"column":60,"offset":580},"end":{"line":11,"column":80,"offset":600}}},"children":"componentDidUpdate"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentWillUnmount","position":{"start":{"line":11,"column":82,"offset":602},"end":{"line":11,"column":104,"offset":624}}}],"position":{"start":{"line":11,"column":82,"offset":602},"end":{"line":11,"column":104,"offset":624}}},"children":"componentWillUnmount"}}]," 등 다양한 라이프사이클 메서드를 통해 컴포넌트의 생명주기를 관리할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"render","position":{"start":{"line":12,"column":6,"offset":675},"end":{"line":12,"column":14,"offset":683}}}],"position":{"start":{"line":12,"column":6,"offset":675},"end":{"line":12,"column":14,"offset":683}}},"children":"render"}}]," 메서드:"]}]," 클래스형 컴포넌트는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"render","position":{"start":{"line":12,"column":33,"offset":702},"end":{"line":12,"column":41,"offset":710}}}],"position":{"start":{"line":12,"column":33,"offset":702},"end":{"line":12,"column":41,"offset":710}}},"children":"render"}}]," 메서드를 오버라이드하여 JSX를 반환합니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 클래스형 컴포넌트의 예제 코드입니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"import React, { Component } from 'react';\n\nclass MyClassComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    console.log('Component has mounted');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.count !== this.state.count) {\n      console.log('Count state has changed');\n    }\n  }\n\n  incrementCount = () => {\n    this.setState({ count: this.state.count + 1 });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Count: {this.state.count}</p>\n        <button onClick={this.incrementCount}>Increment</button>\n      </div>\n    );\n  }\n}\n\nexport default MyClassComponent;\n"}],"position":{"start":{"line":16,"column":1,"offset":763},"end":{"line":52,"column":4,"offset":1455}}},"children":"import React, { Component } from 'react';\n\nclass MyClassComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    console.log('Component has mounted');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.count !== this.state.count) {\n      console.log('Count state has changed');\n    }\n  }\n\n  incrementCount = () => {\n    this.setState({ count: this.state.count + 1 });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Count: {this.state.count}</p>\n        <button onClick={this.incrementCount}>Increment</button>\n      </div>\n    );\n  }\n}\n\nexport default MyClassComponent;\n"}}]}],"\n",["$","h2",null,{"id":"faca87a0","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"함수형 컴포넌트와의 비교"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"함수형 컴포넌트는 주로 더 간결한 문법과 훅을 사용한 유연성 때문에 선호됩니다. 다음은 주요 특징입니다."}],"\n",["$","ol","ol-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"상태 관리와 사이드 이펙트:"}]," ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState","position":{"start":{"line":58,"column":24,"offset":1558},"end":{"line":58,"column":34,"offset":1568}}}],"position":{"start":{"line":58,"column":24,"offset":1558},"end":{"line":58,"column":34,"offset":1568}}},"children":"useState"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":58,"column":36,"offset":1570},"end":{"line":58,"column":47,"offset":1581}}}],"position":{"start":{"line":58,"column":36,"offset":1570},"end":{"line":58,"column":47,"offset":1581}}},"children":"useEffect"}}]," 등의 훅을 사용하여 상태를 관리하고 사이드 이펙트를 처리합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"더 간결한 문법:"}]," 함수형 컴포넌트는 단순한 함수로 작성되어 더욱 간결합니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 같은 기능을 하는 함수형 컴포넌트의 예제 코드입니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"import React, { useState, useEffect } from 'react';\n\nconst MyFunctionalComponent = () => {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    console.log('Component has mounted');\n    return () => {\n      console.log('Component will unmount');\n    };\n  }, []);\n\n  useEffect(() => {\n    console.log('Count state has changed');\n  }, [count]);\n\n  const incrementCount = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={incrementCount}>Increment</button>\n    </div>\n  );\n};\n\nexport default MyFunctionalComponent;\n"}],"position":{"start":{"line":63,"column":1,"offset":1704},"end":{"line":93,"column":4,"offset":2300}}},"children":"import React, { useState, useEffect } from 'react';\n\nconst MyFunctionalComponent = () => {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    console.log('Component has mounted');\n    return () => {\n      console.log('Component will unmount');\n    };\n  }, []);\n\n  useEffect(() => {\n    console.log('Count state has changed');\n  }, [count]);\n\n  const incrementCount = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={incrementCount}>Increment</button>\n    </div>\n  );\n};\n\nexport default MyFunctionalComponent;\n"}}]}],"\n",["$","h2",null,{"id":"9bfb17ac","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"클래스형 컴포넌트를 여전히 사용해야 하는 경우"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"클래스형 컴포넌트가 여전히 유용한 상황이 존재합니다. 다음은 그러한 경우들입니다."}],"\n",["$","ol","ol-2",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"레거시 코드 유지보수:"}]," 기존에 클래스형 컴포넌트로 작성된 애플리케이션을 유지보수할 때는 굳이 함수형 컴포넌트로 전환할 필요가 없습니다. 오히려 코드를 일관성 있게 유지하는 것이 더 중요한 경우가 많습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"복잡한 상태 관리:"}]," 클래스형 컴포넌트의 경우 상태를 객체로 관리할 수 있으며, 특정 상황에서는 감싸는 훅 대신 클래스형 컴포넌트에서 상태를 관리하는 것이 더 명확할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"라이프사이클 제어:"}]," 라이프사이클 메서드를 직관적으로 사용할 수 있어, 복잡한 생명주기 관리가 필요한 경우 유리할 수 있습니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"39c37903","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"클래스를 피해야 하는 경우"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"반면, 클래스형 컴포넌트를 피하는 것이 좋은 경우도 있습니다."}],"\n",["$","ol","ol-3",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"새로운 프로젝트:"}]," 새로운 프로젝트를 시작할 때는 함수형 컴포넌트를 사용하는 것이 더 적합합니다. 최신의 베스트 프랙티스를 따르기 위해서입니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"간단한 상태 관리:"}]," 간단한 상태 관리와 사이드 이펙트 처리만 필요한 경우 함수형 컴포넌트를 사용하는 것이 더 간결합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"커뮤니티와의 일관성:"}]," React 커뮤니티는 함수형 컴포넌트를 더 많이 사용하고 있기 때문에, 함수형 컴포넌트를 사용하는 것이 다른 개발자들과 협업하는데 더 나은 선택일 수 있습니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"클래스형 컴포넌트는 구시대의 산물로 여겨질 수 있지만, 여전히 특정 상황에서는 유용하게 사용될 수 있습니다. 레거시 코드 유지보수나 복잡한 상태 관리 등에서 클래스형 컴포넌트가 필요한 경우도 많습니다. 그러나 새로운 프로젝트를 시작하거나 간단한 기능을 구현할 때는 함수형 컴포넌트와 훅을 사용하는 것이 더 유리할 수 있습니다. 종합적으로, 상황에 맞게 클래스를 사용할지, 함수형을 사용할지 결정하는 것이 중요합니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"React에서 Class형 Component는 구시대의 산물인가 ? 언제 활용해야할까 ?","toc":[{"tagName":"h1","title":"React에서 Class형 Component는 구시대의 산물인가? 언제 활용해야할까?","id":"4ba9be09"},{"tagName":"h2","title":"클래스형 컴포넌트의 특징","id":"3fdfc814"},{"tagName":"h2","title":"함수형 컴포넌트와의 비교","id":"faca87a0"},{"tagName":"h2","title":"클래스형 컴포넌트를 여전히 사용해야 하는 경우","id":"9bfb17ac"},{"tagName":"h2","title":"클래스를 피해야 하는 경우","id":"39c37903"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
