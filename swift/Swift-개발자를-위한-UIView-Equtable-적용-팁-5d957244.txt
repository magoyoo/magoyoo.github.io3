1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%A5%BC-%EC%9C%84%ED%95%9C-UIView-Equtable-%EC%A0%81%EC%9A%A9-%ED%8C%81-5d957244","d"],{"children":["__PAGE__?{\"slug\":\"Swift-개발자를-위한-UIView-Equtable-적용-팁-5d957244\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%A5%BC-%EC%9C%84%ED%95%9C-UIView-Equtable-%EC%A0%81%EC%9A%A9-%ED%8C%81-5d957244","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-개발자를-위한-UIView-Equtable-적용-팁-5d957244\"}"},"styles":[]}],"segment":["slug","Swift-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%A5%BC-%EC%9C%84%ED%95%9C-UIView-Equtable-%EC%A0%81%EC%9A%A9-%ED%8C%81-5d957244","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift 개발자를 위한 UIView Equtable 적용 팁 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift 개발자를 위한 UIView에서 Equtable을 적용하는 방법과 그 활용에 대해 설명합니다. 이 글은 UIView를 비교하고 동등성을 체크하는 데 필요한 기본 지식과 Swift 코드 예제를 포함하고 있습니다."}],["$","meta","3",{"name":"keywords","content":"Swift,UIView,Equtable,iOS"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%A5%BC-%EC%9C%84%ED%95%9C-UIView-Equtable-%EC%A0%81%EC%9A%A9-%ED%8C%81-5d957244"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift 개발자를 위한 UIView Equtable 적용 팁 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift 개발자를 위한 UIView Equtable 적용 팁 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift 개발자를 위한 UIView에서 Equtable을 적용하는 방법과 그 활용에 대해 설명합니다. 이 글은 UIView를 비교하고 동등성을 체크하는 데 필요한 기본 지식과 Swift 코드 예제를 포함하고 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%A5%BC-%EC%9C%84%ED%95%9C-UIView-Equtable-%EC%A0%81%EC%9A%A9-%ED%8C%81-5d957244"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift 개발자를 위한 UIView Equtable 적용 팁 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift 개발자를 위한 UIView에서 Equtable을 적용하는 방법과 그 활용에 대해 설명합니다. 이 글은 UIView를 비교하고 동등성을 체크하는 데 필요한 기본 지식과 Swift 코드 예제를 포함하고 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift 개발자를 위한 UIView Equtable 적용 팁"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift 개발자를 위한 UIView Equtable 적용 팁"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-15"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"ca130831","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift 개발자를 위한 UIView Equtable 적용 팁"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift는 매우 강력한 프로그래밍 언어로, iOS 개발자들 사이에서 널리 사용됩니다. UIView에서 Equtable 프로토콜을 준수하는 것은 객체의 동등성을 평가할 때 매우 유용한 기능입니다. 이번 글에서는 UIView에서 Equtable을 적용하는 방법과 이를 활용하는 몇 가지 팁을 제공합니다."}],"\n",["$","h2",null,{"id":"663d3f38","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Equtable 프로토콜이란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Equtable은 Swift의 표준 라이브러리에 포함된 프로토콜로, 두 객체가 동등한지 여부를 결정하는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"==","position":{"start":{"line":8,"column":59,"offset":288},"end":{"line":8,"column":63,"offset":292}}}],"position":{"start":{"line":8,"column":59,"offset":288},"end":{"line":8,"column":63,"offset":292}}},"children":"=="}}]," 연산자를 정의할 수 있게 합니다. 이는 배열, 집합, 사전 등의 컬렉션을 다루는 데 매우 유용합니다. 예를 들어, 컬렉션에서 특정 객체를 검색하거나 제거할 때 Equtable 프로토콜은 필수적입니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"protocol Equatable {\n    static func == (lhs: Self, rhs: Self) -> Bool\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":406},"end":{"line":14,"column":4,"offset":491}}},"children":"protocol Equatable {\n    static func == (lhs: Self, rhs: Self) -> Bool\n}\n"}}]}],"\n",["$","h2",null,{"id":"5de2f62f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UIView에서 Equtable 적용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["UIView는 기본적으로 Equtable을 준수하지 않습니다. 그렇기 때문에 커스텀 뷰 클래스에서 Equtable을 준수하도록 만들 필요가 있습니다. 이를 위해선 두 개의 주요 메소드를 구현해야 합니다: ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"==","position":{"start":{"line":18,"column":115,"offset":634},"end":{"line":18,"column":119,"offset":638}}}],"position":{"start":{"line":18,"column":115,"offset":634},"end":{"line":18,"column":119,"offset":638}}},"children":"=="}}]," 연산자와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"hash(into:)","position":{"start":{"line":18,"column":125,"offset":644},"end":{"line":18,"column":138,"offset":657}}}],"position":{"start":{"line":18,"column":125,"offset":644},"end":{"line":18,"column":138,"offset":657}}},"children":"hash(into:)"}}]," 메소드입니다."]}],"\n",["$","h3",null,{"id":"e06b7ea3","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"간단한 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["예를 들어, 사용자 정의 UIView 클래스인 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CustomView","position":{"start":{"line":22,"column":27,"offset":705},"end":{"line":22,"column":39,"offset":717}}}],"position":{"start":{"line":22,"column":27,"offset":705},"end":{"line":22,"column":39,"offset":717}}},"children":"CustomView"}}],"를 만든다고 가정해봅시다. 이 클래스는 두 개의 프로퍼티, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"x","position":{"start":{"line":22,"column":72,"offset":750},"end":{"line":22,"column":75,"offset":753}}}],"position":{"start":{"line":22,"column":72,"offset":750},"end":{"line":22,"column":75,"offset":753}}},"children":"x"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"y","position":{"start":{"line":22,"column":77,"offset":755},"end":{"line":22,"column":80,"offset":758}}}],"position":{"start":{"line":22,"column":77,"offset":755},"end":{"line":22,"column":80,"offset":758}}},"children":"y"}}],",를 가집니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class CustomView: UIView {\n    var x: Int\n    var y: Int\n\n    init(x: Int, y: Int) {\n        self.x = x\n        self.y = y\n        super.init(frame: .zero)\n    }\n\n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n}\n"}],"position":{"start":{"line":24,"column":1,"offset":768},"end":{"line":39,"column":4,"offset":1048}}},"children":"class CustomView: UIView {\n    var x: Int\n    var y: Int\n\n    init(x: Int, y: Int) {\n        self.x = x\n        self.y = y\n        super.init(frame: .zero)\n    }\n\n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"e5441bba","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Equtable 적용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CustomView","position":{"start":{"line":43,"column":4,"offset":1070},"end":{"line":43,"column":16,"offset":1082}}}],"position":{"start":{"line":43,"column":4,"offset":1070},"end":{"line":43,"column":16,"offset":1082}}},"children":"CustomView"}}]," 클래스에 Equtable을 적용해 보겠습니다. Equtable을 채택하고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"==","position":{"start":{"line":43,"column":58,"offset":1124},"end":{"line":43,"column":62,"offset":1128}}}],"position":{"start":{"line":43,"column":58,"offset":1124},"end":{"line":43,"column":62,"offset":1128}}},"children":"=="}}]," 연산자를 정의합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"extension CustomView: Equatable {\n    static func == (lhs: CustomView, rhs: CustomView) -> Bool {\n        return lhs.x == rhs.x && lhs.y == rhs.y\n    }\n}\n"}],"position":{"start":{"line":45,"column":1,"offset":1142},"end":{"line":51,"column":4,"offset":1308}}},"children":"extension CustomView: Equatable {\n    static func == (lhs: CustomView, rhs: CustomView) -> Bool {\n        return lhs.x == rhs.x && lhs.y == rhs.y\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["객체의 동등성을 평가하는 데 필요한 모든 프로퍼티들을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"==","position":{"start":{"line":53,"column":31,"offset":1340},"end":{"line":53,"column":35,"offset":1344}}}],"position":{"start":{"line":53,"column":31,"offset":1340},"end":{"line":53,"column":35,"offset":1344}}},"children":"=="}}]," 연산자에서 비교합니다. 여기서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"x","position":{"start":{"line":53,"column":54,"offset":1363},"end":{"line":53,"column":57,"offset":1366}}}],"position":{"start":{"line":53,"column":54,"offset":1363},"end":{"line":53,"column":57,"offset":1366}}},"children":"x"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"y","position":{"start":{"line":53,"column":59,"offset":1368},"end":{"line":53,"column":62,"offset":1371}}}],"position":{"start":{"line":53,"column":59,"offset":1368},"end":{"line":53,"column":62,"offset":1371}}},"children":"y"}}]," 값을 비교하고 있습니다."]}],"\n",["$","h3",null,{"id":"e8ac21bf","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Hashable 적용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서 Equtable을 좀 더 완벽하게 사용하기 위해서는 Hashable도 함께 적용하는 것이 좋습니다. 이는 컬렉션 내에서 객체를 빠르게 검색할 수 있게 해줍니다. Hashable을 준수하려면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"hash(into:)","position":{"start":{"line":57,"column":115,"offset":1518},"end":{"line":57,"column":128,"offset":1531}}}],"position":{"start":{"line":57,"column":115,"offset":1518},"end":{"line":57,"column":128,"offset":1531}}},"children":"hash(into:)"}}]," 메소드를 구현해야 합니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"extension CustomView: Hashable {\n    func hash(into hasher: inout Hasher) {\n        hasher.combine(x)\n        hasher.combine(y)\n    }\n}\n"}],"position":{"start":{"line":59,"column":1,"offset":1548},"end":{"line":66,"column":4,"offset":1696}}},"children":"extension CustomView: Hashable {\n    func hash(into hasher: inout Hasher) {\n        hasher.combine(x)\n        hasher.combine(y)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CustomView","position":{"start":{"line":68,"column":4,"offset":1701},"end":{"line":68,"column":16,"offset":1713}}}],"position":{"start":{"line":68,"column":4,"offset":1701},"end":{"line":68,"column":16,"offset":1713}}},"children":"CustomView"}}]," 클래스는 Equtable과 Hashable을 준수하게 되었습니다. 이를 통해 컬렉션 내에서 이 객체를 쉽게 다룰 수 있습니다."]}],"\n",["$","h2",null,{"id":"611c072b","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Equtable의 활용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Equtable을 준수하면 다양한 활용 방법이 생깁니다. 몇 가지 예를 들어보겠습니다."}],"\n",["$","h3",null,{"id":"b318dcbe","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"배열에서 객체 검색"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Equtable을 적용하면 배열에서 특정 객체를 검색할 수 있습니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let view1 = CustomView(x: 10, y: 20)\nlet view2 = CustomView(x: 30, y: 40)\nlet views = [view1, view2]\n\nif views.contains(view1) {\n    print(\"view1이 배열에 포함되어 있습니다.\")\n}\n"}],"position":{"start":{"line":78,"column":1,"offset":1909},"end":{"line":86,"column":4,"offset":2087}}},"children":"let view1 = CustomView(x: 10, y: 20)\nlet view2 = CustomView(x: 30, y: 40)\nlet views = [view1, view2]\n\nif views.contains(view1) {\n    print(\"view1이 배열에 포함되어 있습니다.\")\n}\n"}}]}],"\n",["$","h3",null,{"id":"a7c4418f","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Set에서 중복 객체 제거"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"중복된 객체를 제거할 때도 유용합니다."}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let viewSet: Set = [CustomView(x: 10, y: 20), CustomView(x: 10, y: 20)]\nprint(viewSet.count) // 출력: 1\n"}],"position":{"start":{"line":92,"column":1,"offset":2132},"end":{"line":95,"column":4,"offset":2246}}},"children":"let viewSet: Set = [CustomView(x: 10, y: 20), CustomView(x: 10, y: 20)]\nprint(viewSet.count) // 출력: 1\n"}}]}],"\n",["$","h3",null,{"id":"aaea3668","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"사전의 키로 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Hashable을 준수하기 때문에 사전의 키로 사용할 수도 있습니다."}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let view1 = CustomView(x: 10, y: 20)\nlet view2 = CustomView(x: 30, y: 40)\nlet viewDict: [CustomView: String] = [view1: \"First View\", view2: \"Second View\"]\n\nif let desc = viewDict[view1] {\n    print(desc) // 출력: First View\n}\n"}],"position":{"start":{"line":101,"column":1,"offset":2303},"end":{"line":109,"column":4,"offset":2539}}},"children":"let view1 = CustomView(x: 10, y: 20)\nlet view2 = CustomView(x: 30, y: 40)\nlet viewDict: [CustomView: String] = [view1: \"First View\", view2: \"Second View\"]\n\nif let desc = viewDict[view1] {\n    print(desc) // 출력: First View\n}\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UIView에 Equtable을 적용하면 여러 가지 상황에서 유용하게 활용할 수 있습니다. 커스텀 뷰 클래스에서 Equtable을 준수하는 방법을 이해하고, 이를 실제 코드에 적용함으로써 객체의 동등성을 쉽게 평가할 수 있습니다. 또한, Hashable을 함께 적용하면 객체를 컬렉션 내에서 효율적으로 다룰 수 있습니다. 이 글에서 제공한 예제를 참고하여 여러분의 프로젝트에 직접 적용해 보세요."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift 개발자를 위한 UIView Equtable 적용 팁","toc":[{"tagName":"h1","title":"Swift 개발자를 위한 UIView Equtable 적용 팁","id":"ca130831"},{"tagName":"h2","title":"Equtable 프로토콜이란?","id":"663d3f38"},{"tagName":"h2","title":"UIView에서 Equtable 적용하기","id":"5de2f62f"},{"tagName":"h3","title":"간단한 예제","id":"e06b7ea3"},{"tagName":"h3","title":"Equtable 적용","id":"e5441bba"},{"tagName":"h3","title":"Hashable 적용","id":"e8ac21bf"},{"tagName":"h2","title":"Equtable의 활용","id":"611c072b"},{"tagName":"h3","title":"배열에서 객체 검색","id":"b318dcbe"},{"tagName":"h3","title":"Set에서 중복 객체 제거","id":"a7c4418f"},{"tagName":"h3","title":"사전의 키로 사용","id":"aaea3668"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
