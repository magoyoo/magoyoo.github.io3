1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","TypeScript%EC%99%80-Nextjs%EC%9D%98-%ED%86%B5%ED%95%A9-%EC%82%AC%EC%9A%A9-%ED%83%80%EC%9E%85-%EC%95%88%EC%A0%95%EC%84%B1%EC%9D%84-%EA%B0%95%ED%99%94%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EC%A0%95%EA%B3%BC-%EA%B0%9C%EB%B0%9C-%ED%8C%81-d0b2a471","d"],{"children":["__PAGE__?{\"slug\":\"TypeScript와-Nextjs의-통합-사용-타입-안정성을-강화하는-프로젝트-설정과-개발-팁-d0b2a471\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","TypeScript%EC%99%80-Nextjs%EC%9D%98-%ED%86%B5%ED%95%A9-%EC%82%AC%EC%9A%A9-%ED%83%80%EC%9E%85-%EC%95%88%EC%A0%95%EC%84%B1%EC%9D%84-%EA%B0%95%ED%99%94%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EC%A0%95%EA%B3%BC-%EA%B0%9C%EB%B0%9C-%ED%8C%81-d0b2a471","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"TypeScript와-Nextjs의-통합-사용-타입-안정성을-강화하는-프로젝트-설정과-개발-팁-d0b2a471\"}"},"styles":[]}],"segment":["slug","TypeScript%EC%99%80-Nextjs%EC%9D%98-%ED%86%B5%ED%95%A9-%EC%82%AC%EC%9A%A9-%ED%83%80%EC%9E%85-%EC%95%88%EC%A0%95%EC%84%B1%EC%9D%84-%EA%B0%95%ED%99%94%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EC%A0%95%EA%B3%BC-%EA%B0%9C%EB%B0%9C-%ED%8C%81-d0b2a471","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"TypeScript와 Next.js의 통합 사용: 타입 안정성을 강화하는 프로젝트 설정과 개발 팁. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"TypeScript와 Next.js를 결합함으로써 타입 안정성을 강화하는 방법에 대해 설명합니다. 프로젝트를 설정하는 법부터 개발 팁까지 다양한 사항들을 다룹니다."}],["$","meta","3",{"name":"keywords","content":"TypeScript,Next.js,타입 안정성,프로젝트 설정"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/TypeScript%EC%99%80-Nextjs%EC%9D%98-%ED%86%B5%ED%95%A9-%EC%82%AC%EC%9A%A9-%ED%83%80%EC%9E%85-%EC%95%88%EC%A0%95%EC%84%B1%EC%9D%84-%EA%B0%95%ED%99%94%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EC%A0%95%EA%B3%BC-%EA%B0%9C%EB%B0%9C-%ED%8C%81-d0b2a471"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"TypeScript와 Next.js의 통합 사용: 타입 안정성을 강화하는 프로젝트 설정과 개발 팁. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"TypeScript와 Next.js의 통합 사용: 타입 안정성을 강화하는 프로젝트 설정과 개발 팁. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"TypeScript와 Next.js를 결합함으로써 타입 안정성을 강화하는 방법에 대해 설명합니다. 프로젝트를 설정하는 법부터 개발 팁까지 다양한 사항들을 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/TypeScript%EC%99%80-Nextjs%EC%9D%98-%ED%86%B5%ED%95%A9-%EC%82%AC%EC%9A%A9-%ED%83%80%EC%9E%85-%EC%95%88%EC%A0%95%EC%84%B1%EC%9D%84-%EA%B0%95%ED%99%94%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EC%A0%95%EA%B3%BC-%EA%B0%9C%EB%B0%9C-%ED%8C%81-d0b2a471"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"TypeScript와 Next.js의 통합 사용: 타입 안정성을 강화하는 프로젝트 설정과 개발 팁. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"TypeScript와 Next.js를 결합함으로써 타입 안정성을 강화하는 방법에 대해 설명합니다. 프로젝트를 설정하는 법부터 개발 팁까지 다양한 사항들을 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"TypeScript와 Next.js의 통합 사용: 타입 안정성을 강화하는 프로젝트 설정과 개발 팁."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"TypeScript와 Next.js의 통합 사용: 타입 안정성을 강화하는 프로젝트 설정과 개발 팁."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-24"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"87f1e6c6","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"TypeScript와 Next.js의 통합 사용: 타입 안정성을 강화하는 프로젝트 설정과 개발 팁"}],"\n",["$","h2",null,{"id":"fa255f0c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"소개"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"TypeScript는 자바스크립트의 슈퍼셋으로, 자바스크립트에 정적 타입을 추가하여 코드의 품질과 유지 보수성을 향상시킵니다. 반면 Next.js는 서버 사이드 렌더링과 정적 사이트 생성을 지원하는 React 프레임워크입니다. 두 기술을 결합하면 더 나은 타입 안정성과 더욱 강력한 웹 애플리케이션을 개발할 수 있습니다. 이 글에서는 TypeScript와 Next.js를 함께 사용하는 프로젝트를 설정하고, 개발 시 유용한 팁들을 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"51b4f343","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"TypeScript와 Next.js 프로젝트 설정"}],"\n",["$","h3",null,{"id":"e79090c6","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"TypeScript 프로젝트 초기 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"먼저, TypeScript와 Next.js를 설정하는 방법을 살펴보겠습니다. Next.js 프로젝트를 TypeScript로 설정하는 것은 매우 간단합니다."}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":"Next.js 프로젝트 생성:"}],"\n"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-bash","node":{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"npx create-next-app my-next-app\ncd my-next-app\n"}],"position":{"start":{"line":13,"column":1,"offset":482},"end":{"line":16,"column":4,"offset":540}}},"children":"npx create-next-app my-next-app\ncd my-next-app\n"}}]}],"\n",["$","ol","ol-1",{"start":2,"children":["\n",["$","li","li-0",{"children":"TypeScript 및 필요한 타입 선언 설치:"}],"\n"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-bash","node":{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"npm install --save-dev typescript @types/react @types/node\n"}],"position":{"start":{"line":19,"column":1,"offset":572},"end":{"line":21,"column":4,"offset":642}}},"children":"npm install --save-dev typescript @types/react @types/node\n"}}]}],"\n",["$","ol","ol-2",{"start":3,"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tsconfig.json","position":{"start":{"line":23,"column":4,"offset":647},"end":{"line":23,"column":19,"offset":662}}}],"position":{"start":{"line":23,"column":4,"offset":647},"end":{"line":23,"column":19,"offset":662}}},"children":"tsconfig.json"}}]," 파일 생성:\nNext.js는 TypeScript 관련 설정 파일을 자동으로 생성합니다. 단순히 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".ts","position":{"start":{"line":24,"column":47,"offset":716},"end":{"line":24,"column":52,"offset":721}}}],"position":{"start":{"line":24,"column":47,"offset":716},"end":{"line":24,"column":52,"offset":721}}},"children":".ts"}}]," 또는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".tsx","position":{"start":{"line":24,"column":56,"offset":725},"end":{"line":24,"column":62,"offset":731}}}],"position":{"start":{"line":24,"column":56,"offset":725},"end":{"line":24,"column":62,"offset":731}}},"children":".tsx"}}]," 확장자를 가진 파일을 프로젝트에 추가하면 됩니다."]}],"\n"]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-bash","node":{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"# 예시로 pages/index.tsx 파일 생성\n"}],"position":{"start":{"line":26,"column":1,"offset":761},"end":{"line":28,"column":4,"offset":800}}},"children":"# 예시로 pages/index.tsx 파일 생성\n"}}]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":["프로젝트를 시작하면 Next.js가 자동으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tsconfig.json","position":{"start":{"line":29,"column":28,"offset":828},"end":{"line":29,"column":43,"offset":843}}}],"position":{"start":{"line":29,"column":28,"offset":828},"end":{"line":29,"column":43,"offset":843}}},"children":"tsconfig.json"}}],"을 생성합니다."]}],"\n"]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-bash","node":{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"npm run dev\n"}],"position":{"start":{"line":30,"column":1,"offset":852},"end":{"line":32,"column":4,"offset":875}}},"children":"npm run dev\n"}}]}],"\n",["$","h3",null,{"id":"09b1294b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"TypeScript 설정 커스터마이징"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["생성된 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tsconfig.json","position":{"start":{"line":35,"column":5,"offset":906},"end":{"line":35,"column":20,"offset":921}}}],"position":{"start":{"line":35,"column":5,"offset":906},"end":{"line":35,"column":20,"offset":921}}},"children":"tsconfig.json"}}]," 파일을 통해 TypeScript 컴파일러의 옵션을 조정할 수 있습니다. 여기에는 strict 모드를 활성화하거나, 특정 파일을 제외하는 등의 설정이 포함됩니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-json","node":{"type":"element","tagName":"code","properties":{"className":["language-json"]},"children":[{"type":"text","value":"{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\"\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\"],\n  \"exclude\": [\"node_modules\"]\n}\n"}],"position":{"start":{"line":36,"column":1,"offset":1012},"end":{"line":56,"column":4,"offset":1507}}},"children":"{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\"\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\"],\n  \"exclude\": [\"node_modules\"]\n}\n"}}]}],"\n",["$","h2",null,{"id":"fdee5e2a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Next.js에서 TypeScript 사용"}],"\n",["$","h3",null,{"id":"0e3da9ba","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"페이지 작성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Next.js에서는 페이지 파일을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pages","position":{"start":{"line":61,"column":20,"offset":1567},"end":{"line":61,"column":27,"offset":1574}}}],"position":{"start":{"line":61,"column":20,"offset":1567},"end":{"line":61,"column":27,"offset":1574}}},"children":"pages"}}]," 디렉터리에 작성합니다. TypeScript 파일을 사용하여 페이지를 작성할 수 있습니다."]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-tsx","node":{"type":"element","tagName":"code","properties":{"className":["language-tsx"]},"children":[{"type":"text","value":"// pages/index.tsx\nimport { NextPage } from 'next';\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\n\nconst Home: NextPage = () => {\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>My Next.js App with TypeScript</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n      </Head>\n      <main className={styles.main}>\n        <h1 className={styles.title}>Welcome to Next.js with TypeScript!</h1>\n      </main>\n    </div>\n  );\n};\n\nexport default Home;\n"}],"position":{"start":{"line":63,"column":1,"offset":1626},"end":{"line":84,"column":4,"offset":2174}}},"children":"// pages/index.tsx\nimport { NextPage } from 'next';\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\n\nconst Home: NextPage = () => {\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>My Next.js App with TypeScript</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n      </Head>\n      <main className={styles.main}>\n        <h1 className={styles.title}>Welcome to Next.js with TypeScript!</h1>\n      </main>\n    </div>\n  );\n};\n\nexport default Home;\n"}}]}],"\n",["$","h3",null,{"id":"b27d4945","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"컴포넌트 작성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Next.js에서 컴포넌트를 작성하는 것도 비슷합니다. 단, 보다 명확한 타입 지원을 위해 인터페이스/타입을 정의할 수 있습니다."}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-tsx","node":{"type":"element","tagName":"code","properties":{"className":["language-tsx"]},"children":[{"type":"text","value":"// components/MyComponent.tsx\nimport { FC } from 'react';\n\ninterface MyComponentProps {\n  text: string;\n}\n\nconst MyComponent: FC<MyComponentProps> = ({ text }) => {\n  return <div>{text}</div>;\n};\n\nexport default MyComponent;\n"}],"position":{"start":{"line":89,"column":1,"offset":2262},"end":{"line":102,"column":4,"offset":2497}}},"children":"// components/MyComponent.tsx\nimport { FC } from 'react';\n\ninterface MyComponentProps {\n  text: string;\n}\n\nconst MyComponent: FC<MyComponentProps> = ({ text }) => {\n  return <div>{text}</div>;\n};\n\nexport default MyComponent;\n"}}]}],"\n",["$","h2",null,{"id":"79444917","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"타입 안정성을 위한 개발 팁"}],"\n",["$","h3",null,{"id":"2499a1a1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"명확한 유형 정의"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"가능한 한 모든 변수와 함수에 타입을 명시적으로 정의하십시오. 이를 통해 코드의 명확성을 높이고, 유지관리성을 향상시킬 수 있습니다."}],"\n",["$","pre","pre-7",{"children":["$","$Ld",null,{"props":{"className":"language-ts","node":{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"const add = (a: number, b: number): number => {\n  return a + b;\n};\n"}],"position":{"start":{"line":109,"column":1,"offset":2609},"end":{"line":113,"column":4,"offset":2685}}},"children":"const add = (a: number, b: number): number => {\n  return a + b;\n};\n"}}]}],"\n",["$","h3",null,{"id":"69112939","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"타입 추론 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"TypeScript의 타입 추론을 적극적으로 활용하여 코드의 중복을 줄이십시오. 그러나, 함수의 반환 타입 등 중요한 부분은 명시한 것이 좋습니다."}],"\n",["$","pre","pre-8",{"children":["$","$Ld",null,{"props":{"className":"language-ts","node":{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"const numbers = [1, 2, 3];\nconst total = numbers.reduce((sum, n) => sum + n, 0); // 타입 추론: number\n"}],"position":{"start":{"line":118,"column":1,"offset":2784},"end":{"line":121,"column":4,"offset":2891}}},"children":"const numbers = [1, 2, 3];\nconst total = numbers.reduce((sum, n) => sum + n, 0); // 타입 추론: number\n"}}]}],"\n",["$","h3",null,{"id":"c1c20dca","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"제네릭 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"재사용 가능한 타입 안정성을 위해 제네릭을 활용하십시오."}],"\n",["$","pre","pre-9",{"children":["$","$Ld",null,{"props":{"className":"language-ts","node":{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"const identity = <T>(arg: T): T => {\n  return arg;\n};\n"}],"position":{"start":{"line":126,"column":1,"offset":2937},"end":{"line":130,"column":4,"offset":3000}}},"children":"const identity = <T>(arg: T): T => {\n  return arg;\n};\n"}}]}],"\n",["$","h3",null,{"id":"a0671d82","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"유틸리티 타입 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["TypeScript는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Partial","position":{"start":{"line":133,"column":13,"offset":3029},"end":{"line":133,"column":22,"offset":3038}}}],"position":{"start":{"line":133,"column":13,"offset":3029},"end":{"line":133,"column":22,"offset":3038}}},"children":"Partial"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Readonly","position":{"start":{"line":133,"column":24,"offset":3040},"end":{"line":133,"column":34,"offset":3050}}}],"position":{"start":{"line":133,"column":24,"offset":3040},"end":{"line":133,"column":34,"offset":3050}}},"children":"Readonly"}}]," 등 다양한 유틸리티 타입을 제공합니다. 이를 활용하여 복잡한 타입 정의를 간단하게 할 수 있습니다."]}],"\n",["$","pre","pre-10",{"children":["$","$Ld",null,{"props":{"className":"language-ts","node":{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"interface User {\n  id: string;\n  name: string;\n  age: number;\n}\n\nconst updateUser = (user: User, updates: Partial<User>): User => {\n  return { ...user, ...updates };\n};\n"}],"position":{"start":{"line":135,"column":1,"offset":3108},"end":{"line":145,"column":4,"offset":3286}}},"children":"interface User {\n  id: string;\n  name: string;\n  age: number;\n}\n\nconst updateUser = (user: User, updates: Partial<User>): User => {\n  return { ...user, ...updates };\n};\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"TypeScript와 Next.js를 결합하여 사용하는 것은 매우 유용합니다. 타입 안정성을 통해 오류를 사전에 방지하고, 코드의 명확성과 유지 관리성을 향상시킬 수 있습니다. 이 글에서 제공한 프로젝트 설정 방법과 개발 팁을 활용하여 더욱 안정적인 웹 애플리케이션을 개발할 수 있기를 바랍니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"TypeScript와 Next.js의 통합 사용: 타입 안정성을 강화하는 프로젝트 설정과 개발 팁.","toc":[{"tagName":"h1","title":"TypeScript와 Next.js의 통합 사용: 타입 안정성을 강화하는 프로젝트 설정과 개발 팁","id":"87f1e6c6"},{"tagName":"h2","title":"소개","id":"fa255f0c"},{"tagName":"h2","title":"TypeScript와 Next.js 프로젝트 설정","id":"51b4f343"},{"tagName":"h3","title":"TypeScript 프로젝트 초기 설정","id":"e79090c6"},{"tagName":"h3","title":"TypeScript 설정 커스터마이징","id":"09b1294b"},{"tagName":"h2","title":"Next.js에서 TypeScript 사용","id":"fdee5e2a"},{"tagName":"h3","title":"페이지 작성","id":"0e3da9ba"},{"tagName":"h3","title":"컴포넌트 작성","id":"b27d4945"},{"tagName":"h2","title":"타입 안정성을 위한 개발 팁","id":"79444917"},{"tagName":"h3","title":"명확한 유형 정의","id":"2499a1a1"},{"tagName":"h3","title":"타입 추론 사용","id":"69112939"},{"tagName":"h3","title":"제네릭 사용","id":"c1c20dca"},{"tagName":"h3","title":"유틸리티 타입 사용","id":"a0671d82"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
