1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%99%80-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%ED%95%98%EA%B8%B0-8076180b","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI-리스트와-데이터-바인딩-간단하게-하기-8076180b\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%99%80-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%ED%95%98%EA%B8%B0-8076180b","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI-리스트와-데이터-바인딩-간단하게-하기-8076180b\"}"},"styles":[]}],"segment":["slug","SwiftUI-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%99%80-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%ED%95%98%EA%B8%B0-8076180b","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI 리스트와 데이터 바인딩 간단하게 하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 SwiftUI를 사용하여 리스트와 데이터 바인딩을 간단하게 구현하는 방법을 다룹니다. SwiftUI의 기본 개념, 리스트의 생성과 관리, 데이터 바인딩의 사용 방법을 소개하고, 예제 코드를 통해 실습할 수 있습니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,리스트,데이터 바인딩,iOS 개발"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%99%80-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%ED%95%98%EA%B8%B0-8076180b"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI 리스트와 데이터 바인딩 간단하게 하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI 리스트와 데이터 바인딩 간단하게 하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 SwiftUI를 사용하여 리스트와 데이터 바인딩을 간단하게 구현하는 방법을 다룹니다. SwiftUI의 기본 개념, 리스트의 생성과 관리, 데이터 바인딩의 사용 방법을 소개하고, 예제 코드를 통해 실습할 수 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%99%80-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%ED%95%98%EA%B8%B0-8076180b"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI 리스트와 데이터 바인딩 간단하게 하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 SwiftUI를 사용하여 리스트와 데이터 바인딩을 간단하게 구현하는 방법을 다룹니다. SwiftUI의 기본 개념, 리스트의 생성과 관리, 데이터 바인딩의 사용 방법을 소개하고, 예제 코드를 통해 실습할 수 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI 리스트와 데이터 바인딩 간단하게 하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI 리스트와 데이터 바인딩 간단하게 하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-25"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"99f374ef","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI 리스트와 데이터 바인딩 간단하게 하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 애플이 2019년 WWDC에서 발표한 새로운 UI 프레임워크로, 선언적 문법을 채택하여 코드 가독성과 유지보수성을 크게 향상시켰습니다. 이 글에서는 SwiftUI를 사용해 리스트를 구현하고, 데이터 바인딩을 통해 리스트의 항목을 간단하게 관리하는 방법을 알아보겠습니다."}],"\n",["$","h2",null,{"id":"9f41f9b8","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 UIKit과 달리 선언적(declarative) 문법을 사용합니다. 선언적 문법이란 화면의 상태를 선언적으로 기술하는 방식을 의미합니다. 예제를 통해 어떻게 SwiftUI에서 리스트와 데이터 바인딩을 사용할 수 있는지 알아보겠습니다."}],"\n",["$","h3",null,{"id":"b6d93314","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"환경 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI 프로젝트를 시작하기 위해 먼저 Xcode에서 새로운 프로젝트를 생성합니다. 템플릿으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App","position":{"start":{"line":12,"column":57,"offset":412},"end":{"line":12,"column":62,"offset":417}}}],"position":{"start":{"line":12,"column":57,"offset":412},"end":{"line":12,"column":62,"offset":417}}},"children":"App"}}],"을 선택하고 SwiftUI를 선택합니다. 프로젝트가 생성되면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ContentView.swift","position":{"start":{"line":12,"column":96,"offset":451},"end":{"line":12,"column":115,"offset":470}}}],"position":{"start":{"line":12,"column":96,"offset":451},"end":{"line":12,"column":115,"offset":470}}},"children":"ContentView.swift"}}]," 파일을 엽니다."]}],"\n",["$","h3",null,{"id":"2d956462","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"데이터 모델 만들기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"리스트에 표시할 데이터를 정의하기 위해 간단한 데이터 모델을 만듭니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct Item: Identifiable {\n    let id = UUID()\n    var name: String\n}\n"}],"position":{"start":{"line":17,"column":1,"offset":537},"end":{"line":22,"column":4,"offset":620}}},"children":"struct Item: Identifiable {\n    let id = UUID()\n    var name: String\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Identifiable","position":{"start":{"line":23,"column":1,"offset":621},"end":{"line":23,"column":15,"offset":635}}}],"position":{"start":{"line":23,"column":1,"offset":621},"end":{"line":23,"column":15,"offset":635}}},"children":"Identifiable"}}]," 프로토콜을 채택하여 리스트 아이템이 고유한 ID를 가지도록 합니다. 이렇게 하면 SwiftUI에서 리스트를 효율적으로 업데이트할 수 있습니다."]}],"\n",["$","h3",null,{"id":"9b50b5ed","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"ViewModel 만들기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI의 데이터 바인딩을 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ObservableObject","position":{"start":{"line":27,"column":22,"offset":757},"end":{"line":27,"column":40,"offset":775}}}],"position":{"start":{"line":27,"column":22,"offset":757},"end":{"line":27,"column":40,"offset":775}}},"children":"ObservableObject"}}]," 프로토콜을 채택한 ViewModel을 만듭니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class ItemListViewModel: ObservableObject {\n    @Published var items: [Item]\n    \n    init() {\n        self.items = [Item(name: \"Item 1\"), Item(name: \"Item 2\"), Item(name: \"Item 3\")]\n    }\n}\n"}],"position":{"start":{"line":28,"column":1,"offset":803},"end":{"line":36,"column":4,"offset":1006}}},"children":"class ItemListViewModel: ObservableObject {\n    @Published var items: [Item]\n    \n    init() {\n        self.items = [Item(name: \"Item 1\"), Item(name: \"Item 2\"), Item(name: \"Item 3\")]\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@Published","position":{"start":{"line":37,"column":1,"offset":1007},"end":{"line":37,"column":13,"offset":1019}}}],"position":{"start":{"line":37,"column":1,"offset":1007},"end":{"line":37,"column":13,"offset":1019}}},"children":"@Published"}}]," 속성 래퍼를 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"items","position":{"start":{"line":37,"column":26,"offset":1032},"end":{"line":37,"column":33,"offset":1039}}}],"position":{"start":{"line":37,"column":26,"offset":1032},"end":{"line":37,"column":33,"offset":1039}}},"children":"items"}}]," 속성이 업데이트될 때마다 UI가 자동으로 갱신되도록 합니다."]}],"\n",["$","h3",null,{"id":"a9ee6bf1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"리스트 생성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ContentView","position":{"start":{"line":41,"column":4,"offset":1090},"end":{"line":41,"column":17,"offset":1103}}}],"position":{"start":{"line":41,"column":4,"offset":1090},"end":{"line":41,"column":17,"offset":1103}}},"children":"ContentView"}}],"에서 리스트를 생성하고, ViewModel을 바인딩해보겠습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    @ObservedObject var viewModel = ItemListViewModel()\n    \n    var body: some View {\n        NavigationView {\n            List(viewModel.items) { item in\n                Text(item.name)\n            }\n            .navigationBarTitle(\"Items\")\n        }\n    }\n}\n"}],"position":{"start":{"line":42,"column":1,"offset":1139},"end":{"line":55,"column":4,"offset":1439}}},"children":"struct ContentView: View {\n    @ObservedObject var viewModel = ItemListViewModel()\n    \n    var body: some View {\n        NavigationView {\n            List(viewModel.items) { item in\n                Text(item.name)\n            }\n            .navigationBarTitle(\"Items\")\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@ObservedObject","position":{"start":{"line":56,"column":1,"offset":1440},"end":{"line":56,"column":18,"offset":1457}}}],"position":{"start":{"line":56,"column":1,"offset":1440},"end":{"line":56,"column":18,"offset":1457}}},"children":"@ObservedObject"}}]," 속성 래퍼를 사용하여 ViewModel을 뷰에 바인딩합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"List","position":{"start":{"line":56,"column":53,"offset":1492},"end":{"line":56,"column":59,"offset":1498}}}],"position":{"start":{"line":56,"column":53,"offset":1492},"end":{"line":56,"column":59,"offset":1498}}},"children":"List"}}]," 뷰를 사용하여 ViewModel의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"items","position":{"start":{"line":56,"column":79,"offset":1518},"end":{"line":56,"column":86,"offset":1525}}}],"position":{"start":{"line":56,"column":79,"offset":1518},"end":{"line":56,"column":86,"offset":1525}}},"children":"items"}}]," 배열을 표시합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NavigationView","position":{"start":{"line":56,"column":98,"offset":1537},"end":{"line":56,"column":114,"offset":1553}}}],"position":{"start":{"line":56,"column":98,"offset":1537},"end":{"line":56,"column":114,"offset":1553}}},"children":"NavigationView"}}],"를 사용하여 내비게이션 제목을 설정합니다."]}],"\n",["$","h2",null,{"id":"a32bfb2c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"데이터 바인딩 활용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 리스트에 새로운 아이템을 추가하고 삭제하는 기능을 추가해보겠습니다."}],"\n",["$","h3",null,{"id":"824988fd","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"아이템 추가"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"리스트에 새로운 아이템을 추가하기 위해 TextField와 Button을 추가합니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    @ObservedObject var viewModel = ItemListViewModel()\n    @State private var newItemName: String = \"\"\n    \n    var body: some View {\n        NavigationView {\n            VStack {\n                HStack {\n                    TextField(\"New Item\", text: $newItemName)\n                    Button(action: {\n                        let newItem = Item(name: newItemName)\n                        viewModel.items.append(newItem)\n                        newItemName = \"\"\n                    }) {\n                        Text(\"Add\")\n                    }\n                }\n                .padding()\n                List(viewModel.items) { item in\n                    Text(item.name)\n                }\n            }\n            .navigationBarTitle(\"Items\")\n        }\n    }\n}\n"}],"position":{"start":{"line":65,"column":1,"offset":1695},"end":{"line":92,"column":4,"offset":2501}}},"children":"struct ContentView: View {\n    @ObservedObject var viewModel = ItemListViewModel()\n    @State private var newItemName: String = \"\"\n    \n    var body: some View {\n        NavigationView {\n            VStack {\n                HStack {\n                    TextField(\"New Item\", text: $newItemName)\n                    Button(action: {\n                        let newItem = Item(name: newItemName)\n                        viewModel.items.append(newItem)\n                        newItemName = \"\"\n                    }) {\n                        Text(\"Add\")\n                    }\n                }\n                .padding()\n                List(viewModel.items) { item in\n                    Text(item.name)\n                }\n            }\n            .navigationBarTitle(\"Items\")\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@State","position":{"start":{"line":93,"column":1,"offset":2502},"end":{"line":93,"column":9,"offset":2510}}}],"position":{"start":{"line":93,"column":1,"offset":2502},"end":{"line":93,"column":9,"offset":2510}}},"children":"@State"}}]," 속성 래퍼를 사용하여 TextField의 입력 값을 관리합니다. Button의 action 클로저에서 새로운 아이템을 생성하고, ViewModel의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"items","position":{"start":{"line":93,"column":93,"offset":2594},"end":{"line":93,"column":100,"offset":2601}}}],"position":{"start":{"line":93,"column":93,"offset":2594},"end":{"line":93,"column":100,"offset":2601}}},"children":"items"}}]," 배열에 추가한 후 TextField를 초기화합니다."]}],"\n",["$","h3",null,{"id":"a60b8847","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"아이템 삭제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"리스트에서 아이템을 삭제할 수 있도록 기능을 추가해보겠습니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"List {\n    ForEach(viewModel.items) { item in\n        Text(item.name)\n    }\n    .onDelete { indexSet in\n        viewModel.items.remove(atOffsets: indexSet)\n    }\n}\n.navigationBarItems(trailing: EditButton())\n"}],"position":{"start":{"line":98,"column":1,"offset":2679},"end":{"line":108,"column":4,"offset":2899}}},"children":"List {\n    ForEach(viewModel.items) { item in\n        Text(item.name)\n    }\n    .onDelete { indexSet in\n        viewModel.items.remove(atOffsets: indexSet)\n    }\n}\n.navigationBarItems(trailing: EditButton())\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ForEach","position":{"start":{"line":109,"column":1,"offset":2900},"end":{"line":109,"column":10,"offset":2909}}}],"position":{"start":{"line":109,"column":1,"offset":2900},"end":{"line":109,"column":10,"offset":2909}}},"children":"ForEach"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onDelete","position":{"start":{"line":109,"column":12,"offset":2911},"end":{"line":109,"column":22,"offset":2921}}}],"position":{"start":{"line":109,"column":12,"offset":2911},"end":{"line":109,"column":22,"offset":2921}}},"children":"onDelete"}}]," modifier를 사용하여 리스트 항목을 삭제할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"navigationBarItems","position":{"start":{"line":109,"column":58,"offset":2957},"end":{"line":109,"column":78,"offset":2977}}}],"position":{"start":{"line":109,"column":58,"offset":2957},"end":{"line":109,"column":78,"offset":2977}}},"children":"navigationBarItems"}}],"에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"EditButton","position":{"start":{"line":109,"column":81,"offset":2980},"end":{"line":109,"column":93,"offset":2992}}}],"position":{"start":{"line":109,"column":81,"offset":2980},"end":{"line":109,"column":93,"offset":2992}}},"children":"EditButton"}}],"을 추가하여 리스트를 편집(삭제)할 수 있도록 합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI를 사용하여 리스트와 데이터 바인딩을 간단하게 구현하는 방법을 알아보았습니다. SwiftUI의 선언적 문법은 코드를 더욱 간결하고 이해하기 쉽게 만들며, 데이터 바인딩을 통해 상태 변화를 UI에 자동으로 반영할 수 있습니다. 더 복잡한 애플리케이션을 구현할 때에도 이러한 기본 개념을 잘 활용하면 많은 도움이 될 것입니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI 리스트와 데이터 바인딩 간단하게 하기","toc":[{"tagName":"h1","title":"SwiftUI 리스트와 데이터 바인딩 간단하게 하기","id":"99f374ef"},{"tagName":"h2","title":"기본 개념","id":"9f41f9b8"},{"tagName":"h3","title":"환경 설정","id":"b6d93314"},{"tagName":"h3","title":"데이터 모델 만들기","id":"2d956462"},{"tagName":"h3","title":"ViewModel 만들기","id":"9b50b5ed"},{"tagName":"h3","title":"리스트 생성","id":"a9ee6bf1"},{"tagName":"h2","title":"데이터 바인딩 활용","id":"a32bfb2c"},{"tagName":"h3","title":"아이템 추가","id":"824988fd"},{"tagName":"h3","title":"아이템 삭제","id":"a60b8847"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
