1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","iOS-%EA%B0%9C%EB%B0%9C-Swift-%ED%81%B4%EB%A1%9C%EC%A0%80%EC%99%80-Nested-Closure-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD-4fb41409","d"],{"children":["__PAGE__?{\"slug\":\"iOS-개발-Swift-클로저와-Nested-Closure-사용-시-주의사항-4fb41409\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","iOS-%EA%B0%9C%EB%B0%9C-Swift-%ED%81%B4%EB%A1%9C%EC%A0%80%EC%99%80-Nested-Closure-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD-4fb41409","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"iOS-개발-Swift-클로저와-Nested-Closure-사용-시-주의사항-4fb41409\"}"},"styles":[]}],"segment":["slug","iOS-%EA%B0%9C%EB%B0%9C-Swift-%ED%81%B4%EB%A1%9C%EC%A0%80%EC%99%80-Nested-Closure-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD-4fb41409","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"iOS 개발: Swift 클로저와 Nested Closure 사용 시 주의사항 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 iOS 개발에서 Swift 클로저와 중첩 클로저의 사용 방법과 주의사항을 다룹니다. 클로저의 기본 개념부터 중첩 클로저의 실용적인 예제와 함께 개발 시 발생할 수 있는 잠재적인 문제들을 설명합니다."}],["$","meta","3",{"name":"keywords","content":"iOS,Swift,클로저,중첩 클로저"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/iOS-%EA%B0%9C%EB%B0%9C-Swift-%ED%81%B4%EB%A1%9C%EC%A0%80%EC%99%80-Nested-Closure-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD-4fb41409"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"iOS 개발: Swift 클로저와 Nested Closure 사용 시 주의사항 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"iOS 개발: Swift 클로저와 Nested Closure 사용 시 주의사항 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 iOS 개발에서 Swift 클로저와 중첩 클로저의 사용 방법과 주의사항을 다룹니다. 클로저의 기본 개념부터 중첩 클로저의 실용적인 예제와 함께 개발 시 발생할 수 있는 잠재적인 문제들을 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/iOS-%EA%B0%9C%EB%B0%9C-Swift-%ED%81%B4%EB%A1%9C%EC%A0%80%EC%99%80-Nested-Closure-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD-4fb41409"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"iOS 개발: Swift 클로저와 Nested Closure 사용 시 주의사항 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 iOS 개발에서 Swift 클로저와 중첩 클로저의 사용 방법과 주의사항을 다룹니다. 클로저의 기본 개념부터 중첩 클로저의 실용적인 예제와 함께 개발 시 발생할 수 있는 잠재적인 문제들을 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"iOS 개발: Swift 클로저와 Nested Closure 사용 시 주의사항"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"iOS 개발: Swift 클로저와 Nested Closure 사용 시 주의사항"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-28"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"566b0c65","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"iOS 개발: Swift 클로저와 Nested Closure 사용 시 주의사항"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서 클로저는 일급 객체이기 때문에 함수, 메서드에서 자유롭게 사용할 수 있습니다. 클로저는 코드에서 반복적으로 사용되는 패턴을 간결하게 표현할 수 있어 코드의 가독성을 높이고 유지보수를 용이하게 합니다. 그러나 강력한 도구인 만큼 올바르게 사용하지 않으면 메모리 누수와 같은 문제를 초래할 수도 있습니다. 이 글에서는 클로저의 기본 개념과 중첩 클로저 사용 시 주의사항에 대해 알아봅니다."}],"\n",["$","h2",null,{"id":"3fd5de8f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"클로저의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"클로저는 자신이 정의된 위치에서 외부의 변수나 상수를 캡처하여 사용하는 코드 블록입니다. Swift에서는 세 가지 종류의 클로저가 있습니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":"Global 함수: 이름이 있고 값을 캡처하지 않습니다."}],"\n",["$","li","li-1",{"children":"Nested 함수: 이름이 있고, 정의된 함수 내부의 값을 캡처할 수 있습니다."}],"\n",["$","li","li-2",{"children":"클로저 표현: 경량 문법으로 작성된 이름 없는 클로저입니다."}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 클로저의 간단한 예제입니다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let simpleClosure = {\n    print(\"Hello, Swift!\")\n}\n\nsimpleClosure() // 출력: Hello, Swift!\n"}],"position":{"start":{"line":15,"column":1,"offset":509},"end":{"line":21,"column":4,"offset":610}}},"children":"let simpleClosure = {\n    print(\"Hello, Swift!\")\n}\n\nsimpleClosure() // 출력: Hello, Swift!\n"}}]}],"\n",["$","h2",null,{"id":"ee5dce2b","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"캡처 목록 (Capture List)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["클로저는 정의된 범위 내의 변수와 상수를 캡처하여 로직 내에서 사용할 수 있습니다. 하지만 클로저가 강한 참조를 일으켜 메모리 누수가 발생할 수 있는 동시성이 존재합니다. 이를 해결하기 위해 Swift는 캡처 목록(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"capture list","position":{"start":{"line":25,"column":121,"offset":757},"end":{"line":25,"column":135,"offset":771}}}],"position":{"start":{"line":25,"column":121,"offset":757},"end":{"line":25,"column":135,"offset":771}}},"children":"capture list"}}],")을 제공합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음 예제는 약한 참조를 사용한 캡처 목록입니다:"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class MyClass {\n    var value = 42\n    func createClosure() -> () -> Void {\n        return { [weak self] in\n            guard let self = self else { return }\n            print(self.value)\n        }\n    }\n}\n"}],"position":{"start":{"line":29,"column":1,"offset":811},"end":{"line":39,"column":4,"offset":1029}}},"children":"class MyClass {\n    var value = 42\n    func createClosure() -> () -> Void {\n        return { [weak self] in\n            guard let self = self else { return }\n            print(self.value)\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":41,"column":5,"offset":1035},"end":{"line":41,"column":18,"offset":1048}}}],"position":{"start":{"line":41,"column":5,"offset":1035},"end":{"line":41,"column":18,"offset":1048}}},"children":"[weak self]"}}],"는 클로저 내에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"self","position":{"start":{"line":41,"column":28,"offset":1058},"end":{"line":41,"column":34,"offset":1064}}}],"position":{"start":{"line":41,"column":28,"offset":1058},"end":{"line":41,"column":34,"offset":1064}}},"children":"self"}}],"를 약한 참조로 사용하겠다는 의미입니다. 이렇게 하면 MyClass 인스턴스가 소멸되었을 때 메모리 누수를 방지할 수 있습니다."]}],"\n",["$","h2",null,{"id":"869ff100","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"중첩 클로저 (Nested Closure)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"중첩 클로저는 클로저 내에 다른 클로저가 정의된 경우를 말합니다. 중첩 클로저는 복잡한 논리를 단순화할 수 있지만, 메모리 관리에 신경을 써야 합니다. 다음은 중첩 클로저의 예제입니다:"}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class AnotherClass {\n    var completionHandlers: [() -> Void] = []\n\n    func performTaskWithNestedClosure() {\n        let taskClosure = {\n            let nestedClosure = {\n                print(\"Nested Closure is executed\")\n            }\n            self.completionHandlers.append(nestedClosure)\n        }\n        taskClosure()\n    }\n}\n\nlet instance = AnotherClass()\ninstance.performTaskWithNestedClosure()\nfor handler in instance.completionHandlers {\n    handler() // 출력: Nested Closure is executed\n}\n"}],"position":{"start":{"line":47,"column":1,"offset":1270},"end":{"line":67,"column":4,"offset":1784}}},"children":"class AnotherClass {\n    var completionHandlers: [() -> Void] = []\n\n    func performTaskWithNestedClosure() {\n        let taskClosure = {\n            let nestedClosure = {\n                print(\"Nested Closure is executed\")\n            }\n            self.completionHandlers.append(nestedClosure)\n        }\n        taskClosure()\n    }\n}\n\nlet instance = AnotherClass()\ninstance.performTaskWithNestedClosure()\nfor handler in instance.completionHandlers {\n    handler() // 출력: Nested Closure is executed\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"taskClosure","position":{"start":{"line":69,"column":8,"offset":1793},"end":{"line":69,"column":21,"offset":1806}}}],"position":{"start":{"line":69,"column":8,"offset":1793},"end":{"line":69,"column":21,"offset":1806}}},"children":"taskClosure"}}],"는 내부에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nestedClosure","position":{"start":{"line":69,"column":27,"offset":1812},"end":{"line":69,"column":42,"offset":1827}}}],"position":{"start":{"line":69,"column":27,"offset":1812},"end":{"line":69,"column":42,"offset":1827}}},"children":"nestedClosure"}}],"를 포함하고 있으며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nestedClosure","position":{"start":{"line":69,"column":54,"offset":1839},"end":{"line":69,"column":69,"offset":1854}}}],"position":{"start":{"line":69,"column":54,"offset":1839},"end":{"line":69,"column":69,"offset":1854}}},"children":"nestedClosure"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"completionHandlers","position":{"start":{"line":69,"column":71,"offset":1856},"end":{"line":69,"column":91,"offset":1876}}}],"position":{"start":{"line":69,"column":71,"offset":1856},"end":{"line":69,"column":91,"offset":1876}}},"children":"completionHandlers"}}]," 배열에 추가됩니다. 이 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"self","position":{"start":{"line":69,"column":107,"offset":1892},"end":{"line":69,"column":113,"offset":1898}}}],"position":{"start":{"line":69,"column":107,"offset":1892},"end":{"line":69,"column":113,"offset":1898}}},"children":"self"}}],"에 강한 참조를 걸어놓으면 메모리 누수가 발생할 수 있습니다. 따라서 약한 참조를 사용하는 것이 좋습니다."]}],"\n",["$","h2",null,{"id":"1f30ea63","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"중첩 클로저 사용 시 주의사항"}],"\n",["$","ol","ol-1",{"children":["\n",["$","li","li-0",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"캡처 목록의 사용"}],": 내부와 외부 클로저에서 강한 참조 순환을 피하기 위해 캡처 목록을 사용하세요. 특히, self와 같은 객체 인스턴스를 캡처할 때 약한 참조(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak","position":{"start":{"line":73,"column":97,"offset":2076},"end":{"line":73,"column":103,"offset":2082}}}],"position":{"start":{"line":73,"column":97,"offset":2076},"end":{"line":73,"column":103,"offset":2082}}},"children":"weak"}}],")나 미소유 참조(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unowned","position":{"start":{"line":73,"column":113,"offset":2092},"end":{"line":73,"column":122,"offset":2101}}}],"position":{"start":{"line":73,"column":113,"offset":2092},"end":{"line":73,"column":122,"offset":2101}}},"children":"unowned"}}],")를 사용하여 메모리 누수를 방지하세요."]}],"\n"]}],"\n",["$","li","li-1",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"비동기 호출에서의 주의"}],": 클로저가 비동기적으로 호출될 때는 캡처된 변수나 상수가 유효한지 확인하세요. 이 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"guard let","position":{"start":{"line":75,"column":69,"offset":2193},"end":{"line":75,"column":80,"offset":2204}}}],"position":{"start":{"line":75,"column":69,"offset":2193},"end":{"line":75,"column":80,"offset":2204}}},"children":"guard let"}}],"과 같은 구문을 사용하여 옵셔널 바인딩을 통해 안전성을 높이세요."]}],"\n"]}],"\n",["$","li","li-2",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"중첩 클로저의 이해"}],": 중첩된 클로저는 코드의 복잡성을 증가시킬 수 있습니다. 가급적 중첩의 깊이를 줄이고, 가능하다면 클로저를 함수로 분리하여 가독성과 유지보수성을 높이세요."]}],"\n"]}],"\n",["$","li","li-3",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"메모리 디버깅 도구 사용"}],": Xcode의 메모리 디버깅 도구를 사용하여 강한 참조 순환 및 메모리 누수를 사전에 점검하세요. Instruments의 Leaks와 Allocations 도구는 매우 유용합니다."]}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift의 클로저는 강력하고 유연한 기능을 제공하지만, 사용 시 주의사항을 지키지 않으면 메모리 누수 등의 문제가 발생할 수 있습니다. 특히 중첩 클로저를 사용할 때는 강한 참조 순환을 방지하기 위해 캡처 목록과 같은 기법을 사용하고, 코드의 가독성과 유지보수를 위해 중첩의 깊이를 최소화하는 것이 중요합니다. 이러한 주의사항을 잘 지켜서 안정적이고 효율적인 iOS 애플리케이션을 개발하시길 바랍니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"iOS 개발: Swift 클로저와 Nested Closure 사용 시 주의사항","toc":[{"tagName":"h1","title":"iOS 개발: Swift 클로저와 Nested Closure 사용 시 주의사항","id":"566b0c65"},{"tagName":"h2","title":"클로저의 기본 개념","id":"3fd5de8f"},{"tagName":"h2","title":"캡처 목록 (Capture List)","id":"ee5dce2b"},{"tagName":"h2","title":"중첩 클로저 (Nested Closure)","id":"869ff100"},{"tagName":"h2","title":"중첩 클로저 사용 시 주의사항","id":"1f30ea63"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
