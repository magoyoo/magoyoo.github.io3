1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","%EC%8A%A4%EC%9C%84%EC%A6%90%EB%A7%81%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%A9%94%EC%86%8C%EB%93%9C-%EA%B5%90%EC%B2%B4-%EA%B8%B0%EB%B2%95-%EC%8A%A4%EC%9C%84%EC%A6%90%EB%A7%81%EC%9D%84-%ED%86%B5%ED%95%B4-%EB%A9%94%EC%86%8C%EB%93%9C%EB%A5%BC-%EC%95%88%EC%A0%84%ED%95%98%EA%B2%8C-%EA%B5%90%EC%B2%B4%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-85a45244","d"],{"children":["__PAGE__?{\"slug\":\"스위즐링을-사용한-메소드-교체-기법-스위즐링을-통해-메소드를-안전하게-교체하는-방법-85a45244\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","%EC%8A%A4%EC%9C%84%EC%A6%90%EB%A7%81%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%A9%94%EC%86%8C%EB%93%9C-%EA%B5%90%EC%B2%B4-%EA%B8%B0%EB%B2%95-%EC%8A%A4%EC%9C%84%EC%A6%90%EB%A7%81%EC%9D%84-%ED%86%B5%ED%95%B4-%EB%A9%94%EC%86%8C%EB%93%9C%EB%A5%BC-%EC%95%88%EC%A0%84%ED%95%98%EA%B2%8C-%EA%B5%90%EC%B2%B4%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-85a45244","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"스위즐링을-사용한-메소드-교체-기법-스위즐링을-통해-메소드를-안전하게-교체하는-방법-85a45244\"}"},"styles":[]}],"segment":["slug","%EC%8A%A4%EC%9C%84%EC%A6%90%EB%A7%81%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%A9%94%EC%86%8C%EB%93%9C-%EA%B5%90%EC%B2%B4-%EA%B8%B0%EB%B2%95-%EC%8A%A4%EC%9C%84%EC%A6%90%EB%A7%81%EC%9D%84-%ED%86%B5%ED%95%B4-%EB%A9%94%EC%86%8C%EB%93%9C%EB%A5%BC-%EC%95%88%EC%A0%84%ED%95%98%EA%B2%8C-%EA%B5%90%EC%B2%B4%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-85a45244","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"스위즐링을 사용한 메소드 교체 기법: 스위즐링을 통해 메소드를 안전하게 교체하는 방법. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift에서 스위즐링을 사용하여 메소드를 안전하게 교체하는 방법을 설명합니다. 스위즐링은 런타임에 메소드 구현을 동적으로 교체하는 강력한 기법으로, 올바르게 사용하면 코드의 기능을 확장하거나 디버깅을 쉽게 할 수 있습니다."}],["$","meta","3",{"name":"keywords","content":"Swift,스위즐링,메소드 교체,런타임"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/%EC%8A%A4%EC%9C%84%EC%A6%90%EB%A7%81%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%A9%94%EC%86%8C%EB%93%9C-%EA%B5%90%EC%B2%B4-%EA%B8%B0%EB%B2%95-%EC%8A%A4%EC%9C%84%EC%A6%90%EB%A7%81%EC%9D%84-%ED%86%B5%ED%95%B4-%EB%A9%94%EC%86%8C%EB%93%9C%EB%A5%BC-%EC%95%88%EC%A0%84%ED%95%98%EA%B2%8C-%EA%B5%90%EC%B2%B4%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-85a45244"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"스위즐링을 사용한 메소드 교체 기법: 스위즐링을 통해 메소드를 안전하게 교체하는 방법. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"스위즐링을 사용한 메소드 교체 기법: 스위즐링을 통해 메소드를 안전하게 교체하는 방법. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift에서 스위즐링을 사용하여 메소드를 안전하게 교체하는 방법을 설명합니다. 스위즐링은 런타임에 메소드 구현을 동적으로 교체하는 강력한 기법으로, 올바르게 사용하면 코드의 기능을 확장하거나 디버깅을 쉽게 할 수 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/%EC%8A%A4%EC%9C%84%EC%A6%90%EB%A7%81%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%A9%94%EC%86%8C%EB%93%9C-%EA%B5%90%EC%B2%B4-%EA%B8%B0%EB%B2%95-%EC%8A%A4%EC%9C%84%EC%A6%90%EB%A7%81%EC%9D%84-%ED%86%B5%ED%95%B4-%EB%A9%94%EC%86%8C%EB%93%9C%EB%A5%BC-%EC%95%88%EC%A0%84%ED%95%98%EA%B2%8C-%EA%B5%90%EC%B2%B4%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-85a45244"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"스위즐링을 사용한 메소드 교체 기법: 스위즐링을 통해 메소드를 안전하게 교체하는 방법. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift에서 스위즐링을 사용하여 메소드를 안전하게 교체하는 방법을 설명합니다. 스위즐링은 런타임에 메소드 구현을 동적으로 교체하는 강력한 기법으로, 올바르게 사용하면 코드의 기능을 확장하거나 디버깅을 쉽게 할 수 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"스위즐링을 사용한 메소드 교체 기법: 스위즐링을 통해 메소드를 안전하게 교체하는 방법."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"스위즐링을 사용한 메소드 교체 기법: 스위즐링을 통해 메소드를 안전하게 교체하는 방법."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-24"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"03973df6","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"스위즐링을 사용한 메소드 교체 기법: 스위즐링을 통해 메소드를 안전하게 교체하는 방법"}],"\n",["$","h2",null,{"id":"8f9384f2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"스위즐링이란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"스위즐링(Swizzling)은 Objective-C와 Swift에서 런타임에 메소드의 구현을 동적으로 교체하는 기법입니다. 이 기술은 주로 메소드의 기능을 확장하거나 디버깅 목적으로 사용됩니다. 예를 들어, 애플리케이션의 특정 동작 전에 로그를 남기거나, 서드 파티 라이브러리를 수정하지 않고 기능을 덧붙이는 경우에 유용합니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서는 Objective-C 런타임을 사용하여 스위즐링을 수행할 수 있으며, 이 과정에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@objc","position":{"start":{"line":8,"column":56,"offset":304},"end":{"line":8,"column":63,"offset":311}}}],"position":{"start":{"line":8,"column":56,"offset":304},"end":{"line":8,"column":63,"offset":311}}},"children":"@objc"}}],"와 같은 어트리뷰트를 사용해야 합니다. 스위즐링은 매우 강력한 기법이지만 잘못 사용하면 예상치 못한 문제가 발생할 수 있으므로 신중하게 사용해야 합니다."]}],"\n",["$","h2",null,{"id":"5e2f09c6","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"스위즐링에 필요한 준비물"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"스위즐링을 시작하기 전에 필요한 몇 가지 필수 요소가 있습니다."}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"Objective-C 런타임에 접근하기 위한 헤더 파일"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import ObjectiveC","position":{"start":{"line":14,"column":40,"offset":492},"end":{"line":14,"column":59,"offset":511}}}],"position":{"start":{"line":14,"column":40,"offset":492},"end":{"line":14,"column":59,"offset":511}}},"children":"import ObjectiveC"}}],"를 통해 Objective-C 런타임 함수들을 사용할 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"메소드를 교체할 클래스"}],": 스위즐링을 적용할 클래스를 결정해야 합니다. 이 클래스는 반드시 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@objc","position":{"start":{"line":15,"column":58,"offset":606},"end":{"line":15,"column":65,"offset":613}}}],"position":{"start":{"line":15,"column":58,"offset":606},"end":{"line":15,"column":65,"offset":613}}},"children":"@objc"}}]," 속성을 가져야 합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"런타임 함수"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"method_exchangeImplementations","position":{"start":{"line":16,"column":16,"offset":642},"end":{"line":16,"column":48,"offset":674}}}],"position":{"start":{"line":16,"column":16,"offset":642},"end":{"line":16,"column":48,"offset":674}}},"children":"method_exchangeImplementations"}}]," 함수 등을 사용하여 메소드 구현을 교체합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"a82f593f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"스위즐링의 기본 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewController","position":{"start":{"line":20,"column":5,"offset":722},"end":{"line":20,"column":23,"offset":740}}}],"position":{"start":{"line":20,"column":5,"offset":722},"end":{"line":20,"column":23,"offset":740}}},"children":"UIViewController"}}]," 클래스의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"viewDidLoad","position":{"start":{"line":20,"column":29,"offset":746},"end":{"line":20,"column":42,"offset":759}}}],"position":{"start":{"line":20,"column":29,"offset":746},"end":{"line":20,"column":42,"offset":759}}},"children":"viewDidLoad"}}]," 메소드를 스위즐링하여 추가 기능을 덧붙이는 예제입니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\nimport ObjectiveC\n\nextension UIViewController {\n    private static let swizzleViewDidLoad: Void = {\n        let originalSelector = #selector(viewDidLoad)\n        let swizzledSelector = #selector(swizzled_viewDidLoad)\n\n        let originalMethod = class_getInstanceMethod(UIViewController.self, originalSelector)\n        let swizzledMethod = class_getInstanceMethod(UIViewController.self, swizzledSelector)\n\n        method_exchangeImplementations(originalMethod!, swizzledMethod!)\n    }()\n\n    @objc func swizzled_viewDidLoad() {\n        self.swizzled_viewDidLoad()\n        // 추가 기능: 로그 출력\n        print(\"viewDidLoad가 호출되었습니다: \\(self)\")\n    }\n}\n\n// 스위즐링 적용\nUIViewController.swizzleViewDidLoad\n"}],"position":{"start":{"line":22,"column":1,"offset":792},"end":{"line":46,"column":4,"offset":1509}}},"children":"import UIKit\nimport ObjectiveC\n\nextension UIViewController {\n    private static let swizzleViewDidLoad: Void = {\n        let originalSelector = #selector(viewDidLoad)\n        let swizzledSelector = #selector(swizzled_viewDidLoad)\n\n        let originalMethod = class_getInstanceMethod(UIViewController.self, originalSelector)\n        let swizzledMethod = class_getInstanceMethod(UIViewController.self, swizzledSelector)\n\n        method_exchangeImplementations(originalMethod!, swizzledMethod!)\n    }()\n\n    @objc func swizzled_viewDidLoad() {\n        self.swizzled_viewDidLoad()\n        // 추가 기능: 로그 출력\n        print(\"viewDidLoad가 호출되었습니다: \\(self)\")\n    }\n}\n\n// 스위즐링 적용\nUIViewController.swizzleViewDidLoad\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewController","position":{"start":{"line":48,"column":7,"offset":1517},"end":{"line":48,"column":25,"offset":1535}}}],"position":{"start":{"line":48,"column":7,"offset":1517},"end":{"line":48,"column":25,"offset":1535}}},"children":"UIViewController"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"viewDidLoad","position":{"start":{"line":48,"column":27,"offset":1537},"end":{"line":48,"column":40,"offset":1550}}}],"position":{"start":{"line":48,"column":27,"offset":1537},"end":{"line":48,"column":40,"offset":1550}}},"children":"viewDidLoad"}}]," 메소드를 스위즐링합니다. 먼저, 원래 메소드와 교체할 메소드를 정의하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"method_exchangeImplementations","position":{"start":{"line":48,"column":82,"offset":1592},"end":{"line":48,"column":114,"offset":1624}}}],"position":{"start":{"line":48,"column":82,"offset":1592},"end":{"line":48,"column":114,"offset":1624}}},"children":"method_exchangeImplementations"}}]," 함수를 사용하여 두 메소드의 구현을 교체합니다. 그런 다음, 원래 구현을 호출하면서 추가 기능을 덧붙입니다."]}],"\n",["$","h2",null,{"id":"a70bb828","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"스위즐링의 주의사항"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"스위즐링을 사용할 때는 몇 가지 주의사항을 고려해야 합니다."}],"\n",["$","ol","ol-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"메소드 충돌 방지"}],": 스위즐링을 통해 교체할 메소드의 이름이 충돌하지 않도록 주의해야 합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"런타임 에러"}],": 잘못된 메소드 간 교체는 런타임 에러를 유발할 수 있습니다. 안전하게 교체하기 위해서는 메소드의 시그니처를 정확히 맞춰야 합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"호환성"}],": 스위즐링은 특정 iOS 버전에서만 지원될 수 있으므로 버전 호환성을 확인해야 합니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"디버깅"}],": 스위즐링된 메소드를 디버깅할 때는 원본 메소드와 스위즐링된 메소드를 정확히 구분해야 합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"a2f72410","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"스위즐링의 실제 사용 사례"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"스위즐링은 다양한 상황에서 유용하게 사용될 수 있습니다. 예를 들어, 사용자 추적 및 분석 도구를 통합하는 경우, 서드 파티 라이브러리의 기본 동작을 수정하는 경우 등이 있습니다. 다음은 앱 내 사용자 이벤트를 로깅하는 예제입니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\nimport ObjectiveC\n\nextension UIButton {\n    private static let swizzleSendAction: Void = {\n        let originalSelector = #selector(sendAction(_:to:for:))\n        let swizzledSelector = #selector(swizzled_sendAction(_:to:for:))\n\n        let originalMethod = class_getInstanceMethod(UIButton.self, originalSelector)\n        let swizzledMethod = class_getInstanceMethod(UIButton.self, swizzledSelector)\n\n        method_exchangeImplementations(originalMethod!, swizzledMethod!)\n    }()\n\n    @objc func swizzled_sendAction(_ action: Selector, to target: Any?, for event: UIEvent?) {\n        // 추가 기능: 로그 출력\n        print(\"UIButton action: \\(action) target: \\(String(describing: target)) for event: \\(String(describing: event))\")\n        self.swizzled_sendAction(action, to: target, for: event)\n    }\n}\n\n// 스위즐링 적용\nUIButton.swizzleSendAction\n"}],"position":{"start":{"line":63,"column":1,"offset":2159},"end":{"line":87,"column":4,"offset":3021}}},"children":"import UIKit\nimport ObjectiveC\n\nextension UIButton {\n    private static let swizzleSendAction: Void = {\n        let originalSelector = #selector(sendAction(_:to:for:))\n        let swizzledSelector = #selector(swizzled_sendAction(_:to:for:))\n\n        let originalMethod = class_getInstanceMethod(UIButton.self, originalSelector)\n        let swizzledMethod = class_getInstanceMethod(UIButton.self, swizzledSelector)\n\n        method_exchangeImplementations(originalMethod!, swizzledMethod!)\n    }()\n\n    @objc func swizzled_sendAction(_ action: Selector, to target: Any?, for event: UIEvent?) {\n        // 추가 기능: 로그 출력\n        print(\"UIButton action: \\(action) target: \\(String(describing: target)) for event: \\(String(describing: event))\")\n        self.swizzled_sendAction(action, to: target, for: event)\n    }\n}\n\n// 스위즐링 적용\nUIButton.swizzleSendAction\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIButton","position":{"start":{"line":89,"column":7,"offset":3029},"end":{"line":89,"column":17,"offset":3039}}}],"position":{"start":{"line":89,"column":7,"offset":3029},"end":{"line":89,"column":17,"offset":3039}}},"children":"UIButton"}}]," 클래스의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sendAction(_:to:for:)","position":{"start":{"line":89,"column":23,"offset":3045},"end":{"line":89,"column":46,"offset":3068}}}],"position":{"start":{"line":89,"column":23,"offset":3045},"end":{"line":89,"column":46,"offset":3068}}},"children":"sendAction(_:to:for:)"}}]," 메소드를 스위즐링하여 버튼 클릭 이벤트를 로깅합니다. 이와 같이 스위즐링을 사용하면 기존 코드를 수정하지 않고도 다양한 기능을 추가할 수 있습니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"스위즐링은 Swift에서 런타임에 메소드의 구현을 동적으로 교체하는 강력한 기법입니다. 이를 통해 기존 코드에 새로운 기능을 덧붙이거나 특정 동작을 추적할 수 있습니다. 그러나 잘못 사용하면 시스템 불안정성을 초래할 수 있으므로 신중하게 사용해야 합니다. 스위즐링을 올바르게 이해하고 적용하면 개발 생산성을 크게 향상시킬 수 있습니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"스위즐링을 사용한 메소드 교체 기법: 스위즐링을 통해 메소드를 안전하게 교체하는 방법.","toc":[{"tagName":"h1","title":"스위즐링을 사용한 메소드 교체 기법: 스위즐링을 통해 메소드를 안전하게 교체하는 방법","id":"03973df6"},{"tagName":"h2","title":"스위즐링이란?","id":"8f9384f2"},{"tagName":"h2","title":"스위즐링에 필요한 준비물","id":"5e2f09c6"},{"tagName":"h2","title":"스위즐링의 기본 예제","id":"a82f593f"},{"tagName":"h2","title":"스위즐링의 주의사항","id":"a70bb828"},{"tagName":"h2","title":"스위즐링의 실제 사용 사례","id":"a2f72410"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
