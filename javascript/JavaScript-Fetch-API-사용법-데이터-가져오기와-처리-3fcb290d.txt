1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","JavaScript-Fetch-API-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0%EC%99%80-%EC%B2%98%EB%A6%AC-3fcb290d","d"],{"children":["__PAGE__?{\"slug\":\"JavaScript-Fetch-API-사용법-데이터-가져오기와-처리-3fcb290d\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","JavaScript-Fetch-API-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0%EC%99%80-%EC%B2%98%EB%A6%AC-3fcb290d","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"JavaScript-Fetch-API-사용법-데이터-가져오기와-처리-3fcb290d\"}"},"styles":[]}],"segment":["slug","JavaScript-Fetch-API-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0%EC%99%80-%EC%B2%98%EB%A6%AC-3fcb290d","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"JavaScript Fetch API 사용법: 데이터 가져오기와 처리 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 JavaScript Fetch API의 사용법에 대해 알아봅니다. 데이터를 가져오고 처리하는 방법을 중심으로 다양한 예제를 통해 Fetch API의 기본적인 사용법부터 심화된 활용 방법까지 자세히 설명합니다."}],["$","meta","3",{"name":"keywords","content":"JavaScript,Fetch API,데이터 처리,비동기 프로그래밍"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/JavaScript-Fetch-API-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0%EC%99%80-%EC%B2%98%EB%A6%AC-3fcb290d"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"JavaScript Fetch API 사용법: 데이터 가져오기와 처리 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"JavaScript Fetch API 사용법: 데이터 가져오기와 처리 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 JavaScript Fetch API의 사용법에 대해 알아봅니다. 데이터를 가져오고 처리하는 방법을 중심으로 다양한 예제를 통해 Fetch API의 기본적인 사용법부터 심화된 활용 방법까지 자세히 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/JavaScript-Fetch-API-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0%EC%99%80-%EC%B2%98%EB%A6%AC-3fcb290d"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"JavaScript Fetch API 사용법: 데이터 가져오기와 처리 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 JavaScript Fetch API의 사용법에 대해 알아봅니다. 데이터를 가져오고 처리하는 방법을 중심으로 다양한 예제를 통해 Fetch API의 기본적인 사용법부터 심화된 활용 방법까지 자세히 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"JavaScript Fetch API 사용법: 데이터 가져오기와 처리"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"JavaScript Fetch API 사용법: 데이터 가져오기와 처리"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-08-04"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"9e5774eb","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"JavaScript Fetch API 사용법: 데이터 가져오기와 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["JavaScript에서 데이터를 가져오고 처리하는 작업은 웹 개발에서 핵심적인 부분입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Fetch API","position":{"start":{"line":4,"column":52,"offset":94},"end":{"line":4,"column":63,"offset":105}}}],"position":{"start":{"line":4,"column":52,"offset":94},"end":{"line":4,"column":63,"offset":105}}},"children":"Fetch API"}}],"는 이러한 작업을 단순화하고, 비동기식으로 데이터를 처리할 수 있도록 도와줍니다. 이 글에서는 Fetch API의 기본 사용법부터 심화된 활용 방법까지 다룹니다."]}],"\n",["$","h2",null,{"id":"1f1fa37f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Fetch API란 무엇인가?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Fetch API는 JavaScript에서 데이터를 네트워크를 통해 비동기적으로 가져오는 표준 방식을 제공합니다. 이는 과거에 많이 사용되던 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"XMLHttpRequest","position":{"start":{"line":8,"column":80,"offset":297},"end":{"line":8,"column":96,"offset":313}}}],"position":{"start":{"line":8,"column":80,"offset":297},"end":{"line":8,"column":96,"offset":313}}},"children":"XMLHttpRequest"}}]," 객체보다 단순하고 가독성이 좋은 방식입니다. Fetch API는 프로미스(promise)를 사용하므로, 콜백 지옥(callback hell)을 피할 수 있는 장점이 있습니다."]}],"\n",["$","h3",null,{"id":"7428b07a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"기본 사용법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Fetch API의 기본 사용법은 매우 간단합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch","position":{"start":{"line":12,"column":30,"offset":454},"end":{"line":12,"column":37,"offset":461}}}],"position":{"start":{"line":12,"column":30,"offset":454},"end":{"line":12,"column":37,"offset":461}}},"children":"fetch"}}]," 함수는 URL을 인자로 받아 데이터를 가져오는 작업을 수행합니다. 그 결과로 얻은 프로미스는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"then","position":{"start":{"line":12,"column":90,"offset":514},"end":{"line":12,"column":96,"offset":520}}}],"position":{"start":{"line":12,"column":90,"offset":514},"end":{"line":12,"column":96,"offset":520}}},"children":"then"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":12,"column":98,"offset":522},"end":{"line":12,"column":105,"offset":529}}}],"position":{"start":{"line":12,"column":98,"offset":522},"end":{"line":12,"column":105,"offset":529}}},"children":"catch"}}]," 메서드를 체이닝하여 처리할 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"fetch('https://api.example.com/data')\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('Error:', error));\n"}],"position":{"start":{"line":14,"column":1,"offset":554},"end":{"line":19,"column":4,"offset":732}}},"children":"fetch('https://api.example.com/data')\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('Error:', error));\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제는 간단한 Fetch API 호출입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch","position":{"start":{"line":21,"column":28,"offset":761},"end":{"line":21,"column":35,"offset":768}}}],"position":{"start":{"line":21,"column":28,"offset":761},"end":{"line":21,"column":35,"offset":768}}},"children":"fetch"}}]," 함수는 URL을 인자로 받아 서버에 요청을 보냅니다. 요청에 대한 응답(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"response","position":{"start":{"line":21,"column":76,"offset":809},"end":{"line":21,"column":86,"offset":819}}}],"position":{"start":{"line":21,"column":76,"offset":809},"end":{"line":21,"column":86,"offset":819}}},"children":"response"}}],")이 오면, 이를 JSON 형태로 변환하고, 변환된 데이터를 콘솔에 출력합니다. 만약 요청 중에 오류가 발생하면, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":21,"column":150,"offset":883},"end":{"line":21,"column":157,"offset":890}}}],"position":{"start":{"line":21,"column":150,"offset":883},"end":{"line":21,"column":157,"offset":890}}},"children":"catch"}}]," 블록에서 오류를 처리합니다."]}],"\n",["$","h2",null,{"id":"1dd815b5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"HTTP 메서드와 헤더 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["기본적으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch","position":{"start":{"line":25,"column":7,"offset":934},"end":{"line":25,"column":14,"offset":941}}}],"position":{"start":{"line":25,"column":7,"offset":934},"end":{"line":25,"column":14,"offset":941}}},"children":"fetch"}}]," 함수는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"GET","position":{"start":{"line":25,"column":19,"offset":946},"end":{"line":25,"column":24,"offset":951}}}],"position":{"start":{"line":25,"column":19,"offset":946},"end":{"line":25,"column":24,"offset":951}}},"children":"GET"}}]," 요청을 보냅니다. 그러나 다른 HTTP 메서드(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"POST","position":{"start":{"line":25,"column":51,"offset":978},"end":{"line":25,"column":57,"offset":984}}}],"position":{"start":{"line":25,"column":51,"offset":978},"end":{"line":25,"column":57,"offset":984}}},"children":"POST"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"PUT","position":{"start":{"line":25,"column":59,"offset":986},"end":{"line":25,"column":64,"offset":991}}}],"position":{"start":{"line":25,"column":59,"offset":986},"end":{"line":25,"column":64,"offset":991}}},"children":"PUT"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DELETE","position":{"start":{"line":25,"column":66,"offset":993},"end":{"line":25,"column":74,"offset":1001}}}],"position":{"start":{"line":25,"column":66,"offset":993},"end":{"line":25,"column":74,"offset":1001}}},"children":"DELETE"}}]," 등)를 사용하여 요청을 보낼 수도 있습니다. 이를 위해서는 두 번째 인자로 옵션 객체를 전달하면 됩니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"fetch('https://api.example.com/data', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({ key: 'value' })\n})\n.then(response => response.json())\n.then(data => console.log(data))\n.catch(error => console.error('Error:', error));\n"}],"position":{"start":{"line":27,"column":1,"offset":1062},"end":{"line":38,"column":4,"offset":1355}}},"children":"fetch('https://api.example.com/data', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({ key: 'value' })\n})\n.then(response => response.json())\n.then(data => console.log(data))\n.catch(error => console.error('Error:', error));\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서 중요한 점은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"body","position":{"start":{"line":40,"column":12,"offset":1368},"end":{"line":40,"column":18,"offset":1374}}}],"position":{"start":{"line":40,"column":12,"offset":1368},"end":{"line":40,"column":18,"offset":1374}}},"children":"body"}}]," 속성에 JSON 데이터를 문자열로 변환하여 전달하는 것입니다. 또한 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"headers","position":{"start":{"line":40,"column":57,"offset":1413},"end":{"line":40,"column":66,"offset":1422}}}],"position":{"start":{"line":40,"column":57,"offset":1413},"end":{"line":40,"column":66,"offset":1422}}},"children":"headers"}}]," 객체를 통해 요청 헤더를 설정할 수 있습니다."]}],"\n",["$","h2",null,{"id":"8488876a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"에러 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["네트워크 요청에서 발생할 수 있는 오류를 적절히 처리하는 것은 매우 중요합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch","position":{"start":{"line":44,"column":46,"offset":1505},"end":{"line":44,"column":53,"offset":1512}}}],"position":{"start":{"line":44,"column":46,"offset":1505},"end":{"line":44,"column":53,"offset":1512}}},"children":"fetch"}}]," 함수는 네트워크 오류뿐만 아니라, HTTP 상태 코드가 200-299의 범위를 벗어날 때도 오류로 간주합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"fetch('https://api.example.com/data')\n  .then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok: ' + response.statusText);\n    }\n    return response.json();\n  })\n  .then(data => console.log(data))\n  .catch(error => console.error('Fetch error:', error));\n"}],"position":{"start":{"line":46,"column":1,"offset":1576},"end":{"line":56,"column":4,"offset":1886}}},"children":"fetch('https://api.example.com/data')\n  .then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok: ' + response.statusText);\n    }\n    return response.json();\n  })\n  .then(data => console.log(data))\n  .catch(error => console.error('Fetch error:', error));\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"response.ok","position":{"start":{"line":58,"column":1,"offset":1888},"end":{"line":58,"column":14,"offset":1901}}}],"position":{"start":{"line":58,"column":1,"offset":1888},"end":{"line":58,"column":14,"offset":1901}}},"children":"response.ok"}}]," 속성은 응답이 성공했는지를 나타냅니다. 성공적이지 않은 경우, 예외를 던져(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"throw","position":{"start":{"line":58,"column":57,"offset":1944},"end":{"line":58,"column":64,"offset":1951}}}],"position":{"start":{"line":58,"column":57,"offset":1944},"end":{"line":58,"column":64,"offset":1951}}},"children":"throw"}}],") 오류를 처리할 수 있습니다."]}],"\n",["$","h2",null,{"id":"62e933c3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"비동기 함수와 Fetch API"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["비동기 함수(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async function","position":{"start":{"line":62,"column":8,"offset":1999},"end":{"line":62,"column":24,"offset":2015}}}],"position":{"start":{"line":62,"column":8,"offset":1999},"end":{"line":62,"column":24,"offset":2015}}},"children":"async function"}}],")와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":62,"column":27,"offset":2018},"end":{"line":62,"column":34,"offset":2025}}}],"position":{"start":{"line":62,"column":27,"offset":2018},"end":{"line":62,"column":34,"offset":2025}}},"children":"await"}}]," 키워드를 사용하면 Fetch API 호출을 보다 간결하게 작성할 수 있습니다. 이 방법은 프로미스 체이닝보다 가독성이 높고, 동기 코드와 유사하게 작동합니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"async function fetchData() {\n  try {\n    const response = await fetch('https://api.example.com/data');\n    if (!response.ok) {\n      throw new Error('Network response was not ok: ' + response.statusText);\n    }\n    const data = await response.json();\n    console.log(data);\n  } catch (error) {\n    console.error('Fetch error:', error);\n  }\n}\n\nfetchData();\n"}],"position":{"start":{"line":64,"column":1,"offset":2116},"end":{"line":79,"column":4,"offset":2489}}},"children":"async function fetchData() {\n  try {\n    const response = await fetch('https://api.example.com/data');\n    if (!response.ok) {\n      throw new Error('Network response was not ok: ' + response.statusText);\n    }\n    const data = await response.json();\n    console.log(data);\n  } catch (error) {\n    console.error('Fetch error:', error);\n  }\n}\n\nfetchData();\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async","position":{"start":{"line":81,"column":1,"offset":2491},"end":{"line":81,"column":8,"offset":2498}}}],"position":{"start":{"line":81,"column":1,"offset":2491},"end":{"line":81,"column":8,"offset":2498}}},"children":"async"}}]," 키워드를 함수 앞에 붙이면 해당 함수는 비동기 함수가 됩니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":81,"column":44,"offset":2534},"end":{"line":81,"column":51,"offset":2541}}}],"position":{"start":{"line":81,"column":44,"offset":2534},"end":{"line":81,"column":51,"offset":2541}}},"children":"await"}}]," 키워드는 프로미스를 기다리게 하며, 프로미스가 해결되면 그 결과를 반환합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"try...catch","position":{"start":{"line":81,"column":96,"offset":2586},"end":{"line":81,"column":109,"offset":2599}}}],"position":{"start":{"line":81,"column":96,"offset":2586},"end":{"line":81,"column":109,"offset":2599}}},"children":"try...catch"}}]," 블록을 사용하여 오류를 잡을 수 있습니다."]}],"\n",["$","h2",null,{"id":"5f33d436","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Fetch API의 고급 기능"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Fetch API는 기본적인 요청과 응답 외에도 다양한 고급 기능을 제공합니다. 여기에서는 일부 유용한 기능들을 살펴보겠습니다."}],"\n",["$","h3",null,{"id":"e5c4a598","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"요청 취소"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Fetch API는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AbortController","position":{"start":{"line":89,"column":12,"offset":2741},"end":{"line":89,"column":29,"offset":2758}}}],"position":{"start":{"line":89,"column":12,"offset":2741},"end":{"line":89,"column":29,"offset":2758}}},"children":"AbortController"}}],"를 사용하여 요청을 취소할 수 있습니다. 이를 통해 사용자가 불필요한 네트워크 요청을 취소하는 기능을 구현할 수 있습니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const controller = new AbortController();\nconst signal = controller.signal;\n\nfetch('https://api.example.com/data', { signal })\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => {\n    if (error.name === 'AbortError') {\n      console.log('Fetch aborted');\n    } else {\n      console.error('Fetch error:', error);\n    }\n  });\n\n// 요청을 취소하려면 다음 코드를 실행합니다.\ncontroller.abort();\n"}],"position":{"start":{"line":91,"column":1,"offset":2828},"end":{"line":108,"column":4,"offset":3256}}},"children":"const controller = new AbortController();\nconst signal = controller.signal;\n\nfetch('https://api.example.com/data', { signal })\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => {\n    if (error.name === 'AbortError') {\n      console.log('Fetch aborted');\n    } else {\n      console.error('Fetch error:', error);\n    }\n  });\n\n// 요청을 취소하려면 다음 코드를 실행합니다.\ncontroller.abort();\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AbortController","position":{"start":{"line":110,"column":1,"offset":3258},"end":{"line":110,"column":18,"offset":3275}}}],"position":{"start":{"line":110,"column":1,"offset":3258},"end":{"line":110,"column":18,"offset":3275}}},"children":"AbortController"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"signal","position":{"start":{"line":110,"column":20,"offset":3277},"end":{"line":110,"column":28,"offset":3285}}}],"position":{"start":{"line":110,"column":20,"offset":3277},"end":{"line":110,"column":28,"offset":3285}}},"children":"signal"}}],"을 통해 fetch 요청과 연결되며, 요청을 취소할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"controller.abort()","position":{"start":{"line":110,"column":59,"offset":3316},"end":{"line":110,"column":79,"offset":3336}}}],"position":{"start":{"line":110,"column":59,"offset":3316},"end":{"line":110,"column":79,"offset":3336}}},"children":"controller.abort()"}}],"를 호출하면 됩니다."]}],"\n",["$","h3",null,{"id":"42a65614","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"타임아웃 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Fetch API는 기본적으로 타임아웃 기능이 내장되어 있지 않습니다. 타임아웃 기능을 추가하려면, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Promise.race","position":{"start":{"line":114,"column":57,"offset":3418},"end":{"line":114,"column":71,"offset":3432}}}],"position":{"start":{"line":114,"column":57,"offset":3418},"end":{"line":114,"column":71,"offset":3432}}},"children":"Promise.race"}}],"를 사용하여 타임아웃 프로미스를 설정할 수 있습니다."]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function fetchWithTimeout(url, timeout = 5000) {\n  return Promise.race([\n    fetch(url),\n    new Promise((_, reject) => \n      setTimeout(() => reject(new Error('Request timed out')), timeout)\n    )\n  ]);\n}\n\nfetchWithTimeout('https://api.example.com/data')\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('Fetch error:', error));\n"}],"position":{"start":{"line":116,"column":1,"offset":3463},"end":{"line":130,"column":4,"offset":3866}}},"children":"function fetchWithTimeout(url, timeout = 5000) {\n  return Promise.race([\n    fetch(url),\n    new Promise((_, reject) => \n      setTimeout(() => reject(new Error('Request timed out')), timeout)\n    )\n  ]);\n}\n\nfetchWithTimeout('https://api.example.com/data')\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('Fetch error:', error));\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위 예제는 5초의 타임아웃을 설정한 fetch 함수를 구현한 것입니다. 주어진 시간 내에 응답이 오지 않으면, 타임아웃 오류를 발생시킵니다."}],"\n",["$","h1",null,{"id":"5b12bcf2","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"JavaScript Fetch API는 네트워크 요청을 다루는 강력한 도구입니다. 이 글에서는 Fetch API의 기본 사용법, HTTP 메서드와 헤더 설정, 에러 처리, 비동기 함수와의 결합, 그리고 고급 기능들에 대해 다루었습니다. Fetch API를 활용하여 더욱 효율적이고 읽기 쉬운 코드를 작성해 보세요."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"JavaScript Fetch API 사용법: 데이터 가져오기와 처리","toc":[{"tagName":"h1","title":"JavaScript Fetch API 사용법: 데이터 가져오기와 처리","id":"9e5774eb"},{"tagName":"h2","title":"Fetch API란 무엇인가?","id":"1f1fa37f"},{"tagName":"h3","title":"기본 사용법","id":"7428b07a"},{"tagName":"h2","title":"HTTP 메서드와 헤더 설정","id":"1dd815b5"},{"tagName":"h2","title":"에러 처리","id":"8488876a"},{"tagName":"h2","title":"비동기 함수와 Fetch API","id":"62e933c3"},{"tagName":"h2","title":"Fetch API의 고급 기능","id":"5f33d436"},{"tagName":"h3","title":"요청 취소","id":"e5c4a598"},{"tagName":"h3","title":"타임아웃 설정","id":"42a65614"},{"tagName":"h1","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
