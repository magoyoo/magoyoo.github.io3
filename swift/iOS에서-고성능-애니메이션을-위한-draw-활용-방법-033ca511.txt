1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","iOS%EC%97%90%EC%84%9C-%EA%B3%A0%EC%84%B1%EB%8A%A5-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98%EC%9D%84-%EC%9C%84%ED%95%9C-draw-%ED%99%9C%EC%9A%A9-%EB%B0%A9%EB%B2%95-033ca511","d"],{"children":["__PAGE__?{\"slug\":\"iOS에서-고성능-애니메이션을-위한-draw-활용-방법-033ca511\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","iOS%EC%97%90%EC%84%9C-%EA%B3%A0%EC%84%B1%EB%8A%A5-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98%EC%9D%84-%EC%9C%84%ED%95%9C-draw-%ED%99%9C%EC%9A%A9-%EB%B0%A9%EB%B2%95-033ca511","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"iOS에서-고성능-애니메이션을-위한-draw-활용-방법-033ca511\"}"},"styles":[]}],"segment":["slug","iOS%EC%97%90%EC%84%9C-%EA%B3%A0%EC%84%B1%EB%8A%A5-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98%EC%9D%84-%EC%9C%84%ED%95%9C-draw-%ED%99%9C%EC%9A%A9-%EB%B0%A9%EB%B2%95-033ca511","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"iOS에서 고성능 애니메이션을 위한 draw(_:) 활용 방법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 iOS 개발에서 고성능 애니메이션을 구현하기 위해 draw(_:) 메서드를 활용하는 방법을 설명합니다. Swift 언어를 사용하여 효율적인 애니메이션 구현 방법을 다루며, 구체적인 코드 예제와 성능 최적화 팁을 제공합니다."}],["$","meta","3",{"name":"keywords","content":"iOS,애니메이션,draw(_:) 사용,Swift"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/iOS%EC%97%90%EC%84%9C-%EA%B3%A0%EC%84%B1%EB%8A%A5-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98%EC%9D%84-%EC%9C%84%ED%95%9C-draw-%ED%99%9C%EC%9A%A9-%EB%B0%A9%EB%B2%95-033ca511"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"iOS에서 고성능 애니메이션을 위한 draw(_:) 활용 방법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"iOS에서 고성능 애니메이션을 위한 draw(_:) 활용 방법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 iOS 개발에서 고성능 애니메이션을 구현하기 위해 draw(_:) 메서드를 활용하는 방법을 설명합니다. Swift 언어를 사용하여 효율적인 애니메이션 구현 방법을 다루며, 구체적인 코드 예제와 성능 최적화 팁을 제공합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/iOS%EC%97%90%EC%84%9C-%EA%B3%A0%EC%84%B1%EB%8A%A5-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98%EC%9D%84-%EC%9C%84%ED%95%9C-draw-%ED%99%9C%EC%9A%A9-%EB%B0%A9%EB%B2%95-033ca511"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"iOS에서 고성능 애니메이션을 위한 draw(_:) 활용 방법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 iOS 개발에서 고성능 애니메이션을 구현하기 위해 draw(_:) 메서드를 활용하는 방법을 설명합니다. Swift 언어를 사용하여 효율적인 애니메이션 구현 방법을 다루며, 구체적인 코드 예제와 성능 최적화 팁을 제공합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"iOS에서 고성능 애니메이션을 위한 draw(_:) 활용 방법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"iOS에서 고성능 애니메이션을 위한 draw(_:) 활용 방법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-19"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"ba2f5803","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"iOS에서 고성능 애니메이션을 위한 draw(_:) 활용 방법"}],"\n",["$","h2",null,{"id":"476966c5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"개요"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIView","position":{"start":{"line":6,"column":1,"offset":46},"end":{"line":6,"column":9,"offset":54}}}],"position":{"start":{"line":6,"column":1,"offset":46},"end":{"line":6,"column":9,"offset":54}}},"children":"UIView"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":6,"column":11,"offset":56},"end":{"line":6,"column":21,"offset":66}}}],"position":{"start":{"line":6,"column":11,"offset":56},"end":{"line":6,"column":21,"offset":66}}},"children":"draw(_:)"}}]," 메서드는 커스텀 드로잉을 가능하게 하여, 고성능 애니메이션을 구현하는 데 매우 유용합니다. 이 글에서는 Swift 언어를 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":6,"column":95,"offset":140},"end":{"line":6,"column":105,"offset":150}}}],"position":{"start":{"line":6,"column":95,"offset":140},"end":{"line":6,"column":105,"offset":150}}},"children":"draw(_:)"}}]," 메서드를 활용한 애니메이션 기법을 소개하며, 성능 최적화를 위한 다양한 팁을 제공합니다. 특히, Core Graphics와 같은 저수준 그래픽 API를 활용해 효율적인 애니메이션을 구현하는 방법을 집중적으로 다룹니다."]}],"\n",["$","h2",null,{"id":"ffdabe33","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"draw(_:) 메서드의 기본 사용법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIView","position":{"start":{"line":10,"column":1,"offset":299},"end":{"line":10,"column":9,"offset":307}}}],"position":{"start":{"line":10,"column":1,"offset":299},"end":{"line":10,"column":9,"offset":307}}},"children":"UIView"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":10,"column":11,"offset":309},"end":{"line":10,"column":21,"offset":319}}}],"position":{"start":{"line":10,"column":11,"offset":309},"end":{"line":10,"column":21,"offset":319}}},"children":"draw(_:)"}}]," 메서드는 서브클래스를 통해 오버라이드하여 사용할 수 있습니다. 이 메서드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CGRect","position":{"start":{"line":10,"column":64,"offset":362},"end":{"line":10,"column":72,"offset":370}}}],"position":{"start":{"line":10,"column":64,"offset":362},"end":{"line":10,"column":72,"offset":370}}},"children":"CGRect"}}]," 파라미터를 받아서, 그 안에 원하는 커스텀 드로잉을 수행합니다. 기본적으로, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":10,"column":116,"offset":414},"end":{"line":10,"column":126,"offset":424}}}],"position":{"start":{"line":10,"column":116,"offset":414},"end":{"line":10,"column":126,"offset":424}}},"children":"draw(_:)"}}]," 메서드는 다음과 같이 정의됩니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class CustomView: UIView {\n    override func draw(_ rect: CGRect) {\n        // 커스텀 드로잉 코드\n        if let context = UIGraphicsGetCurrentContext() {\n            // 그래픽 컨텍스트 설정 및 드로잉\n        }\n    }\n}\n"}],"position":{"start":{"line":12,"column":1,"offset":445},"end":{"line":21,"column":4,"offset":655}}},"children":"class CustomView: UIView {\n    override func draw(_ rect: CGRect) {\n        // 커스텀 드로잉 코드\n        if let context = UIGraphicsGetCurrentContext() {\n            // 그래픽 컨텍스트 설정 및 드로잉\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIGraphicsGetCurrentContext()","position":{"start":{"line":23,"column":5,"offset":661},"end":{"line":23,"column":36,"offset":692}}}],"position":{"start":{"line":23,"column":5,"offset":661},"end":{"line":23,"column":36,"offset":692}}},"children":"UIGraphicsGetCurrentContext()"}}],"를 사용하여 현재 그래픽 컨텍스트를 가져와, 다양한 그래픽 작업을 수행할 수 있습니다."]}],"\n",["$","h2",null,{"id":"a7662823","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"애니메이션을 위한 Core Graphics 활용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":27,"column":1,"offset":773},"end":{"line":27,"column":11,"offset":783}}}],"position":{"start":{"line":27,"column":1,"offset":773},"end":{"line":27,"column":11,"offset":783}}},"children":"draw(_:)"}}]," 메서드를 활용하여 애니메이션을 구현하려면, Core Graphics를 통해 프레임별로 콘텐츠를 그려야 합니다. 다음은 간단한 예제입니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class AnimatedView: UIView {\n    var currentAngle: CGFloat = 0\n\n    override func draw(_ rect: CGRect) {\n        if let context = UIGraphicsGetCurrentContext() {\n            // 배경을 지우기 위해 전체 영역을 클리어\n            context.clear(rect)\n\n            // 변환 설정\n            context.translateBy(x: rect.width / 2, y: rect.height / 2)\n            context.rotate(by: currentAngle)\n\n            // 드로잉할 도형 설정\n            let rectangle = CGRect(x: -50, y: -50, width: 100, height: 100)\n            context.setFillColor(UIColor.red.cgColor)\n            context.fill(rectangle)\n        }\n    }\n\n    func animate() {\n        currentAngle += 0.01\n        setNeedsDisplay() // 화면 갱신\n    }\n}\n"}],"position":{"start":{"line":29,"column":1,"offset":862},"end":{"line":54,"column":4,"offset":1546}}},"children":"class AnimatedView: UIView {\n    var currentAngle: CGFloat = 0\n\n    override func draw(_ rect: CGRect) {\n        if let context = UIGraphicsGetCurrentContext() {\n            // 배경을 지우기 위해 전체 영역을 클리어\n            context.clear(rect)\n\n            // 변환 설정\n            context.translateBy(x: rect.width / 2, y: rect.height / 2)\n            context.rotate(by: currentAngle)\n\n            // 드로잉할 도형 설정\n            let rectangle = CGRect(x: -50, y: -50, width: 100, height: 100)\n            context.setFillColor(UIColor.red.cgColor)\n            context.fill(rectangle)\n        }\n    }\n\n    func animate() {\n        currentAngle += 0.01\n        setNeedsDisplay() // 화면 갱신\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 회전하는 사각형을 그리는 방법을 보여줍니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"currentAngle","position":{"start":{"line":56,"column":34,"offset":1581},"end":{"line":56,"column":48,"offset":1595}}}],"position":{"start":{"line":56,"column":34,"offset":1581},"end":{"line":56,"column":48,"offset":1595}}},"children":"currentAngle"}}]," 변수를 변경하고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setNeedsDisplay()","position":{"start":{"line":56,"column":58,"offset":1605},"end":{"line":56,"column":77,"offset":1624}}}],"position":{"start":{"line":56,"column":58,"offset":1605},"end":{"line":56,"column":77,"offset":1624}}},"children":"setNeedsDisplay()"}}],"를 호출하면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":56,"column":84,"offset":1631},"end":{"line":56,"column":94,"offset":1641}}}],"position":{"start":{"line":56,"column":84,"offset":1631},"end":{"line":56,"column":94,"offset":1641}}},"children":"draw(_:)"}}]," 메서드가 다시 호출되어 업데이트된 상태가 그려집니다."]}],"\n",["$","h2",null,{"id":"ca3f63e9","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"성능 최적화를 위한 팁"}],"\n",["$","h3",null,{"id":"0040420a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 레이어나 서브뷰 사용 지양"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"가능하다면 레이어나 서브뷰를 사용하는 대신, 직접 커스텀 드로잉을 사용하여 성능을 향상시킬 수 있습니다."}],"\n",["$","h3",null,{"id":"1a202ed8","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":["2. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setNeedsDisplay()","position":{"start":{"line":63,"column":8,"offset":1780},"end":{"line":63,"column":27,"offset":1799}}}],"position":{"start":{"line":63,"column":8,"offset":1780},"end":{"line":63,"column":27,"offset":1799}}},"children":"setNeedsDisplay()"}}]," 호출 빈도 제어"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setNeedsDisplay()","position":{"start":{"line":64,"column":1,"offset":1809},"end":{"line":64,"column":20,"offset":1828}}}],"position":{"start":{"line":64,"column":1,"offset":1809},"end":{"line":64,"column":20,"offset":1828}}},"children":"setNeedsDisplay()"}}],"는 호출될 때마다 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":64,"column":30,"offset":1838},"end":{"line":64,"column":40,"offset":1848}}}],"position":{"start":{"line":64,"column":30,"offset":1838},"end":{"line":64,"column":40,"offset":1848}}},"children":"draw(_:)"}}]," 메서드를 재호출합니다. 이는 매우 비용이 큰 연산이므로, 필요할 때만 호출하는 것이 좋습니다."]}],"\n",["$","h3",null,{"id":"f6bbf6ac","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 비동기 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"큰 드로잉 작업은 메인 스레드에서 수행하는 대신, 비동기적으로 처리하여 사용자 인터페이스의 반응성을 높일 수 있습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"DispatchQueue.global(qos: .userInitiated).async {\n    // 큰 드로잉 작업 수행\n    DispatchQueue.main.async {\n        self.setNeedsDisplay()\n    }\n}\n"}],"position":{"start":{"line":69,"column":1,"offset":1985},"end":{"line":76,"column":4,"offset":2136}}},"children":"DispatchQueue.global(qos: .userInitiated).async {\n    // 큰 드로잉 작업 수행\n    DispatchQueue.main.async {\n        self.setNeedsDisplay()\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":80,"column":1,"offset":2145},"end":{"line":80,"column":11,"offset":2155}}}],"position":{"start":{"line":80,"column":1,"offset":2145},"end":{"line":80,"column":11,"offset":2155}}},"children":"draw(_:)"}}]," 메서드를 사용한 고성능 애니메이션 구현은 iOS 개발에서 강력한 도구입니다. Core Graphics를 활용하여 직접 드로잉을 수행하면, 높은 성능의 커스텀 애니메이션을 효율적으로 구현할 수 있습니다. 이러한 방법들은 전반적인 사용자 경험을 향상시키며, 애플리케이션의 성능을 최적화하는 데 크게 기여할 것입니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"iOS에서 고성능 애니메이션을 위한 draw(_:) 활용 방법","toc":[{"tagName":"h1","title":"iOS에서 고성능 애니메이션을 위한 draw(_:) 활용 방법","id":"ba2f5803"},{"tagName":"h2","title":"개요","id":"476966c5"},{"tagName":"h2","title":"draw(_:) 메서드의 기본 사용법","id":"ffdabe33"},{"tagName":"h2","title":"애니메이션을 위한 Core Graphics 활용","id":"a7662823"},{"tagName":"h2","title":"성능 최적화를 위한 팁","id":"ca3f63e9"},{"tagName":"h3","title":"1. 레이어나 서브뷰 사용 지양","id":"0040420a"},{"tagName":"h3","title":"2. ","id":"1a202ed8"},{"tagName":"h3","title":"3. 비동기 처리","id":"f6bbf6ac"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
