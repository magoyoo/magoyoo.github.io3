1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Core-Data%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-SwiftUI-Hashable-%ED%86%B5%ED%95%A9-41687eda","d"],{"children":["__PAGE__?{\"slug\":\"Core-Data와-함께하는-SwiftUI-Hashable-통합-41687eda\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Core-Data%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-SwiftUI-Hashable-%ED%86%B5%ED%95%A9-41687eda","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Core-Data와-함께하는-SwiftUI-Hashable-통합-41687eda\"}"},"styles":[]}],"segment":["slug","Core-Data%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-SwiftUI-Hashable-%ED%86%B5%ED%95%A9-41687eda","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Core Data와 함께하는 SwiftUI Hashable 통합 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 SwiftUI에서 Core Data 및 Hashable 통합을 다룹니다. 두 기술의 원리를 설명하고 이를 효율적으로 활용할 수 있는 방법을 제시합니다. 또한 관련 코드 예제를 통해 이해를 돕습니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,Core Data,Hashable,통합"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Core-Data%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-SwiftUI-Hashable-%ED%86%B5%ED%95%A9-41687eda"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Core Data와 함께하는 SwiftUI Hashable 통합 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Core Data와 함께하는 SwiftUI Hashable 통합 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 SwiftUI에서 Core Data 및 Hashable 통합을 다룹니다. 두 기술의 원리를 설명하고 이를 효율적으로 활용할 수 있는 방법을 제시합니다. 또한 관련 코드 예제를 통해 이해를 돕습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Core-Data%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-SwiftUI-Hashable-%ED%86%B5%ED%95%A9-41687eda"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Core Data와 함께하는 SwiftUI Hashable 통합 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 SwiftUI에서 Core Data 및 Hashable 통합을 다룹니다. 두 기술의 원리를 설명하고 이를 효율적으로 활용할 수 있는 방법을 제시합니다. 또한 관련 코드 예제를 통해 이해를 돕습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner5.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Core Data와 함께하는 SwiftUI Hashable 통합"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Core Data와 함께하는 SwiftUI Hashable 통합"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-08-01"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"06175810","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Core Data와 함께하는 SwiftUI Hashable 통합"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI는 Apple의 최신 사용자 인터페이스 프레임워크로, 선언적 구문을 활용하여 사용자 인터페이스를 빌드할 수 있습니다. Core Data는 애플리케이션의 모델 계층을 관리하는 프레임워크로, 데이터의 영속성을 보장합니다. 이 글에서는 두 기술을 사용하는 방법과 함께, SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":4,"column":165,"offset":204},"end":{"line":4,"column":175,"offset":214}}}],"position":{"start":{"line":4,"column":165,"offset":204},"end":{"line":4,"column":175,"offset":214}}},"children":"Hashable"}}]," 프로토콜을 활용하여 데이터를 효율적으로 관리하는 방법을 설명합니다."]}],"\n",["$","h2",null,{"id":"892c86d4","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Core Data란 무엇인가?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Core Data는 애플리케이션에서 데이터를 관리하고 저장하기 위한 프레임워크입니다. 데이터의 영속성을 보장하며, 객체 그래프를 처리할 수 있습니다. 데이터의 모델 계층을 정의하고, 기본적인 CRUD(Create, Read, Update, Delete) 작업을 쉽게 수행할 수 있도록 도와줍니다. Core Data의 주요 구성 요소는 다음과 같습니다:"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"NSManagedObject"}],": Core Data에 의해 관리되는 객체입니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"NSManagedObjectContext"}],": 객체의 생명 주기를 관리하고, 데이터를 저장소에 커밋하는 역할을 합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"NSPersistentStoreCoordinator"}],": 저수준 영속성 저장소와 연동하는 역할을 합니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"NSPersistentContainer"}],": Core Data 스택을 초기화하고 구성하는 역할을 합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"ae62a2df","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Hashable 프로토콜"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":17,"column":1,"offset":738},"end":{"line":17,"column":11,"offset":748}}}],"position":{"start":{"line":17,"column":1,"offset":738},"end":{"line":17,"column":11,"offset":748}}},"children":"Hashable"}}]," 프로토콜은 객체를 해시 가능한(hashable) 형태로 만들어, 고유한 식별자와 함께 컬렉션에 저장할 수 있게 합니다. 예를 들어, Swift의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Set","position":{"start":{"line":17,"column":93,"offset":830},"end":{"line":17,"column":98,"offset":835}}}],"position":{"start":{"line":17,"column":93,"offset":830},"end":{"line":17,"column":98,"offset":835}}},"children":"Set"}}],"이나 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Dictionary","position":{"start":{"line":17,"column":101,"offset":838},"end":{"line":17,"column":113,"offset":850}}}],"position":{"start":{"line":17,"column":101,"offset":838},"end":{"line":17,"column":113,"offset":850}}},"children":"Dictionary"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":17,"column":115,"offset":852},"end":{"line":17,"column":125,"offset":862}}}],"position":{"start":{"line":17,"column":115,"offset":852},"end":{"line":17,"column":125,"offset":862}}},"children":"Hashable"}}]," 프로토콜을 준수하는 객체를 저장할 수 있습니다. 다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":17,"column":157,"offset":894},"end":{"line":17,"column":167,"offset":904}}}],"position":{"start":{"line":17,"column":157,"offset":894},"end":{"line":17,"column":167,"offset":904}}},"children":"Hashable"}}]," 프로토콜을 준수하는 간단한 예입니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct Person: Hashable {\n    var id: Int\n    var name: String\n}\n"}],"position":{"start":{"line":19,"column":1,"offset":927},"end":{"line":24,"column":4,"offset":1004}}},"children":"struct Person: Hashable {\n    var id: Int\n    var name: String\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":26,"column":1,"offset":1006},"end":{"line":26,"column":11,"offset":1016}}}],"position":{"start":{"line":26,"column":1,"offset":1006},"end":{"line":26,"column":11,"offset":1016}}},"children":"Hashable"}}]," 프로토콜을 준수하기 위해서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"hash(into:)","position":{"start":{"line":26,"column":28,"offset":1033},"end":{"line":26,"column":41,"offset":1046}}}],"position":{"start":{"line":26,"column":28,"offset":1033},"end":{"line":26,"column":41,"offset":1046}}},"children":"hash(into:)"}}]," 메서드를 구현해야 합니다. Swift가 자동으로 synthesizes를 통해 이 메서드를 제공하지만, 사용자가 직접 정의할 수도 있습니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct Person: Hashable {\n    var id: Int\n    var name: String\n\n    func hash(into hasher: inout Hasher) {\n        hasher.combine(id)\n        hasher.combine(name)\n    }\n}\n"}],"position":{"start":{"line":28,"column":1,"offset":1126},"end":{"line":38,"column":4,"offset":1309}}},"children":"struct Person: Hashable {\n    var id: Int\n    var name: String\n\n    func hash(into hasher: inout Hasher) {\n        hasher.combine(id)\n        hasher.combine(name)\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"6fdea873","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"SwiftUI와 Core Data 통합하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 기본적으로 Core Data를 지원하며, 이를 통해 선언적 방식으로 데이터를 관리할 수 있습니다. 다음은 Core Data를 SwiftUI와 함께 사용하는 간단한 예입니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSManagedObject","position":{"start":{"line":44,"column":5,"offset":1450},"end":{"line":44,"column":22,"offset":1467}}}],"position":{"start":{"line":44,"column":5,"offset":1450},"end":{"line":44,"column":22,"offset":1467}}},"children":"NSManagedObject"}}]," 서브 클래스를 생성합니다:"]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import CoreData\n\n@objc(Person)\npublic class Person: NSManagedObject, Identifiable {\n    @NSManaged public var id: UUID\n    @NSManaged public var name: String\n}\n\nextension Person {\n    static func fetchAll() -> NSFetchRequest<Person> {\n        let request: NSFetchRequest<Person> = Person.fetchRequest() as! NSFetchRequest<Person>\n        request.sortDescriptors = [NSSortDescriptor(key: \"name\", ascending: true)]\n        return request\n    }\n}\n"}],"position":{"start":{"line":46,"column":1,"offset":1484},"end":{"line":62,"column":4,"offset":1940}}},"children":"import CoreData\n\n@objc(Person)\npublic class Person: NSManagedObject, Identifiable {\n    @NSManaged public var id: UUID\n    @NSManaged public var name: String\n}\n\nextension Person {\n    static func fetchAll() -> NSFetchRequest<Person> {\n        let request: NSFetchRequest<Person> = Person.fetchRequest() as! NSFetchRequest<Person>\n        request.sortDescriptors = [NSSortDescriptor(key: \"name\", ascending: true)]\n        return request\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음으로 SwiftUI 뷰에서 Core Data를 사용하기 위해 Environment 변수로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"managedObjectContext","position":{"start":{"line":64,"column":53,"offset":1994},"end":{"line":64,"column":75,"offset":2016}}}],"position":{"start":{"line":64,"column":53,"offset":1994},"end":{"line":64,"column":75,"offset":2016}}},"children":"managedObjectContext"}}],"를 주입받습니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\nimport CoreData\n\nstruct ContentView: View {\n    @Environment(\\.managedObjectContext) var managedObjectContext\n    @FetchRequest(fetchRequest: Person.fetchAll()) var people: FetchedResults<Person>\n\n    var body: some View {\n        List {\n            ForEach(people, id: \\ .self) { person in\n                Text(person.name)\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":66,"column":1,"offset":2027},"end":{"line":82,"column":4,"offset":2411}}},"children":"import SwiftUI\nimport CoreData\n\nstruct ContentView: View {\n    @Environment(\\.managedObjectContext) var managedObjectContext\n    @FetchRequest(fetchRequest: Person.fetchAll()) var people: FetchedResults<Person>\n\n    var body: some View {\n        List {\n            ForEach(people, id: \\ .self) { person in\n                Text(person.name)\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["뷰가 로드될 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@FetchRequest","position":{"start":{"line":84,"column":10,"offset":2422},"end":{"line":84,"column":25,"offset":2437}}}],"position":{"start":{"line":84,"column":10,"offset":2422},"end":{"line":84,"column":25,"offset":2437}}},"children":"@FetchRequest"}}]," 어트리뷰트는 전달받은 NSFetchRequest를 사용하여 데이터를 가져옵니다."]}],"\n",["$","h2",null,{"id":"7bcaa4b2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"SwiftUI에서 Hashable 객체와 Core Data 통합"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI는 일반적으로 데이터를 식별하고 추적하기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Identifiable","position":{"start":{"line":88,"column":34,"offset":2557},"end":{"line":88,"column":48,"offset":2571}}}],"position":{"start":{"line":88,"column":34,"offset":2557},"end":{"line":88,"column":48,"offset":2571}}},"children":"Identifiable"}}]," 프로토콜을 사용합니다. 그러나 데이터가 중복되거나, 고유 식별자가 필요 없을 때는 대신 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":88,"column":98,"offset":2621},"end":{"line":88,"column":108,"offset":2631}}}],"position":{"start":{"line":88,"column":98,"offset":2621},"end":{"line":88,"column":108,"offset":2631}}},"children":"Hashable"}}]," 프로토콜을 사용하여 객체를 해시 가능한 형태로 만들어야 할 수도 있습니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음은 실질적으로 SwiftUI와 Core Data를 통합하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":90,"column":37,"offset":2711},"end":{"line":90,"column":47,"offset":2721}}}],"position":{"start":{"line":90,"column":37,"offset":2711},"end":{"line":90,"column":47,"offset":2721}}},"children":"Hashable"}}]," 프로토콜을 적용한 예입니다:"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"먼저 모델 클래스를 업데이트합니다:"}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import CoreData\n\n@objc(Person)\npublic class Person: NSManagedObject, Identifiable, Hashable {\n    @NSManaged public var id: UUID\n    @NSManaged public var name: String\n\n    public static func == (lhs: Person, rhs: Person) -> Bool {\n        return lhs.id == rhs.id\n    }\n\n    public func hash(into hasher: inout Hasher) {\n        hasher.combine(id)\n    }\n}\n"}],"position":{"start":{"line":94,"column":1,"offset":2760},"end":{"line":110,"column":4,"offset":3128}}},"children":"import CoreData\n\n@objc(Person)\npublic class Person: NSManagedObject, Identifiable, Hashable {\n    @NSManaged public var id: UUID\n    @NSManaged public var name: String\n\n    public static func == (lhs: Person, rhs: Person) -> Bool {\n        return lhs.id == rhs.id\n    }\n\n    public func hash(into hasher: inout Hasher) {\n        hasher.combine(id)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Person","position":{"start":{"line":112,"column":4,"offset":3133},"end":{"line":112,"column":12,"offset":3141}}}],"position":{"start":{"line":112,"column":4,"offset":3133},"end":{"line":112,"column":12,"offset":3141}}},"children":"Person"}}]," 객체는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":112,"column":17,"offset":3146},"end":{"line":112,"column":27,"offset":3156}}}],"position":{"start":{"line":112,"column":17,"offset":3146},"end":{"line":112,"column":27,"offset":3156}}},"children":"Hashable"}}]," 및 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Identifiable","position":{"start":{"line":112,"column":30,"offset":3159},"end":{"line":112,"column":44,"offset":3173}}}],"position":{"start":{"line":112,"column":30,"offset":3159},"end":{"line":112,"column":44,"offset":3173}}},"children":"Identifiable"}}]," 프로토콜을 모두 준수하므로, SwiftUI에서 이를 사용할 수 있습니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음으로 SwiftUI 뷰를 업데이트하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":114,"column":24,"offset":3239},"end":{"line":114,"column":34,"offset":3249}}}],"position":{"start":{"line":114,"column":24,"offset":3239},"end":{"line":114,"column":34,"offset":3249}}},"children":"Hashable"}}]," 객체를 처리합니다:"]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\nimport CoreData\n\nstruct ContentView: View {\n    @Environment(\\.managedObjectContext) var managedObjectContext\n    @FetchRequest(fetchRequest: Person.fetchAll()) var people: FetchedResults<Person>\n\n    var body: some View {\n        List(people) { person in\n            Text(person.name)\n        }\n    }\n}\n"}],"position":{"start":{"line":116,"column":1,"offset":3262},"end":{"line":130,"column":4,"offset":3593}}},"children":"import SwiftUI\nimport CoreData\n\nstruct ContentView: View {\n    @Environment(\\.managedObjectContext) var managedObjectContext\n    @FetchRequest(fetchRequest: Person.fetchAll()) var people: FetchedResults<Person>\n\n    var body: some View {\n        List(people) { person in\n            Text(person.name)\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 SwiftUI는 데이터를 추적하고, 중복된 항목을 효율적으로 관리할 수 있습니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 글에서는 SwiftUI에서 Core Data와 Hashable 프로토콜을 통합하는 방법을 설명했습니다. Core Data는 데이터의 영속성을 보장하고, Hashable 프로토콜은 객체를 효율적으로 관리할 수 있도록 도와줍니다. 이러한 통합을 통해 더 나은 성능과 데이터 관리를 이룰 수 있습니다. 이를 통해 SwiftUI 애플리케이션에서 보다 효율적이고 안정적인 데이터 관리가 가능해집니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Core Data와 함께하는 SwiftUI Hashable 통합","toc":[{"tagName":"h1","title":"Core Data와 함께하는 SwiftUI Hashable 통합","id":"06175810"},{"tagName":"h2","title":"Core Data란 무엇인가?","id":"892c86d4"},{"tagName":"h2","title":"Hashable 프로토콜","id":"ae62a2df"},{"tagName":"h2","title":"SwiftUI와 Core Data 통합하기","id":"6fdea873"},{"tagName":"h2","title":"SwiftUI에서 Hashable 객체와 Core Data 통합","id":"7bcaa4b2"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
