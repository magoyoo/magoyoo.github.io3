1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift%EC%9D%98-%EC%98%88%EC%99%B8-%EC%B2%98%EB%A6%AC-%EC%A0%84%EB%9E%B5-throw-try-catch%EB%A1%9C-%EC%95%88%EC%A0%95%EC%84%B1-%ED%96%A5%EC%83%81-1fb91fc4","d"],{"children":["__PAGE__?{\"slug\":\"Swift의-예외-처리-전략-throw-try-catch로-안정성-향상-1fb91fc4\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift%EC%9D%98-%EC%98%88%EC%99%B8-%EC%B2%98%EB%A6%AC-%EC%A0%84%EB%9E%B5-throw-try-catch%EB%A1%9C-%EC%95%88%EC%A0%95%EC%84%B1-%ED%96%A5%EC%83%81-1fb91fc4","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift의-예외-처리-전략-throw-try-catch로-안정성-향상-1fb91fc4\"}"},"styles":[]}],"segment":["slug","Swift%EC%9D%98-%EC%98%88%EC%99%B8-%EC%B2%98%EB%A6%AC-%EC%A0%84%EB%9E%B5-throw-try-catch%EB%A1%9C-%EC%95%88%EC%A0%95%EC%84%B1-%ED%96%A5%EC%83%81-1fb91fc4","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift의 예외 처리 전략: throw, try, catch로 안정성 향상 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift 언어에서 예외 처리를 어떻게 구현하는지, 그리고 throw, try, catch 기법을 통해 코드의 안정성을 높이는 방법을 다룹니다. Swift의 예외 처리 기법은 개발자들이 오류를 효과적으로 관리하고 애플리케이션의 안정성을 높이는 데 중요한 역할을 합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,예외 처리,안정성,에러 핸들링"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift%EC%9D%98-%EC%98%88%EC%99%B8-%EC%B2%98%EB%A6%AC-%EC%A0%84%EB%9E%B5-throw-try-catch%EB%A1%9C-%EC%95%88%EC%A0%95%EC%84%B1-%ED%96%A5%EC%83%81-1fb91fc4"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift의 예외 처리 전략: throw, try, catch로 안정성 향상 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift의 예외 처리 전략: throw, try, catch로 안정성 향상 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift 언어에서 예외 처리를 어떻게 구현하는지, 그리고 throw, try, catch 기법을 통해 코드의 안정성을 높이는 방법을 다룹니다. Swift의 예외 처리 기법은 개발자들이 오류를 효과적으로 관리하고 애플리케이션의 안정성을 높이는 데 중요한 역할을 합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift%EC%9D%98-%EC%98%88%EC%99%B8-%EC%B2%98%EB%A6%AC-%EC%A0%84%EB%9E%B5-throw-try-catch%EB%A1%9C-%EC%95%88%EC%A0%95%EC%84%B1-%ED%96%A5%EC%83%81-1fb91fc4"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift의 예외 처리 전략: throw, try, catch로 안정성 향상 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift 언어에서 예외 처리를 어떻게 구현하는지, 그리고 throw, try, catch 기법을 통해 코드의 안정성을 높이는 방법을 다룹니다. Swift의 예외 처리 기법은 개발자들이 오류를 효과적으로 관리하고 애플리케이션의 안정성을 높이는 데 중요한 역할을 합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift의 예외 처리 전략: throw, try, catch로 안정성 향상"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift의 예외 처리 전략: throw, try, catch로 안정성 향상"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-14"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"e47a8747","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift의 예외 처리 전략: throw, try, catch로 안정성 향상"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift는 현대적인 프로그래밍 언어로, 안전성과 성능에 중점을 두고 설계되었습니다. 그 중 하나가 예외 처리입니다. 예외 처리는 프로그램 실행 중 발생할 수 있는 오류 상황을 효과적으로 관리하고 대처하는 방법을 제공합니다. 이 글에서는 Swift에서 예외 처리를 어떻게 구현하는지, 그리고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"throw","position":{"start":{"line":4,"column":164,"offset":210},"end":{"line":4,"column":171,"offset":217}}}],"position":{"start":{"line":4,"column":164,"offset":210},"end":{"line":4,"column":171,"offset":217}}},"children":"throw"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"try","position":{"start":{"line":4,"column":173,"offset":219},"end":{"line":4,"column":178,"offset":224}}}],"position":{"start":{"line":4,"column":173,"offset":219},"end":{"line":4,"column":178,"offset":224}}},"children":"try"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":4,"column":180,"offset":226},"end":{"line":4,"column":187,"offset":233}}}],"position":{"start":{"line":4,"column":180,"offset":226},"end":{"line":4,"column":187,"offset":233}}},"children":"catch"}}]," 기법을 통해 코드의 안정성을 높이는 방법을 다룹니다."]}],"\n",["$","h2",null,{"id":"a363da33","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"예외 처리의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["예외 처리라고 하면 오류가 발생했을 때 이를 적절히 처리하여 시스템 안정성을 높이는 것을 의미합니다. Swift에서는 예외 처리를 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"throw","position":{"start":{"line":8,"column":77,"offset":358},"end":{"line":8,"column":84,"offset":365}}}],"position":{"start":{"line":8,"column":77,"offset":358},"end":{"line":8,"column":84,"offset":365}}},"children":"throw"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"try","position":{"start":{"line":8,"column":86,"offset":367},"end":{"line":8,"column":91,"offset":372}}}],"position":{"start":{"line":8,"column":86,"offset":367},"end":{"line":8,"column":91,"offset":372}}},"children":"try"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":8,"column":93,"offset":374},"end":{"line":8,"column":100,"offset":381}}}],"position":{"start":{"line":8,"column":93,"offset":374},"end":{"line":8,"column":100,"offset":381}}},"children":"catch"}}],"를 사용합니다. 이들 키워드는 특정 조건 하에서 오류를 던지거나, 그 오류를 잡아내어 처리하는 데 사용됩니다."]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"throw","position":{"start":{"line":10,"column":3,"offset":446},"end":{"line":10,"column":10,"offset":453}}}],"position":{"start":{"line":10,"column":3,"offset":446},"end":{"line":10,"column":10,"offset":453}}},"children":"throw"}}],": 오류를 발생시키는 데 사용됩니다."]}],"\n",["$","li","li-1",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"try","position":{"start":{"line":11,"column":3,"offset":476},"end":{"line":11,"column":8,"offset":481}}}],"position":{"start":{"line":11,"column":3,"offset":476},"end":{"line":11,"column":8,"offset":481}}},"children":"try"}}],": 오류가 발생할 수 있는 코드를 실행할 때 사용됩니다."]}],"\n",["$","li","li-2",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":12,"column":3,"offset":515},"end":{"line":12,"column":10,"offset":522}}}],"position":{"start":{"line":12,"column":3,"offset":515},"end":{"line":12,"column":10,"offset":522}}},"children":"catch"}}],": 발생한 오류를 잡아내어 처리하는 데 사용됩니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 이들 키워드를 실제 예제를 통해 알아보겠습니다."}],"\n",["$","h2",null,{"id":"da39a3ee","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"throw","position":{"start":{"line":16,"column":4,"offset":586},"end":{"line":16,"column":11,"offset":593}}}],"position":{"start":{"line":16,"column":4,"offset":586},"end":{"line":16,"column":11,"offset":593}}},"children":"throw"}}]," 키워드를 사용한 오류 발생"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"throw","position":{"start":{"line":18,"column":4,"offset":613},"end":{"line":18,"column":11,"offset":620}}}],"position":{"start":{"line":18,"column":4,"offset":613},"end":{"line":18,"column":11,"offset":620}}},"children":"throw"}}]," 키워드를 사용하여 오류를 발생시키는 방법을 살펴보겠습니다. Swift에서는 오류를 나타내는 열거형 타입을 정의하고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"throw","position":{"start":{"line":18,"column":76,"offset":685},"end":{"line":18,"column":83,"offset":692}}}],"position":{"start":{"line":18,"column":76,"offset":685},"end":{"line":18,"column":83,"offset":692}}},"children":"throw"}}],"를 사용하여 오류를 던질 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"enum FileError: Error {\n    case fileNotFound\n    case unreadable\n    case encodingFailed\n}\n\nfunc readFile(at path: String) throws -> String {\n    guard fileExists(at: path) else {\n        throw FileError.fileNotFound\n    }\n\n    // 파일 읽기 로직\n    return \"File Content\"\n}\n"}],"position":{"start":{"line":20,"column":1,"offset":715},"end":{"line":35,"column":4,"offset":996}}},"children":"enum FileError: Error {\n    case fileNotFound\n    case unreadable\n    case encodingFailed\n}\n\nfunc readFile(at path: String) throws -> String {\n    guard fileExists(at: path) else {\n        throw FileError.fileNotFound\n    }\n\n    // 파일 읽기 로직\n    return \"File Content\"\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FileError","position":{"start":{"line":37,"column":8,"offset":1005},"end":{"line":37,"column":19,"offset":1016}}}],"position":{"start":{"line":37,"column":8,"offset":1005},"end":{"line":37,"column":19,"offset":1016}}},"children":"FileError"}}],"라는 열거형을 정의하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"readFile(at:)","position":{"start":{"line":37,"column":33,"offset":1030},"end":{"line":37,"column":48,"offset":1045}}}],"position":{"start":{"line":37,"column":33,"offset":1030},"end":{"line":37,"column":48,"offset":1045}}},"children":"readFile(at:)"}}]," 함수에서 특정 조건을 만족하지 않을 경우 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"throw FileError.fileNotFound","position":{"start":{"line":37,"column":72,"offset":1069},"end":{"line":37,"column":102,"offset":1099}}}],"position":{"start":{"line":37,"column":72,"offset":1069},"end":{"line":37,"column":102,"offset":1099}}},"children":"throw FileError.fileNotFound"}}],"를 사용해 오류를 던집니다."]}],"\n",["$","h2",null,{"id":"da39a3ee","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"try","position":{"start":{"line":39,"column":4,"offset":1119},"end":{"line":39,"column":9,"offset":1124}}}],"position":{"start":{"line":39,"column":4,"offset":1119},"end":{"line":39,"column":9,"offset":1124}}},"children":"try"}}]," 키워드를 사용한 오류 처리"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"try","position":{"start":{"line":41,"column":1,"offset":1141},"end":{"line":41,"column":6,"offset":1146}}}],"position":{"start":{"line":41,"column":1,"offset":1141},"end":{"line":41,"column":6,"offset":1146}}},"children":"try"}}]," 키워드는 오류가 발생할 수 있는 코드를 실행할 때 사용됩니다. 이 키워드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"do-catch","position":{"start":{"line":41,"column":49,"offset":1189},"end":{"line":41,"column":59,"offset":1199}}}],"position":{"start":{"line":41,"column":49,"offset":1189},"end":{"line":41,"column":59,"offset":1199}}},"children":"do-catch"}}]," 블록 내에서 사용되며, 오류가 발생할 수 있는 코드가 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"try","position":{"start":{"line":41,"column":90,"offset":1230},"end":{"line":41,"column":95,"offset":1235}}}],"position":{"start":{"line":41,"column":90,"offset":1230},"end":{"line":41,"column":95,"offset":1235}}},"children":"try"}}]," 키워드로 시작하는 것이 일반적입니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"do {\n    let content = try readFile(at: \"/path/to/file\")\n    print(content)\n} catch FileError.fileNotFound {\n    print(\"File not found.\")\n} catch FileError.unreadable {\n    print(\"File is unreadable.\")\n} catch FileError.encodingFailed {\n    print(\"File encoding failed.\")\n} catch {\n    print(\"An unknown error occurred.\")\n}\n"}],"position":{"start":{"line":43,"column":1,"offset":1258},"end":{"line":56,"column":4,"offset":1594}}},"children":"do {\n    let content = try readFile(at: \"/path/to/file\")\n    print(content)\n} catch FileError.fileNotFound {\n    print(\"File not found.\")\n} catch FileError.unreadable {\n    print(\"File is unreadable.\")\n} catch FileError.encodingFailed {\n    print(\"File encoding failed.\")\n} catch {\n    print(\"An unknown error occurred.\")\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"readFile(at:)","position":{"start":{"line":58,"column":8,"offset":1603},"end":{"line":58,"column":23,"offset":1618}}}],"position":{"start":{"line":58,"column":8,"offset":1603},"end":{"line":58,"column":23,"offset":1618}}},"children":"readFile(at:)"}}]," 함수는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"try","position":{"start":{"line":58,"column":28,"offset":1623},"end":{"line":58,"column":33,"offset":1628}}}],"position":{"start":{"line":58,"column":28,"offset":1623},"end":{"line":58,"column":33,"offset":1628}}},"children":"try"}}]," 키워드를 사용해 호출됩니다. 만약 오류가 발생하면, 해당 오류에 맞는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":58,"column":73,"offset":1668},"end":{"line":58,"column":80,"offset":1675}}}],"position":{"start":{"line":58,"column":73,"offset":1668},"end":{"line":58,"column":80,"offset":1675}}},"children":"catch"}}]," 블록이 실행됩니다."]}],"\n",["$","h2",null,{"id":"da39a3ee","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":60,"column":4,"offset":1691},"end":{"line":60,"column":11,"offset":1698}}}],"position":{"start":{"line":60,"column":4,"offset":1691},"end":{"line":60,"column":11,"offset":1698}}},"children":"catch"}}]," 블록"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":62,"column":1,"offset":1703},"end":{"line":62,"column":8,"offset":1710}}}],"position":{"start":{"line":62,"column":1,"offset":1703},"end":{"line":62,"column":8,"offset":1710}}},"children":"catch"}}]," 블록은 발생한 오류를 처리하는 부분입니다. Swift의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":62,"column":40,"offset":1742},"end":{"line":62,"column":47,"offset":1749}}}],"position":{"start":{"line":62,"column":40,"offset":1742},"end":{"line":62,"column":47,"offset":1749}}},"children":"catch"}}]," 블록은 다양한 오류를 처리할 수 있도록 여러 개의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":62,"column":76,"offset":1778},"end":{"line":62,"column":83,"offset":1785}}}],"position":{"start":{"line":62,"column":76,"offset":1778},"end":{"line":62,"column":83,"offset":1785}}},"children":"catch"}}]," 절을 사용할 수 있습니다. 오류는 구체적으로 처리되며, 각 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":62,"column":117,"offset":1819},"end":{"line":62,"column":124,"offset":1826}}}],"position":{"start":{"line":62,"column":117,"offset":1819},"end":{"line":62,"column":124,"offset":1826}}},"children":"catch"}}]," 절은 특정 오류 타입을 캡쳐할 수 있습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"do {\n    let content = try readFile(at: \"/invalid/path\")\n    print(content)\n} catch FileError.fileNotFound {\n    print(\"File not found.\")\n} catch FileError.unreadable {\n    print(\"File is unreadable.\")\n} catch FileError.encodingFailed {\n    print(\"File encoding failed.\")\n} catch {\n    print(\"An unknown error occurred.\")\n}\n"}],"position":{"start":{"line":64,"column":1,"offset":1853},"end":{"line":77,"column":4,"offset":2189}}},"children":"do {\n    let content = try readFile(at: \"/invalid/path\")\n    print(content)\n} catch FileError.fileNotFound {\n    print(\"File not found.\")\n} catch FileError.unreadable {\n    print(\"File is unreadable.\")\n} catch FileError.encodingFailed {\n    print(\"File encoding failed.\")\n} catch {\n    print(\"An unknown error occurred.\")\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서는 파일 경로가 유효하지 않기 때문에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FileError.fileNotFound","position":{"start":{"line":79,"column":28,"offset":2218},"end":{"line":79,"column":52,"offset":2242}}}],"position":{"start":{"line":79,"column":28,"offset":2218},"end":{"line":79,"column":52,"offset":2242}}},"children":"FileError.fileNotFound"}}]," 오류가 발생하고, 해당 오류를 처리하는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":79,"column":75,"offset":2265},"end":{"line":79,"column":82,"offset":2272}}}],"position":{"start":{"line":79,"column":75,"offset":2265},"end":{"line":79,"column":82,"offset":2272}}},"children":"catch"}}]," 블록이 실행됩니다."]}],"\n",["$","h2",null,{"id":"89cea0f2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"예외 처리의 중요성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"예외 처리는 애플리케이션의 안정성을 높이는 중요한 기술입니다. 오류가 발생할 수 있는 부분을 명확히 하고, 그에 대한 적절한 대처 방법을 마련함으로써 예기치 않은 상황에서도 애플리케이션이 중단되지 않고 정상적으로 동작할 수 있게 합니다."}],"\n",["$","h3",null,{"id":"c03e115e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예외 처리가 필요한 상황"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"파일 입출력"}],": 파일을 읽거나 쓸 때 파일이 존재하지 않거나 읽기/쓰기 권한이 없을 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"네트워크 통신"}],": 인터넷 연결 문제, 서버 응답 오류 등 다양한 네트워크 관련 오류가 발생할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"데이터 변환"}],": JSON 파싱, 형변환 등에서 실패할 경우 예외 처리가 필요합니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"사용자 입력"}],": 사용자 입력 값을 검증하고, 잘못된 입력에 대해 적절히 처리하는 것이 필요합니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"26b41c24","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예외 처리의 장점"}],"\n",["$","ol","ol-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"코드 가독성 향상"}],": 오류 처리를 코드 내에서 명확히 구분하여 작성할 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"유지 보수성 증가"}],": 오류 발생 시점을 명확히 알고, 해당 부분을 쉽게 수정할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"안정성 확보"}],": 예상치 못한 오류 상황에서도 애플리케이션이 정상적으로 동작하도록 합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift의 예외 처리 전략은 프로그래밍의 안정성을 크게 향상시킵니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"throw","position":{"start":{"line":100,"column":41,"offset":2925},"end":{"line":100,"column":48,"offset":2932}}}],"position":{"start":{"line":100,"column":41,"offset":2925},"end":{"line":100,"column":48,"offset":2932}}},"children":"throw"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"try","position":{"start":{"line":100,"column":50,"offset":2934},"end":{"line":100,"column":55,"offset":2939}}}],"position":{"start":{"line":100,"column":50,"offset":2934},"end":{"line":100,"column":55,"offset":2939}}},"children":"try"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":100,"column":57,"offset":2941},"end":{"line":100,"column":64,"offset":2948}}}],"position":{"start":{"line":100,"column":57,"offset":2941},"end":{"line":100,"column":64,"offset":2948}}},"children":"catch"}}],"를 잘 활용하면 예상치 못한 상황에서도 애플리케이션이 안정적으로 동작할 수 있으며, 코드의 가독성과 유지 보수성도 크게 높일 수 있습니다. 예외 처리는 단순히 오류를 피하는 것이 아니라, 오류를 효과적으로 관리하고 대처하는 기술입니다. 이를 숙지하고 활용하면 더 견고하고 신뢰성 높은 소프트웨어를 작성할 수 있습니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift의 예외 처리 전략: throw, try, catch로 안정성 향상","toc":[{"tagName":"h1","title":"Swift의 예외 처리 전략: throw, try, catch로 안정성 향상","id":"e47a8747"},{"tagName":"h2","title":"예외 처리의 기본 개념","id":"a363da33"},{"tagName":"h2","title":"$undefined","id":""},{"tagName":"h2","title":"$undefined","id":""},{"tagName":"h2","title":"$undefined","id":""},{"tagName":"h2","title":"예외 처리의 중요성","id":"89cea0f2"},{"tagName":"h3","title":"예외 처리가 필요한 상황","id":"c03e115e"},{"tagName":"h3","title":"예외 처리의 장점","id":"26b41c24"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
