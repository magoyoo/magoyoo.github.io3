1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","swift%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C-Int%EB%8A%94-Int-%EB%AA%87%EC%9D%84-%EC%9D%98%EB%AF%B8%ED%95%A0%EA%B9%8C-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%97%90-%EB%94%B0%EB%A5%B8-Int%EC%9D%98-%EB%B2%94%EC%9C%84","d"],{"children":["__PAGE__?{\"slug\":\"swift언어에서-Int는-Int-몇을-의미할까-디바이스에-따른-Int의-범위\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","swift%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C-Int%EB%8A%94-Int-%EB%AA%87%EC%9D%84-%EC%9D%98%EB%AF%B8%ED%95%A0%EA%B9%8C-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%97%90-%EB%94%B0%EB%A5%B8-Int%EC%9D%98-%EB%B2%94%EC%9C%84","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"swift언어에서-Int는-Int-몇을-의미할까-디바이스에-따른-Int의-범위\"}"},"styles":[]}],"segment":["slug","swift%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C-Int%EB%8A%94-Int-%EB%AA%87%EC%9D%84-%EC%9D%98%EB%AF%B8%ED%95%A0%EA%B9%8C-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%97%90-%EB%94%B0%EB%A5%B8-Int%EC%9D%98-%EB%B2%94%EC%9C%84","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift Int는 Int64일까 Int32일까? 디바이스에 따른 Int의 범위 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift에서 Int 자료형은 중요한 역할을 하며, 많은 개발자가 이에 대해 궁금해합니다. 특히, 'Swift의 Int가 Int64일까?'라는 질문은 흔히 제기됩니다. 이 질문에 답하기 위해 Swift의 Int 자료형과 디바이스에 따른 범위를 살펴보겠습니다."}],["$","meta","3",{"name":"keywords","content":"swift,기본문법"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/swift%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C-Int%EB%8A%94-Int-%EB%AA%87%EC%9D%84-%EC%9D%98%EB%AF%B8%ED%95%A0%EA%B9%8C-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%97%90-%EB%94%B0%EB%A5%B8-Int%EC%9D%98-%EB%B2%94%EC%9C%84"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift Int는 Int64일까 Int32일까? 디바이스에 따른 Int의 범위 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift Int는 Int64일까 Int32일까? 디바이스에 따른 Int의 범위 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift에서 Int 자료형은 중요한 역할을 하며, 많은 개발자가 이에 대해 궁금해합니다. 특히, 'Swift의 Int가 Int64일까?'라는 질문은 흔히 제기됩니다. 이 질문에 답하기 위해 Swift의 Int 자료형과 디바이스에 따른 범위를 살펴보겠습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/swift%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C-Int%EB%8A%94-Int-%EB%AA%87%EC%9D%84-%EC%9D%98%EB%AF%B8%ED%95%A0%EA%B9%8C-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%97%90-%EB%94%B0%EB%A5%B8-Int%EC%9D%98-%EB%B2%94%EC%9C%84"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift Int는 Int64일까 Int32일까? 디바이스에 따른 Int의 범위 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift에서 Int 자료형은 중요한 역할을 하며, 많은 개발자가 이에 대해 궁금해합니다. 특히, 'Swift의 Int가 Int64일까?'라는 질문은 흔히 제기됩니다. 이 질문에 답하기 위해 Swift의 Int 자료형과 디바이스에 따른 범위를 살펴보겠습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBasic.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift Int는 Int64일까 Int32일까? 디바이스에 따른 Int의 범위"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift Int는 Int64일까 Int32일까? 디바이스에 따른 Int의 범위"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-01"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h2",null,{"id":"61bee551","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"SwiftUI Button Style을 활용한 다양한 효과 만들기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 Apple이 2019년에 발표한 선언적 UI 프레임워크로, iOS, macOS, watchOS, tvOS 앱 개발에 사용됩니다. SwiftUI는 간결하고 직관적인 코드를 통해 복잡한 UI를 구현할 수 있게 해줍니다. 그중에서도 버튼은 사용자 인터페이스의 핵심 요소 중 하나입니다. SwiftUI에서는 Button Style을 활용하여 다양한 버튼 효과를 쉽게 구현할 수 있습니다. 이 글에서는 SwiftUI Button Style을 활용한 다양한 버튼 효과를 만드는 방법에 대해 자세히 알아보겠습니다."}],"\n",["$","h2",null,{"id":"3dfefc3f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"기본적인 SwiftUI 버튼 스타일"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI에서 버튼은 매우 간단하게 생성할 수 있습니다. 기본 버튼 스타일을 사용하면, 시스템이 제공하는 기본 스타일이 적용됩니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    var body: some View {\n        Button(action: {\n            print(\"Button tapped!\")\n        }) {\n            Text(\"Tap me!\")\n        }\n    }\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":434},"end":{"line":22,"column":4,"offset":635}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    var body: some View {\n        Button(action: {\n            print(\"Button tapped!\")\n        }) {\n            Text(\"Tap me!\")\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위의 코드에서 기본 스타일의 버튼을 생성했습니다. 이제 이 버튼에 다양한 스타일을 적용해보겠습니다."}],"\n",["$","h2",null,{"id":"21febf49","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"커스텀 버튼 스타일 만들기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ButtonStyle","position":{"start":{"line":28,"column":12,"offset":724},"end":{"line":28,"column":25,"offset":737}}}],"position":{"start":{"line":28,"column":12,"offset":724},"end":{"line":28,"column":25,"offset":737}}},"children":"ButtonStyle"}}]," 프로토콜을 사용하여 커스텀 버튼 스타일을 만들 수 있습니다. 이를 통해 버튼의 외관과 상호작용 방식을 커스터마이즈할 수 있습니다."]}],"\n",["$","h3",null,{"id":"2c0cbaa2","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 기본 커스텀 버튼 스타일"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"먼저, 간단한 커스텀 버튼 스타일을 만들어 보겠습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct SimpleButtonStyle: ButtonStyle {\n    func makeBody(configuration: Configuration) -> some View {\n        configuration.label\n            .padding()\n            .background(Color.blue)\n            .foregroundColor(.white)\n            .cornerRadius(8)\n            .scaleEffect(configuration.isPressed ? 0.95 : 1.0)\n            .animation(.spring(), value: configuration.isPressed)\n    }\n}\n"}],"position":{"start":{"line":34,"column":1,"offset":866},"end":{"line":46,"column":4,"offset":1271}}},"children":"struct SimpleButtonStyle: ButtonStyle {\n    func makeBody(configuration: Configuration) -> some View {\n        configuration.label\n            .padding()\n            .background(Color.blue)\n            .foregroundColor(.white)\n            .cornerRadius(8)\n            .scaleEffect(configuration.isPressed ? 0.95 : 1.0)\n            .animation(.spring(), value: configuration.isPressed)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SimpleButtonStyle","position":{"start":{"line":48,"column":1,"offset":1273},"end":{"line":48,"column":20,"offset":1292}}}],"position":{"start":{"line":48,"column":1,"offset":1273},"end":{"line":48,"column":20,"offset":1292}}},"children":"SimpleButtonStyle"}}],"은 버튼이 눌렸을 때 살짝 축소되는 효과를 추가합니다. 이제 이 스타일을 버튼에 적용해보겠습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    var body: some View {\n        Button(action: {\n            print(\"Button tapped!\")\n        }) {\n            Text(\"Tap me!\")\n        }\n        .buttonStyle(SimpleButtonStyle())\n    }\n}\n"}],"position":{"start":{"line":50,"column":1,"offset":1348},"end":{"line":61,"column":4,"offset":1575}}},"children":"struct ContentView: View {\n    var body: some View {\n        Button(action: {\n            print(\"Button tapped!\")\n        }) {\n            Text(\"Tap me!\")\n        }\n        .buttonStyle(SimpleButtonStyle())\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 버튼을 누르면 크기가 약간 줄어드는 애니메이션 효과가 나타납니다."}],"\n",["$","h3",null,{"id":"a3f0c630","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 그림자 효과 추가하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"버튼에 그림자 효과를 추가하여 입체감을 더할 수 있습니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ShadowButtonStyle: ButtonStyle {\n    func makeBody(configuration: Configuration) -> some View {\n        configuration.label\n            .padding()\n            .background(Color.green)\n            .foregroundColor(.white)\n            .cornerRadius(8)\n            .shadow(color: .gray, radius: configuration.isPressed ? 2 : 10, x: 0, y: configuration.isPressed ? 2 : 10)\n            .scaleEffect(configuration.isPressed ? 0.95 : 1.0)\n            .animation(.easeInOut(duration: 0.2), value: configuration.isPressed)\n    }\n}\n"}],"position":{"start":{"line":69,"column":1,"offset":1672},"end":{"line":82,"column":4,"offset":2213}}},"children":"struct ShadowButtonStyle: ButtonStyle {\n    func makeBody(configuration: Configuration) -> some View {\n        configuration.label\n            .padding()\n            .background(Color.green)\n            .foregroundColor(.white)\n            .cornerRadius(8)\n            .shadow(color: .gray, radius: configuration.isPressed ? 2 : 10, x: 0, y: configuration.isPressed ? 2 : 10)\n            .scaleEffect(configuration.isPressed ? 0.95 : 1.0)\n            .animation(.easeInOut(duration: 0.2), value: configuration.isPressed)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ShadowButtonStyle","position":{"start":{"line":84,"column":1,"offset":2215},"end":{"line":84,"column":20,"offset":2234}}}],"position":{"start":{"line":84,"column":1,"offset":2215},"end":{"line":84,"column":20,"offset":2234}}},"children":"ShadowButtonStyle"}}],"은 버튼을 눌렀을 때 그림자와 크기가 변하는 효과를 추가합니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    var body: some View {\n        Button(action: {\n            print(\"Button tapped!\")\n        }) {\n            Text(\"Tap me!\")\n        }\n        .buttonStyle(ShadowButtonStyle())\n    }\n}\n"}],"position":{"start":{"line":86,"column":1,"offset":2271},"end":{"line":97,"column":4,"offset":2498}}},"children":"struct ContentView: View {\n    var body: some View {\n        Button(action: {\n            print(\"Button tapped!\")\n        }) {\n            Text(\"Tap me!\")\n        }\n        .buttonStyle(ShadowButtonStyle())\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 버튼을 누르면 그림자가 줄어들고 크기가 살짝 작아지는 효과가 나타납니다."}],"\n",["$","h3",null,{"id":"d5e14e72","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 그라디언트 배경 버튼 스타일"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"그라디언트 배경을 사용하여 버튼을 더욱 화려하게 꾸밀 수 있습니다."}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct GradientButtonStyle: ButtonStyle {\n    func makeBody(configuration: Configuration) -> some View {\n        configuration.label\n            .padding()\n            .background(LinearGradient(gradient: Gradient(colors: [.purple, .blue]), startPoint: .topLeading, endPoint: .bottomTrailing))\n            .foregroundColor(.white)\n            .cornerRadius(8)\n            .shadow(color: .black.opacity(0.2), radius: 10, x: 0, y: 10)\n            .scaleEffect(configuration.isPressed ? 0.95 : 1.0)\n            .animation(.spring(), value: configuration.isPressed)\n    }\n}\n"}],"position":{"start":{"line":105,"column":1,"offset":2608},"end":{"line":118,"column":4,"offset":3190}}},"children":"struct GradientButtonStyle: ButtonStyle {\n    func makeBody(configuration: Configuration) -> some View {\n        configuration.label\n            .padding()\n            .background(LinearGradient(gradient: Gradient(colors: [.purple, .blue]), startPoint: .topLeading, endPoint: .bottomTrailing))\n            .foregroundColor(.white)\n            .cornerRadius(8)\n            .shadow(color: .black.opacity(0.2), radius: 10, x: 0, y: 10)\n            .scaleEffect(configuration.isPressed ? 0.95 : 1.0)\n            .animation(.spring(), value: configuration.isPressed)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"GradientButtonStyle","position":{"start":{"line":120,"column":1,"offset":3192},"end":{"line":120,"column":22,"offset":3213}}}],"position":{"start":{"line":120,"column":1,"offset":3192},"end":{"line":120,"column":22,"offset":3213}}},"children":"GradientButtonStyle"}}],"은 그라디언트 배경과 그림자 효과를 추가합니다."]}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    var body: some View {\n        Button(action: {\n            print(\"Button tapped!\")\n        }) {\n            Text(\"Tap me!\")\n        }\n        .buttonStyle(GradientButtonStyle())\n    }\n}\n"}],"position":{"start":{"line":122,"column":1,"offset":3241},"end":{"line":133,"column":4,"offset":3470}}},"children":"struct ContentView: View {\n    var body: some View {\n        Button(action: {\n            print(\"Button tapped!\")\n        }) {\n            Text(\"Tap me!\")\n        }\n        .buttonStyle(GradientButtonStyle())\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 버튼이 화려한 그라디언트 배경을 가지게 되며, 누를 때 크기와 그림자가 변하는 효과가 나타납니다."}],"\n",["$","h3",null,{"id":"50141357","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"4. 회전 효과 추가하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"버튼을 누를 때 회전하는 효과를 추가하여 재미있는 인터랙션을 만들 수 있습니다."}],"\n",["$","pre","pre-7",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct RotatingButtonStyle: ButtonStyle {\n    func makeBody(configuration: Configuration) -> some View {\n        configuration.label\n            .padding()\n            .background(Color.orange)\n            .foregroundColor(.white)\n            .cornerRadius(8)\n            .rotationEffect(configuration.isPressed ? .degrees(45) : .degrees(0))\n            .animation(.spring(), value: configuration.isPressed)\n    }\n}\n"}],"position":{"start":{"line":141,"column":1,"offset":3596},"end":{"line":153,"column":4,"offset":4024}}},"children":"struct RotatingButtonStyle: ButtonStyle {\n    func makeBody(configuration: Configuration) -> some View {\n        configuration.label\n            .padding()\n            .background(Color.orange)\n            .foregroundColor(.white)\n            .cornerRadius(8)\n            .rotationEffect(configuration.isPressed ? .degrees(45) : .degrees(0))\n            .animation(.spring(), value: configuration.isPressed)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"RotatingButtonStyle","position":{"start":{"line":155,"column":1,"offset":4026},"end":{"line":155,"column":22,"offset":4047}}}],"position":{"start":{"line":155,"column":1,"offset":4026},"end":{"line":155,"column":22,"offset":4047}}},"children":"RotatingButtonStyle"}}],"은 버튼을 눌렀을 때 회전하는 효과를 추가합니다."]}],"\n",["$","pre","pre-8",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    var body: some View {\n        Button(action: {\n            print(\"Button tapped!\")\n        }) {\n            Text(\"Tap me!\")\n        }\n        .buttonStyle(RotatingButtonStyle())\n    }\n}\n"}],"position":{"start":{"line":157,"column":1,"offset":4076},"end":{"line":168,"column":4,"offset":4305}}},"children":"struct ContentView: View {\n    var body: some View {\n        Button(action: {\n            print(\"Button tapped!\")\n        }) {\n            Text(\"Tap me!\")\n        }\n        .buttonStyle(RotatingButtonStyle())\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 버튼을 누르면 45도 회전하는 애니메이션 효과가 나타납니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ButtonStyle","position":{"start":{"line":174,"column":10,"offset":4361},"end":{"line":174,"column":23,"offset":4374}}}],"position":{"start":{"line":174,"column":10,"offset":4361},"end":{"line":174,"column":23,"offset":4374}}},"children":"ButtonStyle"}}]," 프로토콜을 사용하면 버튼의 외관과 상호작용을 손쉽게 커스터마이즈할 수 있습니다. 기본적인 스타일에서부터 그림자, 그라디언트, 회전 효과 등 다양한 효과를 적용할 수 있으며, 이를 통해 더욱 매력적이고 직관적인 사용자 인터페이스를 만들 수 있습니다. 이 글에서 소개한 예제들을 바탕으로 자신만의 독창적인 버튼 스타일을 만들어보세요. SwiftUI의 강력한 기능을 활용하면 다양한 UI 효과를 구현하는 것이 어렵지 않습니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift Int는 Int64일까 Int32일까? 디바이스에 따른 Int의 범위","toc":[{"tagName":"h2","title":"SwiftUI Button Style을 활용한 다양한 효과 만들기","id":"61bee551"},{"tagName":"h2","title":"기본적인 SwiftUI 버튼 스타일","id":"3dfefc3f"},{"tagName":"h2","title":"커스텀 버튼 스타일 만들기","id":"21febf49"},{"tagName":"h3","title":"1. 기본 커스텀 버튼 스타일","id":"2c0cbaa2"},{"tagName":"h3","title":"2. 그림자 효과 추가하기","id":"a3f0c630"},{"tagName":"h3","title":"3. 그라디언트 배경 버튼 스타일","id":"d5e14e72"},{"tagName":"h3","title":"4. 회전 효과 추가하기","id":"50141357"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
