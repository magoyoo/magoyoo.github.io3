1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EA%B3%BC-%EB%8D%B8%EB%A6%AC%EA%B2%8C%EC%9D%B4%ED%8A%B8-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0-%EA%B0%9D%EC%B2%B4%EA%B0%84-%ED%86%B5%EC%8B%A0%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%8C%A8%ED%84%B4-%EC%84%A4%EB%AA%85-fb2bdfde","d"],{"children":["__PAGE__?{\"slug\":\"Swift-프로토콜과-델리게이트-활용하기-객체간-통신을-위한-패턴-설명-fb2bdfde\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EA%B3%BC-%EB%8D%B8%EB%A6%AC%EA%B2%8C%EC%9D%B4%ED%8A%B8-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0-%EA%B0%9D%EC%B2%B4%EA%B0%84-%ED%86%B5%EC%8B%A0%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%8C%A8%ED%84%B4-%EC%84%A4%EB%AA%85-fb2bdfde","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-프로토콜과-델리게이트-활용하기-객체간-통신을-위한-패턴-설명-fb2bdfde\"}"},"styles":[]}],"segment":["slug","Swift-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EA%B3%BC-%EB%8D%B8%EB%A6%AC%EA%B2%8C%EC%9D%B4%ED%8A%B8-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0-%EA%B0%9D%EC%B2%B4%EA%B0%84-%ED%86%B5%EC%8B%A0%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%8C%A8%ED%84%B4-%EC%84%A4%EB%AA%85-fb2bdfde","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift 프로토콜과 델리게이트 활용하기: 객체간 통신을 위한 패턴 설명 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift 프로토콜과 델리게이트 패턴을 통해 객체 간 통신을 효율적으로 수행하는 방법을 설명합니다. 프로토콜의 기본 개념부터 델리게이트 패턴의 실제 사용 예시까지 다룹니다."}],["$","meta","3",{"name":"keywords","content":"Swift,프로그래밍,프로토콜,델리게이트"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EA%B3%BC-%EB%8D%B8%EB%A6%AC%EA%B2%8C%EC%9D%B4%ED%8A%B8-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0-%EA%B0%9D%EC%B2%B4%EA%B0%84-%ED%86%B5%EC%8B%A0%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%8C%A8%ED%84%B4-%EC%84%A4%EB%AA%85-fb2bdfde"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift 프로토콜과 델리게이트 활용하기: 객체간 통신을 위한 패턴 설명 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift 프로토콜과 델리게이트 활용하기: 객체간 통신을 위한 패턴 설명 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift 프로토콜과 델리게이트 패턴을 통해 객체 간 통신을 효율적으로 수행하는 방법을 설명합니다. 프로토콜의 기본 개념부터 델리게이트 패턴의 실제 사용 예시까지 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EA%B3%BC-%EB%8D%B8%EB%A6%AC%EA%B2%8C%EC%9D%B4%ED%8A%B8-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0-%EA%B0%9D%EC%B2%B4%EA%B0%84-%ED%86%B5%EC%8B%A0%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%8C%A8%ED%84%B4-%EC%84%A4%EB%AA%85-fb2bdfde"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift 프로토콜과 델리게이트 활용하기: 객체간 통신을 위한 패턴 설명 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift 프로토콜과 델리게이트 패턴을 통해 객체 간 통신을 효율적으로 수행하는 방법을 설명합니다. 프로토콜의 기본 개념부터 델리게이트 패턴의 실제 사용 예시까지 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift 프로토콜과 델리게이트 활용하기: 객체간 통신을 위한 패턴 설명"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift 프로토콜과 델리게이트 활용하기: 객체간 통신을 위한 패턴 설명"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-19"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"f4b3b28c","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift 프로토콜과 델리게이트 활용하기: 객체간 통신을 위한 패턴 설명"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서 객체 간 효율적으로 데이터를 주고받기 위해 프로토콜과 델리게이트 패턴을 자주 사용합니다. 이러한 패턴은 코드의 재사용성과 유연성, 유지 보수성을 높이는 데 큰 도움이 됩니다. 이 글에서는 Swift 프로토콜과 델리게이트 패턴에 대해 상세히 알아보고, 실제 구현 예제를 통해 어떻게 사용하는지 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"f3ec2925","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프로토콜의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"프로토콜은 특정 작업이나 기능을 정의하는데 사용됩니다. 이는 마치 인터페이스와 비슷하며, 객체가 특정 메서드나 속성을 반드시 구현하게 강제합니다. 프로토콜의 기본 문법은 다음과 같습니다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"protocol SomeProtocol {\n    var mustBeSettable: Int { get set }\n    var doesNotNeedToBeSettable: Int { get }\n    func someMethod() -> String\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":348},"end":{"line":16,"column":4,"offset":503}}},"children":"protocol SomeProtocol {\n    var mustBeSettable: Int { get set }\n    var doesNotNeedToBeSettable: Int { get }\n    func someMethod() -> String\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SomeProtocol","position":{"start":{"line":18,"column":5,"offset":509},"end":{"line":18,"column":19,"offset":523}}}],"position":{"start":{"line":18,"column":5,"offset":509},"end":{"line":18,"column":19,"offset":523}}},"children":"SomeProtocol"}}],"은 두 개의 속성과 하나의 메서드를 정의하고 있습니다. 이를 구현하는 클래스나 구조체는 반드시 이러한 속성과 메서드를 포함해야 합니다."]}],"\n",["$","h2",null,{"id":"49d5aacd","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"델리게이트 패턴"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"델리게이트 패턴은 특정 객체가 해야 할 일을 다른 객체에 위임하는 디자인 패턴입니다. 이를 통해 객체 간의 결합도를 낮추고, 더 독립적이고 모듈화된 코드를 작성할 수 있습니다. 흔히 UI 구성 요소 중 일부 작업을 다른 객체에 위임할 때 사용됩니다. 델리게이트 패턴을 사용하려면 아래와 같은 구성요소가 필요합니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"프로토콜 정의"}],": 델리게이트가 구현해야 할 메서드를 정의합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"델리게이트 선언"}],": 주 객체에서 델리게이트를 선언합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"델리게이트 메서드 호출"}],": 필요한 시점에 델리게이트 메서드를 호출합니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"델리게이트 구현"}],": 다른 객체에서 실제 동작을 구현합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"3805c6b7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"델리게이트 패턴 구현 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음 예제는 간단한 델리게이트 패턴을 구현하여 버튼 클릭 이벤트를 다른 객체에서 처리하는 방식입니다. 이를 통해 델리게이트 패턴이 어떻게 동작하는지 이해할 수 있을 것입니다."}],"\n",["$","h3",null,{"id":"17de75c9","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 프로토콜 정의"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"먼저 버튼 클릭 이벤트를 처리하는 프로토콜을 정의합니다:"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"protocol ButtonDelegate: AnyObject {\n    func didTapButton(_ sender: UIButton)\n}\n"}],"position":{"start":{"line":37,"column":1,"offset":1124},"end":{"line":41,"column":4,"offset":1217}}},"children":"protocol ButtonDelegate: AnyObject {\n    func didTapButton(_ sender: UIButton)\n}\n"}}]}],"\n",["$","h3",null,{"id":"ab4c18ae","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 델리게이트 선언"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 버튼 클래스를 정의하고 델리게이트를 선언합니다:"}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class CustomButton: UIButton {\n    weak var delegate: ButtonDelegate?\n\n    @objc func buttonTapped() {\n        delegate?.didTapButton(self)\n    }\n}\n"}],"position":{"start":{"line":47,"column":1,"offset":1267},"end":{"line":55,"column":4,"offset":1427}}},"children":"class CustomButton: UIButton {\n    weak var delegate: ButtonDelegate?\n\n    @objc func buttonTapped() {\n        delegate?.didTapButton(self)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"buttonTapped","position":{"start":{"line":57,"column":5,"offset":1433},"end":{"line":57,"column":19,"offset":1447}}}],"position":{"start":{"line":57,"column":5,"offset":1433},"end":{"line":57,"column":19,"offset":1447}}},"children":"buttonTapped"}}]," 메서드는 버튼이 클릭되었을 때 호출되며, 델리게이트의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"didTapButton","position":{"start":{"line":57,"column":50,"offset":1478},"end":{"line":57,"column":64,"offset":1492}}}],"position":{"start":{"line":57,"column":50,"offset":1478},"end":{"line":57,"column":64,"offset":1492}}},"children":"didTapButton"}}]," 메서드를 호출합니다."]}],"\n",["$","h3",null,{"id":"a26c236e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 델리게이트 메서드 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"델리게이트를 구현하는 다른 객체를 정의합니다:"}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class ViewController: UIViewController, ButtonDelegate {\n    let button = CustomButton(type: .system)\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        button.setTitle(\n"}],"position":{"start":{"line":63,"column":1,"offset":1554},"end":{"line":71,"column":1,"offset":1754}}},"children":"class ViewController: UIViewController, ButtonDelegate {\n    let button = CustomButton(type: .system)\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        button.setTitle(\n"}}]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift 프로토콜과 델리게이트 활용하기: 객체간 통신을 위한 패턴 설명","toc":[{"tagName":"h1","title":"Swift 프로토콜과 델리게이트 활용하기: 객체간 통신을 위한 패턴 설명","id":"f4b3b28c"},{"tagName":"h2","title":"프로토콜의 기본 개념","id":"f3ec2925"},{"tagName":"h2","title":"델리게이트 패턴","id":"49d5aacd"},{"tagName":"h2","title":"델리게이트 패턴 구현 예제","id":"3805c6b7"},{"tagName":"h3","title":"1. 프로토콜 정의","id":"17de75c9"},{"tagName":"h3","title":"2. 델리게이트 선언","id":"ab4c18ae"},{"tagName":"h3","title":"3. 델리게이트 메서드 구현","id":"a26c236e"}],"language":"kr"}]}]]}]]
8:null
