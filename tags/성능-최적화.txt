1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["tags",{"children":[["slug","%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94","d"],{"children":["__PAGE__?{\"slug\":\"성능-최적화\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
9:I{"id":1247,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","396:static/chunks/396-5bd701a67a6189e9.js","355:static/chunks/app/tags/[slug]/page-4363d8d5fe95e0a7.js"],"name":"","async":false}
a:I{"id":41465,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","396:static/chunks/396-5bd701a67a6189e9.js","355:static/chunks/app/tags/[slug]/page-4363d8d5fe95e0a7.js"],"name":"","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children",["slug","%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8",["$","div",null,{"className":"pt-[80px]","children":[["$","$L9",null,{"language":"app","screenType":"TAGS"}],["$","main",null,{"className":"flex w-full justify-center","children":["$","div",null,{"className":"flex flex-row justify-start xl:w-[800px] w-full px-[20px] py-[40px] md:px-[40px] md:pb-[80px] md:pt-[60px] gap-[80px]","children":["$","section",null,{"className":"flex flex-1 flex-col gap-[80px]","children":[["$","h2",null,{"className":"md:flex hidden text-gray-900 font-semibold text-[22px]","children":"성능 최적화 관련글"}],["$","ul",null,{"className":"flex flex-1 flex-col gap-[80px]","children":[["$","li","iOS 앱 성능 최적화: Swift에서 효율적인 메모리 관리 방법0",{"children":["$","$La",null,{"postMeta":{"id":"e48b68e5-db38-4cbc-9d32-b8d5f0e46c37","path":"/swift/iOS-앱-성능-최적화-Swift에서-효율적인-메모리-관리-방법-e48b68e5","title":"iOS 앱 성능 최적화: Swift에서 효율적인 메모리 관리 방법","description":"이 글에서는 iOS 앱 성능 최적화를 위해 Swift에서 효율적인 메모리 관리 방법에 대해 다룹니다. 메모리 관리는 앱의 성능과 안정성에 큰 영향을 미치기 때문에 중요한 주제입니다. 최적화를 위한 다양한 기법과 실습 예제를 통해 성능 향상 방법을 알아봅니다.","date":"2024-08-05T06:01:00.193Z","tags":[{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"메모리 관리","path":"/tags/메모리-관리","id":"메모리-관리"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"}],"readMin":"5.6","category":"swift","banner":"/images/swiftBanner1.jpg"},"index":0,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React.js 가상 DOM 이해하기: 성능 최적화의 비밀1",{"children":["$","$La",null,{"postMeta":{"id":"e80a49a3-4907-4696-b04d-6b19d1dd0c6d","path":"/javascript/Reactjs-가상-DOM-이해하기-성능-최적화의-비밀-e80a49a3","title":"React.js 가상 DOM 이해하기: 성능 최적화의 비밀","description":"이 글은 현대 웹 개발에서 가장 중요한 라이브러리 중 하나인 React.js의 핵심 개념, 가상 DOM에 대해 설명합니다. 가상 DOM이 실제 DOM과 어떻게 다른지, React.js가 이를 통해 얻는 이점을 알아보고, 성능 최적화에 어떻게 기여하는지 깊이 있게 탐구해봅니다.","date":"2024-07-30T06:02:29.585Z","tags":[{"name":"React.js","path":"/tags/react.js","id":"react.js"},{"name":"가상 DOM","path":"/tags/가상-dom","id":"가상-dom"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"웹 개발","path":"/tags/웹-개발","id":"웹-개발"}],"readMin":"6.2","category":"javascript","banner":"/images/javascriptBanner1.jpg"},"index":1,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Node.js 클러스터링으로 확장성 높이기: 성능 최적화 팁2",{"children":["$","$La",null,{"postMeta":{"id":"b7efaa19-f6d9-43c0-84db-339abcfcb2e7","path":"/javascript/Nodejs-클러스터링으로-확장성-높이기-성능-최적화-팁-b7efaa19","title":"Node.js 클러스터링으로 확장성 높이기: 성능 최적화 팁","description":"이 글에서는 Node.js를 사용한 웹 애플리케이션의 확장성을 높이기 위해 클러스터링 기법을 사용하는 방법과 성능 최적화 팁을 소개합니다. 클러스터 모듈의 기본 개념부터 실제 활용 예제까지 단계별로 설명합니다.","date":"2024-07-29T06:00:56.274Z","tags":[{"name":"Node.js","path":"/tags/node.js","id":"node.js"},{"name":"클러스터링","path":"/tags/클러스터링","id":"클러스터링"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"웹 애플리케이션","path":"/tags/웹-애플리케이션","id":"웹-애플리케이션"}],"readMin":"5.0","category":"javascript","banner":"/images/javascriptBanner4.jpg"},"index":2,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift로 Debounce 함수 직접 구현하기: 단계별 가이드3",{"children":["$","$La",null,{"postMeta":{"id":"b11a2e1a-b451-4ed8-b8d2-df29d12fd711","path":"/swift/Swift로-Debounce-함수-직접-구현하기-단계별-가이드-b11a2e1a","title":"Swift로 Debounce 함수 직접 구현하기: 단계별 가이드","description":"이 글에서는 Swift로 `Debounce` 함수를 직접 구현하는 방법을 단계별로 안내합니다. `Debounce`는 빠르게 반복되는 이벤트를 제어하고 성능을 개선하는 유용한 기술입니다. 코드 예제와 함께 이해하기 쉽게 설명합니다.","date":"2024-07-27T06:01:52.974Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"Debounce","path":"/tags/debounce","id":"debounce"},{"name":"이벤트 처리","path":"/tags/이벤트-처리","id":"이벤트-처리"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"}],"readMin":"4.3","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":3,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Next.js Incremental Static Regeneration(ISR) 활용법: 성능 최적화4",{"children":["$","$La",null,{"postMeta":{"id":"470f6c01-1cc4-42c8-bf04-494d9dc4f55d","path":"/javascript/Nextjs-Incremental-Static-RegenerationISR-활용법-성능-최적화-470f6c01","title":"Next.js Incremental Static Regeneration(ISR) 활용법: 성능 최적화","description":"이 글에서는 Next.js의 Incremental Static Regeneration(ISR)을 활용하여 성능을 최적화하는 방법에 대해 알아봅니다. ISR을 이용하면 정적 생성의 장점을 유지하면서도 데이터를 실시간으로 업데이트할 수 있어 효율적입니다.","date":"2024-07-25T06:02:45.627Z","tags":[{"name":"Next.js","path":"/tags/next.js","id":"next.js"},{"name":"ISR","path":"/tags/isr","id":"isr"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"}],"readMin":"4.8","category":"javascript","banner":"/images/javascriptBanner1.jpg"},"index":4,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI Hashable 성능 최적화 방법5",{"children":["$","$La",null,{"postMeta":{"id":"8eab5723-9f08-4591-8049-47921ef12d90","path":"/swift/SwiftUI-Hashable-성능-최적화-방법-8eab5723","title":"SwiftUI Hashable 성능 최적화 방법","description":"이 글은 SwiftUI에서 'Hashable' 프로토콜을 효율적으로 사용하여 성능을 최적화하는 방법에 대해 다룹니다. 코드 예제와 상세한 설명을 통해 최적화 기법을 쉽게 이해할 수 있도록 설명합니다.","date":"2024-07-21T06:00:16.407Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"Hashable","path":"/tags/hashable","id":"hashable"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"Swift","path":"/tags/swift","id":"swift"}],"readMin":"4.1","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":5,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React.js 성능 최적화 방법: 빠르고 효율적인 앱 만들기6",{"children":["$","$La",null,{"postMeta":{"id":"0fc596c4-0201-491b-8d6a-5b25c47e6e83","path":"/javascript/Reactjs-성능-최적화-방법-빠르고-효율적인-앱-만들기-0fc596c4","title":"React.js 성능 최적화 방법: 빠르고 효율적인 앱 만들기","description":"이 글은 React.js를 사용한 애플리케이션의 성능을 최적화하는 다양한 방법을 소개합니다. React의 최적화 기법은 사용자 경험을 향상시키고, 앱의 반응 속도를 개선하며, 개발 과정에서의 효율성을 높이는 데 중요한 역할을 합니다.","date":"2024-07-20T06:03:45.519Z","tags":[{"name":"React.js","path":"/tags/react.js","id":"react.js"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"프론트엔드 개발","path":"/tags/프론트엔드-개발","id":"프론트엔드-개발"}],"readMin":"5.9","category":"javascript","banner":"/images/javascriptBanner4.jpg"},"index":6,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","JavaScript Debounce와 Throttle: 성능 최적화 방법7",{"children":["$","$La",null,{"postMeta":{"id":"38b8fc71-3ad1-41a5-a51f-db84c707f326","path":"/javascript/JavaScript-Debounce와-Throttle-성능-최적화-방법-38b8fc71","title":"JavaScript Debounce와 Throttle: 성능 최적화 방법","description":"JavaScript에서 자주 사용되는 Debounce와 Throttle 기법에 대해 설명하며, 이 두 가지 기법이 성능 최적화에 어떻게 도움을 주는지 다룹니다.","date":"2024-07-20T06:00:41.468Z","tags":[{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"Debounce","path":"/tags/debounce","id":"debounce"},{"name":"Throttle","path":"/tags/throttle","id":"throttle"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"}],"readMin":"5.0","category":"javascript","banner":"/images/javascriptBanner4.jpg"},"index":7,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift 개발자를 위한 이미지 Prefetch 및 다운로드 최적화 방법8",{"children":["$","$La",null,{"postMeta":{"id":"519b5ac1-4c0c-464a-ac24-3329ea3a0004","path":"/swift/Swift-개발자를-위한-이미지-Prefetch-및-다운로드-최적화-방법-519b5ac1","title":"Swift 개발자를 위한 이미지 Prefetch 및 다운로드 최적화 방법","description":"이 글은 Swift 개발자를 위한 이미지 Prefetch 및 다운로드 최적화 방법에 대해 다룹니다. 이미지 로딩 시의 성능 문제와 사용자가 앱을 사용할 때 더 원활한 경험을 제공하는 방법을 탐구합니다.","date":"2024-07-19T06:00:23.598Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"이미지 로딩","path":"/tags/이미지-로딩","id":"이미지-로딩"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"Prefetch","path":"/tags/prefetch","id":"prefetch"}],"readMin":"4.4","category":"swift","banner":"/images/swiftBanner4.jpg"},"index":8,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Next.js 성능 최적화 팁: 빠르고 효율적인 웹사이트 만들기9",{"children":["$","$La",null,{"postMeta":{"id":"8fabe013-a7cc-4ffb-9017-69c53d7027a3","path":"/javascript/Nextjs-성능-최적화-팁-빠르고-효율적인-웹사이트-만들기-8fabe013","title":"Next.js 성능 최적화 팁: 빠르고 효율적인 웹사이트 만들기","description":"이 문서는 Next.js를 사용하여 웹사이트의 성능을 최적화하는 다양한 팁과 방법에 대해 설명합니다. Next.js의 기능과 도구를 최대한 활용하여 빠르고 효율적인 웹사이트를 만드는 법을 학습할 수 있습니다.","date":"2024-07-16T06:02:59.934Z","tags":[{"name":"Next.js","path":"/tags/next.js","id":"next.js"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"웹 개발","path":"/tags/웹-개발","id":"웹-개발"},{"name":"React","path":"/tags/react","id":"react"}],"readMin":"5.8","category":"javascript","banner":"/images/javascriptBanner3.jpg"},"index":9,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React.js 메모이제이션(Memoization)으로 렌더링 성능 최적화10",{"children":["$","$La",null,{"postMeta":{"id":"d5839cdd-1bd5-4c51-b103-c622ce0e7410","path":"/javascript/Reactjs-메모이제이션Memoization으로-렌더링-성능-최적화-d5839cdd","title":"React.js 메모이제이션(Memoization)으로 렌더링 성능 최적화","description":"이 글에서는 `React.js`에서 메모이제이션(memoization)을 사용하여 렌더링 성능을 최적화하는 방법에 대해 설명합니다. `React.memo`, `useMemo`, `useCallback` 등 주요 메모이제이션 기법을 다루며, 코드 예시를 통해 구체적인 사용법을 알려드립니다.","date":"2024-07-12T06:03:02.175Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Memoization","path":"/tags/memoization","id":"memoization"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"}],"readMin":"4.5","category":"javascript","banner":"/images/javascriptBanner3.jpg"},"index":10,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI 스크롤 뷰 사용법: 대용량 데이터 처리11",{"children":["$","$La",null,{"postMeta":{"id":"12b8457c-e9ed-44c9-a6d1-0fb415dccb32","path":"/swift/SwiftUI-스크롤-뷰-사용법-대용량-데이터-처리-12b8457c","title":"SwiftUI 스크롤 뷰 사용법: 대용량 데이터 처리","description":"이 글에서는 SwiftUI에서 스크롤 뷰를 사용하여 대용량 데이터를 효율적으로 처리하는 방법에 대해 다룹니다. 스크롤 뷰의 기본 사용법부터 성능 최적화 기법까지 폭넓게 설명합니다.","date":"2024-07-09T06:03:13.285Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"스크롤 뷰","path":"/tags/스크롤-뷰","id":"스크롤-뷰"},{"name":"대용량 데이터","path":"/tags/대용량-데이터","id":"대용량-데이터"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"}],"readMin":"4.7","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":11,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Next.js 앱의 배포와 성능 최적화: Vercel을 이용한 배포와 성능 개선 팁.12",{"children":["$","$La",null,{"postMeta":{"id":"27cc0449-7187-4595-a3ba-b127438ae11d","path":"/javascript/Nextjs-앱의-배포와-성능-최적화-Vercel을-이용한-배포와-성능-개선-팁-27cc0449","title":"Next.js 앱의 배포와 성능 최적화: Vercel을 이용한 배포와 성능 개선 팁.","description":"Next.js 앱을 Vercel을 이용해 배포하고 성능 최적화를 위한 다양한 팁을 소개합니다. 각 섹션에서는 배포 과정과 성능 개선 방법에 대해 상세히 다루며, 주요 지침을 제공합니다.","date":"2024-07-03T06:02:47.671Z","tags":[{"name":"Next.js","path":"/tags/next.js","id":"next.js"},{"name":"Vercel","path":"/tags/vercel","id":"vercel"},{"name":"배포","path":"/tags/배포","id":"배포"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"}],"readMin":"4.8","category":"javascript","banner":"/images/javascriptBanner4.jpg"},"index":12,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁13",{"children":["$","$La",null,{"postMeta":{"id":"8c849992-eb99-446f-aaaf-6bf4e2e92599","path":"/swift/성능-최적화를-위한-UICollectionViewCompositionalLayout의-주요-메서드와-팁-8c849992","title":"성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁","description":"이 글은 성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁을 다룹니다. UICollectionViewCompositionalLayout는 유연하고 복잡한 레이아웃을 쉽게 구현할 수 있는 강력한 도구입니다. 본 글에서는 이 레이아웃의 성능을 최적화하기 위한 실용적인 방법과 유용한 메서드를 소개합니다.","date":"2024-07-02T06:05:00.340Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"UICollectionView","path":"/tags/uicollectionview","id":"uicollectionview"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"}],"readMin":"4.5","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":13,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","iOS 레이아웃 최적화: updateConstraints와 setFrame 사용 비교14",{"children":["$","$La",null,{"postMeta":{"id":"72786722-70dc-4a4f-96b8-1d51cc617f18","path":"/swift/iOS-레이아웃-최적화-updateConstraints와-setFrame-사용-비교-72786722","title":"iOS 레이아웃 최적화: updateConstraints와 setFrame 사용 비교","description":"이 글은 iOS 앱 개발에서 레이아웃 최적화를 위해 `updateConstraints`와 `setFrame`을 비교하며, 각각의 사용 시기를 설명합니다. 이를 통해 개발자는 효율적이고 성능 최적화된 UI를 구성할 수 있습니다.","date":"2024-06-27T06:01:51.003Z","tags":[{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"레이아웃","path":"/tags/레이아웃","id":"레이아웃"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"}],"readMin":"3.8","category":"swift","banner":"/images/swiftBanner5.jpg"},"index":14,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","ISR을 활용한 페이지 업데이트: 증분 정적 재생성의 원리와 구현 방법.15",{"children":["$","$La",null,{"postMeta":{"id":"84128750-7c77-485b-ac5f-55dc36dc6cd4","path":"/javascript/ISR을-활용한-페이지-업데이트-증분-정적-재생성의-원리와-구현-방법-84128750","title":"ISR을 활용한 페이지 업데이트: 증분 정적 재생성의 원리와 구현 방법.","description":"ISR(Incremental Static Regeneration, 증분 정적 재생성)은 웹 페이지의 성능을 최적화하면서도 최신 데이터를 항상 제공하기 위한 기술입니다. 이 글에서는 ISR의 기본 원리와 구현 방법에 대해 심층적으로 다룹니다.","date":"2024-06-26T06:02:22.257Z","tags":[{"name":"ISR","path":"/tags/isr","id":"isr"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"웹 개발","path":"/tags/웹-개발","id":"웹-개발"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"}],"readMin":"4.8","category":"javascript","banner":"/images/javascriptBanner1.jpg"},"index":15,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","contentInsetAdjustmentBehavior의 성능 영향 평가: 이 속성 변경이 앱 성능에 미치는 영향 분석.16",{"children":["$","$La",null,{"postMeta":{"id":"b069b956-995e-4fa0-9b0c-8c22b82434dc","path":"/swift/contentInsetAdjustmentBehavior의-성능-영향-평가-이-속성-변경이-앱-성능에-미치는-영향-분석-b069b956","title":"contentInsetAdjustmentBehavior의 성능 영향 평가: 이 속성 변경이 앱 성능에 미치는 영향 분석.","description":"이 글에서는 Swift 언어와 iOS 개발에서 중요한 UI 구성 요소인 contentInsetAdjustmentBehavior 속성이 앱 성능에 미치는 영향을 분석합니다. 각 속성 값의 차이점을 비교하고, 성능 최적화를 위한 고려 사항들을 구체적으로 다룹니다.","date":"2024-06-24T06:02:49.652Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"UI","path":"/tags/ui","id":"ui"}],"readMin":"4.7","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":16,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","iOS 애플리케이션의 성능 최적화 기법: 프로파일링 도구를 사용한 성능 분석 및 개선 방법.17",{"children":["$","$La",null,{"postMeta":{"id":"6fc142c5-2a49-44ef-9eb5-e82138b0fa32","path":"/swift/iOS-애플리케이션의-성능-최적화-기법-프로파일링-도구를-사용한-성능-분석-및-개선-방법-6fc142c5","title":"iOS 애플리케이션의 성능 최적화 기법: 프로파일링 도구를 사용한 성능 분석 및 개선 방법.","description":"이 글에서는 iOS 애플리케이션의 성능 최적화 기법에 대해 알아봅니다. 주요 프로파일링 도구를 사용하여 성능을 분석하고 개선하는 방법을 단계별로 설명하고, 개발자들이 자주 마주하는 성능 문제와 해결 팁도 제공합니다.","date":"2024-06-19T06:02:50.826Z","tags":[{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"프로파일링","path":"/tags/프로파일링","id":"프로파일링"}],"readMin":"5.3","category":"swift","banner":"/images/swiftBanner1.jpg"},"index":17,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift 코드 성능 최적화: Swift 애플리케이션의 성능 프로파일링 및 개선 기법.18",{"children":["$","$La",null,{"postMeta":{"id":"02b8babf-44fd-4b22-8af4-d7b7ac660a3a","path":"/swift/Swift-코드-성능-최적화-Swift-애플리케이션의-성능-프로파일링-및-개선-기법-02b8babf","title":"Swift 코드 성능 최적화: Swift 애플리케이션의 성능 프로파일링 및 개선 기법.","description":"이 글은 Swift 애플리케이션의 성능을 최적화하기 위한 코드 프로파일링과 개선 기술에 대한 내용을 다룹니다. 성능 병목 현상을 식별하고 이를 해결하는 다양한 기법을 소개합니다.","date":"2024-06-18T06:03:08.086Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"프로파일링","path":"/tags/프로파일링","id":"프로파일링"},{"name":"코딩 기법","path":"/tags/코딩-기법","id":"코딩-기법"}],"readMin":"4.6","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":18,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift DispatchQueue로 성능 최적화하기: 반드시 피해야 할 실수들19",{"children":["$","$La",null,{"postMeta":{"id":"b7e5aa04-0698-4f2b-a322-dd75826d85c9","path":"/swift/Swift-DispatchQueue로-성능-최적화하기-반드시-피해야-할-실수들-b7e5aa04","title":"Swift DispatchQueue로 성능 최적화하기: 반드시 피해야 할 실수들","description":"Swift의 DispatchQueue를 사용한 성능 최적화 과정에서 발생할 수 있는 몇 가지 실수들을 살펴보고, 이를 어떻게 피할 수 있는지 설명합니다. 이를 통해 보다 효율적이고 안전한 코드를 작성할 수 있도록 돕습니다.","date":"2024-06-09T13:57:03.924Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"DispatchQueue","path":"/tags/dispatchqueue","id":"dispatchqueue"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"5.3","category":"swift","banner":"/images/swiftBanner4.jpg"},"index":19,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","iOS 성능 최적화: NSLock와 NSRecursiveLock으로 동시성 문제 해결하기20",{"children":["$","$La",null,{"postMeta":{"id":"35be7d38-cdef-4bcb-8a61-9b9c3a3a8256","path":"/swift/iOS-성능-최적화-NSLock와-NSRecursiveLock으로-동시성-문제-해결하기-35be7d38","title":"iOS 성능 최적화: NSLock와 NSRecursiveLock으로 동시성 문제 해결하기","description":"본 글에서는 iOS 개발 시 성능 최적화를 위해 사용되는 두 가지 중요한 동기화 도구인 `NSLock`과 `NSRecursiveLock`에 대해 알아보고, 이를 통해 동시성 문제를 효과적으로 해결하는 방법을 소개합니다.","date":"2024-06-02T00:00:00.000Z","tags":[{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"NSLock","path":"/tags/nslock","id":"nslock"},{"name":"NSRecursiveLock","path":"/tags/nsrecursivelock","id":"nsrecursivelock"}],"readMin":"5.2","category":"swift","banner":"/images/swiftBanner4.jpg"},"index":20,"articleType":"최신글","screenType":"TAGS","language":"app"}]}]]}]]}]}]}]]}],null],"segment":"__PAGE__?{\"slug\":\"성능-최적화\"}"},"styles":[]}],"segment":["slug","%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94","d"]},"styles":[]}],"segment":"tags"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"성능 최적화 관련글 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","3",{"name":"keywords","content":"마고자비 블로그 블로그,Swift,Javascript,최적화,앱개발,1인 개발,개발자,개발,Developer"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com//tags/%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"성능 최적화 관련글 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"성능 최적화 관련글 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com//tags/%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/magomercy.png"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"성능 최적화 관련글 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/magomercy.png"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
8:null
