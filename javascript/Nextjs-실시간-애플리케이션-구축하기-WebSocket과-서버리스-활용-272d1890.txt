1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","Nextjs-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0-WebSocket%EA%B3%BC-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%ED%99%9C%EC%9A%A9-272d1890","d"],{"children":["__PAGE__?{\"slug\":\"Nextjs-실시간-애플리케이션-구축하기-WebSocket과-서버리스-활용-272d1890\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","Nextjs-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0-WebSocket%EA%B3%BC-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%ED%99%9C%EC%9A%A9-272d1890","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Nextjs-실시간-애플리케이션-구축하기-WebSocket과-서버리스-활용-272d1890\"}"},"styles":[]}],"segment":["slug","Nextjs-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0-WebSocket%EA%B3%BC-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%ED%99%9C%EC%9A%A9-272d1890","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Next.js 실시간 애플리케이션 구축하기: WebSocket과 서버리스 활용 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 최신 JavaScript 프레임워크인 Next.js를 사용하여 실시간 애플리케이션을 구축하는 방법에 대해 알아봅니다. 특히, 실시간 통신을 위해 WebSocket을 사용하고, 백엔드 서버리스 환경을 활용하는 방법을 자세히 설명합니다."}],["$","meta","3",{"name":"keywords","content":"Next.js,WebSocket,서버리스,실시간 애플리케이션"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/Nextjs-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0-WebSocket%EA%B3%BC-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%ED%99%9C%EC%9A%A9-272d1890"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Next.js 실시간 애플리케이션 구축하기: WebSocket과 서버리스 활용 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Next.js 실시간 애플리케이션 구축하기: WebSocket과 서버리스 활용 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 최신 JavaScript 프레임워크인 Next.js를 사용하여 실시간 애플리케이션을 구축하는 방법에 대해 알아봅니다. 특히, 실시간 통신을 위해 WebSocket을 사용하고, 백엔드 서버리스 환경을 활용하는 방법을 자세히 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/Nextjs-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0-WebSocket%EA%B3%BC-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%ED%99%9C%EC%9A%A9-272d1890"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Next.js 실시간 애플리케이션 구축하기: WebSocket과 서버리스 활용 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 최신 JavaScript 프레임워크인 Next.js를 사용하여 실시간 애플리케이션을 구축하는 방법에 대해 알아봅니다. 특히, 실시간 통신을 위해 WebSocket을 사용하고, 백엔드 서버리스 환경을 활용하는 방법을 자세히 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
10:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
11:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
e:T42f,// pages/index.js
import { useEffect, useState } from 'react';

export default function Home() {
  const [messages, setMessages] = useState([]);
  const [message, setMessage] = useState('');

  useEffect(() => {
    const socket = new WebSocket('ws://localhost:3000/api/socket');

    socket.onmessage = (event) => {
      const newMessage = JSON.parse(event.data);
      setMessages((prevMessages) => [...prevMessages, newMessage]);
    };

    return () => socket.close();
  }, []);

  const sendMessage = () => {
    const socket = new WebSocket('ws://localhost:3000/api/socket');
    socket.onopen = () => {
      socket.send(JSON.stringify({ text: message }));
      setMessage('');
    };
  };

  return (
    <div>
      <h1>실시간 채팅 애플리케이션</h1>
      <div>
        {messages.map((msg, i) => (
          <p key={i}>{msg.text}</p>
        ))}
      </div>
      <input
        type='text'
        value={message}
        onChange={(e) => setMessage(e.target.value)}
      />
      <button onClick={sendMessage}>전송</button>
    </div>
  );
}
f:T42f,// pages/index.js
import { useEffect, useState } from 'react';

export default function Home() {
  const [messages, setMessages] = useState([]);
  const [message, setMessage] = useState('');

  useEffect(() => {
    const socket = new WebSocket('ws://localhost:3000/api/socket');

    socket.onmessage = (event) => {
      const newMessage = JSON.parse(event.data);
      setMessages((prevMessages) => [...prevMessages, newMessage]);
    };

    return () => socket.close();
  }, []);

  const sendMessage = () => {
    const socket = new WebSocket('ws://localhost:3000/api/socket');
    socket.onopen = () => {
      socket.send(JSON.stringify({ text: message }));
      setMessage('');
    };
  };

  return (
    <div>
      <h1>실시간 채팅 애플리케이션</h1>
      <div>
        {messages.map((msg, i) => (
          <p key={i}>{msg.text}</p>
        ))}
      </div>
      <input
        type='text'
        value={message}
        onChange={(e) => setMessage(e.target.value)}
      />
      <button onClick={sendMessage}>전송</button>
    </div>
  );
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Next.js 실시간 애플리케이션 구축하기: WebSocket과 서버리스 활용"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Next.js 실시간 애플리케이션 구축하기: WebSocket과 서버리스 활용"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-19"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"cc5ca874","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Next.js 실시간 애플리케이션 구축하기: WebSocket과 서버리스 활용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Next.js는 React와 함께 사용되는 인기 있는 JavaScript 프레임워크로, 서버 사이드 렌더링(SSR)과 정적 웹사이트 생성을 모두 지원합니다. 실시간 애플리케이션을 구축하기 위해 Next.js와 WebSocket을 결합하면, 사용자가 즉각적으로 변화를 경험하도록 할 수 있습니다. 이 글에서는 이러한 실시간 기능을 서버리스 환경에서 구현하는 방법을 소개하겠습니다."}],"\n",["$","h2",null,{"id":"06fc0244","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Next.js 소개"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Next.js는 Vercel에서 개발한 React 애플리케이션을 위한 프레임워크로, 서버 사이드 렌더링과 정적 사이트 생성을 용이하게 만듭니다. 여기서 주목할 부분은 Next.js가 페이지 수준에서 자동 코드 분할을 제공하여 초기 로딩 속도를 크게 향상시킨다는 점입니다."}],"\n",["$","h3",null,{"id":"f8cad7b0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"주요 특징"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"서버 사이드 렌더링(SSR)"}],": 페이지 로드를 위한 최적화된 HTML을 생성하여 초기 페이지 로드 속도를 높입니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"정적 사이트 생성(SSG)"}],": Build 시점에 HTML을 생성하여 빠른 정적 페이지를 제공합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"API Routes"}],": 백엔드 서버 설정 없이 API를 생성할 수 있습니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"e1ff1ce7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"WebSocket 개요"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"WebSocket은 HTTP와 달리, 클라이언트와 서버 간의 양방향 통신을 가능하게 하는 프로토콜입니다. 일반적으로 실시간 데이터 전송이 필요한 채팅 애플리케이션이나 온라인 게임 등에 사용됩니다. WebSocket은 연결이 초기화된 후, 지속적인 연결 상태를 유지하여 데이터를 주고 받기 때문에 실시간 데이터 전송에 매우 효율적입니다."}],"\n",["$","h2",null,{"id":"1b3c7a58","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"서버리스 개요"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"서버리스 아키텍처는 서버 관리를 필요로 하지 않는 클라우드 컴퓨팅 실행 모델입니다. AWS Lambda, Google Cloud Functions와 같은 서버리스 플랫폼을 통해 컴퓨팅 자원을 자동으로 관리하고, 이벤트 기반으로 짧은 시간 동안 애플리케이션 코드를 실행할 수 있습니다."}],"\n",["$","h2",null,{"id":"f97ba9b0","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"실시간 애플리케이션 구축하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 Next.js, WebSocket, 그리고 서버리스 환경을 활용하여 실시간 애플리케이션을 구축해 보겠습니다."}],"\n",["$","h3",null,{"id":"ff165eab","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"프로젝트 초기 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"먼저 Next.js 프로젝트를 생성합니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-bash","node":{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"npx create-next-app@latest 실시간-애플리케이션\ncd 실시간-애플리케이션\n"}],"position":{"start":{"line":32,"column":1,"offset":1124},"end":{"line":35,"column":4,"offset":1187}}},"children":"npx create-next-app@latest 실시간-애플리케이션\ncd 실시간-애플리케이션\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"프로젝트가 생성되면 필요한 의존성을 설치합니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-bash","node":{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"npm install ws\nnpm install @vercel/node\n"}],"position":{"start":{"line":39,"column":1,"offset":1217},"end":{"line":42,"column":4,"offset":1268}}},"children":"npm install ws\nnpm install @vercel/node\n"}}]}],"\n",["$","h3",null,{"id":"95b0328b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"서버리스 함수 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 서버리스 함수로 WebSocket 서버를 설정해 보겠습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pages/api","position":{"start":{"line":46,"column":38,"offset":1323},"end":{"line":46,"column":49,"offset":1334}}}],"position":{"start":{"line":46,"column":38,"offset":1323},"end":{"line":46,"column":49,"offset":1334}}},"children":"pages/api"}}]," 폴더에 새로운 파일을 생성합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// pages/api/socket.js\nimport { Server } from 'ws';\n\nexport default function handler(req, res) {\n  if (!res.socket.server.ws) {\n    const wsServer = new Server({ server: res.socket.server });\n\n    wsServer.on('connection', socket => {\n      socket.on('message', data => {\n        const message = JSON.parse(data);\n        wsServer.clients.forEach(client => {\n          if (client !== socket && client.readyState === client.OPEN) {\n            client.send(JSON.stringify(message));\n          }\n        });\n      });\n    });\n\n    res.socket.server.ws = wsServer;\n  }\n  res.end();\n}\n"}],"position":{"start":{"line":48,"column":1,"offset":1355},"end":{"line":71,"column":4,"offset":1952}}},"children":"// pages/api/socket.js\nimport { Server } from 'ws';\n\nexport default function handler(req, res) {\n  if (!res.socket.server.ws) {\n    const wsServer = new Server({ server: res.socket.server });\n\n    wsServer.on('connection', socket => {\n      socket.on('message', data => {\n        const message = JSON.parse(data);\n        wsServer.clients.forEach(client => {\n          if (client !== socket && client.readyState === client.OPEN) {\n            client.send(JSON.stringify(message));\n          }\n        });\n      });\n    });\n\n    res.socket.server.ws = wsServer;\n  }\n  res.end();\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 코드 블록은 WebSocket 서버를 설정하고, 서버리스 환경에서 다수의 클라이언트 간 메세지를 송수신 할 수 있도록 합니다."}],"\n",["$","h3",null,{"id":"403a6881","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"클라이언트 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 클라이언트에서 WebSocket을 설정하고 통신을 시작합니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":79,"column":1,"offset":2081},"end":{"line":123,"column":4,"offset":3143}}},"children":"$f"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 Next.js 페이지가 WebSocket을 통해 실시간 소통을 할 수 있게 되었습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":125,"column":53,"offset":3197},"end":{"line":125,"column":64,"offset":3208}}}],"position":{"start":{"line":125,"column":53,"offset":3197},"end":{"line":125,"column":64,"offset":3208}}},"children":"useEffect"}}],"를 사용하여 컴포넌트가 마운트될 때 WebSocket 연결을 설정하고, 새로운 메시지가 수신될 때마다 상태를 업데이트합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이번 글에서는 Next.js를 사용하여 서버리스 환경에서 WebSocket을 통해 실시간 애플리케이션을 구축하는 방법을 알아보았습니다. 이러한 접근 방식은 서버 관리를 단순화하면서도 고성능의 실시간 경험을 제공할 수 있습니다. 이를 통해 다양한 실시간 애플리케이션, 예를 들어 채팅 애플리케이션, 주식 거래 플랫폼, 라이브 데이터 대시보드 등을 쉽게 구현할 수 있게 되었습니다. 앞으로도 Next.js와 같은 최신 기술을 통해 더욱 효과적이고 효율적인 개발을 계속해 나가시기 바랍니다."}]]}]}],["$","$L10",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L11",null,{"articleTitle":"Next.js 실시간 애플리케이션 구축하기: WebSocket과 서버리스 활용","toc":[{"tagName":"h1","title":"Next.js 실시간 애플리케이션 구축하기: WebSocket과 서버리스 활용","id":"cc5ca874"},{"tagName":"h2","title":"Next.js 소개","id":"06fc0244"},{"tagName":"h3","title":"주요 특징","id":"f8cad7b0"},{"tagName":"h2","title":"WebSocket 개요","id":"e1ff1ce7"},{"tagName":"h2","title":"서버리스 개요","id":"1b3c7a58"},{"tagName":"h2","title":"실시간 애플리케이션 구축하기","id":"f97ba9b0"},{"tagName":"h3","title":"프로젝트 초기 설정","id":"ff165eab"},{"tagName":"h3","title":"서버리스 함수 구현","id":"95b0328b"},{"tagName":"h3","title":"클라이언트 구현","id":"403a6881"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
