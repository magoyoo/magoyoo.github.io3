1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["tags",{"children":[["slug","react","d"],{"children":["__PAGE__?{\"slug\":\"react\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
9:I{"id":1247,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","396:static/chunks/396-5bd701a67a6189e9.js","355:static/chunks/app/tags/[slug]/page-4363d8d5fe95e0a7.js"],"name":"","async":false}
a:I{"id":41465,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","396:static/chunks/396-5bd701a67a6189e9.js","355:static/chunks/app/tags/[slug]/page-4363d8d5fe95e0a7.js"],"name":"","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children",["slug","react","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8",["$","div",null,{"className":"pt-[80px]","children":[["$","$L9",null,{"language":"app","screenType":"TAGS"}],["$","main",null,{"className":"flex w-full justify-center","children":["$","div",null,{"className":"flex flex-row justify-start xl:w-[800px] w-full px-[20px] py-[40px] md:px-[40px] md:pb-[80px] md:pt-[60px] gap-[80px]","children":["$","section",null,{"className":"flex flex-1 flex-col gap-[80px]","children":[["$","h2",null,{"className":"md:flex hidden text-gray-900 font-semibold text-[22px]","children":"React 관련글"}],["$","ul",null,{"className":"flex flex-1 flex-col gap-[80px]","children":[["$","li","React.js Hooks 완벽 가이드: useState, useEffect 활용법0",{"children":["$","$La",null,{"postMeta":{"id":"cb780e65-4eb2-4140-8da7-1fdc9b2f31ae","path":"/javascript/Reactjs-Hooks-완벽-가이드-useState-useEffect-활용법-cb780e65","title":"React.js Hooks 완벽 가이드: useState, useEffect 활용법","description":"React는 현대 웹 개발에서 중요한 위치를 차지하고 있습니다. 이번 글에서는 React의 핵심 기능인 Hooks 중 useState와 useEffect에 대해 심층적으로 다루어 보겠습니다. 이 두 가지 Hooks의 기본 사용법과 함께 실전 예제를 통해 학습해보세요.","date":"2024-07-24T06:01:25.078Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Hooks","path":"/tags/hooks","id":"hooks"},{"name":"useState","path":"/tags/usestate","id":"usestate"},{"name":"useEffect","path":"/tags/useeffect","id":"useeffect"}],"readMin":"5.3","category":"javascript","banner":"/images/javascriptBanner5.jpg"},"index":0,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Next.js 서버 사이드 렌더링(SSR) 완벽 가이드1",{"children":["$","$La",null,{"postMeta":{"id":"e7ca9af2-c5cf-450d-b8f2-3c2765143692","path":"/javascript/Nextjs-서버-사이드-렌더링SSR-완벽-가이드-e7ca9af2","title":"Next.js 서버 사이드 렌더링(SSR) 완벽 가이드","description":"Next.js는 React 프레임워크로서, 서버 사이드 렌더링(SSR)을 통해 더 빠른 페이지 로딩과 SEO 최적화를 제공합니다. 여기서는 Next.js에서 서버 사이드 렌더링을 설정하고 사용하는 방법을 자세히 설명합니다.","date":"2024-07-20T06:01:05.514Z","tags":[{"name":"Next.js","path":"/tags/next.js","id":"next.js"},{"name":"SSR","path":"/tags/ssr","id":"ssr"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"React","path":"/tags/react","id":"react"}],"readMin":"5.5","category":"javascript","banner":"/images/javascriptBanner4.jpg"},"index":1,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Next.js 성능 최적화 팁: 빠르고 효율적인 웹사이트 만들기2",{"children":["$","$La",null,{"postMeta":{"id":"8fabe013-a7cc-4ffb-9017-69c53d7027a3","path":"/javascript/Nextjs-성능-최적화-팁-빠르고-효율적인-웹사이트-만들기-8fabe013","title":"Next.js 성능 최적화 팁: 빠르고 효율적인 웹사이트 만들기","description":"이 문서는 Next.js를 사용하여 웹사이트의 성능을 최적화하는 다양한 팁과 방법에 대해 설명합니다. Next.js의 기능과 도구를 최대한 활용하여 빠르고 효율적인 웹사이트를 만드는 법을 학습할 수 있습니다.","date":"2024-07-16T06:02:59.934Z","tags":[{"name":"Next.js","path":"/tags/next.js","id":"next.js"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"웹 개발","path":"/tags/웹-개발","id":"웹-개발"},{"name":"React","path":"/tags/react","id":"react"}],"readMin":"5.8","category":"javascript","banner":"/images/javascriptBanner3.jpg"},"index":2,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React.js 메모이제이션(Memoization)으로 렌더링 성능 최적화3",{"children":["$","$La",null,{"postMeta":{"id":"d5839cdd-1bd5-4c51-b103-c622ce0e7410","path":"/javascript/Reactjs-메모이제이션Memoization으로-렌더링-성능-최적화-d5839cdd","title":"React.js 메모이제이션(Memoization)으로 렌더링 성능 최적화","description":"이 글에서는 `React.js`에서 메모이제이션(memoization)을 사용하여 렌더링 성능을 최적화하는 방법에 대해 설명합니다. `React.memo`, `useMemo`, `useCallback` 등 주요 메모이제이션 기법을 다루며, 코드 예시를 통해 구체적인 사용법을 알려드립니다.","date":"2024-07-12T06:03:02.175Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Memoization","path":"/tags/memoization","id":"memoization"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"}],"readMin":"4.5","category":"javascript","banner":"/images/javascriptBanner3.jpg"},"index":3,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Props와 State의 차이점: Props와 State를 활용한 데이터 흐름 이해와 예제.4",{"children":["$","$La",null,{"postMeta":{"id":"933cffb6-3491-4bd7-820c-4ed4ce3a4142","path":"/javascript/Props와-State의-차이점-Props와-State를-활용한-데이터-흐름-이해와-예제-933cffb6","title":"Props와 State의 차이점: Props와 State를 활용한 데이터 흐름 이해와 예제.","description":"Props와 State는 React에서 데이터 관리를 위해 사용되는 중요한 개념입니다. 이 글은 Props와 State의 차이점을 설명하고, 이들이 데이터 흐름을 어떻게 다루는지, 그리고 실용적인 예시를 통해 이해를 돕고자 합니다.","date":"2024-07-08T06:02:41.547Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Props","path":"/tags/props","id":"props"},{"name":"State","path":"/tags/state","id":"state"},{"name":"데이터흐름","path":"/tags/데이터흐름","id":"데이터흐름"}],"readMin":"4.5","category":"javascript","banner":"/images/javascriptBanner4.jpg"},"index":4,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React 프로젝트 세팅하기: create-react-app을 사용한 환경 설정 단계별 안내.5",{"children":["$","$La",null,{"postMeta":{"id":"1de0c4bd-1c03-4bf2-a4a5-0bc013dba652","path":"/javascript/React-프로젝트-세팅하기-createreactapp을-사용한-환경-설정-단계별-안내-1de0c4bd","title":"React 프로젝트 세팅하기: create-react-app을 사용한 환경 설정 단계별 안내.","description":"이 글은 `create-react-app`을 사용하여 새로운 React 프로젝트를 설정하는 방법을 단계별로 안내합니다. React 애플리케이션을 처음 시작하는 초보자들에게 유용한 정보가 담겨있습니다.","date":"2024-07-08T06:00:38.701Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"create-react-app","path":"/tags/create-react-app","id":"create-react-app"},{"name":"프로젝트 설정","path":"/tags/프로젝트-설정","id":"프로젝트-설정"}],"readMin":"4.5","category":"javascript","banner":"/images/javascriptBanner5.jpg"},"index":5,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React에서 Class형 Component는 구시대의 산물인가 ? 언제 활용해야할까 ?6",{"children":["$","$La",null,{"postMeta":{"id":"c16d7d27-6750-49c0-8ae8-e981b958e381","path":"/javascript/React에서-Class형-Component는-구시대의-산물인가-언제-활용해야할까--c16d7d27","title":"React에서 Class형 Component는 구시대의 산물인가 ? 언제 활용해야할까 ?","description":"React에서 클래스형 컴포넌트는 최근 함수형 컴포넌트로 대체되며 구시대의 산물로 여겨지고 있습니다. 그렇다면 클래스형 컴포넌트를 언제 활용하는 것이 좋을까요? 이 글에서는 클래스형 컴포넌트의 특징과 사용처에 대해 알아봅니다.","date":"2024-07-07T06:01:23.537Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Class Component","path":"/tags/class-component","id":"class-component"},{"name":"Function Component","path":"/tags/function-component","id":"function-component"},{"name":"Javascript","path":"/tags/javascript","id":"javascript"}],"readMin":"5.3","category":"javascript","banner":"/images/javascriptBanner2.jpg"},"index":6,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","컴포넌트 라이프 사이클 이해하기: 클래스 컴포넌트의 라이프사이클 메소드와 그 사용 시기.7",{"children":["$","$La",null,{"postMeta":{"id":"f13e4113-5a25-473b-b1c9-faf4aea5dc32","path":"/javascript/컴포넌트-라이프-사이클-이해하기-클래스-컴포넌트의-라이프사이클-메소드와-그-사용-시기-f13e4113","title":"컴포넌트 라이프 사이클 이해하기: 클래스 컴포넌트의 라이프사이클 메소드와 그 사용 시기.","description":"이 글에서는 React의 클래스 컴포넌트에서 사용되는 라이프사이클 메소드를 살펴봅니다. 각 메소드가 언제 호출되며, 어떤 기능을 수행하는지에 대해 자세히 알아보겠습니다. 이를 통해 클래스 컴포넌트를 더욱 효과적으로 활용할 수 있습니다.","date":"2024-07-06T06:03:28.162Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"클래스 컴포넌트","path":"/tags/클래스-컴포넌트","id":"클래스-컴포넌트"},{"name":"라이프사이클 메소드","path":"/tags/라이프사이클-메소드","id":"라이프사이클-메소드"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"}],"readMin":"5.0","category":"javascript","banner":"/images/javascriptBanner3.jpg"},"index":7,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Props in React: 컴포넌트에서 Props 전달 및 사용 방법.8",{"children":["$","$La",null,{"postMeta":{"id":"4e5b58e8-12d0-42db-b95d-b4181561f95e","path":"/javascript/Props-in-React-컴포넌트에서-Props-전달-및-사용-방법-4e5b58e8","title":"Props in React: 컴포넌트에서 Props 전달 및 사용 방법.","description":"이 글은 React에서 'Props'의 개념과 이를 사용하여 컴포넌트 간에 데이터를 전달하고 사용하는 방법에 대해 다룹니다. 구체적인 예제와 함께 Props의 실질적인 활용법을 자세히 설명합니다.","date":"2024-07-05T06:03:41.047Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"Props","path":"/tags/props","id":"props"},{"name":"컴포넌트","path":"/tags/컴포넌트","id":"컴포넌트"}],"readMin":"5.7","category":"javascript","banner":"/images/javascriptBanner1.jpg"},"index":8,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React 시작하기: 첫 React 앱 설정하기.9",{"children":["$","$La",null,{"postMeta":{"id":"f5204f06-2f63-4c20-b33a-e6d6da342e3a","path":"/javascript/React-시작하기-첫-React-앱-설정하기-f5204f06","title":"React 시작하기: 첫 React 앱 설정하기.","description":"이 글은 React 프레임워크에 익숙하지 않은 개발자를 위해, 첫 React 앱을 설정하는 방법을 설명합니다. React의 기본 개념부터 필요한 도구 설치, 간단한 컴포넌트 작성까지 단계별로 안내합니다.","date":"2024-07-04T06:03:11.557Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"프론트엔드","path":"/tags/프론트엔드","id":"프론트엔드"},{"name":"웹 개발","path":"/tags/웹-개발","id":"웹-개발"}],"readMin":"3.6","category":"javascript","banner":"/images/javascriptBanner1.jpg"},"index":9,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","조건부 렌더링과 리스트 렌더링: 조건에 따라 다른 컴포넌트를 보여주는 방법과 배열 데이터를 리스트로 변환하는 방법.10",{"children":["$","$La",null,{"postMeta":{"id":"dbc61c40-9784-4123-9f36-8d757cb02c62","path":"/javascript/조건부-렌더링과-리스트-렌더링-조건에-따라-다른-컴포넌트를-보여주는-방법과-배열-데이터를-리스트로-변환하는-방법-dbc61c40","title":"조건부 렌더링과 리스트 렌더링: 조건에 따라 다른 컴포넌트를 보여주는 방법과 배열 데이터를 리스트로 변환하는 방법.","description":"이 글에서는 JavaScript와 React를 이용한 조건부 렌더링과 리스트 렌더링에 대해 다룹니다. 조건부 렌더링으로 특정 조건에 따라 다른 컴포넌트를 표시하는 방법과 리스트 렌더링을 통해 배열 데이터를 리스트로 변환하는 방법을 살펴봅니다.","date":"2024-07-03T06:03:16.510Z","tags":[{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"React","path":"/tags/react","id":"react"},{"name":"조건부 렌더링","path":"/tags/조건부-렌더링","id":"조건부-렌더링"},{"name":"리스트 렌더링","path":"/tags/리스트-렌더링","id":"리스트-렌더링"}],"readMin":"5.2","category":"javascript","banner":"/images/javascriptBanner2.jpg"},"index":10,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Effect 훅: React에서 부수 효과를 다루는 useEffect 이해하기.11",{"children":["$","$La",null,{"postMeta":{"id":"3c351133-90af-437c-9d64-539df3ffd534","path":"/javascript/Effect-훅-React에서-부수-효과를-다루는-useEffect-이해하기-3c351133","title":"Effect 훅: React에서 부수 효과를 다루는 useEffect 이해하기.","description":"React에서 부수 효과를 다루는 `useEffect` 훅을 이해하고 활용하는 방법을 설명합니다. 이 글에서는 `useEffect`의 기본 사용법부터 고급 활용법까지 다루며, 코드 예제를 통해 개념을 쉽게 이해할 수 있도록 돕습니다.","date":"2024-07-03T06:01:46.043Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"useEffect","path":"/tags/useeffect","id":"useeffect"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"프론트엔드","path":"/tags/프론트엔드","id":"프론트엔드"}],"readMin":"5.5","category":"javascript","banner":"/images/javascriptBanner3.jpg"},"index":11,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React Context API: 컴포넌트 간 상태 관리 간소화.12",{"children":["$","$La",null,{"postMeta":{"id":"cd18bb11-1035-441d-add4-e577e0ff66cb","path":"/javascript/React-Context-API-컴포넌트-간-상태-관리-간소화-cd18bb11","title":"React Context API: 컴포넌트 간 상태 관리 간소화.","description":"React Context API는 컴포넌트 계층 구조 전반에 걸쳐 데이터를 효율적으로 공유하기 위한 도구입니다. 이 글에서는 Context API의 개념, 사용법, 그리고 실제 코드 예제를 통해 컴포넌트 간 상태 관리의 복잡성을 어떻게 줄일 수 있는지 알아봅니다.","date":"2024-07-02T06:01:48.179Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Context API","path":"/tags/context-api","id":"context-api"},{"name":"상태 관리","path":"/tags/상태-관리","id":"상태-관리"},{"name":"프론트엔드","path":"/tags/프론트엔드","id":"프론트엔드"}],"readMin":"4.7","category":"javascript","banner":"/images/javascriptBanner5.jpg"},"index":12,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","리액트 폼 처리의 모범 사례: 입력 유효성 검사와 폼 제출 처리 방법.13",{"children":["$","$La",null,{"postMeta":{"id":"04ac53c7-e73c-4b0c-bbfd-717ecafc418f","path":"/javascript/리액트-폼-처리의-모범-사례-입력-유효성-검사와-폼-제출-처리-방법-04ac53c7","title":"리액트 폼 처리의 모범 사례: 입력 유효성 검사와 폼 제출 처리 방법.","description":"이 글에서는 리액트를 사용하여 폼을 효과적으로 처리하는 방법에 대해 살펴볼 것입니다. 여기에는 입력 유효성 검사와 폼 제출 처리 방법에 대한 모범 사례가 포함됩니다.","date":"2024-07-01T06:03:02.181Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"폼 처리","path":"/tags/폼-처리","id":"폼-처리"},{"name":"유효성 검사","path":"/tags/유효성-검사","id":"유효성-검사"},{"name":"모범 사례","path":"/tags/모범-사례","id":"모범-사례"}],"readMin":"5.8","category":"javascript","banner":"/images/javascriptBanner5.jpg"},"index":13,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React에서 폼 처리하기: 폼 상태 관리 및 제출 기술.14",{"children":["$","$La",null,{"postMeta":{"id":"9210d26e-28f8-463f-8fcb-058e2e165c1c","path":"/javascript/React에서-폼-처리하기-폼-상태-관리-및-제출-기술-9210d26e","title":"React에서 폼 처리하기: 폼 상태 관리 및 제출 기술.","description":"이 글에서는 React에서 폼을 처리하는 방법에 대해 알아보고, 상태 관리 및 폼 제출 기술에 대해 다룹니다. 사용자가 입력한 데이터를 효율적으로 관리하고 서버로 제출하는 과정을 이해하는 데 도움이 됩니다.","date":"2024-07-01T06:00:29.163Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Forms","path":"/tags/forms","id":"forms"},{"name":"State Management","path":"/tags/state-management","id":"state-management"},{"name":"Submission","path":"/tags/submission","id":"submission"}],"readMin":"5.9","category":"javascript","banner":"/images/javascriptBanner3.jpg"},"index":14,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React에서 데이터 가져오기: Axios와 useEffect를 사용하여 데이터 검색.15",{"children":["$","$La",null,{"postMeta":{"id":"b39921c5-18c0-4cbd-9d43-2014260cf9d6","path":"/javascript/React에서-데이터-가져오기-Axios와-useEffect를-사용하여-데이터-검색-b39921c5","title":"React에서 데이터 가져오기: Axios와 useEffect를 사용하여 데이터 검색.","description":"이 글에서는 React에서 데이터를 가져오기 위해 많이 사용되는 라이브러리 Axios와 useEffect 훅을 활용하여 데이터 검색 과정을 설명합니다. 비동기 데이터 처리를 원활하게 수행하는 방법을 자세히 다룹니다.","date":"2024-06-30T06:02:40.094Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Axios","path":"/tags/axios","id":"axios"},{"name":"useEffect","path":"/tags/useeffect","id":"useeffect"},{"name":"비동기 데이터 처리","path":"/tags/비동기-데이터-처리","id":"비동기-데이터-처리"}],"readMin":"4.7","category":"javascript","banner":"/images/javascriptBanner3.jpg"},"index":15,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React Router를 활용한 다중 페이지 애플리케이션 만들기: 메뉴와 라우트 설정을 통한 SPA 구현.16",{"children":["$","$La",null,{"postMeta":{"id":"0a2cbd5a-0d9a-42dc-86a8-77f2f85057ab","path":"/javascript/React-Router를-활용한-다중-페이지-애플리케이션-만들기-메뉴와-라우트-설정을-통한-SPA-구현-0a2cbd5a","title":"React Router를 활용한 다중 페이지 애플리케이션 만들기: 메뉴와 라우트 설정을 통한 SPA 구현.","description":"React Router를 활용하여 다중 페이지 애플리케이션(SPA)을 만드는 방법과 메뉴 및 라우트 설정에 대해 다룹니다. 이 글에서는 React Router의 기본 개념뿐만 아니라, 실제 라우트를 설정하고, 메뉴를 통해 페이지 간 이동을 구현하는 법을 설명합니다.","date":"2024-06-27T06:03:16.520Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"React Router","path":"/tags/react-router","id":"react-router"},{"name":"SPA","path":"/tags/spa","id":"spa"}],"readMin":"6.8","category":"javascript","banner":"/images/javascriptBanner2.jpg"},"index":16,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Hooks와 클래스 컴포넌트의 라이프사이클 메소드 비교: useEffect와 전통적인 라이프사이클 메소드의 사용 시기와 차이점 설명.17",{"children":["$","$La",null,{"postMeta":{"id":"41549d74-f36a-499c-9646-3f070bf15b51","path":"/javascript/Hooks와-클래스-컴포넌트의-라이프사이클-메소드-비교-useEffect와-전통적인-라이프사이클-메소드의-사용-시기와-차이점-설명-41549d74","title":"Hooks와 클래스 컴포넌트의 라이프사이클 메소드 비교: useEffect와 전통적인 라이프사이클 메소드의 사용 시기와 차이점 설명.","description":"이 글에서는 React의 Hooks와 클래스 컴포넌트를 비교하며, 특히 useEffect와 전통적인 라이프사이클 메소드 간의 사용 시기와 차이점을 설명합니다.","date":"2024-06-27T06:02:11.944Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Hooks","path":"/tags/hooks","id":"hooks"},{"name":"클래스 컴포넌트","path":"/tags/클래스-컴포넌트","id":"클래스-컴포넌트"},{"name":"useEffect","path":"/tags/useeffect","id":"useeffect"}],"readMin":"4.8","category":"javascript","banner":"/images/javascriptBanner3.jpg"},"index":17,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","JSX 기초: JSX 문법과 React에서의 역할 이해하기.18",{"children":["$","$La",null,{"postMeta":{"id":"bb3a3272-1a26-4fb3-b5f0-354b6ba36766","path":"/javascript/JSX-기초-JSX-문법과-React에서의-역할-이해하기-bb3a3272","title":"JSX 기초: JSX 문법과 React에서의 역할 이해하기.","description":"이 글은 JSX의 기초 개념과 문법, React에서의 활용 방법을 쉽게 이해할 수 있도록 설명합니다. JSX는 JavaScript를 확장한 문법으로, React 개발에서 매우 중요한 역할을 합니다.","date":"2024-06-27T06:01:35.368Z","tags":[{"name":"JSX","path":"/tags/jsx","id":"jsx"},{"name":"React","path":"/tags/react","id":"react"},{"name":"프론트엔드","path":"/tags/프론트엔드","id":"프론트엔드"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"}],"readMin":"4.2","category":"javascript","banner":"/images/javascriptBanner3.jpg"},"index":18,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React에서의 상태 관리: useState와 useReducer 훅 소개.19",{"children":["$","$La",null,{"postMeta":{"id":"bae8decb-fb25-46b6-b2db-2dd4a16fb69e","path":"/javascript/React에서의-상태-관리-useState와-useReducer-훅-소개-bae8decb","title":"React에서의 상태 관리: useState와 useReducer 훅 소개.","description":"이 글에서는 React에서의 상태 관리 방법인 `useState`와 `useReducer` 훅을 중심으로 상태를 관리하는 방법을 설명합니다. 두 훅의 사용법과 각각의 장단점을 비교하여 React 앱 개발 시 어떤 상황에서 어떤 방법을 사용할지 알아봅니다.","date":"2024-06-26T06:03:00.575Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"useState","path":"/tags/usestate","id":"usestate"},{"name":"useReducer","path":"/tags/usereducer","id":"usereducer"},{"name":"상태 관리","path":"/tags/상태-관리","id":"상태-관리"}],"readMin":"4.9","category":"javascript","banner":"/images/javascriptBanner1.jpg"},"index":19,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","create-react-app을 통한 React 설치 및 첫 페이지 만들기: 프로젝트 구조 파악과 첫 컴포넌트 작성 방법.20",{"children":["$","$La",null,{"postMeta":{"id":"42fd08ff-15be-46ab-9be6-80bcfce04b78","path":"/javascript/createreactapp을-통한-React-설치-및-첫-페이지-만들기-프로젝트-구조-파악과-첫-컴포넌트-작성-방법-42fd08ff","title":"create-react-app을 통한 React 설치 및 첫 페이지 만들기: 프로젝트 구조 파악과 첫 컴포넌트 작성 방법.","description":"이 문서에서는 create-react-app을 사용하여 React 프로젝트를 설치하고 첫 페이지를 만드는 방법에 대해 다룹니다. 또한 프로젝트의 기본 구조와 첫 컴포넌트를 작성하는 방법에 대해서도 설명합니다.","date":"2024-06-26T06:00:52.892Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Create-React-App","path":"/tags/create-react-app","id":"create-react-app"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"5.0","category":"javascript","banner":"/images/javascriptBanner2.jpg"},"index":20,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","useEffect로 API 호출하기: REST API를 호출하고 데이터를 불러오는 방법.21",{"children":["$","$La",null,{"postMeta":{"id":"949b82d2-e34a-4f00-92e6-b3af1fcbc4c3","path":"/javascript/useEffect로-API-호출하기-REST-API를-호출하고-데이터를-불러오는-방법-949b82d2","title":"useEffect로 API 호출하기: REST API를 호출하고 데이터를 불러오는 방법.","description":"이 글에서는 React의 Hook 중 하나인 `useEffect`를 사용하여 REST API를 호출하고 데이터를 불러오는 방법에 대해 설명합니다. 초보자도 이해할 수 있도록 단계별로 안내하며, 코드를 통해 실습해볼 수 있습니다.","date":"2024-06-25T06:02:54.203Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"useEffect","path":"/tags/useeffect","id":"useeffect"},{"name":"REST API","path":"/tags/rest-api","id":"rest-api"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"}],"readMin":"3.7","category":"javascript","banner":"/images/javascriptBanner4.jpg"},"index":21,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Next.js 프로젝트 시작하기: Next.js 앱 생성과 주요 디렉토리 구조.22",{"children":["$","$La",null,{"postMeta":{"id":"6d7278d9-92bf-4716-8655-e712ddb9cc58","path":"/javascript/Nextjs-프로젝트-시작하기-Nextjs-앱-생성과-주요-디렉토리-구조-6d7278d9","title":"Next.js 프로젝트 시작하기: Next.js 앱 생성과 주요 디렉토리 구조.","description":"Next.js는 React 기반의 서버 사이드 렌더링을 지원하는 프레임워크로, 높은 성능과 SEO 최적화를 제공합니다. 이 글에서는 Next.js 프로젝트를 시작하는 방법과 주요 디렉토리 구조에 대해 설명합니다.","date":"2024-06-25T06:02:12.955Z","tags":[{"name":"Next.js","path":"/tags/next.js","id":"next.js"},{"name":"React","path":"/tags/react","id":"react"},{"name":"웹 개발","path":"/tags/웹-개발","id":"웹-개발"},{"name":"프레임워크","path":"/tags/프레임워크","id":"프레임워크"}],"readMin":"3.9","category":"javascript","banner":"/images/javascriptBanner2.jpg"},"index":22,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","JSX에서 변수와 이벤트 핸들링: JSX 내에서 변수를 사용하고 이벤트를 다루는 구체적인 예제.23",{"children":["$","$La",null,{"postMeta":{"id":"a86b7f38-c790-434d-9ca3-22d506fa1a2f","path":"/javascript/JSX에서-변수와-이벤트-핸들링-JSX-내에서-변수를-사용하고-이벤트를-다루는-구체적인-예제-a86b7f38","title":"JSX에서 변수와 이벤트 핸들링: JSX 내에서 변수를 사용하고 이벤트를 다루는 구체적인 예제.","description":"JSX에서 변수와 이벤트 핸들링은 리액트를 사용한 웹 개발에서 중요합니다. 이 글에서는 JSX 내에서 변수 사용법과 이벤트 핸들링을 구체적인 예제로 설명합니다.","date":"2024-06-25T06:00:48.707Z","tags":[{"name":"JSX","path":"/tags/jsx","id":"jsx"},{"name":"React","path":"/tags/react","id":"react"},{"name":"이벤트 핸들링","path":"/tags/이벤트-핸들링","id":"이벤트-핸들링"},{"name":"변수","path":"/tags/변수","id":"변수"}],"readMin":"5.1","category":"javascript","banner":"/images/javascriptBanner5.jpg"},"index":23,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","함수형 컴포넌트에서의 상태 관리: useState 훅 사용법과 예제.24",{"children":["$","$La",null,{"postMeta":{"id":"0dd15295-04e1-4ec8-83eb-016aa888f881","path":"/javascript/함수형-컴포넌트에서의-상태-관리-useState-훅-사용법과-예제-0dd15295","title":"함수형 컴포넌트에서의 상태 관리: useState 훅 사용법과 예제.","description":"이 글은 React의 함수형 컴포넌트에서 상태를 관리하기 위한 useState 훅의 사용법과 예제에 대해 설명합니다. 함수형 컴포넌트를 활용한 React 개발에 있어서 중요한 상태 관리를 쉽게 이해하고 활용할 수 있도록 도와줍니다.","date":"2024-06-24T06:01:30.825Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"useState","path":"/tags/usestate","id":"usestate"},{"name":"상태 관리","path":"/tags/상태-관리","id":"상태-관리"},{"name":"함수형 컴포넌트","path":"/tags/함수형-컴포넌트","id":"함수형-컴포넌트"}],"readMin":"5.4","category":"javascript","banner":"/images/javascriptBanner2.jpg"},"index":24,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","JSX 이해하기: JSX가 React에서 UI 코드 작성을 어떻게 쉽게 만드는지.25",{"children":["$","$La",null,{"postMeta":{"id":"ec753406-ccd8-4b99-9d7b-7e2f6a6c18ff","path":"/javascript/JSX-이해하기-JSX가-React에서-UI-코드-작성을-어떻게-쉽게-만드는지-ec753406","title":"JSX 이해하기: JSX가 React에서 UI 코드 작성을 어떻게 쉽게 만드는지.","description":"이 글에서는 JSX가 무엇이고, React에서 UI 코드를 작성할 때 어떻게 도움을 주는지에 대해 자세히 설명합니다. JSX의 기본 구조와 사용법을 예제를 통해 이해하고, 이를 통해 복잡한 UI를 보다 쉽게 관리하고 개발할 수 있는 방법을 배웁니다.","date":"2024-06-23T06:03:11.075Z","tags":[{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"React","path":"/tags/react","id":"react"},{"name":"JSX","path":"/tags/jsx","id":"jsx"}],"readMin":"4.8","category":"javascript","banner":"/images/javascriptBanner4.jpg"},"index":25,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","컨텍스트 API로 글로벌 상태 관리하기: useContext 훅을 이용한 상태 관리 설명.26",{"children":["$","$La",null,{"postMeta":{"id":"2a3ca280-b0fe-4e97-8154-5cc24b06b2be","path":"/javascript/컨텍스트-API로-글로벌-상태-관리하기-useContext-훅을-이용한-상태-관리-설명-2a3ca280","title":"컨텍스트 API로 글로벌 상태 관리하기: useContext 훅을 이용한 상태 관리 설명.","description":"이 글에서는 React 애플리케이션에서 글로벌 상태 관리를 위해 컨텍스트 API를 사용하는 방법과 useContext 훅을 이용한 상태 관리에 대해 설명합니다.","date":"2024-06-23T06:02:56.122Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"useContext","path":"/tags/usecontext","id":"usecontext"},{"name":"Context API","path":"/tags/context-api","id":"context-api"},{"name":"상태 관리","path":"/tags/상태-관리","id":"상태-관리"}],"readMin":"4.5","category":"javascript","banner":"/images/javascriptBanner4.jpg"},"index":26,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React Router: 싱글 페이지 애플리케이션에서 페이지 간 네비게이션 기초.27",{"children":["$","$La",null,{"postMeta":{"id":"aa4f8e18-e4be-4e30-accf-74a50f2e0a5e","path":"/javascript/React-Router-싱글-페이지-애플리케이션에서-페이지-간-네비게이션-기초-aa4f8e18","title":"React Router: 싱글 페이지 애플리케이션에서 페이지 간 네비게이션 기초.","description":"이 글은 React 생태계에서 널리 사용되는 라우팅 라이브러리인 React Router에 대해 다룹니다. 특히 싱글 페이지 애플리케이션(SPA)에서 페이지 간 네비게이션을 구현하는 기초적인 방법을 소개합니다.","date":"2024-06-23T06:02:23.818Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"React Router","path":"/tags/react-router","id":"react-router"},{"name":"SPA","path":"/tags/spa","id":"spa"},{"name":"네비게이션","path":"/tags/네비게이션","id":"네비게이션"}],"readMin":"4.3","category":"javascript","banner":"/images/javascriptBanner4.jpg"},"index":27,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","컨텍스트 API를 활용한 테마 토글 기능 구현: 어두운 모드와 밝은 모드 전환 기능 추가하기.28",{"children":["$","$La",null,{"postMeta":{"id":"77c40b86-45ae-490a-b866-934b46f86dd4","path":"/javascript/컨텍스트-API를-활용한-테마-토글-기능-구현-어두운-모드와-밝은-모드-전환-기능-추가하기-77c40b86","title":"컨텍스트 API를 활용한 테마 토글 기능 구현: 어두운 모드와 밝은 모드 전환 기능 추가하기.","description":"이 글에서는 React 컨텍스트 API를 사용하여 어두운 모드와 밝은 모드를 전환할 수 있는 테마 토글 기능을 구현하는 방법에 대해 살펴봅니다. 각 단계별로 필요한 코드와 설명을 제공하며, 실제 프로젝트에서 활용할 수 있도록 안내합니다.","date":"2024-06-23T06:02:06.708Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Context API","path":"/tags/context-api","id":"context-api"},{"name":"테마 토글","path":"/tags/테마-토글","id":"테마-토글"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"}],"readMin":"5.3","category":"javascript","banner":"/images/javascriptBanner1.jpg"},"index":28,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React Router로 SPA 라우팅 구현하기: 기본적인 라우팅 설정과 동적 라우팅 방법.29",{"children":["$","$La",null,{"postMeta":{"id":"d3694800-7016-47b3-a4bc-6ef4259baef1","path":"/javascript/React-Router로-SPA-라우팅-구현하기-기본적인-라우팅-설정과-동적-라우팅-방법-d3694800","title":"React Router로 SPA 라우팅 구현하기: 기본적인 라우팅 설정과 동적 라우팅 방법.","description":"React Router는 Single Page Application(SPA)에서 라우팅을 구현하기 위한 강력한 도구입니다. 이 글에서는 React Router를 사용하여 기본적인 라우팅 설정과 동적 라우팅 방법에 대해 다룹니다.","date":"2024-06-23T06:01:51.688Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Router","path":"/tags/router","id":"router"},{"name":"SPA","path":"/tags/spa","id":"spa"},{"name":"라우팅","path":"/tags/라우팅","id":"라우팅"}],"readMin":"5.0","category":"javascript","banner":"/images/javascriptBanner4.jpg"},"index":29,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React 컴포넌트: 클래스 대 함수형 컴포넌트 설명.30",{"children":["$","$La",null,{"postMeta":{"id":"82c84314-9d95-4d12-af04-3751a992f9ab","path":"/javascript/React-컴포넌트-클래스-대-함수형-컴포넌트-설명-82c84314","title":"React 컴포넌트: 클래스 대 함수형 컴포넌트 설명.","description":"이 글은 React 컴포넌트 유형인 클래스 컴포넌트와 함수형 컴포넌트의 차이점과 각각의 장단점에 대해 다룹니다. 현대 웹 개발에서 이 두 가지 접근 방식에 대한 이해는 필수적입니다.","date":"2024-06-22T06:03:47.740Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"컴포넌트","path":"/tags/컴포넌트","id":"컴포넌트"},{"name":"웹 개발","path":"/tags/웹-개발","id":"웹-개발"}],"readMin":"4.6","category":"javascript","banner":"/images/javascriptBanner2.jpg"},"index":30,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React에서 Axios를 사용한 REST API 호출과 데이터 처리: API 호출 후 받은 데이터를 화면에 표시하는 상세 프로세스.31",{"children":["$","$La",null,{"postMeta":{"id":"f405691d-3dc5-4325-a863-bb6a3c382a54","path":"/javascript/React에서-Axios를-사용한-REST-API-호출과-데이터-처리-API-호출-후-받은-데이터를-화면에-표시하는-상세-프로세스-f405691d","title":"React에서 Axios를 사용한 REST API 호출과 데이터 처리: API 호출 후 받은 데이터를 화면에 표시하는 상세 프로세스.","description":"이 글은 React 애플리케이션에서 Axios를 사용하여 REST API를 호출하고, 받아온 데이터를 화면에 표시하는 과정을 다룹니다. 구체적인 코드 예시와 함께 데이터 로딩 상태 처리, 오류 처리 방안 등을 상세히 설명합니다.","date":"2024-06-22T06:01:25.071Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Axios","path":"/tags/axios","id":"axios"},{"name":"REST API","path":"/tags/rest-api","id":"rest-api"},{"name":"프론트엔드","path":"/tags/프론트엔드","id":"프론트엔드"}],"readMin":"5.6","category":"javascript","banner":"/images/javascriptBanner4.jpg"},"index":31,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Next.js의 이미지 컴포넌트를 사용한 최적화: 이미지 성능 개선을 위한 실용적인 팁과 예제.32",{"children":["$","$La",null,{"postMeta":{"id":"f24640cb-0979-4017-b08e-a7e417ddff02","path":"/javascript/Nextjs의-이미지-컴포넌트를-사용한-최적화-이미지-성능-개선을-위한-실용적인-팁과-예제-f24640cb","title":"Next.js의 이미지 컴포넌트를 사용한 최적화: 이미지 성능 개선을 위한 실용적인 팁과 예제.","description":"이 글은 Next.js의 이미지 컴포넌트를 사용하여 웹사이트의 이미지 성능을 최적화하는 방법에 대해 설명합니다. 실용적인 팁과 예제를 제공하여 개발자들이 쉽게 적용할 수 있도록 도와줍니다.","date":"2024-06-21T06:03:42.342Z","tags":[{"name":"Next.js","path":"/tags/next.js","id":"next.js"},{"name":"이미지 최적화","path":"/tags/이미지-최적화","id":"이미지-최적화"},{"name":"웹 성능","path":"/tags/웹-성능","id":"웹-성능"},{"name":"React","path":"/tags/react","id":"react"}],"readMin":"5.1","category":"javascript","banner":"/images/javascriptBanner3.jpg"},"index":32,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","컴포넌트 간 데이터 전달: Props를 사용하여 데이터를 자식 컴포넌트로 전달하는 방법.33",{"children":["$","$La",null,{"postMeta":{"id":"ba522c37-5f60-4c9c-82f7-b1f725b83357","path":"/javascript/컴포넌트-간-데이터-전달-Props를-사용하여-데이터를-자식-컴포넌트로-전달하는-방법-ba522c37","title":"컴포넌트 간 데이터 전달: Props를 사용하여 데이터를 자식 컴포넌트로 전달하는 방법.","description":"이 글은 자바스크립트와 리액트에서 부모 컴포넌트가 자식 컴포넌트로 데이터를 전달하기 위해 사용하는 중요한 개념인 'Props'에 대해 설명합니다. Props를 이용하면 컴포넌트 간의 데이터 전달을 가능하게 하며, 이를 통해 코드의 재사용성과 유지보수성을 높일 수 있습니다.","date":"2024-06-21T06:00:36.087Z","tags":[{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"React","path":"/tags/react","id":"react"},{"name":"Props","path":"/tags/props","id":"props"},{"name":"컴포넌트","path":"/tags/컴포넌트","id":"컴포넌트"}],"readMin":"5.2","category":"javascript","banner":"/images/javascriptBanner1.jpg"},"index":33,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","폼 처리와 유효성 검사 구현하기: React Hook Form을 사용한 폼 처리와 간단한 유효성 검사 방법.34",{"children":["$","$La",null,{"postMeta":{"id":"1fe8ea33-19be-444b-b483-0855573852df","path":"/javascript/폼-처리와-유효성-검사-구현하기-React-Hook-Form을-사용한-폼-처리와-간단한-유효성-검사-방법-1fe8ea33","title":"폼 처리와 유효성 검사 구현하기: React Hook Form을 사용한 폼 처리와 간단한 유효성 검사 방법.","description":"이 글에서는 React 어플리케이션에서 `React Hook Form`을 사용하여 폼을 처리하고 기본적인 유효성 검사를 구현하는 방법을 다룹니다. 간단한 예제를 통해 폼의 상태 관리와 유효성 검사의 중요성을 설명합니다.","date":"2024-06-20T06:04:58.042Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"Form","path":"/tags/form","id":"form"},{"name":"Validation","path":"/tags/validation","id":"validation"}],"readMin":"5.7","category":"javascript","banner":"/images/javascriptBanner5.jpg"},"index":34,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","react 개발자에게 Next.js는 필수일까 선택일까? 35",{"children":["$","$La",null,{"postMeta":{"id":"7aef209e-eb4f-48c2-8de3-d57124b5697a","path":"/javascript/react-개발자에게-Nextjs는-필수일까-선택일까--7aef209e","title":"react 개발자에게 Next.js는 필수일까 선택일까? ","description":"이 글은 React 개발자들이 Next.js를 필수로 배워야 하는지 선택할 수 있는지에 대해 탐구하고 있습니다. Next.js의 장점과 단점, 그리고 다양한 케이스를 통해 Next.js의 필요성 여부를 살펴봅니다.","date":"2024-06-20T06:00:27.814Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Next.js","path":"/tags/next.js","id":"next.js"},{"name":"웹 개발","path":"/tags/웹-개발","id":"웹-개발"},{"name":"프레임워크","path":"/tags/프레임워크","id":"프레임워크"}],"readMin":"5.1","category":"javascript","banner":"/images/javascriptBanner2.jpg"},"index":35,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","React에서의 상태 관리 심화: useState 훅을 사용하여 상태를 여러 컴포넌트에 걸쳐 관리하는 방법.36",{"children":["$","$La",null,{"postMeta":{"id":"fecabb8e-54bd-499a-a35b-b00b97b121dc","path":"/javascript/React에서의-상태-관리-심화-useState-훅을-사용하여-상태를-여러-컴포넌트에-걸쳐-관리하는-방법-fecabb8e","title":"React에서의 상태 관리 심화: useState 훅을 사용하여 상태를 여러 컴포넌트에 걸쳐 관리하는 방법.","description":"이 글은 React에서 useState 훅을 사용하여 상태를 여러 컴포넌트에 걸쳐 관리하는 방법에 대해 심도 깊게 다룹니다. 상태 관리의 기본 개념부터 시작해 구체적인 예제와 함께 실습을 통해 이해를 돕습니다.","date":"2024-06-19T06:02:18.758Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"useState","path":"/tags/usestate","id":"usestate"},{"name":"상태 관리","path":"/tags/상태-관리","id":"상태-관리"},{"name":"컴포넌트","path":"/tags/컴포넌트","id":"컴포넌트"}],"readMin":"4.3","category":"javascript","banner":"/images/javascriptBanner3.jpg"},"index":36,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Next.js 소개: 왜 Next.js를 React 앱에 사용해야 할까요?37",{"children":["$","$La",null,{"postMeta":{"id":"2f92daef-8a40-4447-acae-6e56be920a54","path":"/javascript/Nextjs-소개-왜-Nextjs를-React-앱에-사용해야-할까요-2f92daef","title":"Next.js 소개: 왜 Next.js를 React 앱에 사용해야 할까요?","description":"Next.js는 React 애플리케이션 개발을 위한 프레임워크로, 서버사이드 렌더링, 정적 사이트 생성을 포함한 다양한 기능을 제공합니다. 이 글에서는 Next.js의 주요 특징과 이점을 살펴보고, 왜 React 애플리케이션 개발에 Next.js를 사용해야 하는지에 대해 논의합니다.","date":"2024-06-18T06:01:32.450Z","tags":[{"name":"Next.js","path":"/tags/next.js","id":"next.js"},{"name":"React","path":"/tags/react","id":"react"},{"name":"웹 개발","path":"/tags/웹-개발","id":"웹-개발"},{"name":"프레임워크","path":"/tags/프레임워크","id":"프레임워크"}],"readMin":"5.5","category":"javascript","banner":"/images/javascriptBanner4.jpg"},"index":37,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Next.js에 Styled Components 적용하기: 쉽게 따라하는 가이드38",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/web/Nextjs에-Styled-Components-적용하기-쉽게 따라하는-가이드","title":"Next.js에 Styled Components 적용하기: 쉽게 따라하는 가이드","description":"Next.js 프로젝트에 Styled Components를 적용하는 방법을 알아보세요. 이 가이드를 통해 서버 사이드 렌더링 설정부터 기본적인 Styled Components 사용법까지 단계별로 친절하게 설명합니다. Next.js와 Styled Components의 완벽한 조화를 경험해 보세요.","date":"2024-01-31T11:30:07.322Z","tags":[{"name":"next","path":"/tags/next","id":"next"},{"name":"styled-components","path":"/tags/styled-components","id":"styled-components"},{"name":"ssr","path":"/tags/ssr","id":"ssr"},{"name":"react","path":"/tags/react","id":"react"}],"readMin":"3.8","category":"web","banner":"/images/05f41314-2859-4909-8d5f-b480cb560cee.webp"},"index":38,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","근황, 생각, 1.1.0 업데이트 내용39",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/history/블로그+업데이트+내용+1+1+0","title":"근황, 생각, 1.1.0 업데이트 내용","description":"블로그 업데이트 내용과 근황을 공유합니다.","date":"2023-04-16T01:10:07.322Z","tags":[{"name":"블로그","path":"/tags/블로그","id":"블로그"},{"name":"nextjs","path":"/tags/nextjs","id":"nextjs"},{"name":"github","path":"/tags/github","id":"github"},{"name":"gh-pages","path":"/tags/gh-pages","id":"gh-pages"},{"name":"git","path":"/tags/git","id":"git"},{"name":"react","path":"/tags/react","id":"react"},{"name":"update","path":"/tags/update","id":"update"},{"name":"think","path":"/tags/think","id":"think"}],"readMin":"4.7","category":"history","banner":"/images/profileCapture.jpg"},"index":39,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","22.06.10 블로그 업데이트(1.0.5)40",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/history/블로그+업데이트+내용+1+0+5","title":"22.06.10 블로그 업데이트(1.0.5)","description":"22.06.10 블로그 업데이트를 공유합니다.","date":"2022-06-10T01:10:07.322Z","tags":[{"name":"블로그","path":"/tags/블로그","id":"블로그"},{"name":"nextjs","path":"/tags/nextjs","id":"nextjs"},{"name":"github","path":"/tags/github","id":"github"},{"name":"gh-pages","path":"/tags/gh-pages","id":"gh-pages"},{"name":"git","path":"/tags/git","id":"git"},{"name":"react","path":"/tags/react","id":"react"},{"name":"update","path":"/tags/update","id":"update"}],"readMin":"1.6","category":"history","banner":"/images/update105.png"},"index":40,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","22.06.02 블로그 업데이트(1.0.4)41",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/history/블로그+업데이트+내용+1+0+4","title":"22.06.02 블로그 업데이트(1.0.4)","description":"22.06.02 블로그 업데이트를 공유합니다.","date":"2022-06-02T12:20:07.322Z","tags":[{"name":"블로그","path":"/tags/블로그","id":"블로그"},{"name":"nextjs","path":"/tags/nextjs","id":"nextjs"},{"name":"github","path":"/tags/github","id":"github"},{"name":"gh-pages","path":"/tags/gh-pages","id":"gh-pages"},{"name":"git","path":"/tags/git","id":"git"},{"name":"react","path":"/tags/react","id":"react"},{"name":"update","path":"/tags/update","id":"update"}],"readMin":"2.5","category":"history","banner":"/images/update104.png"},"index":41,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","22.05.30 블로그 업데이트(1.0.2 ~ 1.0.3)42",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/history/블로그+업데이트+내용+1+0+3","title":"22.05.30 블로그 업데이트(1.0.2 ~ 1.0.3)","description":"22.05.30 블로그 업데이트를 공유합니다.","date":"2022-05-30T12:43:07.322Z","tags":[{"name":"블로그","path":"/tags/블로그","id":"블로그"},{"name":"nextjs","path":"/tags/nextjs","id":"nextjs"},{"name":"github","path":"/tags/github","id":"github"},{"name":"gh-pages","path":"/tags/gh-pages","id":"gh-pages"},{"name":"git","path":"/tags/git","id":"git"},{"name":"react","path":"/tags/react","id":"react"},{"name":"update","path":"/tags/update","id":"update"}],"readMin":"1.2","category":"history","banner":"/images/update103.png"},"index":42,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","블로그 컨셉, 리뉴얼43",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/web/블로그+컨셉과+리뉴얼","title":"블로그 컨셉, 리뉴얼","description":"블로그 컨셉에 대한 고민, 로고 제작기, 그리고 앞으로의 방향성에 대해 알아봅니다.","date":"2022-05-29T02:00:07.322Z","tags":[{"name":"블로그","path":"/tags/블로그","id":"블로그"},{"name":"nextjs","path":"/tags/nextjs","id":"nextjs"},{"name":"github","path":"/tags/github","id":"github"},{"name":"gh-pages","path":"/tags/gh-pages","id":"gh-pages"},{"name":"git","path":"/tags/git","id":"git"},{"name":"react","path":"/tags/react","id":"react"},{"name":"logo","path":"/tags/logo","id":"logo"}],"readMin":"5.2","category":"web","banner":"/images/blogRenew.png"},"index":43,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","22.05.22 블로그 업데이트(1.0.1)44",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/history/블로그+업데이트+내용+1+0+1","title":"22.05.22 블로그 업데이트(1.0.1)","description":"22.05.22 블로그 업데이트 내용과 근황을 공유합니다.","date":"2022-05-22T10:13:07.322Z","tags":[{"name":"블로그","path":"/tags/블로그","id":"블로그"},{"name":"nextjs","path":"/tags/nextjs","id":"nextjs"},{"name":"github","path":"/tags/github","id":"github"},{"name":"gh-pages","path":"/tags/gh-pages","id":"gh-pages"},{"name":"git","path":"/tags/git","id":"git"},{"name":"react","path":"/tags/react","id":"react"},{"name":"update","path":"/tags/update","id":"update"}],"readMin":"2.6","category":"history","banner":"/images/update101.png"},"index":44,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Next로 Github Blog 만드는 법, 고려사항 및 유의사항45",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/web/next+react+로+blog만드는+법+주의사항","title":"Next로 Github Blog 만드는 법, 고려사항 및 유의사항","description":"React로 쉽게 만드는 Github Blog. 해당 블로그의 기술 스택 및 고려사항 및 유의사항을 알아봅니다.","date":"2021-10-24T01:13:07.322Z","tags":[{"name":"블로그","path":"/tags/블로그","id":"블로그"},{"name":"nextjs","path":"/tags/nextjs","id":"nextjs"},{"name":"github","path":"/tags/github","id":"github"},{"name":"gh-pages","path":"/tags/gh-pages","id":"gh-pages"},{"name":"git","path":"/tags/git","id":"git"},{"name":"react","path":"/tags/react","id":"react"}],"readMin":"5.7","category":"web","banner":"/images/blogBackNextGit.png"},"index":45,"articleType":"최신글","screenType":"TAGS","language":"app"}]}]]}]]}]}]}]]}],null],"segment":"__PAGE__?{\"slug\":\"react\"}"},"styles":[]}],"segment":["slug","react","d"]},"styles":[]}],"segment":"tags"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"React 관련글 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","3",{"name":"keywords","content":"마고자비 블로그 블로그,Swift,Javascript,최적화,앱개발,1인 개발,개발자,개발,Developer"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com//tags/react"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"React 관련글 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"React 관련글 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com//tags/react"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/magomercy.png"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"React 관련글 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/magomercy.png"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
8:null
