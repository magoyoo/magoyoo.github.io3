1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94%EB%A5%BC-%EC%9C%84%ED%95%9C-UICollectionViewCompositionalLayout%EC%9D%98-%EC%A3%BC%EC%9A%94-%EB%A9%94%EC%84%9C%EB%93%9C%EC%99%80-%ED%8C%81-8c849992","d"],{"children":["__PAGE__?{\"slug\":\"성능-최적화를-위한-UICollectionViewCompositionalLayout의-주요-메서드와-팁-8c849992\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94%EB%A5%BC-%EC%9C%84%ED%95%9C-UICollectionViewCompositionalLayout%EC%9D%98-%EC%A3%BC%EC%9A%94-%EB%A9%94%EC%84%9C%EB%93%9C%EC%99%80-%ED%8C%81-8c849992","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"성능-최적화를-위한-UICollectionViewCompositionalLayout의-주요-메서드와-팁-8c849992\"}"},"styles":[]}],"segment":["slug","%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94%EB%A5%BC-%EC%9C%84%ED%95%9C-UICollectionViewCompositionalLayout%EC%9D%98-%EC%A3%BC%EC%9A%94-%EB%A9%94%EC%84%9C%EB%93%9C%EC%99%80-%ED%8C%81-8c849992","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁을 다룹니다. UICollectionViewCompositionalLayout는 유연하고 복잡한 레이아웃을 쉽게 구현할 수 있는 강력한 도구입니다. 본 글에서는 이 레이아웃의 성능을 최적화하기 위한 실용적인 방법과 유용한 메서드를 소개합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,iOS,UICollectionView,성능 최적화"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94%EB%A5%BC-%EC%9C%84%ED%95%9C-UICollectionViewCompositionalLayout%EC%9D%98-%EC%A3%BC%EC%9A%94-%EB%A9%94%EC%84%9C%EB%93%9C%EC%99%80-%ED%8C%81-8c849992"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁을 다룹니다. UICollectionViewCompositionalLayout는 유연하고 복잡한 레이아웃을 쉽게 구현할 수 있는 강력한 도구입니다. 본 글에서는 이 레이아웃의 성능을 최적화하기 위한 실용적인 방법과 유용한 메서드를 소개합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94%EB%A5%BC-%EC%9C%84%ED%95%9C-UICollectionViewCompositionalLayout%EC%9D%98-%EC%A3%BC%EC%9A%94-%EB%A9%94%EC%84%9C%EB%93%9C%EC%99%80-%ED%8C%81-8c849992"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁을 다룹니다. UICollectionViewCompositionalLayout는 유연하고 복잡한 레이아웃을 쉽게 구현할 수 있는 강력한 도구입니다. 본 글에서는 이 레이아웃의 성능을 최적화하기 위한 실용적인 방법과 유용한 메서드를 소개합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-02"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"9cb4db1f","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UICollectionViewCompositionalLayout는 iOS 개발에서 매우 강력한 도구로, 복잡하고 유연한 레이아웃을 쉽고 효율적으로 구성할 수 있습니다. 그러나 복잡한 레이아웃을 처리할 때는 성능이 저하될 수 있습니다. 이 글에서는 UICollectionViewCompositionalLayout의 성능을 최적화하기 위한 주요 메서드와 실용적인 팁을 소개합니다."}],"\n",["$","h2",null,{"id":"e8081f67","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UICollectionViewCompositionalLayout의 개요"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["UICollectionViewCompositionalLayout는 iOS 13부터 도입된 레이아웃 방식으로, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UICollectionView","position":{"start":{"line":8,"column":62,"offset":379},"end":{"line":8,"column":80,"offset":397}}}],"position":{"start":{"line":8,"column":62,"offset":379},"end":{"line":8,"column":80,"offset":397}}},"children":"UICollectionView"}}],"의 레이아웃을 선언형으로 구성할 수 있게 해줍니다. 이 방식은 훨씬 더 복잡하고 다양한 레이아웃을 손쉽게 구현할 수 있게 해주어 많은 개발자들에게 큰 인기를 끌고 있습니다."]}],"\n",["$","h3",null,{"id":"23c4bf37","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"주요 구성 요소"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"Sections"}],": 컬렉션 뷰의 데이터 섹션을 나타냅니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"Groups"}],": 섹션 안의 아이템을 그룹화합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"Items"}],": 컬렉션 뷰에 표시될 실제 아이템들입니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"예를 들어, 다음과 같은 설정을 통해 다양한 크기의 아이템을 가진 복잡한 레이아웃을 정의할 수 있습니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nlet itemSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(0.2), heightDimension: .fractionalHeight(1.0))\nlet item = NSCollectionLayoutItem(layoutSize: itemSize)\n\nlet groupSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0), heightDimension: .absolute(44))\nlet group = NSCollectionLayoutGroup.horizontal(layoutSize: groupSize, subitems: [item])\n\nlet section = NSCollectionLayoutSection(group: group)\nlet layout = UICollectionViewCompositionalLayout(section: section)\n\nlet collectionView = UICollectionView(frame: .zero, collectionViewLayout: layout)\n"}],"position":{"start":{"line":18,"column":1,"offset":677},"end":{"line":31,"column":4,"offset":1281}}},"children":"import UIKit\n\nlet itemSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(0.2), heightDimension: .fractionalHeight(1.0))\nlet item = NSCollectionLayoutItem(layoutSize: itemSize)\n\nlet groupSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0), heightDimension: .absolute(44))\nlet group = NSCollectionLayoutGroup.horizontal(layoutSize: groupSize, subitems: [item])\n\nlet section = NSCollectionLayoutSection(group: group)\nlet layout = UICollectionViewCompositionalLayout(section: section)\n\nlet collectionView = UICollectionView(frame: .zero, collectionViewLayout: layout)\n"}}]}],"\n",["$","h2",null,{"id":"d01531af","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"성능 최적화를 위한 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"복잡한 레이아웃에서는 최적화가 중요합니다. 최적화를 위한 몇 가지 방법을 소개하겠습니다."}],"\n",["$","h3",null,{"id":"8096ad83","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 프리패칭 (Pre-fetching)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UICollectionViewDataSourcePrefetching","position":{"start":{"line":39,"column":1,"offset":1380},"end":{"line":39,"column":40,"offset":1419}}}],"position":{"start":{"line":39,"column":1,"offset":1380},"end":{"line":39,"column":40,"offset":1419}}},"children":"UICollectionViewDataSourcePrefetching"}}]," 프로토콜을 사용하면 필요한 데이터를 미리 로드하여 스크롤 성능을 향상시킬 수 있습니다. 이는 데이터 소스를 미리 준비해 두어 스크롤이 부드럽게 이루어지도록 합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"collectionView.prefetchDataSource = self\n\nextension ViewController: UICollectionViewDataSourcePrefetching {\n    func collectionView(_ collectionView: UICollectionView, prefetchItemsAt indexPaths: [IndexPath]) {\n        // 필요한 데이터를 미리 로드하는 코드 작성\n    }\n}\n"}],"position":{"start":{"line":41,"column":1,"offset":1513},"end":{"line":49,"column":4,"offset":1778}}},"children":"collectionView.prefetchDataSource = self\n\nextension ViewController: UICollectionViewDataSourcePrefetching {\n    func collectionView(_ collectionView: UICollectionView, prefetchItemsAt indexPaths: [IndexPath]) {\n        // 필요한 데이터를 미리 로드하는 코드 작성\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"3034ae52","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. Reusing Cells"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["셀의 재사용은 컬렉션 뷰 성능 최적화의 핵심입니다. 셀을 최대한 재사용하여 메모리 사용을 줄이고 성능을 향상시킬 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UICollectionView","position":{"start":{"line":53,"column":72,"offset":1873},"end":{"line":53,"column":90,"offset":1891}}}],"position":{"start":{"line":53,"column":72,"offset":1873},"end":{"line":53,"column":90,"offset":1891}}},"children":"UICollectionView"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"dequeueReusableCell(withReuseIdentifier:for:)","position":{"start":{"line":53,"column":92,"offset":1893},"end":{"line":53,"column":139,"offset":1940}}}],"position":{"start":{"line":53,"column":92,"offset":1893},"end":{"line":53,"column":139,"offset":1940}}},"children":"dequeueReusableCell(withReuseIdentifier:for:)"}}]," 메서드를 사용하여 셀을 재사용합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let cell = collectionView.dequeueReusableCell(withReuseIdentifier: \"cell\", for: indexPath)\ncell.configure(with: data)\nreturn cell\n"}],"position":{"start":{"line":55,"column":1,"offset":1963},"end":{"line":59,"column":4,"offset":2105}}},"children":"let cell = collectionView.dequeueReusableCell(withReuseIdentifier: \"cell\", for: indexPath)\ncell.configure(with: data)\nreturn cell\n"}}]}],"\n",["$","h3",null,{"id":"bfaa1c21","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 적절한 레이아웃 인validation"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["레이아웃을 변경할 필요가 없을 때 불필요하게 레이아웃을 재계산하지 않도록 주의해야 합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"invalidateLayout(with:)","position":{"start":{"line":63,"column":52,"offset":2187},"end":{"line":63,"column":77,"offset":2212}}}],"position":{"start":{"line":63,"column":52,"offset":2187},"end":{"line":63,"column":77,"offset":2212}}},"children":"invalidateLayout(with:)"}}]," 메서드를 사용하여 특정 섹션이나 아이템의 레이아웃만 변경할 수 있습니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let context = UICollectionViewFlowLayoutInvalidationContext()\ncontext.invalidateItems(at: [indexPath])\ncollectionView.collectionViewLayout.invalidateLayout(with: context)\n"}],"position":{"start":{"line":65,"column":1,"offset":2255},"end":{"line":69,"column":4,"offset":2438}}},"children":"let context = UICollectionViewFlowLayoutInvalidationContext()\ncontext.invalidateItems(at: [indexPath])\ncollectionView.collectionViewLayout.invalidateLayout(with: context)\n"}}]}],"\n",["$","h3",null,{"id":"966fbb8b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"4. Background Thread에서 데이터 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"데이터 처리는 가능하면 백그라운드 스레드에서 수행하고, UI 업데이트는 메인 스레드에서 처리합니다. 이는 UI 업데이트 시 느려지는 문제를 방지하여 사용자 경험을 개선할 수 있습니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"DispatchQueue.global(qos: .userInitiated).async {\n    let data = fetchData()\n    DispatchQueue.main.async {\n        self.collectionView.reloadData()\n    }\n}\n"}],"position":{"start":{"line":75,"column":1,"offset":2579},"end":{"line":82,"column":4,"offset":2748}}},"children":"DispatchQueue.global(qos: .userInitiated).async {\n    let data = fetchData()\n    DispatchQueue.main.async {\n        self.collectionView.reloadData()\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"be8f555f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"성능 테스트 및 모니터링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["성능을 최적화하려면 지속적인 테스트와 모니터링이 필요합니다. Xcode의 Instruments 도구를 사용하여 성능을 모니터링 할 수 있습니다. 특히 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Time Profiler","position":{"start":{"line":86,"column":85,"offset":2852},"end":{"line":86,"column":100,"offset":2867}}}],"position":{"start":{"line":86,"column":85,"offset":2852},"end":{"line":86,"column":100,"offset":2867}}},"children":"Time Profiler"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Allocations","position":{"start":{"line":86,"column":102,"offset":2869},"end":{"line":86,"column":115,"offset":2882}}}],"position":{"start":{"line":86,"column":102,"offset":2869},"end":{"line":86,"column":115,"offset":2882}}},"children":"Allocations"}}],"를 사용하여 앱의 CPU 사용량과 메모리 사용량을 분석할 수 있습니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["또한 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UICollectionView","position":{"start":{"line":88,"column":4,"offset":2926},"end":{"line":88,"column":22,"offset":2944}}}],"position":{"start":{"line":88,"column":4,"offset":2926},"end":{"line":88,"column":22,"offset":2944}}},"children":"UICollectionView"}}],"의 내장 메서드를 통해 스크롤 성능을 쉽게 모니터링할 수 있습니다."]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"collectionView.delegate = self\n\nextension ViewController: UICollectionViewDelegate {\n    func scrollViewDidEndDecelerating(_ scrollView: UIScrollView) {\n        // 스크롤 성능 모니터링 코드\n    }\n}\n"}],"position":{"start":{"line":90,"column":1,"offset":2983},"end":{"line":98,"column":4,"offset":3182}}},"children":"collectionView.delegate = self\n\nextension ViewController: UICollectionViewDelegate {\n    func scrollViewDidEndDecelerating(_ scrollView: UIScrollView) {\n        // 스크롤 성능 모니터링 코드\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UICollectionViewCompositionalLayout는 강력하고 유연한 레이아웃 시스템을 제공합니다. 하지만 복잡한 레이아웃을 처리할 때는 성능 최적화가 매우 중요합니다. 프리패칭, 셀 재사용, 적절한 레이아웃 인validation, 백그라운드 데이터 처리와 같은 방법을 사용하면 성능을 크게 향상시킬 수 있습니다. 지속적인 성능 테스트 및 모니터링을 통해 최고의 사용자 경험을 제공하는 것을 목표로 해야 합니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁","toc":[{"tagName":"h1","title":"성능 최적화를 위한 UICollectionViewCompositionalLayout의 주요 메서드와 팁","id":"9cb4db1f"},{"tagName":"h2","title":"UICollectionViewCompositionalLayout의 개요","id":"e8081f67"},{"tagName":"h3","title":"주요 구성 요소","id":"23c4bf37"},{"tagName":"h2","title":"성능 최적화를 위한 방법","id":"d01531af"},{"tagName":"h3","title":"1. 프리패칭 (Pre-fetching)","id":"8096ad83"},{"tagName":"h3","title":"2. Reusing Cells","id":"3034ae52"},{"tagName":"h3","title":"3. 적절한 레이아웃 인validation","id":"bfaa1c21"},{"tagName":"h3","title":"4. Background Thread에서 데이터 처리","id":"966fbb8b"},{"tagName":"h2","title":"성능 테스트 및 모니터링","id":"be8f555f"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
