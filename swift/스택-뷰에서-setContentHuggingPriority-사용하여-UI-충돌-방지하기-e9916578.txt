1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","%EC%8A%A4%ED%83%9D-%EB%B7%B0%EC%97%90%EC%84%9C-setContentHuggingPriority-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-UI-%EC%B6%A9%EB%8F%8C-%EB%B0%A9%EC%A7%80%ED%95%98%EA%B8%B0-e9916578","d"],{"children":["__PAGE__?{\"slug\":\"스택-뷰에서-setContentHuggingPriority-사용하여-UI-충돌-방지하기-e9916578\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","%EC%8A%A4%ED%83%9D-%EB%B7%B0%EC%97%90%EC%84%9C-setContentHuggingPriority-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-UI-%EC%B6%A9%EB%8F%8C-%EB%B0%A9%EC%A7%80%ED%95%98%EA%B8%B0-e9916578","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"스택-뷰에서-setContentHuggingPriority-사용하여-UI-충돌-방지하기-e9916578\"}"},"styles":[]}],"segment":["slug","%EC%8A%A4%ED%83%9D-%EB%B7%B0%EC%97%90%EC%84%9C-setContentHuggingPriority-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-UI-%EC%B6%A9%EB%8F%8C-%EB%B0%A9%EC%A7%80%ED%95%98%EA%B8%B0-e9916578","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"스택 뷰에서 setContentHuggingPriority 사용하여 UI 충돌 방지하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 Swift 언어로 iOS 애플리케이션 개발 시, 스택 뷰에서 `setContentHuggingPriority` 메서드를 사용하여 UI 구성 요소 간의 충돌을 방지하는 방법에 대해 설명합니다. 이 기법을 통해 레이아웃 제약 충돌 문제를 효율적으로 해결할 수 있습니다."}],["$","meta","3",{"name":"keywords","content":"Swift,스택 뷰,UI,레이아웃"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/%EC%8A%A4%ED%83%9D-%EB%B7%B0%EC%97%90%EC%84%9C-setContentHuggingPriority-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-UI-%EC%B6%A9%EB%8F%8C-%EB%B0%A9%EC%A7%80%ED%95%98%EA%B8%B0-e9916578"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"스택 뷰에서 setContentHuggingPriority 사용하여 UI 충돌 방지하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"스택 뷰에서 setContentHuggingPriority 사용하여 UI 충돌 방지하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 Swift 언어로 iOS 애플리케이션 개발 시, 스택 뷰에서 `setContentHuggingPriority` 메서드를 사용하여 UI 구성 요소 간의 충돌을 방지하는 방법에 대해 설명합니다. 이 기법을 통해 레이아웃 제약 충돌 문제를 효율적으로 해결할 수 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/%EC%8A%A4%ED%83%9D-%EB%B7%B0%EC%97%90%EC%84%9C-setContentHuggingPriority-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-UI-%EC%B6%A9%EB%8F%8C-%EB%B0%A9%EC%A7%80%ED%95%98%EA%B8%B0-e9916578"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"스택 뷰에서 setContentHuggingPriority 사용하여 UI 충돌 방지하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 Swift 언어로 iOS 애플리케이션 개발 시, 스택 뷰에서 `setContentHuggingPriority` 메서드를 사용하여 UI 구성 요소 간의 충돌을 방지하는 방법에 대해 설명합니다. 이 기법을 통해 레이아웃 제약 충돌 문제를 효율적으로 해결할 수 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"스택 뷰에서 setContentHuggingPriority 사용하여 UI 충돌 방지하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"스택 뷰에서 setContentHuggingPriority 사용하여 UI 충돌 방지하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-16"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"450932ac","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"스택 뷰에서 setContentHuggingPriority 사용하여 UI 충돌 방지하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["iOS 개발에서는 사용자 인터페이스(UI)를 구성할 때 종종 스택 뷰를 사용합니다. 스택 뷰는 여러 뷰를 수직 또는 수평으로 정렬하여 관리할 수 있게 해주는 강력한 도구입니다. 그러나 스택 뷰를 사용할 때 각 뷰의 크기와 위치를 적절히 조정하지 않으면 UI 충돌이 발생할 수 있습니다. 여기서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setContentHuggingPriority","position":{"start":{"line":4,"column":165,"offset":217},"end":{"line":4,"column":192,"offset":244}}}],"position":{"start":{"line":4,"column":165,"offset":217},"end":{"line":4,"column":192,"offset":244}}},"children":"setContentHuggingPriority"}}]," 메서드를 사용하면 이러한 문제를 해결할 수 있습니다."]}],"\n",["$","h2",null,{"id":"c4492463","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"setContentHuggingPriority란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setContentHuggingPriority","position":{"start":{"line":8,"column":1,"offset":308},"end":{"line":8,"column":28,"offset":335}}}],"position":{"start":{"line":8,"column":1,"offset":308},"end":{"line":8,"column":28,"offset":335}}},"children":"setContentHuggingPriority"}}],"는 뷰의 크기를 변경하려 할 때, 해당 뷰가 자신의 콘텐츠 크기를 유지하려는 '우선순위'를 설정하는 메서드입니다. 이 우선순위는 레이아웃 엔진이 어떤 뷰를 먼저 늘리거나 줄일지 결정할 때 중요한 역할을 합니다. 우선순위가 높을수록 해당 뷰는 자신의 본래 크기를 유지하려 합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"즉, 이 메서드를 사용하면 스택 뷰 내에서 특정 뷰가 너무 크게 또는 작게 변하지 않도록 제어할 수 있습니다. 이는 여러 뷰가 충돌하지 않고 원하는 레이아웃을 유지하게 하는 데 매우 유용합니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"view.setContentHuggingPriority(UILayoutPriority.defaultHigh, for: .horizontal)\n"}],"position":{"start":{"line":12,"column":1,"offset":602},"end":{"line":14,"column":4,"offset":693}}},"children":"view.setContentHuggingPriority(UILayoutPriority.defaultHigh, for: .horizontal)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"view","position":{"start":{"line":16,"column":8,"offset":702},"end":{"line":16,"column":14,"offset":708}}}],"position":{"start":{"line":16,"column":8,"offset":702},"end":{"line":16,"column":14,"offset":708}}},"children":"view"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setContentHuggingPriority","position":{"start":{"line":16,"column":16,"offset":710},"end":{"line":16,"column":43,"offset":737}}}],"position":{"start":{"line":16,"column":16,"offset":710},"end":{"line":16,"column":43,"offset":737}}},"children":"setContentHuggingPriority"}}]," 메서드를 호출한 뷰이며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UILayoutPriority.defaultHigh","position":{"start":{"line":16,"column":58,"offset":752},"end":{"line":16,"column":88,"offset":782}}}],"position":{"start":{"line":16,"column":58,"offset":752},"end":{"line":16,"column":88,"offset":782}}},"children":"UILayoutPriority.defaultHigh"}}],"는 높은 우선순위를 의미합니다. 방향은 .horizontal과 .vertical 중 하나를 지정할 수 있습니다."]}],"\n",["$","h2",null,{"id":"a9c63f7f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"스택 뷰에서의 활용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["스택 뷰에서 여러 뷰를 정렬할 때, 각 뷰의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setContentHuggingPriority","position":{"start":{"line":20,"column":26,"offset":886},"end":{"line":20,"column":53,"offset":913}}}],"position":{"start":{"line":20,"column":26,"offset":886},"end":{"line":20,"column":53,"offset":913}}},"children":"setContentHuggingPriority"}}],"를 적절하게 설정하면 UI 충돌을 효과적으로 방지할 수 있습니다. 예를 들어, 텍스트 레이블과 버튼을 포함하는 스택 뷰를 생각해 봅시다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let stackView = UIStackView()\nstackView.axis = .horizontal\nstackView.alignment = .fill\nstackView.spacing = 10\n\nlet label = UILabel()\nlabel.text = \"Hello\"\nlabel.setContentHuggingPriority(UILayoutPriority.defaultLow, for: .horizontal)\n\nlet button = UIButton(type: .system)\nbutton.setTitle(\"Click Me\", for: .normal)\nbutton.setContentHuggingPriority(UILayoutPriority.defaultHigh, for: .horizontal)\n\nstackView.addArrangedSubview(label)\nstackView.addArrangedSubview(button)\n"}],"position":{"start":{"line":22,"column":1,"offset":991},"end":{"line":38,"column":4,"offset":1471}}},"children":"let stackView = UIStackView()\nstackView.axis = .horizontal\nstackView.alignment = .fill\nstackView.spacing = 10\n\nlet label = UILabel()\nlabel.text = \"Hello\"\nlabel.setContentHuggingPriority(UILayoutPriority.defaultLow, for: .horizontal)\n\nlet button = UIButton(type: .system)\nbutton.setTitle(\"Click Me\", for: .normal)\nbutton.setContentHuggingPriority(UILayoutPriority.defaultHigh, for: .horizontal)\n\nstackView.addArrangedSubview(label)\nstackView.addArrangedSubview(button)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"label","position":{"start":{"line":40,"column":9,"offset":1481},"end":{"line":40,"column":16,"offset":1488}}}],"position":{"start":{"line":40,"column":9,"offset":1481},"end":{"line":40,"column":16,"offset":1488}}},"children":"label"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"button","position":{"start":{"line":40,"column":18,"offset":1490},"end":{"line":40,"column":26,"offset":1498}}}],"position":{"start":{"line":40,"column":18,"offset":1490},"end":{"line":40,"column":26,"offset":1498}}},"children":"button"}}],"을 수평 스택 뷰에 추가합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setContentHuggingPriority","position":{"start":{"line":40,"column":44,"offset":1516},"end":{"line":40,"column":71,"offset":1543}}}],"position":{"start":{"line":40,"column":44,"offset":1516},"end":{"line":40,"column":71,"offset":1543}}},"children":"setContentHuggingPriority"}}],"를 사용하여 버튼의 우선순위를 높이고 레이블의 우선순위를 낮게 설정하였습니다. 이렇게 함으로써 레이블은 늘어날 수 있는 반면, 버튼은 자신의 크기를 유지하려 합니다."]}],"\n",["$","h2",null,{"id":"62dea77a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"제약 조건 충돌 방지하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"스택 뷰 내에서의 우선순위 설정은 단순하지 않을 수도 있습니다. 특히 복잡한 레이아웃을 구성할 때, 여러 뷰 간의 상호 작용을 고려해야 합니다. 아래는 더 복잡한 예제입니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let titleLabel = UILabel()\ntitleLabel.text = \"Title\"\ntitleLabel.setContentHuggingPriority(UILayoutPriority(rawValue: 250), for: .horizontal)\n\nlet descriptionLabel = UILabel()\ndescriptionLabel.text = \"Description\"\ndescriptionLabel.setContentHuggingPriority(UILayoutPriority(rawValue: 350), for: .horizontal)\n\nlet actionButton = UIButton(type: .system)\nactionButton.setTitle(\"Action\", for: .normal)\nactionButton.setContentHuggingPriority(UILayoutPriority(rawValue: 450), for: .horizontal)\n\nstackView.addArrangedSubview(titleLabel)\nstackView.addArrangedSubview(descriptionLabel)\nstackView.addArrangedSubview(actionButton)\n"}],"position":{"start":{"line":46,"column":1,"offset":1754},"end":{"line":62,"column":4,"offset":2385}}},"children":"let titleLabel = UILabel()\ntitleLabel.text = \"Title\"\ntitleLabel.setContentHuggingPriority(UILayoutPriority(rawValue: 250), for: .horizontal)\n\nlet descriptionLabel = UILabel()\ndescriptionLabel.text = \"Description\"\ndescriptionLabel.setContentHuggingPriority(UILayoutPriority(rawValue: 350), for: .horizontal)\n\nlet actionButton = UIButton(type: .system)\nactionButton.setTitle(\"Action\", for: .normal)\nactionButton.setContentHuggingPriority(UILayoutPriority(rawValue: 450), for: .horizontal)\n\nstackView.addArrangedSubview(titleLabel)\nstackView.addArrangedSubview(descriptionLabel)\nstackView.addArrangedSubview(actionButton)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 세 개의 뷰가 있습니다: ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"titleLabel","position":{"start":{"line":64,"column":23,"offset":2409},"end":{"line":64,"column":35,"offset":2421}}}],"position":{"start":{"line":64,"column":23,"offset":2409},"end":{"line":64,"column":35,"offset":2421}}},"children":"titleLabel"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"descriptionLabel","position":{"start":{"line":64,"column":37,"offset":2423},"end":{"line":64,"column":55,"offset":2441}}}],"position":{"start":{"line":64,"column":37,"offset":2423},"end":{"line":64,"column":55,"offset":2441}}},"children":"descriptionLabel"}}],", 그리고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"actionButton","position":{"start":{"line":64,"column":61,"offset":2447},"end":{"line":64,"column":75,"offset":2461}}}],"position":{"start":{"line":64,"column":61,"offset":2447},"end":{"line":64,"column":75,"offset":2461}}},"children":"actionButton"}}],". 각각의 뷰에 대해 서로 다른 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UILayoutPriority","position":{"start":{"line":64,"column":93,"offset":2479},"end":{"line":64,"column":111,"offset":2497}}}],"position":{"start":{"line":64,"column":93,"offset":2479},"end":{"line":64,"column":111,"offset":2497}}},"children":"UILayoutPriority"}}]," 값을 설정했습니다. 이를 통해 레이아웃 엔진은 각 뷰가 자신의 콘텐츠 크기를 얼마나 유지하려 하는지 우선순위를 바탕으로 결정합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"actionButton","position":{"start":{"line":64,"column":186,"offset":2572},"end":{"line":64,"column":200,"offset":2586}}}],"position":{"start":{"line":64,"column":186,"offset":2572},"end":{"line":64,"column":200,"offset":2586}}},"children":"actionButton"}}],"의 우선순위가 가장 높기 때문에 버튼이 가장 덜 수축되고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"titleLabel","position":{"start":{"line":64,"column":233,"offset":2619},"end":{"line":64,"column":245,"offset":2631}}}],"position":{"start":{"line":64,"column":233,"offset":2619},"end":{"line":64,"column":245,"offset":2631}}},"children":"titleLabel"}}],"이 가장 많이 수축됩니다."]}],"\n",["$","h2",null,{"id":"2d4fa7d0","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"실전 활용 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제, 더 현실적인 시나리오를 살펴보겠습니다. 사용자가 상황에 맞게 UI 요소들의 크기를 동적으로 조절해야 하는 경우입니다. 예를 들어, 채팅 애플리케이션에서 메시지 버블 레이아웃을 구성한다고 가정해 봅시다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let messageLabel = UILabel()\nmessageLabel.text = \"Hello, how are you?\"\nmessageLabel.numberOfLines = 0\nmessageLabel.setContentHuggingPriority(UILayoutPriority(rawValue: 300), for: .horizontal)\n\nlet timeLabel = UILabel()\ntimeLabel.text = \"10:45 AM\"\ntimeLabel.setContentHuggingPriority(UILayoutPriority(rawValue: 400), for: .horizontal)\n\ntimeLabel.setContentCompressionResistancePriority(UILayoutPriority(rawValue: 500), for: .horizontal)\n\nstackView.addArrangedSubview(messageLabel)\nstackView.addArrangedSubview(timeLabel)\n"}],"position":{"start":{"line":70,"column":1,"offset":2778},"end":{"line":84,"column":4,"offset":3310}}},"children":"let messageLabel = UILabel()\nmessageLabel.text = \"Hello, how are you?\"\nmessageLabel.numberOfLines = 0\nmessageLabel.setContentHuggingPriority(UILayoutPriority(rawValue: 300), for: .horizontal)\n\nlet timeLabel = UILabel()\ntimeLabel.text = \"10:45 AM\"\ntimeLabel.setContentHuggingPriority(UILayoutPriority(rawValue: 400), for: .horizontal)\n\ntimeLabel.setContentCompressionResistancePriority(UILayoutPriority(rawValue: 500), for: .horizontal)\n\nstackView.addArrangedSubview(messageLabel)\nstackView.addArrangedSubview(timeLabel)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"messageLabel","position":{"start":{"line":86,"column":9,"offset":3320},"end":{"line":86,"column":23,"offset":3334}}}],"position":{"start":{"line":86,"column":9,"offset":3320},"end":{"line":86,"column":23,"offset":3334}}},"children":"messageLabel"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"timeLabel","position":{"start":{"line":86,"column":25,"offset":3336},"end":{"line":86,"column":36,"offset":3347}}}],"position":{"start":{"line":86,"column":25,"offset":3336},"end":{"line":86,"column":36,"offset":3347}}},"children":"timeLabel"}}],"을 수평 스택 뷰에 추가합니다. 메시지 레이블은 여러 줄 텍스트를 담을 수 있도록 하고, 시간을 표시하는 레이블의 우선순위를 더 높게 설정해 시간이 잘리거나 왜곡되지 않고 표시되도록 설정하였습니다. 이와 같은 설정은 메시지 버블이 동적으로 크기를 조절할 때 유용합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setContentHuggingPriority","position":{"start":{"line":90,"column":1,"offset":3506},"end":{"line":90,"column":28,"offset":3533}}}],"position":{"start":{"line":90,"column":1,"offset":3506},"end":{"line":90,"column":28,"offset":3533}}},"children":"setContentHuggingPriority"}}]," 메서드는 iOS 애플리케이션 개발에서 뷰의 크기와 위치를 세밀하게 제어하는 데 필수적인 도구입니다. 이 메서드를 적절하게 활용하면 스택 뷰에서 발생할 수 있는 다양한 UI 충돌 문제를 효과적으로 방지할 수 있습니다. 여러 뷰 간의 우선순위를 잘 설정하여 복잡한 레이아웃에서도 원하는 방식으로 UI 요소들이 표시될 수 있습니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"스택 뷰에서 setContentHuggingPriority 사용하여 UI 충돌 방지하기","toc":[{"tagName":"h1","title":"스택 뷰에서 setContentHuggingPriority 사용하여 UI 충돌 방지하기","id":"450932ac"},{"tagName":"h2","title":"setContentHuggingPriority란?","id":"c4492463"},{"tagName":"h2","title":"스택 뷰에서의 활용","id":"a9c63f7f"},{"tagName":"h2","title":"제약 조건 충돌 방지하기","id":"62dea77a"},{"tagName":"h2","title":"실전 활용 예제","id":"2d4fa7d0"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
