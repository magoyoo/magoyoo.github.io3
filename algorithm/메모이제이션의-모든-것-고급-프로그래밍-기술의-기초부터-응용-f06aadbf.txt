1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["algorithm",{"children":[["slug","%EB%A9%94%EB%AA%A8%EC%9D%B4%EC%A0%9C%EC%9D%B4%EC%85%98%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B2%83-%EA%B3%A0%EA%B8%89-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EA%B8%B0%EC%88%A0%EC%9D%98-%EA%B8%B0%EC%B4%88%EB%B6%80%ED%84%B0-%EC%9D%91%EC%9A%A9-f06aadbf","d"],{"children":["__PAGE__?{\"slug\":\"메모이제이션의-모든-것-고급-프로그래밍-기술의-기초부터-응용-f06aadbf\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children",["slug","%EB%A9%94%EB%AA%A8%EC%9D%B4%EC%A0%9C%EC%9D%B4%EC%85%98%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B2%83-%EA%B3%A0%EA%B8%89-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EA%B8%B0%EC%88%A0%EC%9D%98-%EA%B8%B0%EC%B4%88%EB%B6%80%ED%84%B0-%EC%9D%91%EC%9A%A9-f06aadbf","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"메모이제이션의-모든-것-고급-프로그래밍-기술의-기초부터-응용-f06aadbf\"}"},"styles":[]}],"segment":["slug","%EB%A9%94%EB%AA%A8%EC%9D%B4%EC%A0%9C%EC%9D%B4%EC%85%98%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B2%83-%EA%B3%A0%EA%B8%89-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EA%B8%B0%EC%88%A0%EC%9D%98-%EA%B8%B0%EC%B4%88%EB%B6%80%ED%84%B0-%EC%9D%91%EC%9A%A9-f06aadbf","d"]},"styles":[]}],"segment":"algorithm"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"메모이제이션의 모든 것: 고급 프로그래밍 기술의 기초부터 응용 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"메모이제이션에 대한 이해를 돕기 위한 이 글은 메모이제이션의 기본 개념부터 고급 프로그래밍 기법으로의 응용까지 다루고 있습니다. 다양한 예제와 함께 실제 문제 해결에 어떻게 적용되는지 탐구합니다."}],["$","meta","3",{"name":"keywords","content":"메모이제이션,프로그래밍,알고리즘,최적화"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/algorithm/%EB%A9%94%EB%AA%A8%EC%9D%B4%EC%A0%9C%EC%9D%B4%EC%85%98%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B2%83-%EA%B3%A0%EA%B8%89-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EA%B8%B0%EC%88%A0%EC%9D%98-%EA%B8%B0%EC%B4%88%EB%B6%80%ED%84%B0-%EC%9D%91%EC%9A%A9-f06aadbf"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"메모이제이션의 모든 것: 고급 프로그래밍 기술의 기초부터 응용 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"메모이제이션의 모든 것: 고급 프로그래밍 기술의 기초부터 응용 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"메모이제이션에 대한 이해를 돕기 위한 이 글은 메모이제이션의 기본 개념부터 고급 프로그래밍 기법으로의 응용까지 다루고 있습니다. 다양한 예제와 함께 실제 문제 해결에 어떻게 적용되는지 탐구합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/algorithm/%EB%A9%94%EB%AA%A8%EC%9D%B4%EC%A0%9C%EC%9D%B4%EC%85%98%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B2%83-%EA%B3%A0%EA%B8%89-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EA%B8%B0%EC%88%A0%EC%9D%98-%EA%B8%B0%EC%B4%88%EB%B6%80%ED%84%B0-%EC%9D%91%EC%9A%A9-f06aadbf"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/defaultBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"메모이제이션의 모든 것: 고급 프로그래밍 기술의 기초부터 응용 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"메모이제이션에 대한 이해를 돕기 위한 이 글은 메모이제이션의 기본 개념부터 고급 프로그래밍 기법으로의 응용까지 다루고 있습니다. 다양한 예제와 함께 실제 문제 해결에 어떻게 적용되는지 탐구합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/defaultBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/defaultBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"메모이제이션의 모든 것: 고급 프로그래밍 기술의 기초부터 응용"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"메모이제이션의 모든 것: 고급 프로그래밍 기술의 기초부터 응용"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-14"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"219c45b6","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"메모이제이션의 모든 것: 기초부터 응용까지"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"메모이제이션은 프로그래밍에서 반복해서 계산되는 값을 저장하여 성능을 향상시키는 기술입니다. 이 글에서는 메모이제이션의 개념, 구현 방법, 그리고 적절한 응용 사례 등을 다루어 메모이제이션에 대한 이해를 돕고자 합니다."}],"\n",["$","h2",null,{"id":"651cfbb9","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"메모이제이션의 기초 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["메모이제이션은 동적 프로그래밍의 한 방법으로, 이전에 계산된 값을 저장해두었다가 필요할 때 다시 사용함으로써 중복 계산을 피하는 기법입니다. 이는 주로 재귀함수에서 활용되며, ",["$","strong",null,{"className":"font-black","children":"시간 복잡도"}],"를 효과적으로 줄일 수 있습니다. 메모이제이션을 활용하면 어떤 문제가 다음과 같은 특징을 가질 때 유용합니다."]}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"중복되는 부분 문제"}],": 동일한 하위 문제가 여러 번 계산되는 경우"]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"불변 상태"}],": 한번 계산된 결과가 변하지 않는 경우"]}],"\n"]}],"\n",["$","h2",null,{"id":"6e338e63","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"메모이제이션의 구현 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["메모이제이션을 구현하는 가장 간단한 방법은 직접적으로 ",["$","strong",null,{"className":"font-black","children":"함수 내에 캐시를 도입"}],"하는 것입니다. 여기서는 파이썬을 사용해 메모이제이션을 간단하게 구현하는 방법을 예제로 보입니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"# 피보나치 수열을 계산하는 재귀 함수\n\ndef fibonacci(n, memo={}):\n    if n in memo:  # 이미 계산한 값이 있는지 확인\n        return memo[n]\n    if n <= 2:  # 기본 케이스\n        return 1\n    memo[n] = fibonacci(n - 1, memo) + fibonacci(n - 2, memo)  # 캐시에 저장\n    return memo[n]\n\n# 예제 사용\nprint(fibonacci(10))  # 출력: 55\n"}],"position":{"start":{"line":17,"column":1,"offset":540},"end":{"line":30,"column":4,"offset":837}}},"children":"# 피보나치 수열을 계산하는 재귀 함수\n\ndef fibonacci(n, memo={}):\n    if n in memo:  # 이미 계산한 값이 있는지 확인\n        return memo[n]\n    if n <= 2:  # 기본 케이스\n        return 1\n    memo[n] = fibonacci(n - 1, memo) + fibonacci(n - 2, memo)  # 캐시에 저장\n    return memo[n]\n\n# 예제 사용\nprint(fibonacci(10))  # 출력: 55\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["해당 예제에서는 ",["$","strong",null,{"className":"font-black","children":"피보나치 수열"}],"을 계산할 때 메모이제이션을 적용함으로써 시간 복잡도를 효과적으로 줄였습니다. 피보나치 수열의 경우 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O(2^n)","position":{"start":{"line":32,"column":77,"offset":915},"end":{"line":32,"column":85,"offset":923}}}],"position":{"start":{"line":32,"column":77,"offset":915},"end":{"line":32,"column":85,"offset":923}}},"children":"O(2^n)"}}],"의 시간 복잡도를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O(n)","position":{"start":{"line":32,"column":95,"offset":933},"end":{"line":32,"column":101,"offset":939}}}],"position":{"start":{"line":32,"column":95,"offset":933},"end":{"line":32,"column":101,"offset":939}}},"children":"O(n)"}}],"으로 줄일 수 있습니다."]}],"\n",["$","h2",null,{"id":"94719525","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"메모이제이션의 다양화와 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"메모이제이션은 단순히 재귀함수에만 국한되지 않습니다. 이는 여러 프로그래밍 패러다임과 함께 사용될 수 있으며, 다양하게 응용될 수 있습니다."}],"\n",["$","h3",null,{"id":"5a45a114","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 함수형 프로그래밍에서의 메모이제이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["함수형 프로그래밍 언어는 메모이제이션을 기본으로 제공하는 경우가 많습니다. 예를 들어, ",["$","strong",null,{"className":"font-black","children":"Haskell"}],"에서는 메모이제이션을 통해 성능 최적화를 쉽게 구현할 수 있습니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-haskell","node":{"type":"element","tagName":"code","properties":{"className":["language-haskell"]},"children":[{"type":"text","value":"-- Haskell에서의 피보나치 수열\n\nmemoFib :: Int -> Integer\nmemoFib = (map fib [0 ..] !!)\n  where\n    fib 0 = 0\n    fib 1 = 1\n    fib n = memoFib (n - 1) + memoFib (n - 2)\n"}],"position":{"start":{"line":42,"column":1,"offset":1182},"end":{"line":51,"column":4,"offset":1357}}},"children":"-- Haskell에서의 피보나치 수열\n\nmemoFib :: Int -> Integer\nmemoFib = (map fib [0 ..] !!)\n  where\n    fib 0 = 0\n    fib 1 = 1\n    fib n = memoFib (n - 1) + memoFib (n - 2)\n"}}]}],"\n",["$","h3",null,{"id":"3a97812b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 객체지향 프로그래밍에서의 메모이제이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["객체지향 언어에서도 메모이제이션을 활용할 수 있습니다. ",["$","strong",null,{"className":"font-black","children":"자바"}],"를 통해 이를 구현하는 방법을 살펴보겠습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-java","node":{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"import java.util.HashMap;\nimport java.util.Map;\n\npublic class Fibonacci {\n    private Map<Integer, Integer> memo = new HashMap<>();\n\n    public int fibonacci(int n) {\n        if (memo.containsKey(n)) return memo.get(n);\n        if (n <= 2) return 1;\n        int result = fibonacci(n - 1) + fibonacci(n - 2);\n        memo.put(n, result);\n        return result;\n    }\n\n    public static void main(String[] args) {\n        Fibonacci fib = new Fibonacci();\n        System.out.println(fib.fibonacci(10)); // 출력: 55\n    }\n}\n"}],"position":{"start":{"line":57,"column":1,"offset":1452},"end":{"line":77,"column":4,"offset":1981}}},"children":"import java.util.HashMap;\nimport java.util.Map;\n\npublic class Fibonacci {\n    private Map<Integer, Integer> memo = new HashMap<>();\n\n    public int fibonacci(int n) {\n        if (memo.containsKey(n)) return memo.get(n);\n        if (n <= 2) return 1;\n        int result = fibonacci(n - 1) + fibonacci(n - 2);\n        memo.put(n, result);\n        return result;\n    }\n\n    public static void main(String[] args) {\n        Fibonacci fib = new Fibonacci();\n        System.out.println(fib.fibonacci(10)); // 출력: 55\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"0f464cef","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"메모이제이션의 응용 사례"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"메모이제이션은 다양한 실제 문제 해결에도 적용될 수 있습니다. 몇 가지 응용 사례를 살펴보겠습니다."}],"\n",["$","h3",null,{"id":"4c1e4114","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 최단 경로 문제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["그래프에서 최단 경로를 찾는 문제에서도 메모이제이션은 유용하게 사용됩니다. ",["$","strong",null,{"className":"font-black","children":"다익스트라 알고리즘"}],"이나 ",["$","strong",null,{"className":"font-black","children":"벨만-포드 알고리즘"}],"에서 중복된 경로 계산을 줄이기 위해 활용될 수 있습니다."]}],"\n",["$","h3",null,{"id":"05d713f6","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 게임 AI"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"게임 AI에서는 특정 상태에서 최적의 이동을 계산하기 위해 많은 중복된 시뮬레이션이 필요합니다. 이 경우 메모이제이션을 활용하여 이전 상태의 결과를 저장해두고, 이를 재사용하여 성능을 최적화할 수 있습니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["메모이제이션은 알고리즘 최적화에서 매우 유용한 기술로, 이를 통해 많은 프로그래밍 문제를 효율적으로 해결할 수 있습니다. 특히 재귀적 문제 해결에서 그 진가를 발휘하며, 다양한 프로그래밍 패러다임과 함께 사용할 수 있습니다. 가장 중요한 것은 ",["$","strong",null,{"className":"font-black","children":"중복 계산을 줄이고"}]," ",["$","strong",null,{"className":"font-black","children":"성능을 향상"}],"시키는 것입니다. 다양한 예제와 응용 사례를 통해 메모이제이션을 잘 이해하고 활용할 수 있기를 바랍니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"메모이제이션의 모든 것: 고급 프로그래밍 기술의 기초부터 응용","toc":[{"tagName":"h1","title":"메모이제이션의 모든 것: 기초부터 응용까지","id":"219c45b6"},{"tagName":"h2","title":"메모이제이션의 기초 개념","id":"651cfbb9"},{"tagName":"h2","title":"메모이제이션의 구현 방법","id":"6e338e63"},{"tagName":"h2","title":"메모이제이션의 다양화와 최적화","id":"94719525"},{"tagName":"h3","title":"1. 함수형 프로그래밍에서의 메모이제이션","id":"5a45a114"},{"tagName":"h3","title":"2. 객체지향 프로그래밍에서의 메모이제이션","id":"3a97812b"},{"tagName":"h2","title":"메모이제이션의 응용 사례","id":"0f464cef"},{"tagName":"h3","title":"1. 최단 경로 문제","id":"4c1e4114"},{"tagName":"h3","title":"2. 게임 AI","id":"05d713f6"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
