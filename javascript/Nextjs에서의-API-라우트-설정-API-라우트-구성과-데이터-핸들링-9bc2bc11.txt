1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","Nextjs%EC%97%90%EC%84%9C%EC%9D%98-API-%EB%9D%BC%EC%9A%B0%ED%8A%B8-%EC%84%A4%EC%A0%95-API-%EB%9D%BC%EC%9A%B0%ED%8A%B8-%EA%B5%AC%EC%84%B1%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%95%B8%EB%93%A4%EB%A7%81-9bc2bc11","d"],{"children":["__PAGE__?{\"slug\":\"Nextjs에서의-API-라우트-설정-API-라우트-구성과-데이터-핸들링-9bc2bc11\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","Nextjs%EC%97%90%EC%84%9C%EC%9D%98-API-%EB%9D%BC%EC%9A%B0%ED%8A%B8-%EC%84%A4%EC%A0%95-API-%EB%9D%BC%EC%9A%B0%ED%8A%B8-%EA%B5%AC%EC%84%B1%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%95%B8%EB%93%A4%EB%A7%81-9bc2bc11","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Nextjs에서의-API-라우트-설정-API-라우트-구성과-데이터-핸들링-9bc2bc11\"}"},"styles":[]}],"segment":["slug","Nextjs%EC%97%90%EC%84%9C%EC%9D%98-API-%EB%9D%BC%EC%9A%B0%ED%8A%B8-%EC%84%A4%EC%A0%95-API-%EB%9D%BC%EC%9A%B0%ED%8A%B8-%EA%B5%AC%EC%84%B1%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%95%B8%EB%93%A4%EB%A7%81-9bc2bc11","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Next.js에서의 API 라우트 설정: API 라우트 구성과 데이터 핸들링. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Next.js에서 API 라우트를 설정하고 데이터 핸들링하는 방법을 알아봅니다. Next.js의 강력한 기능 중 하나인 API 라우트는 백엔드 로직을 프론트엔드 프로젝트에 쉽게 통합할 수 있게 해줍니다."}],["$","meta","3",{"name":"keywords","content":"Next.js,API 라우트,데이터 핸들링,JavaScript"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/Nextjs%EC%97%90%EC%84%9C%EC%9D%98-API-%EB%9D%BC%EC%9A%B0%ED%8A%B8-%EC%84%A4%EC%A0%95-API-%EB%9D%BC%EC%9A%B0%ED%8A%B8-%EA%B5%AC%EC%84%B1%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%95%B8%EB%93%A4%EB%A7%81-9bc2bc11"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Next.js에서의 API 라우트 설정: API 라우트 구성과 데이터 핸들링. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Next.js에서의 API 라우트 설정: API 라우트 구성과 데이터 핸들링. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Next.js에서 API 라우트를 설정하고 데이터 핸들링하는 방법을 알아봅니다. Next.js의 강력한 기능 중 하나인 API 라우트는 백엔드 로직을 프론트엔드 프로젝트에 쉽게 통합할 수 있게 해줍니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/Nextjs%EC%97%90%EC%84%9C%EC%9D%98-API-%EB%9D%BC%EC%9A%B0%ED%8A%B8-%EC%84%A4%EC%A0%95-API-%EB%9D%BC%EC%9A%B0%ED%8A%B8-%EA%B5%AC%EC%84%B1%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%95%B8%EB%93%A4%EB%A7%81-9bc2bc11"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Next.js에서의 API 라우트 설정: API 라우트 구성과 데이터 핸들링. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Next.js에서 API 라우트를 설정하고 데이터 핸들링하는 방법을 알아봅니다. Next.js의 강력한 기능 중 하나인 API 라우트는 백엔드 로직을 프론트엔드 프로젝트에 쉽게 통합할 수 있게 해줍니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Next.js에서의 API 라우트 설정: API 라우트 구성과 데이터 핸들링."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Next.js에서의 API 라우트 설정: API 라우트 구성과 데이터 핸들링."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-29"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"60f42ee8","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Next.js에서의 API 라우트 설정: API 라우트 구성과 데이터 핸들링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Next.js는 React 기반의 프레임워크로, 프론트엔드와 백엔드 기능을 동시에 제공하는 데 최적화되어 있습니다. 이 글에서는 Next.js의 API 라우트 기능을 사용해 서버리스 API를 설정하고 데이터를 처리하는 방법을 알아보겠습니다. API 라우트는 프로젝트 폴더 구조 내에서 쉽게 만들 수 있으며, 서버리스 함수로 실행됩니다."}],"\n",["$","h2",null,{"id":"caaf13e5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"API 라우트 생성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["API 라우트를 생성하는 첫 단계는 프로젝트의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pages","position":{"start":{"line":8,"column":27,"offset":277},"end":{"line":8,"column":34,"offset":284}}}],"position":{"start":{"line":8,"column":27,"offset":277},"end":{"line":8,"column":34,"offset":284}}},"children":"pages"}}]," 디렉터리 내에 새로운 폴더 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"api","position":{"start":{"line":8,"column":50,"offset":300},"end":{"line":8,"column":55,"offset":305}}}],"position":{"start":{"line":8,"column":50,"offset":300},"end":{"line":8,"column":55,"offset":305}}},"children":"api"}}],"를 만드는 것입니다. 이 폴더 내에서 JavaScript 또는 TypeScript 파일을 생성하여 API 엔드포인트를 정의할 수 있습니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["예를 들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"user.js","position":{"start":{"line":10,"column":8,"offset":391},"end":{"line":10,"column":17,"offset":400}}}],"position":{"start":{"line":10,"column":8,"offset":391},"end":{"line":10,"column":17,"offset":400}}},"children":"user.js"}}],"라는 파일을 생성하여 사용자 데이터를 반환하는 API 라우트를 구성할 수 있습니다. 다음은 이 파일의 내용입니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// pages/api/user.js\n\nexport default function handler(req, res) {\n  if (req.method === 'GET') {\n    res.status(200).json({ name: 'John Doe', age: 30 });\n  } else {\n    res.status(405).json({ message: 'Method Not Allowed' });\n  }\n}\n"}],"position":{"start":{"line":12,"column":1,"offset":465},"end":{"line":22,"column":4,"offset":713}}},"children":"// pages/api/user.js\n\nexport default function handler(req, res) {\n  if (req.method === 'GET') {\n    res.status(200).json({ name: 'John Doe', age: 30 });\n  } else {\n    res.status(405).json({ message: 'Method Not Allowed' });\n  }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"GET","position":{"start":{"line":24,"column":9,"offset":723},"end":{"line":24,"column":14,"offset":728}}}],"position":{"start":{"line":24,"column":9,"offset":723},"end":{"line":24,"column":14,"offset":728}}},"children":"GET"}}]," 요청이 들어왔을 때 사용자 정보를 JSON 형식으로 반환합니다. 그 외의 요청 메서드에 대해서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"405 Method Not Allowed","position":{"start":{"line":24,"column":69,"offset":783},"end":{"line":24,"column":93,"offset":807}}}],"position":{"start":{"line":24,"column":69,"offset":783},"end":{"line":24,"column":93,"offset":807}}},"children":"405 Method Not Allowed"}}]," 상태 코드를 반환합니다."]}],"\n",["$","h2",null,{"id":"6354e631","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"라우트 구성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Next.js의 API 라우트는 파일 시스템 기반의 라우팅을 사용합니다. 이는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pages/api","position":{"start":{"line":28,"column":45,"offset":878},"end":{"line":28,"column":56,"offset":889}}}],"position":{"start":{"line":28,"column":45,"offset":878},"end":{"line":28,"column":56,"offset":889}}},"children":"pages/api"}}]," 폴더 내의 파일 이름이 자동으로 URL 경로가 됨을 의미합니다. 예를 들어, 위의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"user.js","position":{"start":{"line":28,"column":103,"offset":936},"end":{"line":28,"column":112,"offset":945}}}],"position":{"start":{"line":28,"column":103,"offset":936},"end":{"line":28,"column":112,"offset":945}}},"children":"user.js"}}]," 파일은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/api/user","position":{"start":{"line":28,"column":117,"offset":950},"end":{"line":28,"column":128,"offset":961}}}],"position":{"start":{"line":28,"column":117,"offset":950},"end":{"line":28,"column":128,"offset":961}}},"children":"/api/user"}}]," 경로로 접근할 수 있습니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 몇 가지 예시입니다:"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pages/api/posts.js","position":{"start":{"line":32,"column":3,"offset":998},"end":{"line":32,"column":23,"offset":1018}}}],"position":{"start":{"line":32,"column":3,"offset":998},"end":{"line":32,"column":23,"offset":1018}}},"children":"pages/api/posts.js"}}]," -> ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/api/posts","position":{"start":{"line":32,"column":27,"offset":1022},"end":{"line":32,"column":39,"offset":1034}}}],"position":{"start":{"line":32,"column":27,"offset":1022},"end":{"line":32,"column":39,"offset":1034}}},"children":"/api/posts"}}]]}],"\n",["$","li","li-1",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pages/api/comments/index.js","position":{"start":{"line":33,"column":3,"offset":1037},"end":{"line":33,"column":32,"offset":1066}}}],"position":{"start":{"line":33,"column":3,"offset":1037},"end":{"line":33,"column":32,"offset":1066}}},"children":"pages/api/comments/index.js"}}]," -> ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/api/comments","position":{"start":{"line":33,"column":36,"offset":1070},"end":{"line":33,"column":51,"offset":1085}}}],"position":{"start":{"line":33,"column":36,"offset":1070},"end":{"line":33,"column":51,"offset":1085}}},"children":"/api/comments"}}]]}],"\n",["$","li","li-2",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pages/api/products/[id].js","position":{"start":{"line":34,"column":3,"offset":1088},"end":{"line":34,"column":31,"offset":1116}}}],"position":{"start":{"line":34,"column":3,"offset":1088},"end":{"line":34,"column":31,"offset":1116}}},"children":"pages/api/products/[id].js"}}]," -> ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/api/products/[id]","position":{"start":{"line":34,"column":35,"offset":1120},"end":{"line":34,"column":55,"offset":1140}}}],"position":{"start":{"line":34,"column":35,"offset":1120},"end":{"line":34,"column":55,"offset":1140}}},"children":"/api/products/[id]"}}]]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[id].js","position":{"start":{"line":36,"column":1,"offset":1142},"end":{"line":36,"column":10,"offset":1151}}}],"position":{"start":{"line":36,"column":1,"offset":1142},"end":{"line":36,"column":10,"offset":1151}}},"children":"[id].js"}}],"와 같은 파일 이름은 동적 라우트를 지원하여 URL 매개변수를 처리할 수 있게 해줍니다."]}],"\n",["$","h2",null,{"id":"d7de84d8","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"데이터 핸들링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"API 라우트에서 데이터 핸들링은 매우 간단합니다. 일반적으로 데이터베이스 연결, 외부 API 호출, 또는 파일 시스템 접근과 같은 작업을 수행할 수 있습니다. 다음은 MongoDB를 사용해 데이터를 가져오는 예제입니다:"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// pages/api/user.js\nimport { MongoClient } from 'mongodb';\n\nconst uri = process.env.MONGODB_URI;\nconst client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });\n\nexport default async function handler(req, res) {\n  if (req.method === 'GET') {\n    try {\n      await client.connect();\n      const database = client.db('mydatabase');\n      const users = database.collection('users');\n      const user = await users.findOne({ name: 'John Doe' });\n      res.status(200).json(user);\n    } catch (error) {\n      res.status(500).json({ error: 'Internal Server Error' });\n    } finally {\n      await client.close();\n    }\n  } else {\n    res.status(405).json({ message: 'Method Not Allowed' });\n  }\n}\n"}],"position":{"start":{"line":42,"column":1,"offset":1339},"end":{"line":66,"column":4,"offset":2073}}},"children":"// pages/api/user.js\nimport { MongoClient } from 'mongodb';\n\nconst uri = process.env.MONGODB_URI;\nconst client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });\n\nexport default async function handler(req, res) {\n  if (req.method === 'GET') {\n    try {\n      await client.connect();\n      const database = client.db('mydatabase');\n      const users = database.collection('users');\n      const user = await users.findOne({ name: 'John Doe' });\n      res.status(200).json(user);\n    } catch (error) {\n      res.status(500).json({ error: 'Internal Server Error' });\n    } finally {\n      await client.close();\n    }\n  } else {\n    res.status(405).json({ message: 'Method Not Allowed' });\n  }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위 예제는 MongoDB 클라이언트를 사용해 데이터베이스에 연결하고 특정 사용자를 찾아 반환합니다. 데이터베이스 URI는 환경 변수를 통해 설정되며, 이는 보안적인 이유로 매우 중요합니다."}],"\n",["$","h2",null,{"id":"b3fccb72","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"다양한 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"API 라우트에서 할 수 있는 작업은 매우 다양합니다. 다음은 몇 가지 예시입니다."}],"\n",["$","h3",null,{"id":"01e6eb5d","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"외부 API 호출"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"외부 API 호출을 통해 데이터를 가져오는 예제입니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// pages/api/external.js\nimport axios from 'axios';\n\nexport default async function handler(req, res) {\n  if (req.method === 'GET') {\n    try {\n      const response = await axios.get('https://api.example.com/data');\n      res.status(200).json(response.data);\n    } catch (error) {\n      res.status(500).json({ error: 'Failed to fetch data' });\n    }\n  } else {\n    res.status(405).json({ message: 'Method Not Allowed' });\n  }\n}\n"}],"position":{"start":{"line":78,"column":1,"offset":2288},"end":{"line":94,"column":4,"offset":2732}}},"children":"// pages/api/external.js\nimport axios from 'axios';\n\nexport default async function handler(req, res) {\n  if (req.method === 'GET') {\n    try {\n      const response = await axios.get('https://api.example.com/data');\n      res.status(200).json(response.data);\n    } catch (error) {\n      res.status(500).json({ error: 'Failed to fetch data' });\n    }\n  } else {\n    res.status(405).json({ message: 'Method Not Allowed' });\n  }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"axios","position":{"start":{"line":96,"column":9,"offset":2742},"end":{"line":96,"column":16,"offset":2749}}}],"position":{"start":{"line":96,"column":9,"offset":2742},"end":{"line":96,"column":16,"offset":2749}}},"children":"axios"}}]," 라이브러리를 사용해 외부 API로부터 데이터를 가져와 클라이언트에게 반환합니다."]}],"\n",["$","h3",null,{"id":"7ba344ad","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"폼 데이터 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"POST 요청을 통해 폼 데이터를 처리하는 예제입니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// pages/api/form.js\n\nexport default function handler(req, res) {\n  if (req.method === 'POST') {\n    const { name, email } = req.body;\n    // 폼 데이터 처리 로직\n    res.status(200).json({ message: 'Form submitted successfully', formData: { name, email } });\n  } else {\n    res.status(405).json({ message: 'Method Not Allowed' });\n  }\n}\n"}],"position":{"start":{"line":102,"column":1,"offset":2842},"end":{"line":114,"column":4,"offset":3188}}},"children":"// pages/api/form.js\n\nexport default function handler(req, res) {\n  if (req.method === 'POST') {\n    const { name, email } = req.body;\n    // 폼 데이터 처리 로직\n    res.status(200).json({ message: 'Form submitted successfully', formData: { name, email } });\n  } else {\n    res.status(405).json({ message: 'Method Not Allowed' });\n  }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위 예제에서는 POST 요청으로 전송된 폼 데이터를 받아 처리합니다."}],"\n",["$","h1",null,{"id":"5b12bcf2","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Next.js의 API 라우트는 강력하면서도 사용하기 쉬운 기능으로, 프로젝트 내에서 서버리스 API를 구현하는 데 많은 도움이 됩니다. Next.js 프로젝트에 API 라우트를 추가함으로써 백엔드 로직을 효율적으로 관리하고 확장할 수 있습니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Next.js에서의 API 라우트 설정: API 라우트 구성과 데이터 핸들링.","toc":[{"tagName":"h1","title":"Next.js에서의 API 라우트 설정: API 라우트 구성과 데이터 핸들링","id":"60f42ee8"},{"tagName":"h2","title":"API 라우트 생성","id":"caaf13e5"},{"tagName":"h2","title":"라우트 구성","id":"6354e631"},{"tagName":"h2","title":"데이터 핸들링","id":"d7de84d8"},{"tagName":"h2","title":"다양한 방법","id":"b3fccb72"},{"tagName":"h3","title":"외부 API 호출","id":"01e6eb5d"},{"tagName":"h3","title":"폼 데이터 처리","id":"7ba344ad"},{"tagName":"h1","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
