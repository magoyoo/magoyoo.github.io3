1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["algorithm",{"children":[["slug","%ED%94%84%EB%A6%BC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B2%83-%EC%9D%B4%EB%A1%A0%EB%B6%80%ED%84%B0-%EC%8B%A4%EC%A0%84%EA%B9%8C%EC%A7%80-a963c9d7","d"],{"children":["__PAGE__?{\"slug\":\"프림-알고리즘의-모든-것-이론부터-실전까지-a963c9d7\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children",["slug","%ED%94%84%EB%A6%BC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B2%83-%EC%9D%B4%EB%A1%A0%EB%B6%80%ED%84%B0-%EC%8B%A4%EC%A0%84%EA%B9%8C%EC%A7%80-a963c9d7","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"프림-알고리즘의-모든-것-이론부터-실전까지-a963c9d7\"}"},"styles":[]}],"segment":["slug","%ED%94%84%EB%A6%BC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B2%83-%EC%9D%B4%EB%A1%A0%EB%B6%80%ED%84%B0-%EC%8B%A4%EC%A0%84%EA%B9%8C%EC%A7%80-a963c9d7","d"]},"styles":[]}],"segment":"algorithm"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"프림 알고리즘의 모든 것: 이론부터 실전까지 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"프림 알고리즘은 최소 신장 트리를 찾기 위해 사용하는 알고리즘으로, 네트워크 설계와 같은 분야에서 매우 유용하게 활용됩니다. 이번 글에서는 프림 알고리즘의 이론적 배경부터 실전 적용까지 깊이 있게 다뤄보겠습니다."}],["$","meta","3",{"name":"keywords","content":"프림 알고리즘,최소 신장 트리,네트워크 설계,알고리즘"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/algorithm/%ED%94%84%EB%A6%BC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B2%83-%EC%9D%B4%EB%A1%A0%EB%B6%80%ED%84%B0-%EC%8B%A4%EC%A0%84%EA%B9%8C%EC%A7%80-a963c9d7"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"프림 알고리즘의 모든 것: 이론부터 실전까지 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"프림 알고리즘의 모든 것: 이론부터 실전까지 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"프림 알고리즘은 최소 신장 트리를 찾기 위해 사용하는 알고리즘으로, 네트워크 설계와 같은 분야에서 매우 유용하게 활용됩니다. 이번 글에서는 프림 알고리즘의 이론적 배경부터 실전 적용까지 깊이 있게 다뤄보겠습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/algorithm/%ED%94%84%EB%A6%BC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B2%83-%EC%9D%B4%EB%A1%A0%EB%B6%80%ED%84%B0-%EC%8B%A4%EC%A0%84%EA%B9%8C%EC%A7%80-a963c9d7"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/defaultBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"프림 알고리즘의 모든 것: 이론부터 실전까지 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"프림 알고리즘은 최소 신장 트리를 찾기 위해 사용하는 알고리즘으로, 네트워크 설계와 같은 분야에서 매우 유용하게 활용됩니다. 이번 글에서는 프림 알고리즘의 이론적 배경부터 실전 적용까지 깊이 있게 다뤄보겠습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/defaultBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/defaultBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"프림 알고리즘의 모든 것: 이론부터 실전까지"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"프림 알고리즘의 모든 것: 이론부터 실전까지"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-13"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"9fe1828a","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"프림 알고리즘의 모든 것: 이론부터 실전까지"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"프림 알고리즘(Prim's Algorithm)은 그래프 이론에서 최소 신장 트리를 찾기 위해 널리 사용되는 알고리즘 중 하나입니다. 주로 네트워크 설계, 전기 회로 설계 등 다양한 분야에서 활용됩니다. 이 글에서는 프림 알고리즘의 원리, 동작 방식, 그리고 이를 활용한 실제 예제들을 다룹니다."}],"\n",["$","h2",null,{"id":"64e1270c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프림 알고리즘의 이론적 배경"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"프림 알고리즘은 주로 가중치가 있는 연결 그래프에서 최소 신장 트리를 찾기 위해 사용됩니다. 최소 신장 트리(Minimum Spanning Tree, MST)는 그래프의 모든 정점을 연결하는 간선들의 부분 집합으로, 그 가중치의 합이 최소가 되는 트리입니다. 프림 알고리즘의 주요 목표는 주어진 그래프에서 이러한 최소 신장 트리를 찾는 것입니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"프림 알고리즘은 그리디 알고리즘의 일종입니다. 그리디 알고리즘은 각 단계에서 지역적으로 최적의 선택을 하는 방법으로 글로벌 최적해를 찾는 방식입니다. 프림 알고리즘은 시작 정점을 선택한 다음, 그 정점에 연결된 가중치가 가장 작은 간선을 선택하고, 이 과정을 트리가 완성될 때까지 반복합니다."}],"\n",["$","h2",null,{"id":"2913c770","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프림 알고리즘의 동작 방식"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 프림 알고리즘의 주요 단계입니다. 이를 이해하기 위해 여러 가지 용어와 개념을 알아둘 필요가 있습니다."}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"입력 그래프"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"G = (V, E)","position":{"start":{"line":16,"column":16,"offset":672},"end":{"line":16,"column":28,"offset":684}}}],"position":{"start":{"line":16,"column":16,"offset":672},"end":{"line":16,"column":28,"offset":684}}},"children":"G = (V, E)"}}],"에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"V","position":{"start":{"line":16,"column":31,"offset":687},"end":{"line":16,"column":34,"offset":690}}}],"position":{"start":{"line":16,"column":31,"offset":687},"end":{"line":16,"column":34,"offset":690}}},"children":"V"}}],"는 정점의 집합, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"E","position":{"start":{"line":16,"column":44,"offset":700},"end":{"line":16,"column":47,"offset":703}}}],"position":{"start":{"line":16,"column":44,"offset":700},"end":{"line":16,"column":47,"offset":703}}},"children":"E"}}],"는 간선의 집합입니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"선택한 정점 집합"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A","position":{"start":{"line":17,"column":19,"offset":734},"end":{"line":17,"column":22,"offset":737}}}],"position":{"start":{"line":17,"column":19,"offset":734},"end":{"line":17,"column":22,"offset":737}}},"children":"A"}}],"는 프림 알고리즘이 선택한 정점들의 집합입니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"후보 간선 집합"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"C","position":{"start":{"line":18,"column":18,"offset":781},"end":{"line":18,"column":21,"offset":784}}}],"position":{"start":{"line":18,"column":18,"offset":781},"end":{"line":18,"column":21,"offset":784}}},"children":"C"}}],"는 선택한 정점에 연결된 간선 중에서 선택하지 않은 간선들의 집합입니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"알고리즘의 초기 단계는 다음과 같습니다."}],"\n",["$","ol","ol-1",{"children":["\n",["$","li","li-0",{"children":["그래프 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"G","position":{"start":{"line":22,"column":8,"offset":857},"end":{"line":22,"column":11,"offset":860}}}],"position":{"start":{"line":22,"column":8,"offset":857},"end":{"line":22,"column":11,"offset":860}}},"children":"G"}}],"에서 임의의 시작 정점 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"u","position":{"start":{"line":22,"column":24,"offset":873},"end":{"line":22,"column":27,"offset":876}}}],"position":{"start":{"line":22,"column":24,"offset":873},"end":{"line":22,"column":27,"offset":876}}},"children":"u"}}],"를 선택하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A","position":{"start":{"line":22,"column":34,"offset":883},"end":{"line":22,"column":37,"offset":886}}}],"position":{"start":{"line":22,"column":34,"offset":883},"end":{"line":22,"column":37,"offset":886}}},"children":"A"}}],"에 추가합니다."]}],"\n",["$","li","li-1",{"children":["시작 정점 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"u","position":{"start":{"line":23,"column":10,"offset":904},"end":{"line":23,"column":13,"offset":907}}}],"position":{"start":{"line":23,"column":10,"offset":904},"end":{"line":23,"column":13,"offset":907}}},"children":"u"}}],"에 연결된 모든 간선을 후보 간선 집합 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"C","position":{"start":{"line":23,"column":35,"offset":929},"end":{"line":23,"column":38,"offset":932}}}],"position":{"start":{"line":23,"column":35,"offset":929},"end":{"line":23,"column":38,"offset":932}}},"children":"C"}}],"에 추가합니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이후 알고리즘은 다음과 같은 반복 과정을 거칩니다."}],"\n",["$","ol","ol-2",{"children":["\n",["$","li","li-0",{"children":["후보 간선 집합 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"C","position":{"start":{"line":27,"column":13,"offset":984},"end":{"line":27,"column":16,"offset":987}}}],"position":{"start":{"line":27,"column":13,"offset":984},"end":{"line":27,"column":16,"offset":987}}},"children":"C"}}],"에서 가중치가 가장 작은 간선을 선택합니다. 이 간선을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(u, v)","position":{"start":{"line":27,"column":47,"offset":1018},"end":{"line":27,"column":55,"offset":1026}}}],"position":{"start":{"line":27,"column":47,"offset":1018},"end":{"line":27,"column":55,"offset":1026}}},"children":"(u, v)"}}],"라고 합시다."]}],"\n",["$","li","li-1",{"children":["정점 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"v","position":{"start":{"line":28,"column":7,"offset":1040},"end":{"line":28,"column":10,"offset":1043}}}],"position":{"start":{"line":28,"column":7,"offset":1040},"end":{"line":28,"column":10,"offset":1043}}},"children":"v"}}],"가 이미 선택한 정점 집합 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A","position":{"start":{"line":28,"column":25,"offset":1058},"end":{"line":28,"column":28,"offset":1061}}}],"position":{"start":{"line":28,"column":25,"offset":1058},"end":{"line":28,"column":28,"offset":1061}}},"children":"A"}}],"에 없다면, 정점 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"v","position":{"start":{"line":28,"column":38,"offset":1071},"end":{"line":28,"column":41,"offset":1074}}}],"position":{"start":{"line":28,"column":38,"offset":1071},"end":{"line":28,"column":41,"offset":1074}}},"children":"v"}}],"를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A","position":{"start":{"line":28,"column":43,"offset":1076},"end":{"line":28,"column":46,"offset":1079}}}],"position":{"start":{"line":28,"column":43,"offset":1076},"end":{"line":28,"column":46,"offset":1079}}},"children":"A"}}],"에 추가하고 간선 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(u, v)","position":{"start":{"line":28,"column":56,"offset":1089},"end":{"line":28,"column":64,"offset":1097}}}],"position":{"start":{"line":28,"column":56,"offset":1089},"end":{"line":28,"column":64,"offset":1097}}},"children":"(u, v)"}}],"를 최소 신장 트리에 추가합니다."]}],"\n",["$","li","li-2",{"children":["정점 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"v","position":{"start":{"line":29,"column":7,"offset":1122},"end":{"line":29,"column":10,"offset":1125}}}],"position":{"start":{"line":29,"column":7,"offset":1122},"end":{"line":29,"column":10,"offset":1125}}},"children":"v"}}],"에 연결된 모든 간선을 후보 간선 집합 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"C","position":{"start":{"line":29,"column":32,"offset":1147},"end":{"line":29,"column":35,"offset":1150}}}],"position":{"start":{"line":29,"column":32,"offset":1147},"end":{"line":29,"column":35,"offset":1150}}},"children":"C"}}],"에 추가합니다."]}],"\n",["$","li","li-3",{"children":["이 과정을 선택한 정점 집합 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A","position":{"start":{"line":30,"column":20,"offset":1178},"end":{"line":30,"column":23,"offset":1181}}}],"position":{"start":{"line":30,"column":20,"offset":1178},"end":{"line":30,"column":23,"offset":1181}}},"children":"A"}}],"가 그래프 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"G","position":{"start":{"line":30,"column":29,"offset":1187},"end":{"line":30,"column":32,"offset":1190}}}],"position":{"start":{"line":30,"column":29,"offset":1187},"end":{"line":30,"column":32,"offset":1190}}},"children":"G"}}],"의 모든 정점을 포함할 때까지 반복합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"c13a42d4","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프림 알고리즘의 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["예제를 통해 프림 알고리즘이 어떻게 동작하는지 살펴보겠습니다. 다음은 가중치가 있는 연결 그래프 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"G","position":{"start":{"line":34,"column":55,"offset":1285},"end":{"line":34,"column":58,"offset":1288}}}],"position":{"start":{"line":34,"column":55,"offset":1285},"end":{"line":34,"column":58,"offset":1288}}},"children":"G"}}],"입니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A --2-- B\n|      |\n3      1\n|      |\nC --4-- D\n"}],"position":{"start":{"line":36,"column":1,"offset":1294},"end":{"line":42,"column":4,"offset":1348}}},"children":"A --2-- B\n|      |\n3      1\n|      |\nC --4-- D\n"}}]}],"\n",["$","ol","ol-3",{"children":["\n",["$","li","li-0",{"children":["시작 정점으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A","position":{"start":{"line":44,"column":12,"offset":1361},"end":{"line":44,"column":15,"offset":1364}}}],"position":{"start":{"line":44,"column":12,"offset":1361},"end":{"line":44,"column":15,"offset":1364}}},"children":"A"}}],"를 선택합니다. 초기 상태에서 선택된 정점 집합 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A","position":{"start":{"line":44,"column":42,"offset":1391},"end":{"line":44,"column":45,"offset":1394}}}],"position":{"start":{"line":44,"column":42,"offset":1391},"end":{"line":44,"column":45,"offset":1394}}},"children":"A"}}],"는 {A}입니다."]}],"\n",["$","li","li-1",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A","position":{"start":{"line":45,"column":4,"offset":1407},"end":{"line":45,"column":7,"offset":1410}}}],"position":{"start":{"line":45,"column":4,"offset":1407},"end":{"line":45,"column":7,"offset":1410}}},"children":"A"}}],"에 연결된 간선 (A, B)와 (A, C)를 후보 간선 집합 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"C","position":{"start":{"line":45,"column":41,"offset":1444},"end":{"line":45,"column":44,"offset":1447}}}],"position":{"start":{"line":45,"column":41,"offset":1444},"end":{"line":45,"column":44,"offset":1447}}},"children":"C"}}],"에 추가합니다. 이때 (A, B)의 가중치는 2, (A, C)의 가중치는 3입니다."]}],"\n",["$","li","li-2",{"children":["후보 간선 중 가중치가 가장 작은 (A, B)를 선택하고, 정점 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"B","position":{"start":{"line":46,"column":40,"offset":1533},"end":{"line":46,"column":43,"offset":1536}}}],"position":{"start":{"line":46,"column":40,"offset":1533},"end":{"line":46,"column":43,"offset":1536}}},"children":"B"}}],"를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A","position":{"start":{"line":46,"column":45,"offset":1538},"end":{"line":46,"column":48,"offset":1541}}}],"position":{"start":{"line":46,"column":45,"offset":1538},"end":{"line":46,"column":48,"offset":1541}}},"children":"A"}}],"에 추가합니다. 이때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A","position":{"start":{"line":46,"column":60,"offset":1553},"end":{"line":46,"column":63,"offset":1556}}}],"position":{"start":{"line":46,"column":60,"offset":1553},"end":{"line":46,"column":63,"offset":1556}}},"children":"A"}}],"는 {A, B}가 됩니다."]}],"\n",["$","li","li-3",{"children":["정점 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"B","position":{"start":{"line":47,"column":7,"offset":1577},"end":{"line":47,"column":10,"offset":1580}}}],"position":{"start":{"line":47,"column":7,"offset":1577},"end":{"line":47,"column":10,"offset":1580}}},"children":"B"}}],"에 연결된 간선 (B, D)를 후보 간선 집합 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"C","position":{"start":{"line":47,"column":36,"offset":1606},"end":{"line":47,"column":39,"offset":1609}}}],"position":{"start":{"line":47,"column":36,"offset":1606},"end":{"line":47,"column":39,"offset":1609}}},"children":"C"}}],"에 추가합니다. 이제 후보 간선은 (A, C), (B, D)와 각각의 가중치 3, 1 입니다."]}],"\n",["$","li","li-4",{"children":["후에 (B, D)를 선택하고, 정점 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"D","position":{"start":{"line":48,"column":24,"offset":1685},"end":{"line":48,"column":27,"offset":1688}}}],"position":{"start":{"line":48,"column":24,"offset":1685},"end":{"line":48,"column":27,"offset":1688}}},"children":"D"}}],"를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A","position":{"start":{"line":48,"column":29,"offset":1690},"end":{"line":48,"column":32,"offset":1693}}}],"position":{"start":{"line":48,"column":29,"offset":1690},"end":{"line":48,"column":32,"offset":1693}}},"children":"A"}}],"에 추가합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A","position":{"start":{"line":48,"column":41,"offset":1702},"end":{"line":48,"column":44,"offset":1705}}}],"position":{"start":{"line":48,"column":41,"offset":1702},"end":{"line":48,"column":44,"offset":1705}}},"children":"A"}}],"는 {A, B, D}가 됩니다."]}],"\n",["$","li","li-5",{"children":["정점 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"D","position":{"start":{"line":49,"column":7,"offset":1729},"end":{"line":49,"column":10,"offset":1732}}}],"position":{"start":{"line":49,"column":7,"offset":1729},"end":{"line":49,"column":10,"offset":1732}}},"children":"D"}}],"에 연결된 유일한 간선인 (D, C)를 후보 간선 집합 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"C","position":{"start":{"line":49,"column":41,"offset":1763},"end":{"line":49,"column":44,"offset":1766}}}],"position":{"start":{"line":49,"column":41,"offset":1763},"end":{"line":49,"column":44,"offset":1766}}},"children":"C"}}],"에 추가합니다. 최종 후보 간선은 (A, C)와 (D, C)로 가중치는 3과 4입니다."]}],"\n",["$","li","li-6",{"children":"(A, C)를 가중치를 고려하여 대입합니다."}],"\n",["$","li","li-7",{"children":["모든 정점이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"A","position":{"start":{"line":51,"column":11,"offset":1853},"end":{"line":51,"column":14,"offset":1856}}}],"position":{"start":{"line":51,"column":11,"offset":1853},"end":{"line":51,"column":14,"offset":1856}}},"children":"A"}}],"에 포함될 때까지 반복하여 최종적으로 MST를 구하게 됩니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"7be3a1af","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프림 알고리즘의 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"프림 알고리즘은 다양한 프로그래밍 언어로 구현할 수 있습니다. 여기서는 Python으로 구현하는 방법을 보여드리겠습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"import heapq\n\ndef prim(graph):\n    mst = []\n    visited = set()\n    min_heap = [(0, 0)]  # (cost, start_node)\n\n    while len(mst) < len(graph) - 1:\n        cost, u = heapq.heappop(min_heap)        \n        if u in visited:\n            continue\n\n        visited.add(u)\n\n        for v, weight in graph[u]:\n            if v not in visited:\n                heapq.heappush(min_heap, (weight, v))\n\n        mst.append((u, v, weight))\n    return mst\n\n# 예제 그래프\ngraph = {0: [(1, 2), (2, 3)], 1: [(0, 2), (3, 1)], 2: [(0, 3), (3, 4)], 3: [(1, 1), (2, 4)]}\n\n# 프림 알고리즘 실행\nprint(prim(graph))\n"}],"position":{"start":{"line":57,"column":1,"offset":1977},"end":{"line":84,"column":4,"offset":2568}}},"children":"import heapq\n\ndef prim(graph):\n    mst = []\n    visited = set()\n    min_heap = [(0, 0)]  # (cost, start_node)\n\n    while len(mst) < len(graph) - 1:\n        cost, u = heapq.heappop(min_heap)        \n        if u in visited:\n            continue\n\n        visited.add(u)\n\n        for v, weight in graph[u]:\n            if v not in visited:\n                heapq.heappush(min_heap, (weight, v))\n\n        mst.append((u, v, weight))\n    return mst\n\n# 예제 그래프\ngraph = {0: [(1, 2), (2, 3)], 1: [(0, 2), (3, 1)], 2: [(0, 3), (3, 4)], 3: [(1, 1), (2, 4)]}\n\n# 프림 알고리즘 실행\nprint(prim(graph))\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 우선순위 큐를 사용하여 그래프에서 최소 신장 트리를 구하는 프림 알고리즘의 예제입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"heapq","position":{"start":{"line":86,"column":56,"offset":2625},"end":{"line":86,"column":63,"offset":2632}}}],"position":{"start":{"line":86,"column":56,"offset":2625},"end":{"line":86,"column":63,"offset":2632}}},"children":"heapq"}}]," 모듈을 사용하여 최소 힙을 구현하였으며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"visited","position":{"start":{"line":86,"column":87,"offset":2656},"end":{"line":86,"column":96,"offset":2665}}}],"position":{"start":{"line":86,"column":87,"offset":2656},"end":{"line":86,"column":96,"offset":2665}}},"children":"visited"}}]," 집합을 통해 방문한 정점을 관리합니다."]}],"\n",["$","h2",null,{"id":"eabf0a0a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프림 알고리즘의 시간 복잡도"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["프림 알고리즘의 시간 복잡도는 구현 방식에 따라 달라질 수 있습니다. 일반적으로 인접 리스트와 우선순위 큐(힙)를 사용한 구현에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O((V + E) log V)","position":{"start":{"line":90,"column":75,"offset":2783},"end":{"line":90,"column":93,"offset":2801}}}],"position":{"start":{"line":90,"column":75,"offset":2783},"end":{"line":90,"column":93,"offset":2801}}},"children":"O((V + E) log V)"}}],"의 시간 복잡도를 가집니다. 이는 각 정점을 최소 힙에 삽입하고 최솟값을 추출하는 연산이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"log V","position":{"start":{"line":90,"column":143,"offset":2851},"end":{"line":90,"column":150,"offset":2858}}}],"position":{"start":{"line":90,"column":143,"offset":2851},"end":{"line":90,"column":150,"offset":2858}}},"children":"log V"}}],"에 비례하기 때문입니다."]}],"\n",["$","h2",null,{"id":"8ed074c4","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프림 알고리즘의 응용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"프림 알고리즘은 네트워크 설계, 도로망 설계, 전기 회로 설계 등 다양한 분야에서 응용됩니다. 주어진 자원을 최소화하면서도 모든 노드를 연결해야 하는 문제에서 유용하게 사용될 수 있습니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"프림 알고리즘을 통해 복잡한 네트워크 구조나 그래프 구조를 효율적으로 분석하고 설계할 수 있으며, 이는 정보 통신, 토목 공학, 전자 공학 등 여러 분야에서 중요한 역할을 합니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"프림 알고리즘은 최소 신장 트리를 찾기 위한 강력한 도구로, 그 이론적 배경과 실제 응용 사례들은 매우 흥미롭습니다. 이를 이해하고 능숙하게 적용할 수 있다면, 다양한 복잡한 문제를 보다 효율적으로 해결할 수 있을 것입니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"프림 알고리즘의 모든 것: 이론부터 실전까지","toc":[{"tagName":"h1","title":"프림 알고리즘의 모든 것: 이론부터 실전까지","id":"9fe1828a"},{"tagName":"h2","title":"프림 알고리즘의 이론적 배경","id":"64e1270c"},{"tagName":"h2","title":"프림 알고리즘의 동작 방식","id":"2913c770"},{"tagName":"h2","title":"프림 알고리즘의 예제","id":"c13a42d4"},{"tagName":"h2","title":"프림 알고리즘의 구현","id":"7be3a1af"},{"tagName":"h2","title":"프림 알고리즘의 시간 복잡도","id":"eabf0a0a"},{"tagName":"h2","title":"프림 알고리즘의 응용","id":"8ed074c4"}],"language":"kr"}]}]]}]]
8:null
