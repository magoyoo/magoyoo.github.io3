1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","%EB%8B%A4%EC%96%91%ED%95%9C-Swift-Combine-Publisher-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C","d"],{"children":["__PAGE__?{\"slug\":\"다양한-Swift-Combine-Publisher-사용-예제\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","%EB%8B%A4%EC%96%91%ED%95%9C-Swift-Combine-Publisher-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"다양한-Swift-Combine-Publisher-사용-예제\"}"},"styles":[]}],"segment":["slug","%EB%8B%A4%EC%96%91%ED%95%9C-Swift-Combine-Publisher-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift Combine Publisher의 기본 개념과 사용법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Combine 프레임워크에서 제공하는 여러 가지 Publisher(`Just`, `Future`, `Deferred` 등)의 실제 사용 예제를 통해 Publisher의 다양성을 탐구합니다."}],["$","meta","3",{"name":"keywords","content":"swift,combine"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/%EB%8B%A4%EC%96%91%ED%95%9C-Swift-Combine-Publisher-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift Combine Publisher의 기본 개념과 사용법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift Combine Publisher의 기본 개념과 사용법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Combine 프레임워크에서 제공하는 여러 가지 Publisher(`Just`, `Future`, `Deferred` 등)의 실제 사용 예제를 통해 Publisher의 다양성을 탐구합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/%EB%8B%A4%EC%96%91%ED%95%9C-Swift-Combine-Publisher-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swift-combine.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift Combine Publisher의 기본 개념과 사용법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Combine 프레임워크에서 제공하는 여러 가지 Publisher(`Just`, `Future`, `Deferred` 등)의 실제 사용 예제를 통해 Publisher의 다양성을 탐구합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swift-combine.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swift-combine.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift Combine Publisher의 기본 개념과 사용법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift Combine Publisher의 기본 개념과 사용법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-05-28"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h2",null,{"id":"7bd4e442","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"다양한 Swift Combine Publisher 사용 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift Combine은 애플의 리액티브 프로그래밍 프레임워크로, 비동기 이벤트 처리와 데이터 스트림 관리를 위해 설계되었습니다. Combine은 Publisher와 Subscriber로 구성되며, Publisher는 데이터를 발행하는 역할을 합니다. 이 글에서는 다양한 Swift Combine Publisher와 그 사용 예제에 대해 알아보겠습니다."}],"\n",["$","h2",null,{"id":"0d820170","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"기본 Publisher 타입"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Combine 프레임워크는 다양한 내장 Publisher 타입을 제공하여 다양한 상황에 맞게 사용할 수 있습니다. 주요 Publisher 타입과 그 사용 예제를 살펴보겠습니다."}],"\n",["$","h3",null,{"id":"e9b44bbe","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Just"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Just","position":{"start":{"line":12,"column":1,"offset":369},"end":{"line":12,"column":7,"offset":375}}}],"position":{"start":{"line":12,"column":1,"offset":369},"end":{"line":12,"column":7,"offset":375}}},"children":"Just"}}],"는 단 하나의 값을 발행하는 Publisher입니다. 오류를 발생시키지 않으며, 매우 간단한 형태의 Publisher입니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Combine\n\nlet justPublisher = Just(\"Hello, Combine!\")\n\nlet cancellable = justPublisher.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { value in\n    print(\"Received value: \\(value)\")\n})\n"}],"position":{"start":{"line":14,"column":1,"offset":446},"end":{"line":29,"column":4,"offset":799}}},"children":"import Combine\n\nlet justPublisher = Just(\"Hello, Combine!\")\n\nlet cancellable = justPublisher.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { value in\n    print(\"Received value: \\(value)\")\n})\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제는 \"Hello, Combine!\" 문자열을 발행하고 완료를 출력합니다."}],"\n",["$","h3",null,{"id":"047ca540","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Future"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Future","position":{"start":{"line":35,"column":1,"offset":859},"end":{"line":35,"column":9,"offset":867}}}],"position":{"start":{"line":35,"column":1,"offset":859},"end":{"line":35,"column":9,"offset":867}}},"children":"Future"}}],"는 비동기 작업의 결과를 발행하는 Publisher입니다. 비동기 작업이 완료되었을 때, 결과 값을 한 번 발행하고 종료합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let futurePublisher = Future<String, Error> { promise in\n    DispatchQueue.global().asyncAfter(deadline: .now() + 1) {\n        promise(.success(\"Async result\"))\n    }\n}\n\nlet cancellable = futurePublisher.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { value in\n    print(\"Received value: \\(value)\")\n})\n"}],"position":{"start":{"line":37,"column":1,"offset":940},"end":{"line":54,"column":4,"offset":1404}}},"children":"let futurePublisher = Future<String, Error> { promise in\n    DispatchQueue.global().asyncAfter(deadline: .now() + 1) {\n        promise(.success(\"Async result\"))\n    }\n}\n\nlet cancellable = futurePublisher.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { value in\n    print(\"Received value: \\(value)\")\n})\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제는 비동기 작업이 완료된 후 \"Async result\"를 발행합니다."}],"\n",["$","h3",null,{"id":"714ae55e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Deferred"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Deferred","position":{"start":{"line":60,"column":1,"offset":1464},"end":{"line":60,"column":11,"offset":1474}}}],"position":{"start":{"line":60,"column":1,"offset":1464},"end":{"line":60,"column":11,"offset":1474}}},"children":"Deferred"}}],"는 Subscriber가 구독할 때까지 Publisher의 생성 및 실행을 지연시키는 역할을 합니다. 이를 통해 구독 시점에 Publisher를 동적으로 생성할 수 있습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let deferredPublisher = Deferred {\n    Just(Date())\n}\n\nlet cancellable = deferredPublisher.sink(receiveValue: { value in\n    print(\"Received date: \\(value)\")\n})\n"}],"position":{"start":{"line":62,"column":1,"offset":1573},"end":{"line":70,"column":4,"offset":1746}}},"children":"let deferredPublisher = Deferred {\n    Just(Date())\n}\n\nlet cancellable = deferredPublisher.sink(receiveValue: { value in\n    print(\"Received date: \\(value)\")\n})\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제는 구독 시점에 현재 날짜와 시간을 발행합니다."}],"\n",["$","h3",null,{"id":"3159fe42","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Empty"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Empty","position":{"start":{"line":76,"column":1,"offset":1791},"end":{"line":76,"column":8,"offset":1798}}}],"position":{"start":{"line":76,"column":1,"offset":1791},"end":{"line":76,"column":8,"offset":1798}}},"children":"Empty"}}],"는 즉시 완료되거나 오류를 발생시키지 않고 아무 값도 발행하지 않는 Publisher입니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let emptyPublisher = Empty<Int, Never>()\n\nlet cancellable = emptyPublisher.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure:\n        print(\"Error\")\n    }\n}, receiveValue: { value in\n    print(\"Received value: \\(value)\")\n})\n"}],"position":{"start":{"line":78,"column":1,"offset":1851},"end":{"line":91,"column":4,"offset":2165}}},"children":"let emptyPublisher = Empty<Int, Never>()\n\nlet cancellable = emptyPublisher.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure:\n        print(\"Error\")\n    }\n}, receiveValue: { value in\n    print(\"Received value: \\(value)\")\n})\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제는 아무 값도 발행하지 않고 완료됩니다."}],"\n",["$","h3",null,{"id":"2758e327","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Fail"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Fail","position":{"start":{"line":97,"column":1,"offset":2205},"end":{"line":97,"column":7,"offset":2211}}}],"position":{"start":{"line":97,"column":1,"offset":2205},"end":{"line":97,"column":7,"offset":2211}}},"children":"Fail"}}],"는 특정 오류를 즉시 발행하고 완료되는 Publisher입니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"enum MyError: Error {\n    case exampleError\n}\n\nlet failPublisher = Fail<Int, MyError>(error: .exampleError)\n\nlet cancellable = failPublisher.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { value in\n    print(\"Received value: \\(value)\")\n})\n"}],"position":{"start":{"line":99,"column":1,"offset":2248},"end":{"line":116,"column":4,"offset":2649}}},"children":"enum MyError: Error {\n    case exampleError\n}\n\nlet failPublisher = Fail<Int, MyError>(error: .exampleError)\n\nlet cancellable = failPublisher.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { value in\n    print(\"Received value: \\(value)\")\n})\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제는 오류를 발행하고 종료됩니다."}],"\n",["$","h2",null,{"id":"55ab082b","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Sequence를 Publisher로 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Combine은 배열과 같은 Sequence 타입을 Publisher로 변환할 수 있습니다."}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let numbers = [1, 2, 3, 4, 5].publisher\n\nlet cancellable = numbers.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { value in\n    print(\"Received number: \\(value)\")\n})\n"}],"position":{"start":{"line":124,"column":1,"offset":2757},"end":{"line":137,"column":4,"offset":3085}}},"children":"let numbers = [1, 2, 3, 4, 5].publisher\n\nlet cancellable = numbers.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { value in\n    print(\"Received number: \\(value)\")\n})\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제는 배열의 각 요소를 순차적으로 발행하고 완료됩니다."}],"\n",["$","h2",null,{"id":"270b8a36","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Timer Publisher"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Combine은 주기적으로 값을 발행하는 Timer Publisher도 제공합니다."}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let timerPublisher = Timer.publish(every: 1.0, on: .main, in: .default).autoconnect()\n\nlet cancellable = timerPublisher.sink(receiveValue: { value in\n    print(\"Timer fired at: \\(value)\")\n})\n"}],"position":{"start":{"line":145,"column":1,"offset":3190},"end":{"line":151,"column":4,"offset":3393}}},"children":"let timerPublisher = Timer.publish(every: 1.0, on: .main, in: .default).autoconnect()\n\nlet cancellable = timerPublisher.sink(receiveValue: { value in\n    print(\"Timer fired at: \\(value)\")\n})\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제는 1초마다 현재 시간을 발행합니다."}],"\n",["$","h2",null,{"id":"49a46669","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"NotificationCenter Publisher"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"NotificationCenter에서 게시된 알림을 Publisher로 사용할 수도 있습니다."}],"\n",["$","pre","pre-7",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let notificationPublisher = NotificationCenter.default.publisher(for: UIApplication.didBecomeActiveNotification)\n\nlet cancellable = notificationPublisher.sink(receiveValue: { notification in\n    print(\"Received notification: \\(notification)\")\n})\n"}],"position":{"start":{"line":159,"column":1,"offset":3508},"end":{"line":165,"column":4,"offset":3766}}},"children":"let notificationPublisher = NotificationCenter.default.publisher(for: UIApplication.didBecomeActiveNotification)\n\nlet cancellable = notificationPublisher.sink(receiveValue: { notification in\n    print(\"Received notification: \\(notification)\")\n})\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제는 앱이 활성화될 때마다 알림을 발행합니다."}],"\n",["$","h2",null,{"id":"f098dfef","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"URLSession Data Task Publisher"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Combine을 사용하여 네트워크 요청도 처리할 수 있습니다."}],"\n",["$","pre","pre-8",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let url = URL(string: \"https://jsonplaceholder.typicode.com/todos/1\")!\nlet dataTaskPublisher = URLSession.shared.dataTaskPublisher(for: url)\n\nlet cancellable = dataTaskPublisher.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { data, response in\n    print(\"Received data: \\(data)\")\n})\n"}],"position":{"start":{"line":173,"column":1,"offset":3869},"end":{"line":187,"column":4,"offset":4314}}},"children":"let url = URL(string: \"https://jsonplaceholder.typicode.com/todos/1\")!\nlet dataTaskPublisher = URLSession.shared.dataTaskPublisher(for: url)\n\nlet cancellable = dataTaskPublisher.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { data, response in\n    print(\"Received data: \\(data)\")\n})\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제는 지정된 URL로 네트워크 요청을 보내고, 응답 데이터를 발행합니다."}],"\n",["$","h2",null,{"id":"929f7211","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Operator 활용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Combine에서는 다양한 연산자를 사용하여 Publisher의 데이터를 변환하거나 결합할 수 있습니다. 몇 가지 중요한 연산자를 살펴보겠습니다."}],"\n",["$","h3",null,{"id":"ab478f3e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Map"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"map","position":{"start":{"line":197,"column":1,"offset":4469},"end":{"line":197,"column":6,"offset":4474}}}],"position":{"start":{"line":197,"column":1,"offset":4469},"end":{"line":197,"column":6,"offset":4474}}},"children":"map"}}]," 연산자는 발행된 값을 변환하는 데 사용됩니다."]}],"\n",["$","pre","pre-9",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let numbers = [1, 2, 3, 4, 5].publisher\nlet stringNumbers = numbers.map { \"\\($0)\" }\nlet cancellable = stringNumbers.sink { print($0) }\n"}],"position":{"start":{"line":199,"column":1,"offset":4502},"end":{"line":203,"column":4,"offset":4649}}},"children":"let numbers = [1, 2, 3, 4, 5].publisher\nlet stringNumbers = numbers.map { \"\\($0)\" }\nlet cancellable = stringNumbers.sink { print($0) }\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 코드는 숫자 배열을 문자열 배열로 변환하여 출력합니다."}],"\n",["$","h3",null,{"id":"d7decf1a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Filter"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"filter","position":{"start":{"line":209,"column":1,"offset":4697},"end":{"line":209,"column":9,"offset":4705}}}],"position":{"start":{"line":209,"column":1,"offset":4697},"end":{"line":209,"column":9,"offset":4705}}},"children":"filter"}}]," 연산자는 조건에 맞는 값만을 통과시킵니다."]}],"\n",["$","pre","pre-10",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let numbers = [1, 2, 3, 4, 5].publisher\nlet evenNumbers = numbers.filter { $0 % 2 == 0 }\nlet cancellable = evenNumbers.sink { print($0) }\n"}],"position":{"start":{"line":211,"column":1,"offset":4731},"end":{"line":215,"column":4,"offset":4881}}},"children":"let numbers = [1, 2, 3, 4, 5].publisher\nlet evenNumbers = numbers.filter { $0 % 2 == 0 }\nlet cancellable = evenNumbers.sink { print($0) }\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 코드는 짝수만을 통과시켜 출력합니다."}],"\n",["$","h3",null,{"id":"6eaeb8e9","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"CombineLatest"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"combineLatest","position":{"start":{"line":221,"column":1,"offset":4926},"end":{"line":221,"column":16,"offset":4941}}}],"position":{"start":{"line":221,"column":1,"offset":4926},"end":{"line":221,"column":16,"offset":4941}}},"children":"combineLatest"}}],"는 두 개의 Publisher의 최신 값을 결합합니다."]}],"\n",["$","pre","pre-11",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let publisher1 = PassthroughSubject<String, Never>()\nlet publisher2 = PassthroughSubject<Int, Never>()\n\nlet combined = publisher1.combineLatest(publisher2)\nlet cancellable = combined.sink { (string, int) in\n    print(\"Received: \\(string) and \\(int)\")\n}\n\npublisher1.send(\"A\")\npublisher2.send(1)\npublisher1.send(\"B\")\npublisher2.send(2)\n"}],"position":{"start":{"line":223,"column":1,"offset":4973},"end":{"line":236,"column":4,"offset":5319}}},"children":"let publisher1 = PassthroughSubject<String, Never>()\nlet publisher2 = PassthroughSubject<Int, Never>()\n\nlet combined = publisher1.combineLatest(publisher2)\nlet cancellable = combined.sink { (string, int) in\n    print(\"Received: \\(string) and \\(int)\")\n}\n\npublisher1.send(\"A\")\npublisher2.send(1)\npublisher1.send(\"B\")\npublisher2.send(2)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 코드는 각 Publisher의 최신 값을 결합하여 출력합니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift Combine은 다양한 내장 Publisher와 연산자를 제공하여, 비동기 데이터 스트림을 효과적으로 관리하고 처리할 수 있는 강력한 도구입니다. 다양한 Publisher를 활용하면 복잡한 비동기 로직을 간단하고 명확하게 구현할 수 있으며, 이를 통해 더 나은 사용자 경험을 제공할 수 있습니다. Combine의 기본 사용법과 다양한 예제를 통해 리액티브 프로그래밍의 장점을 최대한 활용해보세요."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift Combine Publisher의 기본 개념과 사용법","toc":[{"tagName":"h2","title":"다양한 Swift Combine Publisher 사용 예제","id":"7bd4e442"},{"tagName":"h2","title":"기본 Publisher 타입","id":"0d820170"},{"tagName":"h3","title":"Just","id":"e9b44bbe"},{"tagName":"h3","title":"Future","id":"047ca540"},{"tagName":"h3","title":"Deferred","id":"714ae55e"},{"tagName":"h3","title":"Empty","id":"3159fe42"},{"tagName":"h3","title":"Fail","id":"2758e327"},{"tagName":"h2","title":"Sequence를 Publisher로 사용하기","id":"55ab082b"},{"tagName":"h2","title":"Timer Publisher","id":"270b8a36"},{"tagName":"h2","title":"NotificationCenter Publisher","id":"49a46669"},{"tagName":"h2","title":"URLSession Data Task Publisher","id":"f098dfef"},{"tagName":"h2","title":"Operator 활용","id":"929f7211"},{"tagName":"h3","title":"Map","id":"ab478f3e"},{"tagName":"h3","title":"Filter","id":"d7decf1a"},{"tagName":"h3","title":"CombineLatest","id":"6eaeb8e9"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
