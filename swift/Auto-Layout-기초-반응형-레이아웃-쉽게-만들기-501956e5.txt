1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Auto-Layout-%EA%B8%B0%EC%B4%88-%EB%B0%98%EC%9D%91%ED%98%95-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%89%BD%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0-501956e5","d"],{"children":["__PAGE__?{\"slug\":\"Auto-Layout-기초-반응형-레이아웃-쉽게-만들기-501956e5\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Auto-Layout-%EA%B8%B0%EC%B4%88-%EB%B0%98%EC%9D%91%ED%98%95-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%89%BD%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0-501956e5","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Auto-Layout-기초-반응형-레이아웃-쉽게-만들기-501956e5\"}"},"styles":[]}],"segment":["slug","Auto-Layout-%EA%B8%B0%EC%B4%88-%EB%B0%98%EC%9D%91%ED%98%95-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%89%BD%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0-501956e5","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Auto Layout 기초: 반응형 레이아웃 쉽게 만들기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 Swift에서 Auto Layout의 기초 개념과 이를 이용한 반응형 레이아웃을 쉽게 만드는 방법에 대해 설명합니다. Auto Layout은 다양한 디바이스와 화면 크기에 맞춰 사용자 인터페이스를 유동적으로 조정할 수 있도록 도와줍니다."}],["$","meta","3",{"name":"keywords","content":"Swift,Auto Layout,반응형 레이아웃,iOS 개발"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Auto-Layout-%EA%B8%B0%EC%B4%88-%EB%B0%98%EC%9D%91%ED%98%95-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%89%BD%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0-501956e5"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Auto Layout 기초: 반응형 레이아웃 쉽게 만들기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Auto Layout 기초: 반응형 레이아웃 쉽게 만들기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 Swift에서 Auto Layout의 기초 개념과 이를 이용한 반응형 레이아웃을 쉽게 만드는 방법에 대해 설명합니다. Auto Layout은 다양한 디바이스와 화면 크기에 맞춰 사용자 인터페이스를 유동적으로 조정할 수 있도록 도와줍니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Auto-Layout-%EA%B8%B0%EC%B4%88-%EB%B0%98%EC%9D%91%ED%98%95-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%89%BD%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0-501956e5"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Auto Layout 기초: 반응형 레이아웃 쉽게 만들기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 Swift에서 Auto Layout의 기초 개념과 이를 이용한 반응형 레이아웃을 쉽게 만드는 방법에 대해 설명합니다. Auto Layout은 다양한 디바이스와 화면 크기에 맞춰 사용자 인터페이스를 유동적으로 조정할 수 있도록 도와줍니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
10:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
11:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T400,import UIKit

class ViewController: UIViewController {
    override func viewDidLoad() {
        super.viewDidLoad()

        let stackView = UIStackView()
        stackView.axis = .vertical
        stackView.distribution = .fillEqually
        stackView.spacing = 10
        stackView.translatesAutoresizingMaskIntoConstraints = false
        view.addSubview(stackView)

        let redView = UIView()
        redView.backgroundColor = .red
        let blueView = UIView()
        blueView.backgroundColor = .blue

        stackView.addArrangedSubview(redView)
        stackView.addArrangedSubview(blueView)

        NSLayoutConstraint.activate([
            stackView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            stackView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            stackView.topAnchor.constraint(equalTo: view.topAnchor, constant: 20),
            stackView.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: -20)
        ])
    }
}
f:T400,import UIKit

class ViewController: UIViewController {
    override func viewDidLoad() {
        super.viewDidLoad()

        let stackView = UIStackView()
        stackView.axis = .vertical
        stackView.distribution = .fillEqually
        stackView.spacing = 10
        stackView.translatesAutoresizingMaskIntoConstraints = false
        view.addSubview(stackView)

        let redView = UIView()
        redView.backgroundColor = .red
        let blueView = UIView()
        blueView.backgroundColor = .blue

        stackView.addArrangedSubview(redView)
        stackView.addArrangedSubview(blueView)

        NSLayoutConstraint.activate([
            stackView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            stackView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            stackView.topAnchor.constraint(equalTo: view.topAnchor, constant: 20),
            stackView.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: -20)
        ])
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Auto Layout 기초: 반응형 레이아웃 쉽게 만들기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Auto Layout 기초: 반응형 레이아웃 쉽게 만들기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-17"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"d4aab033","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Auto Layout 기초: 반응형 레이아웃 쉽게 만들기"}],"\n",["$","h2",null,{"id":"dc7612f2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Auto Layout이란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Auto Layout은 Apple의 iOS 개발 환경에서 사용되는 레이아웃 시스템으로, 다양한 화면 크기와 방향에 맞춰 UI 요소들을 유동적으로 배치할 수 있게 합니다. 이를 통해 다양한 디바이스와 해상도에 대응하는 반응형 레이아웃을 구현할 수 있습니다. Auto Layout을 이용하면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"제약조건(Constraints)","position":{"start":{"line":6,"column":162,"offset":216},"end":{"line":6,"column":181,"offset":235}}}],"position":{"start":{"line":6,"column":162,"offset":216},"end":{"line":6,"column":181,"offset":235}}},"children":"제약조건(Constraints)"}}],"을 설정하여 뷰들의 위치와 크기를 지정할 수 있습니다. 이렇게 하면 화면 회전, 기기 사이즈 변경 등에 따른 레이아웃 조정이 자동으로 이루어집니다."]}],"\n",["$","h2",null,{"id":"f2625554","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Auto Layout의 기본 요소"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Auto Layout에서 중요한 요소는 다음과 같습니다:"}],"\n",["$","h3",null,{"id":"e86d1363","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"제약조건(Constraints)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["제약조건은 뷰의 위치와 크기를 정의하는 규칙입니다. 예를 들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"뷰 A의 왼쪽은 부모 뷰의 왼쪽에 맞춘다","position":{"start":{"line":14,"column":37,"offset":434},"end":{"line":14,"column":61,"offset":458}}}],"position":{"start":{"line":14,"column":37,"offset":434},"end":{"line":14,"column":61,"offset":458}}},"children":"뷰 A의 왼쪽은 부모 뷰의 왼쪽에 맞춘다"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"뷰 B의 높이는 50pt이다","position":{"start":{"line":14,"column":63,"offset":460},"end":{"line":14,"column":80,"offset":477}}}],"position":{"start":{"line":14,"column":63,"offset":460},"end":{"line":14,"column":80,"offset":477}}},"children":"뷰 B의 높이는 50pt이다"}}]," 등의 제약을 설정할 수 있습니다. 이렇게 설정된 제약조건을 기반으로 뷰가 화면에서 어떻게 배치될지 결정됩니다."]}],"\n",["$","h3",null,{"id":"fe713b2f","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"우선순위(Priority)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"모든 제약조건에는 우선순위가 있습니다. 기본값은 1000으로, 이는 '필수' 제약조건을 의미합니다. 우선순위가 낮은 경우 일부 상황에서 해당 제약조건이 무시될 수 있습니다. 이를 통해 보다 유연한 레이아웃 구성이 가능합니다."}],"\n",["$","h3",null,{"id":"f837d6ab","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"앵커(Anchor)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["앵커는 뷰의 특정 위치(위, 아래, 왼쪽, 오른쪽, 중앙 등)를 의미합니다. 다른 뷰와의 관계나 부모 뷰와의 관계를 통해 뷰를 배치할 때 사용됩니다. Swift에서는 일반적으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLayoutAnchor","position":{"start":{"line":22,"column":100,"offset":803},"end":{"line":22,"column":116,"offset":819}}}],"position":{"start":{"line":22,"column":100,"offset":803},"end":{"line":22,"column":116,"offset":819}}},"children":"NSLayoutAnchor"}}]," 클래스를 이용해 뷰의 앵커를 설정합니다."]}],"\n",["$","h2",null,{"id":"f5b74f38","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"코드로 Auto Layout 설정하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서는 코드로 Auto Layout을 설정하는 것이 가능합니다. 이는 스토리보드를 사용하는 것보다 더욱 유연하고 강력한 기능을 제공합니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"예제를 통해 살펴보겠습니다:"}],"\n",["$","h3",null,{"id":"805f3244","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"뷰 추가 및 제약조건 설정"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass ViewController: UIViewController {\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        let redView = UIView()\n        redView.backgroundColor = .red\n        redView.translatesAutoresizingMaskIntoConstraints = false\n        view.addSubview(redView)\n\n        NSLayoutConstraint.activate([\n            redView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),\n            redView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),\n            redView.topAnchor.constraint(equalTo: view.topAnchor, constant: 20),\n            redView.heightAnchor.constraint(equalToConstant: 100)\n        ])\n    }\n}\n"}],"position":{"start":{"line":32,"column":1,"offset":990},"end":{"line":52,"column":4,"offset":1675}}},"children":"import UIKit\n\nclass ViewController: UIViewController {\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        let redView = UIView()\n        redView.backgroundColor = .red\n        redView.translatesAutoresizingMaskIntoConstraints = false\n        view.addSubview(redView)\n\n        NSLayoutConstraint.activate([\n            redView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),\n            redView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),\n            redView.topAnchor.constraint(equalTo: view.topAnchor, constant: 20),\n            redView.heightAnchor.constraint(equalToConstant: 100)\n        ])\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIView","position":{"start":{"line":54,"column":7,"offset":1683},"end":{"line":54,"column":15,"offset":1691}}}],"position":{"start":{"line":54,"column":7,"offset":1683},"end":{"line":54,"column":15,"offset":1691}}},"children":"UIView"}}],"를 생성하고, 해당 뷰를 부모 뷰에 추가한 뒤, 좌측, 우측 및 상단에 제약조건을 설정하는 예제입니다. 또한 높이는 100pt로 설정되었습니다."]}],"\n",["$","h3",null,{"id":"2bc445f1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"스택뷰(Stack View)로 반응형 레이아웃 만들기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIStackView","position":{"start":{"line":58,"column":1,"offset":1808},"end":{"line":58,"column":14,"offset":1821}}}],"position":{"start":{"line":58,"column":1,"offset":1808},"end":{"line":58,"column":14,"offset":1821}}},"children":"UIStackView"}}],"는 Auto Layout을 더욱 간편하게 사용할 수 있도록 도와주는 컨테이너 뷰입니다. 가로 또는 세로 방향으로 뷰들을 자동으로 배치하고, 제약조건을 쉽게 설정할 수 있게 합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 스택뷰를 이용한 예제입니다:"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":62,"column":1,"offset":1944},"end":{"line":92,"column":4,"offset":2980}}},"children":"$f"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIStackView","position":{"start":{"line":94,"column":8,"offset":2989},"end":{"line":94,"column":21,"offset":3002}}}],"position":{"start":{"line":94,"column":8,"offset":2989},"end":{"line":94,"column":21,"offset":3002}}},"children":"UIStackView"}}],"를 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIView","position":{"start":{"line":94,"column":28,"offset":3009},"end":{"line":94,"column":36,"offset":3017}}}],"position":{"start":{"line":94,"column":28,"offset":3009},"end":{"line":94,"column":36,"offset":3017}}},"children":"UIView"}}]," 두 개를 세로로 배치하고, 각 뷰의 크기를 자동으로 조정합니다. 이렇게 하면 다양한 화면 크기와 방향에 대응하는 반응형 레이아웃을 쉽게 만들 수 있습니다."]}],"\n",["$","h2",null,{"id":"1f9d23d7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"인터페이스 빌더(Interface Builder)에서 Auto Layout 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["코드 작업 외에도 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"인터페이스 빌더(Storyboard)","position":{"start":{"line":98,"column":11,"offset":3167},"end":{"line":98,"column":33,"offset":3189}}}],"position":{"start":{"line":98,"column":11,"offset":3167},"end":{"line":98,"column":33,"offset":3189}}},"children":"인터페이스 빌더(Storyboard)"}}],"를 이용하여 Auto Layout을 설정할 수 있습니다. 인터페이스 빌더는 시각적으로 제약조건을 추가하고 수정할 수 있는 도구로, 코드보다 직관적으로 작업할 수 있습니다."]}],"\n",["$","h3",null,{"id":"acc3b8e4","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"제약조건 추가"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"스토리보드(Storyboard)","position":{"start":{"line":102,"column":4,"offset":3302},"end":{"line":102,"column":23,"offset":3321}}}],"position":{"start":{"line":102,"column":4,"offset":3302},"end":{"line":102,"column":23,"offset":3321}}},"children":"스토리보드(Storyboard)"}}],"에서 특정 뷰를 선택합니다."]}],"\n",["$","li","li-1",{"children":["하단의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Auto Layout","position":{"start":{"line":103,"column":8,"offset":3344},"end":{"line":103,"column":21,"offset":3357}}}],"position":{"start":{"line":103,"column":8,"offset":3344},"end":{"line":103,"column":21,"offset":3357}}},"children":"Auto Layout"}}]," 버튼을 클릭하여 원하는 제약조건을 추가합니다."]}],"\n",["$","li","li-2",{"children":"제약조건 편집기를 통해 값을 수정하거나 우선순위를 설정할 수 있습니다."}],"\n"]}],"\n",["$","h3",null,{"id":"d526d0a2","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"제약조건 확인 및 수정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Document Outline","position":{"start":{"line":108,"column":1,"offset":3446},"end":{"line":108,"column":19,"offset":3464}}}],"position":{"start":{"line":108,"column":1,"offset":3446},"end":{"line":108,"column":19,"offset":3464}}},"children":"Document Outline"}}],"에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Constraints","position":{"start":{"line":108,"column":22,"offset":3467},"end":{"line":108,"column":35,"offset":3480}}}],"position":{"start":{"line":108,"column":22,"offset":3467},"end":{"line":108,"column":35,"offset":3480}}},"children":"Constraints"}}]," 항목을 선택하여 현재 설정된 모든 제약조건을 확인할 수 있습니다. 필요 시 제약조건을 추가, 제거, 수정 가능합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Auto Layout은 iOS 개발에서 매우 중요한 레이아웃 관리 방식입니다. 다양한 디바이스와 화면 크기에 대응하기 위해 필수적인 기능들이며, 코드와 인터페이스 빌더를 통해 쉽게 설정할 수 있습니다. 특히 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"스택뷰(Stack View)","position":{"start":{"line":112,"column":117,"offset":3671},"end":{"line":112,"column":134,"offset":3688}}}],"position":{"start":{"line":112,"column":117,"offset":3671},"end":{"line":112,"column":134,"offset":3688}}},"children":"스택뷰(Stack View)"}}],"를 잘 활용하면 더욱 강력하고 유연한 반응형 레이아웃을 구현할 수 있습니다. 좋은 Auto Layout 습관을 길러 iOS 앱 개발의 생산성과 유연성을 크게 향상시켜보세요."]}]]}]}],["$","$L10",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L11",null,{"articleTitle":"Auto Layout 기초: 반응형 레이아웃 쉽게 만들기","toc":[{"tagName":"h1","title":"Auto Layout 기초: 반응형 레이아웃 쉽게 만들기","id":"d4aab033"},{"tagName":"h2","title":"Auto Layout이란?","id":"dc7612f2"},{"tagName":"h2","title":"Auto Layout의 기본 요소","id":"f2625554"},{"tagName":"h3","title":"제약조건(Constraints)","id":"e86d1363"},{"tagName":"h3","title":"우선순위(Priority)","id":"fe713b2f"},{"tagName":"h3","title":"앵커(Anchor)","id":"f837d6ab"},{"tagName":"h2","title":"코드로 Auto Layout 설정하기","id":"f5b74f38"},{"tagName":"h3","title":"뷰 추가 및 제약조건 설정","id":"805f3244"},{"tagName":"h3","title":"스택뷰(Stack View)로 반응형 레이아웃 만들기","id":"2bc445f1"},{"tagName":"h2","title":"인터페이스 빌더(Interface Builder)에서 Auto Layout 사용하기","id":"1f9d23d7"},{"tagName":"h3","title":"제약조건 추가","id":"acc3b8e4"},{"tagName":"h3","title":"제약조건 확인 및 수정","id":"d526d0a2"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
