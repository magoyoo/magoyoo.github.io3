1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","Effect-%ED%9B%85-React%EC%97%90%EC%84%9C-%EB%B6%80%EC%88%98-%ED%9A%A8%EA%B3%BC%EB%A5%BC-%EB%8B%A4%EB%A3%A8%EB%8A%94-useEffect-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-3c351133","d"],{"children":["__PAGE__?{\"slug\":\"Effect-훅-React에서-부수-효과를-다루는-useEffect-이해하기-3c351133\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","Effect-%ED%9B%85-React%EC%97%90%EC%84%9C-%EB%B6%80%EC%88%98-%ED%9A%A8%EA%B3%BC%EB%A5%BC-%EB%8B%A4%EB%A3%A8%EB%8A%94-useEffect-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-3c351133","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Effect-훅-React에서-부수-효과를-다루는-useEffect-이해하기-3c351133\"}"},"styles":[]}],"segment":["slug","Effect-%ED%9B%85-React%EC%97%90%EC%84%9C-%EB%B6%80%EC%88%98-%ED%9A%A8%EA%B3%BC%EB%A5%BC-%EB%8B%A4%EB%A3%A8%EB%8A%94-useEffect-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-3c351133","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Effect 훅: React에서 부수 효과를 다루는 useEffect 이해하기. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"React에서 부수 효과를 다루는 `useEffect` 훅을 이해하고 활용하는 방법을 설명합니다. 이 글에서는 `useEffect`의 기본 사용법부터 고급 활용법까지 다루며, 코드 예제를 통해 개념을 쉽게 이해할 수 있도록 돕습니다."}],["$","meta","3",{"name":"keywords","content":"React,useEffect,JavaScript,프론트엔드"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/Effect-%ED%9B%85-React%EC%97%90%EC%84%9C-%EB%B6%80%EC%88%98-%ED%9A%A8%EA%B3%BC%EB%A5%BC-%EB%8B%A4%EB%A3%A8%EB%8A%94-useEffect-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-3c351133"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Effect 훅: React에서 부수 효과를 다루는 useEffect 이해하기. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Effect 훅: React에서 부수 효과를 다루는 useEffect 이해하기. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"React에서 부수 효과를 다루는 `useEffect` 훅을 이해하고 활용하는 방법을 설명합니다. 이 글에서는 `useEffect`의 기본 사용법부터 고급 활용법까지 다루며, 코드 예제를 통해 개념을 쉽게 이해할 수 있도록 돕습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/Effect-%ED%9B%85-React%EC%97%90%EC%84%9C-%EB%B6%80%EC%88%98-%ED%9A%A8%EA%B3%BC%EB%A5%BC-%EB%8B%A4%EB%A3%A8%EB%8A%94-useEffect-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-3c351133"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Effect 훅: React에서 부수 효과를 다루는 useEffect 이해하기. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"React에서 부수 효과를 다루는 `useEffect` 훅을 이해하고 활용하는 방법을 설명합니다. 이 글에서는 `useEffect`의 기본 사용법부터 고급 활용법까지 다루며, 코드 예제를 통해 개념을 쉽게 이해할 수 있도록 돕습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Effect 훅: React에서 부수 효과를 다루는 useEffect 이해하기."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Effect 훅: React에서 부수 효과를 다루는 useEffect 이해하기."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-03"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"6dcf1d82","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Effect 훅: React에서 부수 효과를 다루는 useEffect 이해하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["React는 컴포넌트 기반의 사용자 인터페이스(UI)를 구축하는 데 쓰이는 인기 있는 JavaScript 라이브러리입니다. React 컴포넌트는 상태(state)와 속성(props)을 사용해 동적인 UI를 생성할 수 있습니다. 하지만, 때때로 컴포넌트가 렌더링될 때 또는 상태나 속성이 변경될 때 특정 부수 효과(side effect)를 처리해야 할 때가 있습니다. 이러한 경우에 React의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":4,"column":221,"offset":268},"end":{"line":4,"column":232,"offset":279}}}],"position":{"start":{"line":4,"column":221,"offset":268},"end":{"line":4,"column":232,"offset":279}}},"children":"useEffect"}}]," 훅이 매우 유용합니다."]}],"\n",["$","h2",null,{"id":"da39a3ee","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":6,"column":4,"offset":297},"end":{"line":6,"column":15,"offset":308}}}],"position":{"start":{"line":6,"column":4,"offset":297},"end":{"line":6,"column":15,"offset":308}}},"children":"useEffect"}}]," 훅의 기본 개념"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":8,"column":1,"offset":319},"end":{"line":8,"column":12,"offset":330}}}],"position":{"start":{"line":8,"column":1,"offset":319},"end":{"line":8,"column":12,"offset":330}}},"children":"useEffect"}}]," 훅은 함수 컴포넌트에서 부수 효과를 처리할 수 있도록 해줍니다. 여기서 부수 효과란, 컴포넌트가 렌더링된 이후에 수행해야 하는 작업들을 의미합니다. 예를 들면, 데이터 fetching, DOM 조작, 구독 설정 등이 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":8,"column":140,"offset":458},"end":{"line":8,"column":151,"offset":469}}}],"position":{"start":{"line":8,"column":140,"offset":458},"end":{"line":8,"column":151,"offset":469}}},"children":"useEffect"}}],"는 기본적으로 다음과 같이 사용됩니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { useEffect } from 'react';\n\nfunction MyComponent() {\n  useEffect(() => {\n    // 여기에 부수 효과 로직을 작성합니다.\n    console.log('컴포넌트가 렌더링되었습니다.');\n  });\n\n  return <div>Hello, World!</div>;\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":492},"end":{"line":21,"column":4,"offset":705}}},"children":"import React, { useEffect } from 'react';\n\nfunction MyComponent() {\n  useEffect(() => {\n    // 여기에 부수 효과 로직을 작성합니다.\n    console.log('컴포넌트가 렌더링되었습니다.');\n  });\n\n  return <div>Hello, World!</div>;\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":23,"column":9,"offset":715},"end":{"line":23,"column":20,"offset":726}}}],"position":{"start":{"line":23,"column":9,"offset":715},"end":{"line":23,"column":20,"offset":726}}},"children":"useEffect"}}],"를 사용해 컴포넌트가 렌더링된 후 콘솔에 메시지를 출력하는 부수 효과를 추가했습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":23,"column":68,"offset":774},"end":{"line":23,"column":79,"offset":785}}}],"position":{"start":{"line":23,"column":68,"offset":774},"end":{"line":23,"column":79,"offset":785}}},"children":"useEffect"}}],"는 기본적으로 컴포넌트가 처음 마운트될 때와 업데이트될 때 호출됩니다."]}],"\n",["$","h2",null,{"id":"359dbef9","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"의존성 배열"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":27,"column":1,"offset":837},"end":{"line":27,"column":12,"offset":848}}}],"position":{"start":{"line":27,"column":1,"offset":837},"end":{"line":27,"column":12,"offset":848}}},"children":"useEffect"}}]," 훅의 두 번째 인수로 의존성 배열(dependency array)을 전달하여 부수 효과가 언제 실행될지 제어할 수 있습니다. 의존성 배열 안에 있는 값이 변경될 때만 부수 효과가 실행됩니다. 예를 들어, 다음 코드를 보겠습니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { useState, useEffect } from 'react';\n\nfunction MyComponent() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    console.log(`현재 카운트: ${count}`);\n  }, [count]); // count가 변경될 때마다 이 효과가 실행됩니다.\n\n  return (\n    <div>\n      <p>{count}</p>\n      <button onClick={() => setCount(count + 1)}>증가</button>\n    </div>\n  );\n}\n"}],"position":{"start":{"line":29,"column":1,"offset":978},"end":{"line":46,"column":4,"offset":1341}}},"children":"import React, { useState, useEffect } from 'react';\n\nfunction MyComponent() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    console.log(`현재 카운트: ${count}`);\n  }, [count]); // count가 변경될 때마다 이 효과가 실행됩니다.\n\n  return (\n    <div>\n      <p>{count}</p>\n      <button onClick={() => setCount(count + 1)}>증가</button>\n    </div>\n  );\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"count","position":{"start":{"line":48,"column":5,"offset":1347},"end":{"line":48,"column":12,"offset":1354}}}],"position":{"start":{"line":48,"column":5,"offset":1347},"end":{"line":48,"column":12,"offset":1354}}},"children":"count"}}],"가 업데이트될 때마다 콘솔에 메시지가 출력됩니다. 의존성 배열이 비어있을 경우, 부수 효과는 컴포넌트가 처음 마운트될 때만 실행됩니다:"]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"useEffect(() => {\n  console.log('컴포넌트가 처음 마운트되었습니다.');\n}, []); // 빈 배열, 즉 한 번만 실행\n"}],"position":{"start":{"line":50,"column":1,"offset":1431},"end":{"line":54,"column":4,"offset":1530}}},"children":"useEffect(() => {\n  console.log('컴포넌트가 처음 마운트되었습니다.');\n}, []); // 빈 배열, 즉 한 번만 실행\n"}}]}],"\n",["$","h2",null,{"id":"046f6ddb","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"정리 함수"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["부수 효과에서 생성된 자원을 정리(clean up)해야 하는 경우가 있습니다. 예를 들어, 타이머를 해제하거나 이벤트 리스너를 제거해야 할 수 있습니다. 이를 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":58,"column":93,"offset":1634},"end":{"line":58,"column":104,"offset":1645}}}],"position":{"start":{"line":58,"column":93,"offset":1634},"end":{"line":58,"column":104,"offset":1645}}},"children":"useEffect"}}],"는 정리 함수를 반환할 수 있습니다. 다음은 그 예입니다:"]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"useEffect(() => {\n  const timer = setTimeout(() => {\n    console.log('타이머가 완료되었습니다.');\n  }, 1000);\n\n  // 정리 함수 반환\n  return () => {\n    clearTimeout(timer);\n    console.log('타이머가 정리되었습니다.');\n  };\n}, []); // 마운트될 때 실행된다가 언마운트될 때 정리\n"}],"position":{"start":{"line":60,"column":1,"offset":1679},"end":{"line":72,"column":4,"offset":1926}}},"children":"useEffect(() => {\n  const timer = setTimeout(() => {\n    console.log('타이머가 완료되었습니다.');\n  }, 1000);\n\n  // 정리 함수 반환\n  return () => {\n    clearTimeout(timer);\n    console.log('타이머가 정리되었습니다.');\n  };\n}, []); // 마운트될 때 실행된다가 언마운트될 때 정리\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제에서는 컴포넌트가 언마운트될 때 타이머가 해제됩니다. 이를 통해 메모리 누수와 같은 문제를 방지할 수 있습니다."}],"\n",["$","h2",null,{"id":"8e679b39","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":["여러 개의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":76,"column":10,"offset":2005},"end":{"line":76,"column":21,"offset":2016}}}],"position":{"start":{"line":76,"column":10,"offset":2005},"end":{"line":76,"column":21,"offset":2016}}},"children":"useEffect"}}]]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["하나의 컴포넌트에서 여러 개의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":78,"column":18,"offset":2035},"end":{"line":78,"column":29,"offset":2046}}}],"position":{"start":{"line":78,"column":18,"offset":2035},"end":{"line":78,"column":29,"offset":2046}}},"children":"useEffect"}}],"를 정의할 수도 있습니다. 이는 코드의 가독성을 높이고 각 부수 효과를 독립적으로 관리할 수 있게 합니다. 예를 들어:"]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"useEffect(() => {\n  console.log('첫 번째 부수 효과 실행');\n}, [dependency1]);\n\nuseEffect(() => {\n  console.log('두 번째 부수 효과 실행');\n}, [dependency2]);\n"}],"position":{"start":{"line":80,"column":1,"offset":2114},"end":{"line":88,"column":4,"offset":2270}}},"children":"useEffect(() => {\n  console.log('첫 번째 부수 효과 실행');\n}, [dependency1]);\n\nuseEffect(() => {\n  console.log('두 번째 부수 효과 실행');\n}, [dependency2]);\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["각 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":90,"column":3,"offset":2274},"end":{"line":90,"column":14,"offset":2285}}}],"position":{"start":{"line":90,"column":3,"offset":2274},"end":{"line":90,"column":14,"offset":2285}}},"children":"useEffect"}}],"는 자신의 의존성에 따라 독립적으로 실행됩니다."]}],"\n",["$","h2",null,{"id":"f2df776e","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"고급 사용법"}],"\n",["$","h3",null,{"id":"a391242c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"조건부 실행"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["부수 효과가 특정 조건에서만 실행되도록 하고 싶을 때가 있습니다. 이를 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"if","position":{"start":{"line":96,"column":44,"offset":2379},"end":{"line":96,"column":48,"offset":2383}}}],"position":{"start":{"line":96,"column":44,"offset":2379},"end":{"line":96,"column":48,"offset":2383}}},"children":"if"}}]," 문을 사용할 수 있습니다:"]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"useEffect(() => {\n  if (someCondition) {\n    console.log('조건이 참일 때만 실행됩니다.');\n  }\n}, [someCondition]);\n"}],"position":{"start":{"line":98,"column":1,"offset":2400},"end":{"line":104,"column":4,"offset":2520}}},"children":"useEffect(() => {\n  if (someCondition) {\n    console.log('조건이 참일 때만 실행됩니다.');\n  }\n}, [someCondition]);\n"}}]}],"\n",["$","h3",null,{"id":"ec622c0f","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"비동기 작업"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["부수 효과는 비동기 작업을 포함할 수 있습니다. 다만, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":108,"column":32,"offset":2565},"end":{"line":108,"column":43,"offset":2576}}}],"position":{"start":{"line":108,"column":32,"offset":2565},"end":{"line":108,"column":43,"offset":2576}}},"children":"useEffect"}}]," 자체를 비동기 함수로 만들 수는 없습니다. 대신, 내부에서 비동기 함수를 호출할 수 있습니다:"]}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"useEffect(() => {\n  async function fetchData() {\n    const response = await fetch('https://api.example.com/data');\n    const data = await response.json();\n    console.log(data);\n  }\n\n  fetchData();\n}, []);\n"}],"position":{"start":{"line":110,"column":1,"offset":2631},"end":{"line":120,"column":4,"offset":2854}}},"children":"useEffect(() => {\n  async function fetchData() {\n    const response = await fetch('https://api.example.com/data');\n    const data = await response.json();\n    console.log(data);\n  }\n\n  fetchData();\n}, []);\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제에서는 API로부터 데이터를 가져와 콘솔에 출력하는 부수 효과를 추가했습니다."}],"\n",["$","h3",null,{"id":"d0b3c807","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"성능 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["효과적으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":126,"column":7,"offset":2923},"end":{"line":126,"column":18,"offset":2934}}}],"position":{"start":{"line":126,"column":7,"offset":2923},"end":{"line":126,"column":18,"offset":2934}}},"children":"useEffect"}}],"를 사용하면 컴포넌트의 성능을 최적화할 수 있습니다. 불필요한 렌더링을 방지하려면 의존성 배열을 올바르게 설정하고, 정리 함수를 통해 메모리 누수를 방지해야 합니다."]}],"\n",["$","h1",null,{"id":"5b12bcf2","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["React의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":130,"column":8,"offset":3041},"end":{"line":130,"column":19,"offset":3052}}}],"position":{"start":{"line":130,"column":8,"offset":3041},"end":{"line":130,"column":19,"offset":3052}}},"children":"useEffect"}}]," 훅은 컴포넌트의 생명 주기 동안 부수 효과를 다루는 강력한 도구입니다. 기본 사용법부터 고급 활용법까지 다루어 봤으며, 다양한 예제를 통해 개념을 명확히 이해할 수 있도록 했습니다. 이 훅을 적절히 활용하여 보다 효율적인 React 컴포넌트를 작성하시길 바랍니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Effect 훅: React에서 부수 효과를 다루는 useEffect 이해하기.","toc":[{"tagName":"h1","title":"Effect 훅: React에서 부수 효과를 다루는 useEffect 이해하기","id":"6dcf1d82"},{"tagName":"h2","title":"$undefined","id":""},{"tagName":"h2","title":"의존성 배열","id":"359dbef9"},{"tagName":"h2","title":"정리 함수","id":"046f6ddb"},{"tagName":"h2","title":"여러 개의 ","id":"8e679b39"},{"tagName":"h2","title":"고급 사용법","id":"f2df776e"},{"tagName":"h3","title":"조건부 실행","id":"a391242c"},{"tagName":"h3","title":"비동기 작업","id":"ec622c0f"},{"tagName":"h3","title":"성능 최적화","id":"d0b3c807"},{"tagName":"h1","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
