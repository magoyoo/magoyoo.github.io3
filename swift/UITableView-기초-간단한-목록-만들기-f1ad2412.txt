1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","UITableView-%EA%B8%B0%EC%B4%88-%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%AA%A9%EB%A1%9D-%EB%A7%8C%EB%93%A4%EA%B8%B0-f1ad2412","d"],{"children":["__PAGE__?{\"slug\":\"UITableView-기초-간단한-목록-만들기-f1ad2412\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","UITableView-%EA%B8%B0%EC%B4%88-%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%AA%A9%EB%A1%9D-%EB%A7%8C%EB%93%A4%EA%B8%B0-f1ad2412","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"UITableView-기초-간단한-목록-만들기-f1ad2412\"}"},"styles":[]}],"segment":["slug","UITableView-%EA%B8%B0%EC%B4%88-%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%AA%A9%EB%A1%9D-%EB%A7%8C%EB%93%A4%EA%B8%B0-f1ad2412","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"UITableView 기초: 간단한 목록 만들기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift의 UITableView를 활용하여 간단한 목록을 만드는 방법을 소개합니다. 이 글에서는 UITableView의 기본 설정, 데이터 소스 및 델리게이트 구현, 사용자 인터페이스 구성에 대해 다룹니다."}],["$","meta","3",{"name":"keywords","content":"iOS,Swift,UITableView,프로그래밍"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/UITableView-%EA%B8%B0%EC%B4%88-%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%AA%A9%EB%A1%9D-%EB%A7%8C%EB%93%A4%EA%B8%B0-f1ad2412"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"UITableView 기초: 간단한 목록 만들기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"UITableView 기초: 간단한 목록 만들기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift의 UITableView를 활용하여 간단한 목록을 만드는 방법을 소개합니다. 이 글에서는 UITableView의 기본 설정, 데이터 소스 및 델리게이트 구현, 사용자 인터페이스 구성에 대해 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/UITableView-%EA%B8%B0%EC%B4%88-%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%AA%A9%EB%A1%9D-%EB%A7%8C%EB%93%A4%EA%B8%B0-f1ad2412"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"UITableView 기초: 간단한 목록 만들기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift의 UITableView를 활용하여 간단한 목록을 만드는 방법을 소개합니다. 이 글에서는 UITableView의 기본 설정, 데이터 소스 및 델리게이트 구현, 사용자 인터페이스 구성에 대해 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":62313,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
12:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
13:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:T1772,
# UITableView 기초: 간단한 목록 만들기

UITableView는 iOS 개발에서 매우 유용한 컴포넌트 중 하나로, 데이터를 목록 형태로 표시할 때 사용합니다. 이번 글에서는 `UITableView`를 사용하여 간단한 목록을 만드는 방법을 단계별로 설명합니다. 이 튜토리얼을 마치면 여러분은 UITableView의 기본적인 설정과 사용법을 이해하게 될 것입니다.

## 프로젝트 설정

먼저, Xcode를 열고 새 프로젝트를 생성합니다. 프로젝트 템플릿으로 'Single View App'을 선택하고 Swift를 프로그래밍 언어로 설정해 주세요.

1. **프로젝트 생성**: Xcode에서 'Single View App' 템플릿으로 새 프로젝트 생성
2. **언어 설정**: Swift를 선택
3. **유니버설 옵션**: 프로젝트를 유니버설로 설정 (iPhone, iPad 지원)

## UI 구성

이제 `Main.storyboard`에서 `UITableView`를 추가해 보겠습니다.

1. **스토리보드 열기**: `Main.storyboard` 파일을 더블 클릭하여 엽니다.
2. **UITableView 추가**: 오른쪽 하단의 객체 라이브러리(Object Library)에서 `UITableView`를 찾아서 ViewController에 드래그 앤 드롭합니다.
3. **제약 조건 설정**: `UITableView`를 선택하고 제약 조건을 추가하여 뷰의 가장자리에 고정시킵니다.

뷰 컨트롤러와 `UITableView` 간의 연결을 설정하려면 다음 단계를 따르세요.

1. **ViewController.swift 파일 열기**: `ViewController.swift` 파일을 엽니다.
2. **UITableView 아웃렛 생성**:

   ```swift
   import UIKit

   class ViewController: UIViewController {
     @IBOutlet weak var tableView: UITableView!

     override func viewDidLoad() {
       super.viewDidLoad()
       // 기타 초기 설정
     }
   }
   ```
3. **스토리보드에서 연결**: `Main.storyboard`로 돌아가서 `ViewController`의 `UITableView`를 아웃렛에 연결합니다.

## 데이터 소스 및 델리게이트 설정

`UITableView`를 작동시키기 위해서는 데이터 소스와 델리게이트를 설정해야 합니다. `ViewController` 클래스에 `UITableViewDataSource`와 `UITableViewDelegate` 프로토콜을 채택하도록 합니다.

1. **프로토콜 채택**:

   ```swift
   class ViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {
     @IBOutlet weak var tableView: UITableView!

     override func viewDidLoad() {
       super.viewDidLoad()
       tableView.dataSource = self
       tableView.delegate = self
     }

     func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
       return 10 // 예제 데이터 수
     }

     func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
       let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
       cell.textLabel?.text = "Row \(indexPath.row + 1)"
       return cell
     }
   }
   ```
2. **셀 재사용 식별자 설정**: 스토리보드에서 `UITableViewCell`을 선택하고, 속성 창에서 재사용 식별자를 `cell`로 설정합니다.
3. **셀이 없는 경우 대비**: 기본적으로 `dequeueReusableCell` 메서드는 반드시 설정된 셀 식별자를 반환해야 합니다. 위 코드에서는 `cell` 식별자를 가진 셀을 반환하도록 설정합니다.

## 기본적인 목록 데이터 설정

이제 `UITableView`에서 목록 데이터를 효과적으로 표시하기 위해 기본 데이터를 설정해 보겠습니다. 예제에서는 정적인 문자열 배열을 사용합니다.

1. **데이터 배열 추가**:

   ```swift
   class ViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {
     @IBOutlet weak var tableView: UITableView!

     let data = ["Apple", "Banana", "Cherry", "Date", "Fig", "Grape", "Honeydew"]

     override func viewDidLoad() {
       super.viewDidLoad()
       tableView.dataSource = self
       tableView.delegate = self
     }

     func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
       return data.count
     }

     func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
       let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
       cell.textLabel?.text = data[indexPath.row]
       return cell
     }
   }
   ```
2. **테이블 갱신**: `viewDidLoad` 메서드에서 `tableView.reloadData()`를 호출합니다. 이를 통해 데이터 소스 배열이 변경되었을 때 테이블 뷰가 갱신됩니다.

## 사용자 인터페이스 개선

기본적인 설정이 끝났으니, 이제 사용자 인터페이스를 개선하기 위해 몇 가지 추가 설정을 해보겠습니다.

1. **커스텀 셀 디자인**:

    - 스토리보드에서 `UITableViewCell`을 선택하고, 커스텀 스타일을 적용합니다.
    - 필요한 경우 셀에 이미지를 추가하거나 상세 라벨을 추가할 수 있습니다.

2. **동적 높이 조정**:

    ```swift
    tableView.estimatedRowHeight = 44.0
    tableView.rowHeight = UITableView.automaticDimension
    ```
3. **셀 선택 시 행동 지정**:

    ```swift
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
      let selectedItem = data[indexPath.row]
      print("Selected item: \(selectedItem)")
    }
    ```

이제 `UITableView`의 기본 설정과 데이터 소스, 델리게이트를 활용하여 간단한 목록을 만들 수 있습니다. 이 튜토리얼이 `UITableView`를 이해하는 데 도움이 되었기를 바랍니다.

### 추가 자료

- [Apple 공식 문서: UITableView](https://developer.apple.com/documentation/uikit/uitableview)
- [Stack Overflow 질문 및 답변](https://stackoverflow.com/questions/17335489/populating-a-uitableview-in-swift)
- [Ray Wenderlich 튜토리얼: UITableView](https://www.raywenderlich.com/5995-uikit-tableview-tutorial-for-ios-getting-started)

10:T1772,
# UITableView 기초: 간단한 목록 만들기

UITableView는 iOS 개발에서 매우 유용한 컴포넌트 중 하나로, 데이터를 목록 형태로 표시할 때 사용합니다. 이번 글에서는 `UITableView`를 사용하여 간단한 목록을 만드는 방법을 단계별로 설명합니다. 이 튜토리얼을 마치면 여러분은 UITableView의 기본적인 설정과 사용법을 이해하게 될 것입니다.

## 프로젝트 설정

먼저, Xcode를 열고 새 프로젝트를 생성합니다. 프로젝트 템플릿으로 'Single View App'을 선택하고 Swift를 프로그래밍 언어로 설정해 주세요.

1. **프로젝트 생성**: Xcode에서 'Single View App' 템플릿으로 새 프로젝트 생성
2. **언어 설정**: Swift를 선택
3. **유니버설 옵션**: 프로젝트를 유니버설로 설정 (iPhone, iPad 지원)

## UI 구성

이제 `Main.storyboard`에서 `UITableView`를 추가해 보겠습니다.

1. **스토리보드 열기**: `Main.storyboard` 파일을 더블 클릭하여 엽니다.
2. **UITableView 추가**: 오른쪽 하단의 객체 라이브러리(Object Library)에서 `UITableView`를 찾아서 ViewController에 드래그 앤 드롭합니다.
3. **제약 조건 설정**: `UITableView`를 선택하고 제약 조건을 추가하여 뷰의 가장자리에 고정시킵니다.

뷰 컨트롤러와 `UITableView` 간의 연결을 설정하려면 다음 단계를 따르세요.

1. **ViewController.swift 파일 열기**: `ViewController.swift` 파일을 엽니다.
2. **UITableView 아웃렛 생성**:

   ```swift
   import UIKit

   class ViewController: UIViewController {
     @IBOutlet weak var tableView: UITableView!

     override func viewDidLoad() {
       super.viewDidLoad()
       // 기타 초기 설정
     }
   }
   ```
3. **스토리보드에서 연결**: `Main.storyboard`로 돌아가서 `ViewController`의 `UITableView`를 아웃렛에 연결합니다.

## 데이터 소스 및 델리게이트 설정

`UITableView`를 작동시키기 위해서는 데이터 소스와 델리게이트를 설정해야 합니다. `ViewController` 클래스에 `UITableViewDataSource`와 `UITableViewDelegate` 프로토콜을 채택하도록 합니다.

1. **프로토콜 채택**:

   ```swift
   class ViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {
     @IBOutlet weak var tableView: UITableView!

     override func viewDidLoad() {
       super.viewDidLoad()
       tableView.dataSource = self
       tableView.delegate = self
     }

     func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
       return 10 // 예제 데이터 수
     }

     func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
       let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
       cell.textLabel?.text = "Row \(indexPath.row + 1)"
       return cell
     }
   }
   ```
2. **셀 재사용 식별자 설정**: 스토리보드에서 `UITableViewCell`을 선택하고, 속성 창에서 재사용 식별자를 `cell`로 설정합니다.
3. **셀이 없는 경우 대비**: 기본적으로 `dequeueReusableCell` 메서드는 반드시 설정된 셀 식별자를 반환해야 합니다. 위 코드에서는 `cell` 식별자를 가진 셀을 반환하도록 설정합니다.

## 기본적인 목록 데이터 설정

이제 `UITableView`에서 목록 데이터를 효과적으로 표시하기 위해 기본 데이터를 설정해 보겠습니다. 예제에서는 정적인 문자열 배열을 사용합니다.

1. **데이터 배열 추가**:

   ```swift
   class ViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {
     @IBOutlet weak var tableView: UITableView!

     let data = ["Apple", "Banana", "Cherry", "Date", "Fig", "Grape", "Honeydew"]

     override func viewDidLoad() {
       super.viewDidLoad()
       tableView.dataSource = self
       tableView.delegate = self
     }

     func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
       return data.count
     }

     func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
       let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
       cell.textLabel?.text = data[indexPath.row]
       return cell
     }
   }
   ```
2. **테이블 갱신**: `viewDidLoad` 메서드에서 `tableView.reloadData()`를 호출합니다. 이를 통해 데이터 소스 배열이 변경되었을 때 테이블 뷰가 갱신됩니다.

## 사용자 인터페이스 개선

기본적인 설정이 끝났으니, 이제 사용자 인터페이스를 개선하기 위해 몇 가지 추가 설정을 해보겠습니다.

1. **커스텀 셀 디자인**:

    - 스토리보드에서 `UITableViewCell`을 선택하고, 커스텀 스타일을 적용합니다.
    - 필요한 경우 셀에 이미지를 추가하거나 상세 라벨을 추가할 수 있습니다.

2. **동적 높이 조정**:

    ```swift
    tableView.estimatedRowHeight = 44.0
    tableView.rowHeight = UITableView.automaticDimension
    ```
3. **셀 선택 시 행동 지정**:

    ```swift
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
      let selectedItem = data[indexPath.row]
      print("Selected item: \(selectedItem)")
    }
    ```

이제 `UITableView`의 기본 설정과 데이터 소스, 델리게이트를 활용하여 간단한 목록을 만들 수 있습니다. 이 튜토리얼이 `UITableView`를 이해하는 데 도움이 되었기를 바랍니다.

### 추가 자료

- [Apple 공식 문서: UITableView](https://developer.apple.com/documentation/uikit/uitableview)
- [Stack Overflow 질문 및 답변](https://stackoverflow.com/questions/17335489/populating-a-uitableview-in-swift)
- [Ray Wenderlich 튜토리얼: UITableView](https://www.raywenderlich.com/5995-uikit-tableview-tutorial-for-ios-getting-started)

11:T1772,
# UITableView 기초: 간단한 목록 만들기

UITableView는 iOS 개발에서 매우 유용한 컴포넌트 중 하나로, 데이터를 목록 형태로 표시할 때 사용합니다. 이번 글에서는 `UITableView`를 사용하여 간단한 목록을 만드는 방법을 단계별로 설명합니다. 이 튜토리얼을 마치면 여러분은 UITableView의 기본적인 설정과 사용법을 이해하게 될 것입니다.

## 프로젝트 설정

먼저, Xcode를 열고 새 프로젝트를 생성합니다. 프로젝트 템플릿으로 'Single View App'을 선택하고 Swift를 프로그래밍 언어로 설정해 주세요.

1. **프로젝트 생성**: Xcode에서 'Single View App' 템플릿으로 새 프로젝트 생성
2. **언어 설정**: Swift를 선택
3. **유니버설 옵션**: 프로젝트를 유니버설로 설정 (iPhone, iPad 지원)

## UI 구성

이제 `Main.storyboard`에서 `UITableView`를 추가해 보겠습니다.

1. **스토리보드 열기**: `Main.storyboard` 파일을 더블 클릭하여 엽니다.
2. **UITableView 추가**: 오른쪽 하단의 객체 라이브러리(Object Library)에서 `UITableView`를 찾아서 ViewController에 드래그 앤 드롭합니다.
3. **제약 조건 설정**: `UITableView`를 선택하고 제약 조건을 추가하여 뷰의 가장자리에 고정시킵니다.

뷰 컨트롤러와 `UITableView` 간의 연결을 설정하려면 다음 단계를 따르세요.

1. **ViewController.swift 파일 열기**: `ViewController.swift` 파일을 엽니다.
2. **UITableView 아웃렛 생성**:

   ```swift
   import UIKit

   class ViewController: UIViewController {
     @IBOutlet weak var tableView: UITableView!

     override func viewDidLoad() {
       super.viewDidLoad()
       // 기타 초기 설정
     }
   }
   ```
3. **스토리보드에서 연결**: `Main.storyboard`로 돌아가서 `ViewController`의 `UITableView`를 아웃렛에 연결합니다.

## 데이터 소스 및 델리게이트 설정

`UITableView`를 작동시키기 위해서는 데이터 소스와 델리게이트를 설정해야 합니다. `ViewController` 클래스에 `UITableViewDataSource`와 `UITableViewDelegate` 프로토콜을 채택하도록 합니다.

1. **프로토콜 채택**:

   ```swift
   class ViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {
     @IBOutlet weak var tableView: UITableView!

     override func viewDidLoad() {
       super.viewDidLoad()
       tableView.dataSource = self
       tableView.delegate = self
     }

     func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
       return 10 // 예제 데이터 수
     }

     func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
       let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
       cell.textLabel?.text = "Row \(indexPath.row + 1)"
       return cell
     }
   }
   ```
2. **셀 재사용 식별자 설정**: 스토리보드에서 `UITableViewCell`을 선택하고, 속성 창에서 재사용 식별자를 `cell`로 설정합니다.
3. **셀이 없는 경우 대비**: 기본적으로 `dequeueReusableCell` 메서드는 반드시 설정된 셀 식별자를 반환해야 합니다. 위 코드에서는 `cell` 식별자를 가진 셀을 반환하도록 설정합니다.

## 기본적인 목록 데이터 설정

이제 `UITableView`에서 목록 데이터를 효과적으로 표시하기 위해 기본 데이터를 설정해 보겠습니다. 예제에서는 정적인 문자열 배열을 사용합니다.

1. **데이터 배열 추가**:

   ```swift
   class ViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {
     @IBOutlet weak var tableView: UITableView!

     let data = ["Apple", "Banana", "Cherry", "Date", "Fig", "Grape", "Honeydew"]

     override func viewDidLoad() {
       super.viewDidLoad()
       tableView.dataSource = self
       tableView.delegate = self
     }

     func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
       return data.count
     }

     func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
       let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
       cell.textLabel?.text = data[indexPath.row]
       return cell
     }
   }
   ```
2. **테이블 갱신**: `viewDidLoad` 메서드에서 `tableView.reloadData()`를 호출합니다. 이를 통해 데이터 소스 배열이 변경되었을 때 테이블 뷰가 갱신됩니다.

## 사용자 인터페이스 개선

기본적인 설정이 끝났으니, 이제 사용자 인터페이스를 개선하기 위해 몇 가지 추가 설정을 해보겠습니다.

1. **커스텀 셀 디자인**:

    - 스토리보드에서 `UITableViewCell`을 선택하고, 커스텀 스타일을 적용합니다.
    - 필요한 경우 셀에 이미지를 추가하거나 상세 라벨을 추가할 수 있습니다.

2. **동적 높이 조정**:

    ```swift
    tableView.estimatedRowHeight = 44.0
    tableView.rowHeight = UITableView.automaticDimension
    ```
3. **셀 선택 시 행동 지정**:

    ```swift
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
      let selectedItem = data[indexPath.row]
      print("Selected item: \(selectedItem)")
    }
    ```

이제 `UITableView`의 기본 설정과 데이터 소스, 델리게이트를 활용하여 간단한 목록을 만들 수 있습니다. 이 튜토리얼이 `UITableView`를 이해하는 데 도움이 되었기를 바랍니다.

### 추가 자료

- [Apple 공식 문서: UITableView](https://developer.apple.com/documentation/uikit/uitableview)
- [Stack Overflow 질문 및 답변](https://stackoverflow.com/questions/17335489/populating-a-uitableview-in-swift)
- [Ray Wenderlich 튜토리얼: UITableView](https://www.raywenderlich.com/5995-uikit-tableview-tutorial-for-ios-getting-started)

9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"UITableView 기초: 간단한 목록 만들기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"UITableView 기초: 간단한 목록 만들기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-26"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"fac8fc74","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"UITableView 기초: 간단한 목록 만들기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["UITableView는 iOS 개발에서 매우 유용한 컴포넌트 중 하나로, 데이터를 목록 형태로 표시할 때 사용합니다. 이번 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableView","position":{"start":{"line":4,"column":75,"offset":105},"end":{"line":4,"column":88,"offset":118}}}],"position":{"start":{"line":4,"column":75,"offset":105},"end":{"line":4,"column":88,"offset":118}}},"children":"UITableView"}}],"를 사용하여 간단한 목록을 만드는 방법을 단계별로 설명합니다. 이 튜토리얼을 마치면 여러분은 UITableView의 기본적인 설정과 사용법을 이해하게 될 것입니다."]}],"\n",["$","h2",null,{"id":"35ce895d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프로젝트 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"먼저, Xcode를 열고 새 프로젝트를 생성합니다. 프로젝트 템플릿으로 'Single View App'을 선택하고 Swift를 프로그래밍 언어로 설정해 주세요."}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"프로젝트 생성"}],": Xcode에서 'Single View App' 템플릿으로 새 프로젝트 생성"]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"언어 설정"}],": Swift를 선택"]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"유니버설 옵션"}],": 프로젝트를 유니버설로 설정 (iPhone, iPad 지원)"]}],"\n"]}],"\n",["$","h2",null,{"id":"fcb07525","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UI 구성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Main.storyboard","position":{"start":{"line":16,"column":4,"offset":459},"end":{"line":16,"column":21,"offset":476}}}],"position":{"start":{"line":16,"column":4,"offset":459},"end":{"line":16,"column":21,"offset":476}}},"children":"Main.storyboard"}}],"에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableView","position":{"start":{"line":16,"column":24,"offset":479},"end":{"line":16,"column":37,"offset":492}}}],"position":{"start":{"line":16,"column":24,"offset":479},"end":{"line":16,"column":37,"offset":492}}},"children":"UITableView"}}],"를 추가해 보겠습니다."]}],"\n",["$","ol","ol-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"스토리보드 열기"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Main.storyboard","position":{"start":{"line":18,"column":18,"offset":523},"end":{"line":18,"column":35,"offset":540}}}],"position":{"start":{"line":18,"column":18,"offset":523},"end":{"line":18,"column":35,"offset":540}}},"children":"Main.storyboard"}}]," 파일을 더블 클릭하여 엽니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"UITableView 추가"}],": 오른쪽 하단의 객체 라이브러리(Object Library)에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableView","position":{"start":{"line":19,"column":59,"offset":616},"end":{"line":19,"column":72,"offset":629}}}],"position":{"start":{"line":19,"column":59,"offset":616},"end":{"line":19,"column":72,"offset":629}}},"children":"UITableView"}}],"를 찾아서 ViewController에 드래그 앤 드롭합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"제약 조건 설정"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableView","position":{"start":{"line":20,"column":18,"offset":681},"end":{"line":20,"column":31,"offset":694}}}],"position":{"start":{"line":20,"column":18,"offset":681},"end":{"line":20,"column":31,"offset":694}}},"children":"UITableView"}}],"를 선택하고 제약 조건을 추가하여 뷰의 가장자리에 고정시킵니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["뷰 컨트롤러와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableView","position":{"start":{"line":22,"column":9,"offset":739},"end":{"line":22,"column":22,"offset":752}}}],"position":{"start":{"line":22,"column":9,"offset":739},"end":{"line":22,"column":22,"offset":752}}},"children":"UITableView"}}]," 간의 연결을 설정하려면 다음 단계를 따르세요."]}],"\n",["$","ol","ol-2",{"children":["\n",["$","li","li-0",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"ViewController.swift 파일 열기"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ViewController.swift","position":{"start":{"line":24,"column":36,"offset":815},"end":{"line":24,"column":58,"offset":837}}}],"position":{"start":{"line":24,"column":36,"offset":815},"end":{"line":24,"column":58,"offset":837}}},"children":"ViewController.swift"}}]," 파일을 엽니다."]}],"\n"]}],"\n",["$","li","li-1",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"UITableView 아웃렛 생성"}],":"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass ViewController: UIViewController {\n  @IBOutlet weak var tableView: UITableView!\n\n  override func viewDidLoad() {\n    super.viewDidLoad()\n    // 기타 초기 설정\n  }\n}\n"}],"position":{"start":{"line":27,"column":4,"offset":878},"end":{"line":38,"column":7,"offset":1096}}},"children":"import UIKit\n\nclass ViewController: UIViewController {\n  @IBOutlet weak var tableView: UITableView!\n\n  override func viewDidLoad() {\n    super.viewDidLoad()\n    // 기타 초기 설정\n  }\n}\n"}}]}],"\n"]}],"\n",["$","li","li-2",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"스토리보드에서 연결"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Main.storyboard","position":{"start":{"line":39,"column":20,"offset":1116},"end":{"line":39,"column":37,"offset":1133}}}],"position":{"start":{"line":39,"column":20,"offset":1116},"end":{"line":39,"column":37,"offset":1133}}},"children":"Main.storyboard"}}],"로 돌아가서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ViewController","position":{"start":{"line":39,"column":44,"offset":1140},"end":{"line":39,"column":60,"offset":1156}}}],"position":{"start":{"line":39,"column":44,"offset":1140},"end":{"line":39,"column":60,"offset":1156}}},"children":"ViewController"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableView","position":{"start":{"line":39,"column":62,"offset":1158},"end":{"line":39,"column":75,"offset":1171}}}],"position":{"start":{"line":39,"column":62,"offset":1158},"end":{"line":39,"column":75,"offset":1171}}},"children":"UITableView"}}],"를 아웃렛에 연결합니다."]}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"id":"3030beea","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"데이터 소스 및 델리게이트 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableView","position":{"start":{"line":43,"column":1,"offset":1208},"end":{"line":43,"column":14,"offset":1221}}}],"position":{"start":{"line":43,"column":1,"offset":1208},"end":{"line":43,"column":14,"offset":1221}}},"children":"UITableView"}}],"를 작동시키기 위해서는 데이터 소스와 델리게이트를 설정해야 합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ViewController","position":{"start":{"line":43,"column":52,"offset":1259},"end":{"line":43,"column":68,"offset":1275}}}],"position":{"start":{"line":43,"column":52,"offset":1259},"end":{"line":43,"column":68,"offset":1275}}},"children":"ViewController"}}]," 클래스에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableViewDataSource","position":{"start":{"line":43,"column":74,"offset":1281},"end":{"line":43,"column":97,"offset":1304}}}],"position":{"start":{"line":43,"column":74,"offset":1281},"end":{"line":43,"column":97,"offset":1304}}},"children":"UITableViewDataSource"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableViewDelegate","position":{"start":{"line":43,"column":99,"offset":1306},"end":{"line":43,"column":120,"offset":1327}}}],"position":{"start":{"line":43,"column":99,"offset":1306},"end":{"line":43,"column":120,"offset":1327}}},"children":"UITableViewDelegate"}}]," 프로토콜을 채택하도록 합니다."]}],"\n",["$","ol","ol-3",{"children":["\n",["$","li","li-0",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"프로토콜 채택"}],":"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class ViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {\n  @IBOutlet weak var tableView: UITableView!\n\n  override func viewDidLoad() {\n    super.viewDidLoad()\n    tableView.dataSource = self\n    tableView.delegate = self\n  }\n\n  func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n    return 10 // 예제 데이터 수\n  }\n\n  func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n    let cell = tableView.dequeueReusableCell(withIdentifier: \"cell\", for: indexPath)\n    cell.textLabel?.text = \"Row \\(indexPath.row + 1)\"\n    return cell\n  }\n}\n"}],"position":{"start":{"line":47,"column":4,"offset":1366},"end":{"line":67,"column":7,"offset":2062}}},"children":"class ViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {\n  @IBOutlet weak var tableView: UITableView!\n\n  override func viewDidLoad() {\n    super.viewDidLoad()\n    tableView.dataSource = self\n    tableView.delegate = self\n  }\n\n  func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n    return 10 // 예제 데이터 수\n  }\n\n  func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n    let cell = tableView.dequeueReusableCell(withIdentifier: \"cell\", for: indexPath)\n    cell.textLabel?.text = \"Row \\(indexPath.row + 1)\"\n    return cell\n  }\n}\n"}}]}],"\n"]}],"\n",["$","li","li-1",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"셀 재사용 식별자 설정"}],": 스토리보드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableViewCell","position":{"start":{"line":68,"column":30,"offset":2092},"end":{"line":68,"column":47,"offset":2109}}}],"position":{"start":{"line":68,"column":30,"offset":2092},"end":{"line":68,"column":47,"offset":2109}}},"children":"UITableViewCell"}}],"을 선택하고, 속성 창에서 재사용 식별자를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cell","position":{"start":{"line":68,"column":71,"offset":2133},"end":{"line":68,"column":77,"offset":2139}}}],"position":{"start":{"line":68,"column":71,"offset":2133},"end":{"line":68,"column":77,"offset":2139}}},"children":"cell"}}],"로 설정합니다."]}],"\n"]}],"\n",["$","li","li-2",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"셀이 없는 경우 대비"}],": 기본적으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"dequeueReusableCell","position":{"start":{"line":69,"column":27,"offset":2174},"end":{"line":69,"column":48,"offset":2195}}}],"position":{"start":{"line":69,"column":27,"offset":2174},"end":{"line":69,"column":48,"offset":2195}}},"children":"dequeueReusableCell"}}]," 메서드는 반드시 설정된 셀 식별자를 반환해야 합니다. 위 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cell","position":{"start":{"line":69,"column":87,"offset":2234},"end":{"line":69,"column":93,"offset":2240}}}],"position":{"start":{"line":69,"column":87,"offset":2234},"end":{"line":69,"column":93,"offset":2240}}},"children":"cell"}}]," 식별자를 가진 셀을 반환하도록 설정합니다."]}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"id":"ded3d07d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"기본적인 목록 데이터 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableView","position":{"start":{"line":73,"column":4,"offset":2288},"end":{"line":73,"column":17,"offset":2301}}}],"position":{"start":{"line":73,"column":4,"offset":2288},"end":{"line":73,"column":17,"offset":2301}}},"children":"UITableView"}}],"에서 목록 데이터를 효과적으로 표시하기 위해 기본 데이터를 설정해 보겠습니다. 예제에서는 정적인 문자열 배열을 사용합니다."]}],"\n",["$","ol","ol-4",{"children":["\n",["$","li","li-0",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"데이터 배열 추가"}],":"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class ViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {\n  @IBOutlet weak var tableView: UITableView!\n\n  let data = [\"Apple\", \"Banana\", \"Cherry\", \"Date\", \"Fig\", \"Grape\", \"Honeydew\"]\n\n  override func viewDidLoad() {\n    super.viewDidLoad()\n    tableView.dataSource = self\n    tableView.delegate = self\n  }\n\n  func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n    return data.count\n  }\n\n  func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n    let cell = tableView.dequeueReusableCell(withIdentifier: \"cell\", for: indexPath)\n    cell.textLabel?.text = data[indexPath.row]\n    return cell\n  }\n}\n"}],"position":{"start":{"line":77,"column":4,"offset":2393},"end":{"line":99,"column":7,"offset":3161}}},"children":"class ViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {\n  @IBOutlet weak var tableView: UITableView!\n\n  let data = [\"Apple\", \"Banana\", \"Cherry\", \"Date\", \"Fig\", \"Grape\", \"Honeydew\"]\n\n  override func viewDidLoad() {\n    super.viewDidLoad()\n    tableView.dataSource = self\n    tableView.delegate = self\n  }\n\n  func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n    return data.count\n  }\n\n  func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n    let cell = tableView.dequeueReusableCell(withIdentifier: \"cell\", for: indexPath)\n    cell.textLabel?.text = data[indexPath.row]\n    return cell\n  }\n}\n"}}]}],"\n"]}],"\n",["$","li","li-1",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"테이블 갱신"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"viewDidLoad","position":{"start":{"line":100,"column":16,"offset":3177},"end":{"line":100,"column":29,"offset":3190}}}],"position":{"start":{"line":100,"column":16,"offset":3177},"end":{"line":100,"column":29,"offset":3190}}},"children":"viewDidLoad"}}]," 메서드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tableView.reloadData()","position":{"start":{"line":100,"column":36,"offset":3197},"end":{"line":100,"column":60,"offset":3221}}}],"position":{"start":{"line":100,"column":36,"offset":3197},"end":{"line":100,"column":60,"offset":3221}}},"children":"tableView.reloadData()"}}],"를 호출합니다. 이를 통해 데이터 소스 배열이 변경되었을 때 테이블 뷰가 갱신됩니다."]}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"id":"5d159a2f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"사용자 인터페이스 개선"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"기본적인 설정이 끝났으니, 이제 사용자 인터페이스를 개선하기 위해 몇 가지 추가 설정을 해보겠습니다."}],"\n",["$","ol","ol-5",{"children":["\n",["$","li","li-0",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"커스텀 셀 디자인"}],":"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":["스토리보드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableViewCell","position":{"start":{"line":108,"column":15,"offset":3378},"end":{"line":108,"column":32,"offset":3395}}}],"position":{"start":{"line":108,"column":15,"offset":3378},"end":{"line":108,"column":32,"offset":3395}}},"children":"UITableViewCell"}}],"을 선택하고, 커스텀 스타일을 적용합니다."]}],"\n",["$","li","li-1",{"children":"필요한 경우 셀에 이미지를 추가하거나 상세 라벨을 추가할 수 있습니다."}],"\n"]}],"\n"]}],"\n",["$","li","li-1",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"동적 높이 조정"}],":"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"tableView.estimatedRowHeight = 44.0\ntableView.rowHeight = UITableView.automaticDimension\n"}],"position":{"start":{"line":113,"column":5,"offset":3488},"end":{"line":116,"column":8,"offset":3601}}},"children":"tableView.estimatedRowHeight = 44.0\ntableView.rowHeight = UITableView.automaticDimension\n"}}]}],"\n"]}],"\n",["$","li","li-2",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"셀 선택 시 행동 지정"}],":"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n  let selectedItem = data[indexPath.row]\n  print(\"Selected item: \\(selectedItem)\")\n}\n"}],"position":{"start":{"line":119,"column":5,"offset":3628},"end":{"line":124,"column":8,"offset":3825}}},"children":"func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n  let selectedItem = data[indexPath.row]\n  print(\"Selected item: \\(selectedItem)\")\n}\n"}}]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableView","position":{"start":{"line":126,"column":4,"offset":3830},"end":{"line":126,"column":17,"offset":3843}}}],"position":{"start":{"line":126,"column":4,"offset":3830},"end":{"line":126,"column":17,"offset":3843}}},"children":"UITableView"}}],"의 기본 설정과 데이터 소스, 델리게이트를 활용하여 간단한 목록을 만들 수 있습니다. 이 튜토리얼이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableView","position":{"start":{"line":126,"column":73,"offset":3899},"end":{"line":126,"column":86,"offset":3912}}}],"position":{"start":{"line":126,"column":73,"offset":3899},"end":{"line":126,"column":86,"offset":3912}}},"children":"UITableView"}}],"를 이해하는 데 도움이 되었기를 바랍니다."]}],"\n",["$","h3",null,{"id":"056a8b51","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"추가 자료"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":["$","$Le",null,{"props":{"href":"https://developer.apple.com/documentation/uikit/uitableview","node":{"type":"element","tagName":"a","properties":{"href":"https://developer.apple.com/documentation/uikit/uitableview"},"children":[{"type":"text","value":"Apple 공식 문서: UITableView","position":{"start":{"line":130,"column":4,"offset":3951},"end":{"line":130,"column":28,"offset":3975}}}],"position":{"start":{"line":130,"column":3,"offset":3950},"end":{"line":130,"column":90,"offset":4037}}},"children":"Apple 공식 문서: UITableView"},"post":{"id":"f1ad2412-0278-40e0-a53b-71936f1f8b32","title":"UITableView 기초: 간단한 목록 만들기","fileName":"UITableView-기초-간단한-목록-만들기-f1ad2412","description":"Swift의 UITableView를 활용하여 간단한 목록을 만드는 방법을 소개합니다. 이 글에서는 UITableView의 기본 설정, 데이터 소스 및 델리게이트 구현, 사용자 인터페이스 구성에 대해 다룹니다.","date":"2024-07-26T06:01:37.593Z","tags":[{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UITableView","path":"/tags/uitableview","id":"uitableview"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"banner":"/images/swiftBanner3.jpg","author":"마고유","project":null,"totalCnt":0,"monthlyCnt":0,"weeklyCnt":0,"slug":"UITableView-기초-간단한-목록-만들기-f1ad2412","content":"$f","category":"swift","readMin":"5.1"},"language":"kr"}]}],"\n",["$","li","li-1",{"children":["$","$Le",null,{"props":{"href":"https://stackoverflow.com/questions/17335489/populating-a-uitableview-in-swift","node":{"type":"element","tagName":"a","properties":{"href":"https://stackoverflow.com/questions/17335489/populating-a-uitableview-in-swift"},"children":[{"type":"text","value":"Stack Overflow 질문 및 답변","position":{"start":{"line":131,"column":4,"offset":4041},"end":{"line":131,"column":26,"offset":4063}}}],"position":{"start":{"line":131,"column":3,"offset":4040},"end":{"line":131,"column":107,"offset":4144}}},"children":"Stack Overflow 질문 및 답변"},"post":{"id":"f1ad2412-0278-40e0-a53b-71936f1f8b32","title":"UITableView 기초: 간단한 목록 만들기","fileName":"UITableView-기초-간단한-목록-만들기-f1ad2412","description":"Swift의 UITableView를 활용하여 간단한 목록을 만드는 방법을 소개합니다. 이 글에서는 UITableView의 기본 설정, 데이터 소스 및 델리게이트 구현, 사용자 인터페이스 구성에 대해 다룹니다.","date":"2024-07-26T06:01:37.593Z","tags":[{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UITableView","path":"/tags/uitableview","id":"uitableview"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"banner":"/images/swiftBanner3.jpg","author":"마고유","project":null,"totalCnt":0,"monthlyCnt":0,"weeklyCnt":0,"slug":"UITableView-기초-간단한-목록-만들기-f1ad2412","content":"$10","category":"swift","readMin":"5.1"},"language":"kr"}]}],"\n",["$","li","li-2",{"children":["$","$Le",null,{"props":{"href":"https://www.raywenderlich.com/5995-uikit-tableview-tutorial-for-ios-getting-started","node":{"type":"element","tagName":"a","properties":{"href":"https://www.raywenderlich.com/5995-uikit-tableview-tutorial-for-ios-getting-started"},"children":[{"type":"text","value":"Ray Wenderlich 튜토리얼: UITableView","position":{"start":{"line":132,"column":4,"offset":4148},"end":{"line":132,"column":36,"offset":4180}}}],"position":{"start":{"line":132,"column":3,"offset":4147},"end":{"line":132,"column":122,"offset":4266}}},"children":"Ray Wenderlich 튜토리얼: UITableView"},"post":{"id":"f1ad2412-0278-40e0-a53b-71936f1f8b32","title":"UITableView 기초: 간단한 목록 만들기","fileName":"UITableView-기초-간단한-목록-만들기-f1ad2412","description":"Swift의 UITableView를 활용하여 간단한 목록을 만드는 방법을 소개합니다. 이 글에서는 UITableView의 기본 설정, 데이터 소스 및 델리게이트 구현, 사용자 인터페이스 구성에 대해 다룹니다.","date":"2024-07-26T06:01:37.593Z","tags":[{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UITableView","path":"/tags/uitableview","id":"uitableview"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"banner":"/images/swiftBanner3.jpg","author":"마고유","project":null,"totalCnt":0,"monthlyCnt":0,"weeklyCnt":0,"slug":"UITableView-기초-간단한-목록-만들기-f1ad2412","content":"$11","category":"swift","readMin":"5.1"},"language":"kr"}]}],"\n"]}]]}]}],["$","$L12",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L13",null,{"articleTitle":"UITableView 기초: 간단한 목록 만들기","toc":[{"tagName":"h1","title":"UITableView 기초: 간단한 목록 만들기","id":"fac8fc74"},{"tagName":"h2","title":"프로젝트 설정","id":"35ce895d"},{"tagName":"h2","title":"UI 구성","id":"fcb07525"},{"tagName":"h2","title":"데이터 소스 및 델리게이트 설정","id":"3030beea"},{"tagName":"h2","title":"기본적인 목록 데이터 설정","id":"ded3d07d"},{"tagName":"h2","title":"사용자 인터페이스 개선","id":"5d159a2f"},{"tagName":"h3","title":"추가 자료","id":"056a8b51"}],"language":"kr"}]}]]}]]
8:null
