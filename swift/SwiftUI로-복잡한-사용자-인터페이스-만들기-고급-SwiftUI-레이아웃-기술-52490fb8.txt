1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI%EB%A1%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0-%EA%B3%A0%EA%B8%89-SwiftUI-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EA%B8%B0%EC%88%A0-52490fb8","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI로-복잡한-사용자-인터페이스-만들기-고급-SwiftUI-레이아웃-기술-52490fb8\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI%EB%A1%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0-%EA%B3%A0%EA%B8%89-SwiftUI-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EA%B8%B0%EC%88%A0-52490fb8","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI로-복잡한-사용자-인터페이스-만들기-고급-SwiftUI-레이아웃-기술-52490fb8\"}"},"styles":[]}],"segment":["slug","SwiftUI%EB%A1%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0-%EA%B3%A0%EA%B8%89-SwiftUI-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EA%B8%B0%EC%88%A0-52490fb8","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI로 복잡한 사용자 인터페이스 만들기: 고급 SwiftUI 레이아웃 기술. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"SwiftUI로 복잡한 사용자 인터페이스를 구현하는데 필요한 고급 레이아웃 기술과 방법을 다룹니다. 이를 통해 효율적이고 세련된 사용자 인터페이스를 설계하는 방법을 이해할 수 있습니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,레이아웃,고급 기술,UI 설계"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI%EB%A1%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0-%EA%B3%A0%EA%B8%89-SwiftUI-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EA%B8%B0%EC%88%A0-52490fb8"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI로 복잡한 사용자 인터페이스 만들기: 고급 SwiftUI 레이아웃 기술. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI로 복잡한 사용자 인터페이스 만들기: 고급 SwiftUI 레이아웃 기술. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"SwiftUI로 복잡한 사용자 인터페이스를 구현하는데 필요한 고급 레이아웃 기술과 방법을 다룹니다. 이를 통해 효율적이고 세련된 사용자 인터페이스를 설계하는 방법을 이해할 수 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI%EB%A1%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0-%EA%B3%A0%EA%B8%89-SwiftUI-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EA%B8%B0%EC%88%A0-52490fb8"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI로 복잡한 사용자 인터페이스 만들기: 고급 SwiftUI 레이아웃 기술. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"SwiftUI로 복잡한 사용자 인터페이스를 구현하는데 필요한 고급 레이아웃 기술과 방법을 다룹니다. 이를 통해 효율적이고 세련된 사용자 인터페이스를 설계하는 방법을 이해할 수 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI로 복잡한 사용자 인터페이스 만들기: 고급 SwiftUI 레이아웃 기술."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI로 복잡한 사용자 인터페이스 만들기: 고급 SwiftUI 레이아웃 기술."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-04"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"2e13f9b2","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI로 복잡한 사용자 인터페이스 만들기: 고급 SwiftUI 레이아웃 기술"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 간편한 문법과 강력한 기능으로 개발자들에게 새로운 UI 설계의 길을 열어주었습니다. 특히, 복잡한 사용자 인터페이스를 효율적으로 구현할 수 있는 다양한 방법을 제공합니다. 이번 글에서는 고급 SwiftUI 레이아웃 기술을 통해 복잡한 UI를 설계하는 방법을 다뤄보겠습니다."}],"\n",["$","h2",null,{"id":"6ec7fb2f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"VStack, HStack, ZStack의 조합"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI에서 가장 기본적인 레이아웃 구성 요소는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"VStack","position":{"start":{"line":8,"column":31,"offset":275},"end":{"line":8,"column":39,"offset":283}}}],"position":{"start":{"line":8,"column":31,"offset":275},"end":{"line":8,"column":39,"offset":283}}},"children":"VStack"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"HStack","position":{"start":{"line":8,"column":41,"offset":285},"end":{"line":8,"column":49,"offset":293}}}],"position":{"start":{"line":8,"column":41,"offset":285},"end":{"line":8,"column":49,"offset":293}}},"children":"HStack"}}],", 그리고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ZStack","position":{"start":{"line":8,"column":55,"offset":299},"end":{"line":8,"column":63,"offset":307}}}],"position":{"start":{"line":8,"column":55,"offset":299},"end":{"line":8,"column":63,"offset":307}}},"children":"ZStack"}}],"입니다. 이들 컴포넌트를 조합하면 다양한 형태의 레이아웃을 쉽게 만들 수 있습니다."]}],"\n",["$","h3",null,{"id":"372db454","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"VStack과 HStack의 결합"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"VStack","position":{"start":{"line":12,"column":1,"offset":379},"end":{"line":12,"column":9,"offset":387}}}],"position":{"start":{"line":12,"column":1,"offset":379},"end":{"line":12,"column":9,"offset":387}}},"children":"VStack"}}],"은 수직으로 뷰를 배치하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"HStack","position":{"start":{"line":12,"column":25,"offset":403},"end":{"line":12,"column":33,"offset":411}}}],"position":{"start":{"line":12,"column":25,"offset":403},"end":{"line":12,"column":33,"offset":411}}},"children":"HStack"}}],"은 수평으로 뷰를 배치합니다. 이 두 가지를 결합하면 복잡한 레이아웃을 구축할 수 있습니다. 예를 들어, 다음 코드는 상단에 제목을 배치하고 그 아래에 수평으로 아이콘들을 배치합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    var body: some View {\n        VStack {\n            Text(\"타이틀\")\n                .font(.largeTitle)\n                .padding()\n            HStack {\n                Image(systemName: \"star.fill\")\n                Image(systemName: \"heart.fill\")\n                Image(systemName: \"bell.fill\")\n            }\n            .font(.largeTitle)\n            .padding()\n        }\n    }\n}\n"}],"position":{"start":{"line":14,"column":1,"offset":515},"end":{"line":31,"column":4,"offset":932}}},"children":"struct ContentView: View {\n    var body: some View {\n        VStack {\n            Text(\"타이틀\")\n                .font(.largeTitle)\n                .padding()\n            HStack {\n                Image(systemName: \"star.fill\")\n                Image(systemName: \"heart.fill\")\n                Image(systemName: \"bell.fill\")\n            }\n            .font(.largeTitle)\n            .padding()\n        }\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"1b73db92","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"ZStack을 이용한 중첩 레이아웃"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ZStack","position":{"start":{"line":35,"column":1,"offset":959},"end":{"line":35,"column":9,"offset":967}}}],"position":{"start":{"line":35,"column":1,"offset":959},"end":{"line":35,"column":9,"offset":967}}},"children":"ZStack"}}],"은 뷰를 겹쳐서 배치할 때 유용합니다. 아래의 예시는 이미지 위에 텍스트를 겹쳐서 보여줍니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    var body: some View {\n        ZStack {\n            Image(\"background\")\n                .resizable()\n                .aspectRatio(contentMode: .fill)\n            Text(\"중첩된 텍스트\")\n                .font(.largeTitle)\n                .foregroundColor(.white)\n                .padding()\n        }\n    }\n}\n"}],"position":{"start":{"line":37,"column":1,"offset":1021},"end":{"line":51,"column":4,"offset":1362}}},"children":"struct ContentView: View {\n    var body: some View {\n        ZStack {\n            Image(\"background\")\n                .resizable()\n                .aspectRatio(contentMode: .fill)\n            Text(\"중첩된 텍스트\")\n                .font(.largeTitle)\n                .foregroundColor(.white)\n                .padding()\n        }\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"096d781b","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"GeometryReader와 Alignments"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"GeometryReader","position":{"start":{"line":55,"column":1,"offset":1395},"end":{"line":55,"column":17,"offset":1411}}}],"position":{"start":{"line":55,"column":1,"offset":1395},"end":{"line":55,"column":17,"offset":1411}}},"children":"GeometryReader"}}],"는 뷰의 크기와 위치를 동적으로 조정할 수 있도록 도와줍니다. 이를 활용하면 다양한 크기와 위치의 디바이스에서도 뷰를 효과적으로 배치할 수 있습니다."]}],"\n",["$","h3",null,{"id":"4d1058fe","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"GeometryReader 사용 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"GeometryReader","position":{"start":{"line":59,"column":5,"offset":1526},"end":{"line":59,"column":21,"offset":1542}}}],"position":{"start":{"line":59,"column":5,"offset":1526},"end":{"line":59,"column":21,"offset":1542}}},"children":"GeometryReader"}}],"를 사용하여 현재 뷰의 크기를 얻고, 그에 따라 뷰를 조절하는 예제입니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    var body: some View {\n        GeometryReader { geometry in\n            VStack {\n                Text(\"뷰의 너비: \\(geometry.size.width)\")\n                Text(\"뷰의 높이: \\(geometry.size.height)\")\n            }\n            .frame(width: geometry.size.width / 2, height: geometry.size.height / 2)\n            .background(Color.blue)\n            .foregroundColor(.white)\n        }\n    }\n}\n"}],"position":{"start":{"line":61,"column":1,"offset":1585},"end":{"line":75,"column":4,"offset":2007}}},"children":"struct ContentView: View {\n    var body: some View {\n        GeometryReader { geometry in\n            VStack {\n                Text(\"뷰의 너비: \\(geometry.size.width)\")\n                Text(\"뷰의 높이: \\(geometry.size.height)\")\n            }\n            .frame(width: geometry.size.width / 2, height: geometry.size.height / 2)\n            .background(Color.blue)\n            .foregroundColor(.white)\n        }\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"b18b7963","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Custom Alignments"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"기본적으로 제공되는 정렬 외에도 커스텀 정렬을 만들 수 있습니다. 이 기능을 활용하면 하위 뷰들을 좀 더 정교하게 배치할 수 있습니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"extension VerticalAlignment {\n    private enum CustomAlignment: AlignmentID {\n        static func defaultValue(in d: ViewDimensions) -> CGFloat {\n            return d[.bottom] // 기본값을 하단 정렬로 설정\n        }\n    }\n    static let custom = VerticalAlignment(CustomAlignment.self)\n}\n\nstruct ContentView: View {\n    var body: some View {\n        HStack(alignment: .custom) {\n            Text(\"첫 번째 뷰\")\n            Text(\"두 번째 뷰\")\n                .alignmentGuide(.custom) { d in d[VerticalAlignment.center] } // 커스텀 정렬 사용\n                .background(Color.yellow)\n        }\n    }\n}\n"}],"position":{"start":{"line":81,"column":1,"offset":2109},"end":{"line":101,"column":4,"offset":2693}}},"children":"extension VerticalAlignment {\n    private enum CustomAlignment: AlignmentID {\n        static func defaultValue(in d: ViewDimensions) -> CGFloat {\n            return d[.bottom] // 기본값을 하단 정렬로 설정\n        }\n    }\n    static let custom = VerticalAlignment(CustomAlignment.self)\n}\n\nstruct ContentView: View {\n    var body: some View {\n        HStack(alignment: .custom) {\n            Text(\"첫 번째 뷰\")\n            Text(\"두 번째 뷰\")\n                .alignmentGuide(.custom) { d in d[VerticalAlignment.center] } // 커스텀 정렬 사용\n                .background(Color.yellow)\n        }\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"7e1fa260","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"PreferenceKey와 ViewModifier"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["고급 레이아웃 기술에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"PreferenceKey","position":{"start":{"line":105,"column":15,"offset":2741},"end":{"line":105,"column":30,"offset":2756}}}],"position":{"start":{"line":105,"column":15,"offset":2741},"end":{"line":105,"column":30,"offset":2756}}},"children":"PreferenceKey"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ViewModifier","position":{"start":{"line":105,"column":32,"offset":2758},"end":{"line":105,"column":46,"offset":2772}}}],"position":{"start":{"line":105,"column":32,"offset":2758},"end":{"line":105,"column":46,"offset":2772}}},"children":"ViewModifier"}}],"를 활용하여 뷰의 상태를 공유하고, 뷰의 외관을 동적이게 변경할 수 있습니다."]}],"\n",["$","h3",null,{"id":"4b68221b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"PreferenceKey 사용 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"PreferenceKey","position":{"start":{"line":109,"column":1,"offset":2842},"end":{"line":109,"column":16,"offset":2857}}}],"position":{"start":{"line":109,"column":1,"offset":2842},"end":{"line":109,"column":16,"offset":2857}}},"children":"PreferenceKey"}}],"는 하위 뷰의 데이터를 상위 뷰로 전달하는 데 유용합니다. 아래 예제는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"PreferenceKey","position":{"start":{"line":109,"column":56,"offset":2897},"end":{"line":109,"column":71,"offset":2912}}}],"position":{"start":{"line":109,"column":56,"offset":2897},"end":{"line":109,"column":71,"offset":2912}}},"children":"PreferenceKey"}}],"를 사용하여 하위 뷰에서 상위 뷰로 너비 값을 전달합니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct WidthPreferenceKey: PreferenceKey {\n    static var defaultValue: CGFloat = 0\n    static func reduce(value: inout CGFloat, nextValue: () -> CGFloat) {\n        value = max(value, nextValue())\n    }\n}\n\nstruct ChildView: View {\n    var body: some View {\n        GeometryReader { geometry in\n            Color.clear\n                .preference(key: WidthPreferenceKey.self, value: geometry.size.width)\n        }\n    }\n}\n\nstruct ContentView: View {\n    @State private var childWidth: CGFloat = 0\n    var body: some View {\n        ChildView()\n            .onPreferenceChange(WidthPreferenceKey.self) { width in\n                self.childWidth = width\n            }\n        Text(\"하위 뷰의 너비: \\(childWidth)\")\n    }\n}\n"}],"position":{"start":{"line":111,"column":1,"offset":2946},"end":{"line":138,"column":4,"offset":3671}}},"children":"struct WidthPreferenceKey: PreferenceKey {\n    static var defaultValue: CGFloat = 0\n    static func reduce(value: inout CGFloat, nextValue: () -> CGFloat) {\n        value = max(value, nextValue())\n    }\n}\n\nstruct ChildView: View {\n    var body: some View {\n        GeometryReader { geometry in\n            Color.clear\n                .preference(key: WidthPreferenceKey.self, value: geometry.size.width)\n        }\n    }\n}\n\nstruct ContentView: View {\n    @State private var childWidth: CGFloat = 0\n    var body: some View {\n        ChildView()\n            .onPreferenceChange(WidthPreferenceKey.self) { width in\n                self.childWidth = width\n            }\n        Text(\"하위 뷰의 너비: \\(childWidth)\")\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"59b86977","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"ViewModifier 사용 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ViewModifier","position":{"start":{"line":142,"column":1,"offset":3697},"end":{"line":142,"column":15,"offset":3711}}}],"position":{"start":{"line":142,"column":1,"offset":3697},"end":{"line":142,"column":15,"offset":3711}}},"children":"ViewModifier"}}],"는 뷰의 외관을 쉽게 변경할 수 있는 강력한 도구입니다. 이를 사용하여 다수의 뷰에 동일한 스타일을 적용할 수 있습니다."]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct CustomModifier: ViewModifier {\n    func body(content: Content) -> some View {\n        content\n            .padding()\n            .background(Color.blue)\n            .foregroundColor(.white)\n            .cornerRadius(8)\n    }\n}\n\nstruct ContentView: View {\n    var body: some View {\n        VStack {\n            Text(\"첫 번째 텍스트\")\n                .modifier(CustomModifier())\n            Text(\"두 번째 텍스트\")\n                .modifier(CustomModifier())\n        }\n    }\n}\n"}],"position":{"start":{"line":144,"column":1,"offset":3780},"end":{"line":165,"column":4,"offset":4261}}},"children":"struct CustomModifier: ViewModifier {\n    func body(content: Content) -> some View {\n        content\n            .padding()\n            .background(Color.blue)\n            .foregroundColor(.white)\n            .cornerRadius(8)\n    }\n}\n\nstruct ContentView: View {\n    var body: some View {\n        VStack {\n            Text(\"첫 번째 텍스트\")\n                .modifier(CustomModifier())\n            Text(\"두 번째 텍스트\")\n                .modifier(CustomModifier())\n        }\n    }\n}\n"}}]}],"\n",["$","h1",null,{"id":"5b12bcf2","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 기본적인 UI 구성에서부터 복잡한 레이아웃까지 다양한 기능을 제공하여 개발자가 원하는 사용자 인터페이스를 쉽게 구현할 수 있도록 도와줍니다. 본 글에서 다룬 고급 레이아웃 기술들은 복잡한 UI를 설계하고 효율적으로 관리하는 방법을 제시합니다. 이 기술들을 활용하여 더욱 세련된 사용자 경험을 제공하는 어플리케이션을 만들어 보세요."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI로 복잡한 사용자 인터페이스 만들기: 고급 SwiftUI 레이아웃 기술.","toc":[{"tagName":"h1","title":"SwiftUI로 복잡한 사용자 인터페이스 만들기: 고급 SwiftUI 레이아웃 기술","id":"2e13f9b2"},{"tagName":"h2","title":"VStack, HStack, ZStack의 조합","id":"6ec7fb2f"},{"tagName":"h3","title":"VStack과 HStack의 결합","id":"372db454"},{"tagName":"h3","title":"ZStack을 이용한 중첩 레이아웃","id":"1b73db92"},{"tagName":"h2","title":"GeometryReader와 Alignments","id":"096d781b"},{"tagName":"h3","title":"GeometryReader 사용 예제","id":"4d1058fe"},{"tagName":"h3","title":"Custom Alignments","id":"b18b7963"},{"tagName":"h2","title":"PreferenceKey와 ViewModifier","id":"7e1fa260"},{"tagName":"h3","title":"PreferenceKey 사용 예제","id":"4b68221b"},{"tagName":"h3","title":"ViewModifier 사용 예제","id":"59b86977"},{"tagName":"h1","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
