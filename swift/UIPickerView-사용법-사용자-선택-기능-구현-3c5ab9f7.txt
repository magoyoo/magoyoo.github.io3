1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","UIPickerView-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%84%A0%ED%83%9D-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84-3c5ab9f7","d"],{"children":["__PAGE__?{\"slug\":\"UIPickerView-사용법-사용자-선택-기능-구현-3c5ab9f7\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","UIPickerView-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%84%A0%ED%83%9D-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84-3c5ab9f7","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"UIPickerView-사용법-사용자-선택-기능-구현-3c5ab9f7\"}"},"styles":[]}],"segment":["slug","UIPickerView-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%84%A0%ED%83%9D-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84-3c5ab9f7","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"UIPickerView 사용법: 사용자 선택 기능 구현 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 문서는 Swift 프로그래밍 언어를 사용하여 iOS 앱에서 `UIPickerView`를 구현하고 사용자 선택 기능을 추가하는 방법을 다룹니다. `UIPickerView`는 간단한 선택 인터페이스를 제공하여 사용자가 항목을 선택할 수 있게 해줍니다."}],["$","meta","3",{"name":"keywords","content":"Swift,iOS,UIPickerView,사용자 선택 기능"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/UIPickerView-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%84%A0%ED%83%9D-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84-3c5ab9f7"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"UIPickerView 사용법: 사용자 선택 기능 구현 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"UIPickerView 사용법: 사용자 선택 기능 구현 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 문서는 Swift 프로그래밍 언어를 사용하여 iOS 앱에서 `UIPickerView`를 구현하고 사용자 선택 기능을 추가하는 방법을 다룹니다. `UIPickerView`는 간단한 선택 인터페이스를 제공하여 사용자가 항목을 선택할 수 있게 해줍니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/UIPickerView-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%84%A0%ED%83%9D-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84-3c5ab9f7"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"UIPickerView 사용법: 사용자 선택 기능 구현 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 문서는 Swift 프로그래밍 언어를 사용하여 iOS 앱에서 `UIPickerView`를 구현하고 사용자 선택 기능을 추가하는 방법을 다룹니다. `UIPickerView`는 간단한 선택 인터페이스를 제공하여 사용자가 항목을 선택할 수 있게 해줍니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
10:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
11:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T484,import UIKit

class ViewController: UIViewController, UIPickerViewDelegate, UIPickerViewDataSource {

    let pickerView = UIPickerView()
    let data = ["Option 1", "Option 2", "Option 3"]

    override func viewDidLoad() {
        super.viewDidLoad()
        // UIPickerView의 델리게이트와 데이터 소스를 설정합니다.
        pickerView.delegate = self
        pickerView.dataSource = self
        pickerView.center = view.center
        view.addSubview(pickerView)
    }

    // UIPickerViewDataSource에서 구현해야 하는 필수 메서드
    func numberOfComponents(in pickerView: UIPickerView) -> Int {
        return 1
    }

    func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
        return data.count
    }

    // UIPickerViewDelegate에서 구현해야 하는 필수 메서드
    func pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {
        return data[row]
    }

    func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        print("선택된 항목: \(data[row])")
    }
}
f:T484,import UIKit

class ViewController: UIViewController, UIPickerViewDelegate, UIPickerViewDataSource {

    let pickerView = UIPickerView()
    let data = ["Option 1", "Option 2", "Option 3"]

    override func viewDidLoad() {
        super.viewDidLoad()
        // UIPickerView의 델리게이트와 데이터 소스를 설정합니다.
        pickerView.delegate = self
        pickerView.dataSource = self
        pickerView.center = view.center
        view.addSubview(pickerView)
    }

    // UIPickerViewDataSource에서 구현해야 하는 필수 메서드
    func numberOfComponents(in pickerView: UIPickerView) -> Int {
        return 1
    }

    func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
        return data.count
    }

    // UIPickerViewDelegate에서 구현해야 하는 필수 메서드
    func pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {
        return data[row]
    }

    func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        print("선택된 항목: \(data[row])")
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"UIPickerView 사용법: 사용자 선택 기능 구현"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"UIPickerView 사용법: 사용자 선택 기능 구현"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-08-04"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"79b2c851","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"UIPickerView 사용법: 사용자 선택 기능 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift 프로그래밍 언어를 사용하여 iOS 앱에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPickerView","position":{"start":{"line":4,"column":30,"offset":64},"end":{"line":4,"column":44,"offset":78}}}],"position":{"start":{"line":4,"column":30,"offset":64},"end":{"line":4,"column":44,"offset":78}}},"children":"UIPickerView"}}],"를 구현하는 방법을 알아보겠습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPickerView","position":{"start":{"line":4,"column":64,"offset":98},"end":{"line":4,"column":78,"offset":112}}}],"position":{"start":{"line":4,"column":64,"offset":98},"end":{"line":4,"column":78,"offset":112}}},"children":"UIPickerView"}}],"는 선택할 항목이 여러 개인 경우 사용하기 좋은 선택형 인터페이스를 제공합니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPickerView","position":{"start":{"line":4,"column":130,"offset":164},"end":{"line":4,"column":144,"offset":178}}}],"position":{"start":{"line":4,"column":130,"offset":164},"end":{"line":4,"column":144,"offset":178}}},"children":"UIPickerView"}}],"의 기본 설정부터 사용자 기능을 구현하는 방법까지 단계별로 설명합니다."]}],"\n",["$","h2",null,{"id":"4c4aa22b","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UIPickerView란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPickerView","position":{"start":{"line":8,"column":1,"offset":238},"end":{"line":8,"column":15,"offset":252}}}],"position":{"start":{"line":8,"column":1,"offset":238},"end":{"line":8,"column":15,"offset":252}}},"children":"UIPickerView"}}],"는 iOS 프레임워크에서 제공하는 UI 컴포넌트 중 하나로, 사용자가 제공된 옵션 중 하나를 선택할 수 있는 롤링 돋보기와 같은 인터페이스를 제공합니다. 일반적으로 다양한 범주의 데이터를 선택할 수 있게 하거나, 폼을 작성할 때 주로 사용됩니다."]}],"\n",["$","h3",null,{"id":"7972163e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"UIPickerView 기본 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["첫 번째 단계는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPickerView","position":{"start":{"line":12,"column":10,"offset":424},"end":{"line":12,"column":24,"offset":438}}}],"position":{"start":{"line":12,"column":10,"offset":424},"end":{"line":12,"column":24,"offset":438}}},"children":"UIPickerView"}}],"를 설정하는 것입니다. 이를 위해 Xcode 프로젝트를 생성하고, 스토리보드 또는 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPickerView","position":{"start":{"line":12,"column":75,"offset":489},"end":{"line":12,"column":89,"offset":503}}}],"position":{"start":{"line":12,"column":75,"offset":489},"end":{"line":12,"column":89,"offset":503}}},"children":"UIPickerView"}}],"를 추가할 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":14,"column":1,"offset":518},"end":{"line":49,"column":4,"offset":1588}}},"children":"$f"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위 예제에서는 다음과 같은 작업이 이루어집니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPickerView","position":{"start":{"line":53,"column":4,"offset":1621},"end":{"line":53,"column":18,"offset":1635}}}],"position":{"start":{"line":53,"column":4,"offset":1621},"end":{"line":53,"column":18,"offset":1635}}},"children":"UIPickerView"}}]," 인스턴스를 생성합니다."]}],"\n",["$","li","li-1",{"children":"델리게이트와 데이터 소스를 설정합니다."}],"\n",["$","li","li-2",{"children":["데이터를 배열에 저장하고, pickerView의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"numberOfComponents","position":{"start":{"line":55,"column":31,"offset":1704},"end":{"line":55,"column":51,"offset":1724}}}],"position":{"start":{"line":55,"column":31,"offset":1704},"end":{"line":55,"column":51,"offset":1724}}},"children":"numberOfComponents"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"numberOfRowsInComponent","position":{"start":{"line":55,"column":53,"offset":1726},"end":{"line":55,"column":78,"offset":1751}}}],"position":{"start":{"line":55,"column":53,"offset":1726},"end":{"line":55,"column":78,"offset":1751}}},"children":"numberOfRowsInComponent"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"titleForRow","position":{"start":{"line":55,"column":80,"offset":1753},"end":{"line":55,"column":93,"offset":1766}}}],"position":{"start":{"line":55,"column":80,"offset":1753},"end":{"line":55,"column":93,"offset":1766}}},"children":"titleForRow"}}]," 메서드를 구현하여 데이터 소스를 제공합니다."]}],"\n",["$","li","li-3",{"children":["선택된 항목을 처리하는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"didSelectRow","position":{"start":{"line":56,"column":17,"offset":1808},"end":{"line":56,"column":31,"offset":1822}}}],"position":{"start":{"line":56,"column":17,"offset":1808},"end":{"line":56,"column":31,"offset":1822}}},"children":"didSelectRow"}}]," 메서드를 설정합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"34582a07","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UIPickerView의 추가 기능 구현"}],"\n",["$","h3",null,{"id":"9ddd5ada","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"여러 컴포넌트 추가하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UIPickerView는 두 개 이상의 컴포넌트를 동시에 표시할 수 있습니다. 예를 들어, 날짜와 시간을 선택하는 인터페이스를 디자인할 때 유용합니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let data = [[\"월\", \"화\", \"수\", \"목\", \"금\"], [\"오전\", \"오후\"]]\n\nfunc numberOfComponents(in pickerView: UIPickerView) -> Int {\n    return data.count\n}\n\nfunc pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {\n    return data[component].count\n}\n\nfunc pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {\n    return data[component][row]\n}\n"}],"position":{"start":{"line":64,"column":1,"offset":1967},"end":{"line":78,"column":4,"offset":2391}}},"children":"let data = [[\"월\", \"화\", \"수\", \"목\", \"금\"], [\"오전\", \"오후\"]]\n\nfunc numberOfComponents(in pickerView: UIPickerView) -> Int {\n    return data.count\n}\n\nfunc pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {\n    return data[component].count\n}\n\nfunc pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {\n    return data[component][row]\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"data","position":{"start":{"line":80,"column":9,"offset":2401},"end":{"line":80,"column":15,"offset":2407}}}],"position":{"start":{"line":80,"column":9,"offset":2401},"end":{"line":80,"column":15,"offset":2407}}},"children":"data"}}]," 배열이 2차원 배열로 변경되었으며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"numberOfComponents","position":{"start":{"line":80,"column":36,"offset":2428},"end":{"line":80,"column":56,"offset":2448}}}],"position":{"start":{"line":80,"column":36,"offset":2428},"end":{"line":80,"column":56,"offset":2448}}},"children":"numberOfComponents"}}]," 메서드가 2를 반환하여 컴포넌트 두 개를 화면에 표시합니다."]}],"\n",["$","h3",null,{"id":"22037635","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"사용자 정의 뷰 추가하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UIPickerView는 제목 외에도 사용자 정의 뷰를 사용할 수 있습니다. 이렇게 하면 더 복잡한 레이아웃을 만들 수 있습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func pickerView(_ pickerView: UIPickerView, viewForRow row: Int, forComponent component: Int, reusing view: UIView?) -> UIView {\n    let label = UILabel()\n    label.textAlignment = .center\n    label.text = data[component][row]\n    return label\n}\n"}],"position":{"start":{"line":86,"column":1,"offset":2577},"end":{"line":93,"column":4,"offset":2835}}},"children":"func pickerView(_ pickerView: UIPickerView, viewForRow row: Int, forComponent component: Int, reusing view: UIView?) -> UIView {\n    let label = UILabel()\n    label.textAlignment = .center\n    label.text = data[component][row]\n    return label\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 각 행에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UILabel","position":{"start":{"line":95,"column":12,"offset":2848},"end":{"line":95,"column":21,"offset":2857}}}],"position":{"start":{"line":95,"column":12,"offset":2848},"end":{"line":95,"column":21,"offset":2857}}},"children":"UILabel"}}],"을 추가하여 사용자 정의 뷰를 사용합니다. 이 방법을 통해 폰트, 색상 등 다양한 속성을 커스터마이즈 할 수 있습니다."]}],"\n",["$","h3",null,{"id":"4d7fefc0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"UIPickerView의 스타일 커스터마이징"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UIPickerView의 스타일을 변경하여 앱의 디자인에 맞출 수 있습니다. 이를 위해서는 UIPickerView 델리게이트 메서드에서 뷰를 설정하면서 스타일 속성을 변경하면 됩니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func pickerView(_ pickerView: UIPickerView, viewForRow row: Int, forComponent component: Int, reusing view: UIView?) -> UIView {\n    var label: UILabel\n\n    if let view = view as? UILabel {\n        label = view\n    } else {\n        label = UILabel()\n    }\n\n    label.text = data[component][row]\n    label.textAlignment = .center\n    label.textColor = UIColor.blue\n    label.font = UIFont.systemFont(ofSize: 16)\n\n    return label\n}\n"}],"position":{"start":{"line":101,"column":1,"offset":3059},"end":{"line":118,"column":4,"offset":3502}}},"children":"func pickerView(_ pickerView: UIPickerView, viewForRow row: Int, forComponent component: Int, reusing view: UIView?) -> UIView {\n    var label: UILabel\n\n    if let view = view as? UILabel {\n        label = view\n    } else {\n        label = UILabel()\n    }\n\n    label.text = data[component][row]\n    label.textAlignment = .center\n    label.textColor = UIColor.blue\n    label.font = UIFont.systemFont(ofSize: 16)\n\n    return label\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPickerView","position":{"start":{"line":120,"column":8,"offset":3511},"end":{"line":120,"column":22,"offset":3525}}}],"position":{"start":{"line":120,"column":8,"offset":3511},"end":{"line":120,"column":22,"offset":3525}}},"children":"UIPickerView"}}],"의 텍스트 색상과 폰트 크기를 변경했습니다. 이와 같이 간단한 스타일 변경뿐만 아니라, 더 복잡한 스타일 변경도 가능합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이번 글에서는 Swift를 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPickerView","position":{"start":{"line":124,"column":21,"offset":3623},"end":{"line":124,"column":35,"offset":3637}}}],"position":{"start":{"line":124,"column":21,"offset":3623},"end":{"line":124,"column":35,"offset":3637}}},"children":"UIPickerView"}}],"를 설정하고 기본 및 고급 기능을 구현하는 방법에 대해 다루었습니다. 여러 컴포넌트를 추가하거나 사용자 정의 뷰를 사용할 수 있고, 스타일을 커스터마이즈 할 수도 있습니다. 게시된 예제 코드를 직접 실행해 보고, UIPickerView의 다양한 기능을 앱에 적용해 보세요."]}]]}]}],["$","$L10",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L11",null,{"articleTitle":"UIPickerView 사용법: 사용자 선택 기능 구현","toc":[{"tagName":"h1","title":"UIPickerView 사용법: 사용자 선택 기능 구현","id":"79b2c851"},{"tagName":"h2","title":"UIPickerView란?","id":"4c4aa22b"},{"tagName":"h3","title":"UIPickerView 기본 설정","id":"7972163e"},{"tagName":"h2","title":"UIPickerView의 추가 기능 구현","id":"34582a07"},{"tagName":"h3","title":"여러 컴포넌트 추가하기","id":"9ddd5ada"},{"tagName":"h3","title":"사용자 정의 뷰 추가하기","id":"22037635"},{"tagName":"h3","title":"UIPickerView의 스타일 커스터마이징","id":"4d7fefc0"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
