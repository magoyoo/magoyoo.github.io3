1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift%EB%A1%9C-Autolayout%EA%B3%BC-translatesAutoresizingMaskIntoConstraints-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-31fe73d4","d"],{"children":["__PAGE__?{\"slug\":\"Swift로-Autolayout과-translatesAutoresizingMaskIntoConstraints-구현하기-31fe73d4\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift%EB%A1%9C-Autolayout%EA%B3%BC-translatesAutoresizingMaskIntoConstraints-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-31fe73d4","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift로-Autolayout과-translatesAutoresizingMaskIntoConstraints-구현하기-31fe73d4\"}"},"styles":[]}],"segment":["slug","Swift%EB%A1%9C-Autolayout%EA%B3%BC-translatesAutoresizingMaskIntoConstraints-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-31fe73d4","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 구현하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Swift를 사용하여 Autolayout과 translatesAutoresizingMaskIntoConstraints를 구현하는 방법을 다룹니다. 이를 통해 개발자는 유연하고 반응형인 사용자 인터페이스를 쉽게 구성할 수 있습니다."}],["$","meta","3",{"name":"keywords","content":"Swift,Autolayout,translatesAutoresizingMaskIntoConstraints,iOS"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift%EB%A1%9C-Autolayout%EA%B3%BC-translatesAutoresizingMaskIntoConstraints-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-31fe73d4"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 구현하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 구현하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Swift를 사용하여 Autolayout과 translatesAutoresizingMaskIntoConstraints를 구현하는 방법을 다룹니다. 이를 통해 개발자는 유연하고 반응형인 사용자 인터페이스를 쉽게 구성할 수 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift%EB%A1%9C-Autolayout%EA%B3%BC-translatesAutoresizingMaskIntoConstraints-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-31fe73d4"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 구현하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Swift를 사용하여 Autolayout과 translatesAutoresizingMaskIntoConstraints를 구현하는 방법을 다룹니다. 이를 통해 개발자는 유연하고 반응형인 사용자 인터페이스를 쉽게 구성할 수 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 구현하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 구현하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-30"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"cde5f752","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 구현하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift는 iOS 개발을 위한 강력한 도구입니다. 시각적인 요소를 유연하고 반응형으로 구성하기 위해서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Autolayout","position":{"start":{"line":4,"column":60,"offset":129},"end":{"line":4,"column":72,"offset":141}}}],"position":{"start":{"line":4,"column":60,"offset":129},"end":{"line":4,"column":72,"offset":141}}},"children":"Autolayout"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"translatesAutoresizingMaskIntoConstraints","position":{"start":{"line":4,"column":74,"offset":143},"end":{"line":4,"column":117,"offset":186}}}],"position":{"start":{"line":4,"column":74,"offset":143},"end":{"line":4,"column":117,"offset":186}}},"children":"translatesAutoresizingMaskIntoConstraints"}}],"의 적절한 활용이 필요합니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Autolayout","position":{"start":{"line":4,"column":141,"offset":210},"end":{"line":4,"column":153,"offset":222}}}],"position":{"start":{"line":4,"column":141,"offset":210},"end":{"line":4,"column":153,"offset":222}}},"children":"Autolayout"}}],"의 기본 개념과 함께 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"translatesAutoresizingMaskIntoConstraints","position":{"start":{"line":4,"column":165,"offset":234},"end":{"line":4,"column":208,"offset":277}}}],"position":{"start":{"line":4,"column":165,"offset":234},"end":{"line":4,"column":208,"offset":277}}},"children":"translatesAutoresizingMaskIntoConstraints"}}]," 속성을 설정하는 방법을 살펴보겠습니다."]}],"\n",["$","h2",null,{"id":"b940cd71","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Autolayout의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Autolayout","position":{"start":{"line":8,"column":1,"offset":323},"end":{"line":8,"column":13,"offset":335}}}],"position":{"start":{"line":8,"column":1,"offset":323},"end":{"line":8,"column":13,"offset":335}}},"children":"Autolayout"}}],"은 iOS와 macOS에서 사용되는 레이아웃 시스템으로, 다양한 화면 크기와 방향에서도 UI 요소가 올바르게 배치되도록 합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Autolayout","position":{"start":{"line":8,"column":85,"offset":407},"end":{"line":8,"column":97,"offset":419}}}],"position":{"start":{"line":8,"column":85,"offset":407},"end":{"line":8,"column":97,"offset":419}}},"children":"Autolayout"}}],"을 사용하면 다음과 같은 이점을 누릴 수 있습니다:"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":"다양한 디바이스와 해상도에서 일관된 사용자 경험 제공"}],"\n",["$","li","li-1",{"children":"다국어 지원 및 적응형 UI"}],"\n",["$","li","li-2",{"children":"동적인 콘텐츠에 대응하는 레이아웃"}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Autolayout","position":{"start":{"line":14,"column":1,"offset":521},"end":{"line":14,"column":13,"offset":533}}}],"position":{"start":{"line":14,"column":1,"offset":521},"end":{"line":14,"column":13,"offset":533}}},"children":"Autolayout"}}],"을 설정하는 방법에는 스토리보드를 사용하는 방법과 코드로 직접 설정하는 방법이 있습니다. 이 글에서는 코드로 설정하는 방법을 다룹니다."]}],"\n",["$","h2",null,{"id":"8b758488","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"translatesAutoresizingMaskIntoConstraints란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"translatesAutoresizingMaskIntoConstraints","position":{"start":{"line":18,"column":1,"offset":658},"end":{"line":18,"column":44,"offset":701}}}],"position":{"start":{"line":18,"column":1,"offset":658},"end":{"line":18,"column":44,"offset":701}}},"children":"translatesAutoresizingMaskIntoConstraints"}}],"는 뷰의 크기 및 위치를 자동으로 설정할 것인지 여부를 결정하는 Boolean 속성입니다. 기본값은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true","position":{"start":{"line":18,"column":100,"offset":757},"end":{"line":18,"column":106,"offset":763}}}],"position":{"start":{"line":18,"column":100,"offset":757},"end":{"line":18,"column":106,"offset":763}}},"children":"true"}}],"로 설정되어 있으며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Autolayout","position":{"start":{"line":18,"column":118,"offset":775},"end":{"line":18,"column":130,"offset":787}}}],"position":{"start":{"line":18,"column":118,"offset":775},"end":{"line":18,"column":130,"offset":787}}},"children":"Autolayout"}}],"을 사용할 때는 이 값을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false","position":{"start":{"line":18,"column":144,"offset":801},"end":{"line":18,"column":151,"offset":808}}}],"position":{"start":{"line":18,"column":144,"offset":801},"end":{"line":18,"column":151,"offset":808}}},"children":"false"}}],"로 설정해야 합니다. 그래야만 수동으로 제약을 추가할 수 있습니다."]}],"\n",["$","h3",null,{"id":"1359bcfa","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"기본 사용 방법"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass ViewController: UIViewController {\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        let sampleView = UIView()\n        sampleView.backgroundColor = .red\n        sampleView.translatesAutoresizingMaskIntoConstraints = false\n        view.addSubview(sampleView)\n\n        NSLayoutConstraint.activate([\n            sampleView.centerXAnchor.constraint(equalTo: view.centerXAnchor),\n            sampleView.centerYAnchor.constraint(equalTo: view.centerYAnchor),\n            sampleView.widthAnchor.constraint(equalToConstant: 100),\n            sampleView.heightAnchor.constraint(equalToConstant: 100)\n        ])\n    }\n}\n"}],"position":{"start":{"line":22,"column":1,"offset":861},"end":{"line":42,"column":4,"offset":1524}}},"children":"import UIKit\n\nclass ViewController: UIViewController {\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        let sampleView = UIView()\n        sampleView.backgroundColor = .red\n        sampleView.translatesAutoresizingMaskIntoConstraints = false\n        view.addSubview(sampleView)\n\n        NSLayoutConstraint.activate([\n            sampleView.centerXAnchor.constraint(equalTo: view.centerXAnchor),\n            sampleView.centerYAnchor.constraint(equalTo: view.centerYAnchor),\n            sampleView.widthAnchor.constraint(equalToConstant: 100),\n            sampleView.heightAnchor.constraint(equalToConstant: 100)\n        ])\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 예제는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"translatesAutoresizingMaskIntoConstraints","position":{"start":{"line":44,"column":8,"offset":1533},"end":{"line":44,"column":51,"offset":1576}}}],"position":{"start":{"line":44,"column":8,"offset":1533},"end":{"line":44,"column":51,"offset":1576}}},"children":"translatesAutoresizingMaskIntoConstraints"}}]," 속성을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false","position":{"start":{"line":44,"column":56,"offset":1581},"end":{"line":44,"column":63,"offset":1588}}}],"position":{"start":{"line":44,"column":56,"offset":1581},"end":{"line":44,"column":63,"offset":1588}}},"children":"false"}}],"로 설정하고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLayoutConstraint","position":{"start":{"line":44,"column":70,"offset":1595},"end":{"line":44,"column":90,"offset":1615}}}],"position":{"start":{"line":44,"column":70,"offset":1595},"end":{"line":44,"column":90,"offset":1615}}},"children":"NSLayoutConstraint"}}],"를 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sampleView","position":{"start":{"line":44,"column":97,"offset":1622},"end":{"line":44,"column":109,"offset":1634}}}],"position":{"start":{"line":44,"column":97,"offset":1622},"end":{"line":44,"column":109,"offset":1634}}},"children":"sampleView"}}],"의 크기와 위치를 화면의 중심에 고정합니다."]}],"\n",["$","h2",null,{"id":"80c48a76","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Autolayout 제약 조건 설정 방법"}],"\n",["$","h3",null,{"id":"89dffbe5","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"크기와 위치 제약 조건 추가하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Autolayout","position":{"start":{"line":50,"column":1,"offset":1710},"end":{"line":50,"column":13,"offset":1722}}}],"position":{"start":{"line":50,"column":1,"offset":1710},"end":{"line":50,"column":13,"offset":1722}}},"children":"Autolayout"}}],"을 통해 뷰의 크기와 위치를 설정하려면 다양한 제약 조건을 추가해야 합니다. 이러한 제약 조건은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLayoutConstraint","position":{"start":{"line":50,"column":67,"offset":1776},"end":{"line":50,"column":87,"offset":1796}}}],"position":{"start":{"line":50,"column":67,"offset":1776},"end":{"line":50,"column":87,"offset":1796}}},"children":"NSLayoutConstraint"}}],"를 사용하여 뷰의 앵커를 다른 앵커에 고정하는 방식으로 설정됩니다."]}],"\n",["$","h4","h4-0",{"children":"엣지 앵커를 사용한 제약 조건"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let margins = view.layoutMarginsGuide\n\nNSLayoutConstraint.activate([\n    sampleView.leadingAnchor.constraint(equalTo: margins.leadingAnchor),\n    sampleView.trailingAnchor.constraint(equalTo: margins.trailingAnchor),\n    sampleView.topAnchor.constraint(equalTo: margins.topAnchor),\n    sampleView.bottomAnchor.constraint(equalTo: margins.bottomAnchor)\n])\n"}],"position":{"start":{"line":54,"column":1,"offset":1858},"end":{"line":63,"column":4,"offset":2225}}},"children":"let margins = view.layoutMarginsGuide\n\nNSLayoutConstraint.activate([\n    sampleView.leadingAnchor.constraint(equalTo: margins.leadingAnchor),\n    sampleView.trailingAnchor.constraint(equalTo: margins.trailingAnchor),\n    sampleView.topAnchor.constraint(equalTo: margins.topAnchor),\n    sampleView.bottomAnchor.constraint(equalTo: margins.bottomAnchor)\n])\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sampleView","position":{"start":{"line":65,"column":9,"offset":2235},"end":{"line":65,"column":21,"offset":2247}}}],"position":{"start":{"line":65,"column":9,"offset":2235},"end":{"line":65,"column":21,"offset":2247}}},"children":"sampleView"}}],"가 화면의 가장자리에 고정되는 제약 조건을 추가합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"margins","position":{"start":{"line":65,"column":52,"offset":2278},"end":{"line":65,"column":61,"offset":2287}}}],"position":{"start":{"line":65,"column":52,"offset":2278},"end":{"line":65,"column":61,"offset":2287}}},"children":"margins"}}],"는 부모 뷰의 레이아웃 가이드를 나타내며, 이를 활용하여 뷰가 부모 뷰의 가장자리에 일정한 간격으로 배치되도록 설정할 수 있습니다."]}],"\n",["$","h3",null,{"id":"3eef72a6","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"복합 제약 조건 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다양한 조건을 조합하여 복잡한 레이아웃을 구성할 때는 여러 제약 조건을 동시에 설정할 수 있습니다. 예를 들어, 두 개의 뷰가 서로 상대적인 위치에 있도록 설정할 수 있습니다:"}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let secondView = UIView()\nsecondView.backgroundColor = .blue\nsecondView.translatesAutoresizingMaskIntoConstraints = false\nview.addSubview(secondView)\n\nNSLayoutConstraint.activate([\n    secondView.leadingAnchor.constraint(equalTo: sampleView.trailingAnchor, constant: 20),\n    secondView.centerYAnchor.constraint(equalTo: sampleView.centerYAnchor),\n    secondView.widthAnchor.constraint(equalToConstant: 100),\n    secondView.heightAnchor.constraint(equalToConstant: 100)\n])\n"}],"position":{"start":{"line":71,"column":1,"offset":2479},"end":{"line":83,"column":4,"offset":2964}}},"children":"let secondView = UIView()\nsecondView.backgroundColor = .blue\nsecondView.translatesAutoresizingMaskIntoConstraints = false\nview.addSubview(secondView)\n\nNSLayoutConstraint.activate([\n    secondView.leadingAnchor.constraint(equalTo: sampleView.trailingAnchor, constant: 20),\n    secondView.centerYAnchor.constraint(equalTo: sampleView.centerYAnchor),\n    secondView.widthAnchor.constraint(equalToConstant: 100),\n    secondView.heightAnchor.constraint(equalToConstant: 100)\n])\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"secondView","position":{"start":{"line":85,"column":10,"offset":2975},"end":{"line":85,"column":22,"offset":2987}}}],"position":{"start":{"line":85,"column":10,"offset":2975},"end":{"line":85,"column":22,"offset":2987}}},"children":"secondView"}}],"가 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sampleView","position":{"start":{"line":85,"column":24,"offset":2989},"end":{"line":85,"column":36,"offset":3001}}}],"position":{"start":{"line":85,"column":24,"offset":2989},"end":{"line":85,"column":36,"offset":3001}}},"children":"sampleView"}}],"의 오른쪽에 20포인트 떨어진 위치에 배치되며, 두 뷰는 세로로 중앙 정렬됩니다."]}],"\n",["$","h2",null,{"id":"827dafe9","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"안전하게 제약 조건 설정하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["제약 조건을 설정할 때는 우선 순위를 설정하여 충돌을 방지하는 것이 중요합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UILayoutPriority","position":{"start":{"line":89,"column":46,"offset":3113},"end":{"line":89,"column":64,"offset":3131}}}],"position":{"start":{"line":89,"column":46,"offset":3113},"end":{"line":89,"column":64,"offset":3131}}},"children":"UILayoutPriority"}}],"를 사용하여 우선 순위를 지정할 수 있으며, 기본 우선 순위는 1000입니다. 예를 들어, 다음과 같이 우선 순위를 낮출 수 있습니다:"]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let lowPriorityConstraint = sampleView.widthAnchor.constraint(equalToConstant: 150)\nlowPriorityConstraint.priority = UILayoutPriority(750)\nlowPriorityConstraint.isActive = true\n"}],"position":{"start":{"line":91,"column":1,"offset":3208},"end":{"line":95,"column":4,"offset":3397}}},"children":"let lowPriorityConstraint = sampleView.widthAnchor.constraint(equalToConstant: 150)\nlowPriorityConstraint.priority = UILayoutPriority(750)\nlowPriorityConstraint.isActive = true\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 우선 순위는 다른 제약 조건과 충돌할 경우 유연하게 조정될 수 있습니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Autolayout","position":{"start":{"line":101,"column":1,"offset":3450},"end":{"line":101,"column":13,"offset":3462}}}],"position":{"start":{"line":101,"column":1,"offset":3450},"end":{"line":101,"column":13,"offset":3462}}},"children":"Autolayout"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"translatesAutoresizingMaskIntoConstraints","position":{"start":{"line":101,"column":15,"offset":3464},"end":{"line":101,"column":58,"offset":3507}}}],"position":{"start":{"line":101,"column":15,"offset":3464},"end":{"line":101,"column":58,"offset":3507}}},"children":"translatesAutoresizingMaskIntoConstraints"}}],"를 사용하는 것은 처음에는 복잡하게 느껴질 수 있지만, 이를 통해 다양한 기기와 화면 크기에서 일관된 사용자 경험을 제공할 수 있습니다. 코드로 제약 조건을 설정하는 방법을 익히면 개발자는 더 많은 유연성과 제어 권한을 가질 수 있습니다. 이 글에서 설명한 내용을 바탕으로 직접 실습해보면서 능숙하게 활용해 보세요."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 구현하기","toc":[{"tagName":"h1","title":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 구현하기","id":"cde5f752"},{"tagName":"h2","title":"Autolayout의 기본 개념","id":"b940cd71"},{"tagName":"h2","title":"translatesAutoresizingMaskIntoConstraints란?","id":"8b758488"},{"tagName":"h3","title":"기본 사용 방법","id":"1359bcfa"},{"tagName":"h2","title":"Autolayout 제약 조건 설정 방법","id":"80c48a76"},{"tagName":"h3","title":"크기와 위치 제약 조건 추가하기","id":"89dffbe5"},{"tagName":"h3","title":"복합 제약 조건 설정","id":"3eef72a6"},{"tagName":"h2","title":"안전하게 제약 조건 설정하기","id":"827dafe9"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
