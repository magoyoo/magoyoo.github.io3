1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","React%EC%97%90%EC%84%9C-Axios%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-REST-API-%ED%98%B8%EC%B6%9C%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-API-%ED%98%B8%EC%B6%9C-%ED%9B%84-%EB%B0%9B%EC%9D%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%ED%99%94%EB%A9%B4%EC%97%90-%ED%91%9C%EC%8B%9C%ED%95%98%EB%8A%94-%EC%83%81%EC%84%B8-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-f405691d","d"],{"children":["__PAGE__?{\"slug\":\"React에서-Axios를-사용한-REST-API-호출과-데이터-처리-API-호출-후-받은-데이터를-화면에-표시하는-상세-프로세스-f405691d\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","React%EC%97%90%EC%84%9C-Axios%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-REST-API-%ED%98%B8%EC%B6%9C%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-API-%ED%98%B8%EC%B6%9C-%ED%9B%84-%EB%B0%9B%EC%9D%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%ED%99%94%EB%A9%B4%EC%97%90-%ED%91%9C%EC%8B%9C%ED%95%98%EB%8A%94-%EC%83%81%EC%84%B8-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-f405691d","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"React에서-Axios를-사용한-REST-API-호출과-데이터-처리-API-호출-후-받은-데이터를-화면에-표시하는-상세-프로세스-f405691d\"}"},"styles":[]}],"segment":["slug","React%EC%97%90%EC%84%9C-Axios%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-REST-API-%ED%98%B8%EC%B6%9C%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-API-%ED%98%B8%EC%B6%9C-%ED%9B%84-%EB%B0%9B%EC%9D%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%ED%99%94%EB%A9%B4%EC%97%90-%ED%91%9C%EC%8B%9C%ED%95%98%EB%8A%94-%EC%83%81%EC%84%B8-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-f405691d","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"React에서 Axios를 사용한 REST API 호출과 데이터 처리: API 호출 후 받은 데이터를 화면에 표시하는 상세 프로세스. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 React 애플리케이션에서 Axios를 사용하여 REST API를 호출하고, 받아온 데이터를 화면에 표시하는 과정을 다룹니다. 구체적인 코드 예시와 함께 데이터 로딩 상태 처리, 오류 처리 방안 등을 상세히 설명합니다."}],["$","meta","3",{"name":"keywords","content":"React,Axios,REST API,프론트엔드"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/React%EC%97%90%EC%84%9C-Axios%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-REST-API-%ED%98%B8%EC%B6%9C%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-API-%ED%98%B8%EC%B6%9C-%ED%9B%84-%EB%B0%9B%EC%9D%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%ED%99%94%EB%A9%B4%EC%97%90-%ED%91%9C%EC%8B%9C%ED%95%98%EB%8A%94-%EC%83%81%EC%84%B8-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-f405691d"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"React에서 Axios를 사용한 REST API 호출과 데이터 처리: API 호출 후 받은 데이터를 화면에 표시하는 상세 프로세스. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"React에서 Axios를 사용한 REST API 호출과 데이터 처리: API 호출 후 받은 데이터를 화면에 표시하는 상세 프로세스. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 React 애플리케이션에서 Axios를 사용하여 REST API를 호출하고, 받아온 데이터를 화면에 표시하는 과정을 다룹니다. 구체적인 코드 예시와 함께 데이터 로딩 상태 처리, 오류 처리 방안 등을 상세히 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/React%EC%97%90%EC%84%9C-Axios%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-REST-API-%ED%98%B8%EC%B6%9C%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-API-%ED%98%B8%EC%B6%9C-%ED%9B%84-%EB%B0%9B%EC%9D%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%ED%99%94%EB%A9%B4%EC%97%90-%ED%91%9C%EC%8B%9C%ED%95%98%EB%8A%94-%EC%83%81%EC%84%B8-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-f405691d"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"React에서 Axios를 사용한 REST API 호출과 데이터 처리: API 호출 후 받은 데이터를 화면에 표시하는 상세 프로세스. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 React 애플리케이션에서 Axios를 사용하여 REST API를 호출하고, 받아온 데이터를 화면에 표시하는 과정을 다룹니다. 구체적인 코드 예시와 함께 데이터 로딩 상태 처리, 오류 처리 방안 등을 상세히 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"React에서 Axios를 사용한 REST API 호출과 데이터 처리: API 호출 후 받은 데이터를 화면에 표시하는 상세 프로세스."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"React에서 Axios를 사용한 REST API 호출과 데이터 처리: API 호출 후 받은 데이터를 화면에 표시하는 상세 프로세스."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-22"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"a7ad743d","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"React에서 Axios를 사용한 REST API 호출과 데이터 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"React 애플리케이션에서 외부 REST API와 통신하고 데이터를 받아와 화면에 표시하는 일은 아주 흔한 과제입니다. Axios는 이 작업을 간편하게 해주는 인기 있는 HTTP 클라이언트 라이브러리입니다. 이번 글에서는 Axios를 React와 함께 사용하여 API를 호출하고 데이터를 화면에 표시하는 전체 과정을 단계별로 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"80b6855c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"1. 프로젝트 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["우선, React 애플리케이션을 설정하고 Axios를 설치해야 합니다. 여기서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"create-react-app","position":{"start":{"line":6,"column":46,"offset":293},"end":{"line":6,"column":64,"offset":311}}}],"position":{"start":{"line":6,"column":46,"offset":293},"end":{"line":6,"column":64,"offset":311}}},"children":"create-react-app"}}],"을 사용하여 새로운 React 프로젝트를 생성한 후 Axios를 설치하는 방법을 설명합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-bash","node":{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"npx create-react-app my-app\ncd my-app\nnpm install axios\n"}],"position":{"start":{"line":8,"column":1,"offset":364},"end":{"line":12,"column":4,"offset":431}}},"children":"npx create-react-app my-app\ncd my-app\nnpm install axios\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위 명령어를 실행하면 새로운 React 프로젝트가 생성되고, Axios 라이브러리가 설치됩니다."}],"\n",["$","h2",null,{"id":"e5a8c563","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"2. API 호출 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 API를 호출하는 코드를 작성해보겠습니다. 이를 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":16,"column":34,"offset":536},"end":{"line":16,"column":45,"offset":547}}}],"position":{"start":{"line":16,"column":34,"offset":536},"end":{"line":16,"column":45,"offset":547}}},"children":"useEffect"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState","position":{"start":{"line":16,"column":47,"offset":549},"end":{"line":16,"column":57,"offset":559}}}],"position":{"start":{"line":16,"column":47,"offset":549},"end":{"line":16,"column":57,"offset":559}}},"children":"useState"}}]," 훅을 사용하여 컴포넌트가 마운트될 때 API를 호출하고, 그 결과를 상태에 저장하도록 합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst DataFetchingComponent = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://api.example.com/data');\n        setData(response.data);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div>\n      <h1>Data fetched from API</h1>\n      <ul>\n        {data.map(item => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default DataFetchingComponent;\n"}],"position":{"start":{"line":18,"column":1,"offset":614},"end":{"line":57,"column":4,"offset":1512}}},"children":"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst DataFetchingComponent = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://api.example.com/data');\n        setData(response.data);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div>\n      <h1>Data fetched from API</h1>\n      <ul>\n        {data.map(item => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default DataFetchingComponent;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":59,"column":5,"offset":1518},"end":{"line":59,"column":16,"offset":1529}}}],"position":{"start":{"line":59,"column":5,"offset":1518},"end":{"line":59,"column":16,"offset":1529}}},"children":"useEffect"}}]," 훅으로 컴포넌트가 마운트될 때 API를 호출합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"axios.get","position":{"start":{"line":59,"column":46,"offset":1559},"end":{"line":59,"column":57,"offset":1570}}}],"position":{"start":{"line":59,"column":46,"offset":1559},"end":{"line":59,"column":57,"offset":1570}}},"children":"axios.get"}}]," 메서드를 사용하여 데이터를 요청하고, 성공적으로 데이터를 받아오면 이를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setData","position":{"start":{"line":59,"column":98,"offset":1611},"end":{"line":59,"column":107,"offset":1620}}}],"position":{"start":{"line":59,"column":98,"offset":1611},"end":{"line":59,"column":107,"offset":1620}}},"children":"setData"}}],"로 상태에 저장합니다. 오류가 발생할 경우 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setError","position":{"start":{"line":59,"column":131,"offset":1644},"end":{"line":59,"column":141,"offset":1654}}}],"position":{"start":{"line":59,"column":131,"offset":1644},"end":{"line":59,"column":141,"offset":1654}}},"children":"setError"}}],"로 오류를 상태에 저장합니다."]}],"\n",["$","h2",null,{"id":"667f7ee7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"3. 데이터 로딩 및 오류 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["데이터를 호출하는 동안 로딩 상태를 표시하고, 오류가 발생하면 이를 사용자에게 표시하는 것도 중요합니다. 위 코드처럼 데이터를 요청하는 동안 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"loading","position":{"start":{"line":62,"column":80,"offset":1772},"end":{"line":62,"column":89,"offset":1781}}}],"position":{"start":{"line":62,"column":80,"offset":1772},"end":{"line":62,"column":89,"offset":1781}}},"children":"loading"}}]," 상태를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true","position":{"start":{"line":62,"column":94,"offset":1786},"end":{"line":62,"column":100,"offset":1792}}}],"position":{"start":{"line":62,"column":94,"offset":1786},"end":{"line":62,"column":100,"offset":1792}}},"children":"true"}}],"로 설정하고, 데이터가 응답된 후에는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"loading","position":{"start":{"line":62,"column":121,"offset":1813},"end":{"line":62,"column":130,"offset":1822}}}],"position":{"start":{"line":62,"column":121,"offset":1813},"end":{"line":62,"column":130,"offset":1822}}},"children":"loading"}}]," 상태를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false","position":{"start":{"line":62,"column":135,"offset":1827},"end":{"line":62,"column":142,"offset":1834}}}],"position":{"start":{"line":62,"column":135,"offset":1827},"end":{"line":62,"column":142,"offset":1834}}},"children":"false"}}],"로 변경합니다. 오류가 발생하면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"error","position":{"start":{"line":62,"column":160,"offset":1852},"end":{"line":62,"column":167,"offset":1859}}}],"position":{"start":{"line":62,"column":160,"offset":1852},"end":{"line":62,"column":167,"offset":1859}}},"children":"error"}}]," 상태를 설정하고, 이를 UI에 표시합니다."]}],"\n",["$","h2",null,{"id":"05e96135","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"4. 데이터 표시"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["데이터가 성공적으로 로드되면 이를 화면에 표시합니다. 위 코드에서는 간단한 리스트로 데이터를 표현합니다. 각 항목에 대해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"map","position":{"start":{"line":65,"column":69,"offset":1966},"end":{"line":65,"column":74,"offset":1971}}}],"position":{"start":{"line":65,"column":69,"offset":1966},"end":{"line":65,"column":74,"offset":1971}}},"children":"map"}}]," 메서드를 사용하여 배열을 순회하고, 각 항목을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<li>","position":{"start":{"line":65,"column":101,"offset":1998},"end":{"line":65,"column":107,"offset":2004}}}],"position":{"start":{"line":65,"column":101,"offset":1998},"end":{"line":65,"column":107,"offset":2004}}},"children":"<li>"}}]," 태그로 렌더링합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DataFetchingComponent","position":{"start":{"line":67,"column":4,"offset":2021},"end":{"line":67,"column":27,"offset":2044}}}],"position":{"start":{"line":67,"column":4,"offset":2021},"end":{"line":67,"column":27,"offset":2044}}},"children":"DataFetchingComponent"}}],"를 애플리케이션의 다른 부분에서 사용할 수 있습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DataFetchingComponent from './DataFetchingComponent';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataFetchingComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"}],"position":{"start":{"line":69,"column":1,"offset":2075},"end":{"line":80,"column":4,"offset":2336}}},"children":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DataFetchingComponent from './DataFetchingComponent';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataFetchingComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음과 같이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"index.js","position":{"start":{"line":82,"column":8,"offset":2345},"end":{"line":82,"column":18,"offset":2355}}}],"position":{"start":{"line":82,"column":8,"offset":2345},"end":{"line":82,"column":18,"offset":2355}}},"children":"index.js"}}]," 파일에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DataFetchingComponent","position":{"start":{"line":82,"column":23,"offset":2360},"end":{"line":82,"column":46,"offset":2383}}}],"position":{"start":{"line":82,"column":23,"offset":2360},"end":{"line":82,"column":46,"offset":2383}}},"children":"DataFetchingComponent"}}],"를 임포트하여 ReactDOM의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"render","position":{"start":{"line":82,"column":64,"offset":2401},"end":{"line":82,"column":72,"offset":2409}}}],"position":{"start":{"line":82,"column":64,"offset":2401},"end":{"line":82,"column":72,"offset":2409}}},"children":"render"}}]," 메서드를 통해 렌더링할 수 있습니다."]}],"\n",["$","h2",null,{"id":"4e8f9f5f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"5. 추가적인 기능"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"실제 애플리케이션에서는 데이터 필터링, 페이징, 소팅 같은 추가 기능들이 필요하게 됩니다. 이러한 기능들을 추가하여 API 데이터를 더 유연하게 다룰 수 있습니다."}],"\n",["$","h3",null,{"id":"6b1e0193","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"필터링 예시"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["데이터 필터링 기능을 추가하기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState","position":{"start":{"line":88,"column":21,"offset":2570},"end":{"line":88,"column":31,"offset":2580}}}],"position":{"start":{"line":88,"column":21,"offset":2570},"end":{"line":88,"column":31,"offset":2580}}},"children":"useState"}}]," 훅을 사용하여 필터 상태를 관리합니다. 사용자의 입력을 받아 필터링된 데이터를 표시합니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"const DataFetchingComponent = () => {\n  // ...기존 코드...\n  const [filter, setFilter] = useState('');\n  const filteredData = data.filter(item => item.name.includes(filter));\n\n  return (\n    <div>\n      <h1>Data fetched from API</h1>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => setFilter(e.target.value)}\n        placeholder=\"Filter by name\"\n      />\n      <ul>\n        {filteredData.map(item => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"}],"position":{"start":{"line":90,"column":1,"offset":2633},"end":{"line":113,"column":4,"offset":3160}}},"children":"const DataFetchingComponent = () => {\n  // ...기존 코드...\n  const [filter, setFilter] = useState('');\n  const filteredData = data.filter(item => item.name.includes(filter));\n\n  return (\n    <div>\n      <h1>Data fetched from API</h1>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => setFilter(e.target.value)}\n        placeholder=\"Filter by name\"\n      />\n      <ul>\n        {filteredData.map(item => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"}}]}],"\n",["$","h3",null,{"id":"7710c300","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"페이지 네이션 예시"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"간단한 페이지 네이션 기능도 추가할 수 있습니다. 페이지별로 데이터를 나누어 렌더링하고 페이지 번호를 관리합니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"const DataFetchingComponent = () => {\n  // ...기존 코드...\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const paginatedData = data.slice(startIndex, startIndex + itemsPerPage);\n\n  return (\n    <div>\n      <h1>Data fetched from API</h1>\n      <ul>\n        {paginatedData.map(item => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ul>\n      <button onClick={() => setCurrentPage(currentPage - 1)} disabled={currentPage === 1}>\n        Previous\n      </button>\n      <button onClick={() => setCurrentPage(currentPage + 1)} disabled={startIndex + itemsPerPage >= data.length}>\n        Next\n      </button>\n    </div>\n  );\n};\n"}],"position":{"start":{"line":118,"column":1,"offset":3242},"end":{"line":143,"column":4,"offset":3981}}},"children":"const DataFetchingComponent = () => {\n  // ...기존 코드...\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const paginatedData = data.slice(startIndex, startIndex + itemsPerPage);\n\n  return (\n    <div>\n      <h1>Data fetched from API</h1>\n      <ul>\n        {paginatedData.map(item => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ul>\n      <button onClick={() => setCurrentPage(currentPage - 1)} disabled={currentPage === 1}>\n        Previous\n      </button>\n      <button onClick={() => setCurrentPage(currentPage + 1)} disabled={startIndex + itemsPerPage >= data.length}>\n        Next\n      </button>\n    </div>\n  );\n};\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이와 같이, React와 Axios를 사용하여 API 데이터를 가져오고 다양한 방식으로 이를 화면에 표시할 수 있습니다. 이러한 기술들을 결합하여 유연하고 반응성이 좋은 사용자 인터페이스를 구축할 수 있습니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"React에서 Axios를 사용한 REST API 호출과 데이터 처리: API 호출 후 받은 데이터를 화면에 표시하는 상세 프로세스.","toc":[{"tagName":"h1","title":"React에서 Axios를 사용한 REST API 호출과 데이터 처리","id":"a7ad743d"},{"tagName":"h2","title":"1. 프로젝트 설정","id":"80b6855c"},{"tagName":"h2","title":"2. API 호출 설정","id":"e5a8c563"},{"tagName":"h2","title":"3. 데이터 로딩 및 오류 처리","id":"667f7ee7"},{"tagName":"h2","title":"4. 데이터 표시","id":"05e96135"},{"tagName":"h2","title":"5. 추가적인 기능","id":"4e8f9f5f"},{"tagName":"h3","title":"필터링 예시","id":"6b1e0193"},{"tagName":"h3","title":"페이지 네이션 예시","id":"7710c300"}],"language":"kr"}]}]]}]]
8:null
