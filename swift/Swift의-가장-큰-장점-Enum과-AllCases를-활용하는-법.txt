1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift%EC%9D%98-%EA%B0%80%EC%9E%A5-%ED%81%B0-%EC%9E%A5%EC%A0%90-Enum%EA%B3%BC-AllCases%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EB%8A%94-%EB%B2%95","d"],{"children":["__PAGE__?{\"slug\":\"Swift의-가장-큰-장점-Enum과-AllCases를-활용하는-법\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift%EC%9D%98-%EA%B0%80%EC%9E%A5-%ED%81%B0-%EC%9E%A5%EC%A0%90-Enum%EA%B3%BC-AllCases%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EB%8A%94-%EB%B2%95","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift의-가장-큰-장점-Enum과-AllCases를-활용하는-법\"}"},"styles":[]}],"segment":["slug","Swift%EC%9D%98-%EA%B0%80%EC%9E%A5-%ED%81%B0-%EC%9E%A5%EC%A0%90-Enum%EA%B3%BC-AllCases%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EB%8A%94-%EB%B2%95","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift 언어의 가장 큰 장점, Enum과 AllCases를 활용하는 법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift의 열거형(Enum)과 AllCases 프로토콜을 활용하여 코드를 더 간결하고 안전하게 만드는 방법을 소개합니다. AllCases를 통해 열거형의 모든 케이스를 쉽게 다루는 방법을 설명합니다."}],["$","meta","3",{"name":"keywords","content":"swift,enum"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift%EC%9D%98-%EA%B0%80%EC%9E%A5-%ED%81%B0-%EC%9E%A5%EC%A0%90-Enum%EA%B3%BC-AllCases%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EB%8A%94-%EB%B2%95"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift 언어의 가장 큰 장점, Enum과 AllCases를 활용하는 법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift 언어의 가장 큰 장점, Enum과 AllCases를 활용하는 법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift의 열거형(Enum)과 AllCases 프로토콜을 활용하여 코드를 더 간결하고 안전하게 만드는 방법을 소개합니다. AllCases를 통해 열거형의 모든 케이스를 쉽게 다루는 방법을 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift%EC%9D%98-%EA%B0%80%EC%9E%A5-%ED%81%B0-%EC%9E%A5%EC%A0%90-Enum%EA%B3%BC-AllCases%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EB%8A%94-%EB%B2%95"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift 언어의 가장 큰 장점, Enum과 AllCases를 활용하는 법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift의 열거형(Enum)과 AllCases 프로토콜을 활용하여 코드를 더 간결하고 안전하게 만드는 방법을 소개합니다. AllCases를 통해 열거형의 모든 케이스를 쉽게 다루는 방법을 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBasic.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift 언어의 가장 큰 장점, Enum과 AllCases를 활용하는 법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift 언어의 가장 큰 장점, Enum과 AllCases를 활용하는 법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-05-31"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"a83731d5","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"본문:"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift는 강력하고 직관적인 열거형(Enum) 기능을 제공하여, 코드의 가독성을 높이고 안전하게 값을 다룰 수 있습니다. 특히, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AllCases","position":{"start":{"line":4,"column":74,"offset":81},"end":{"line":4,"column":84,"offset":91}}}],"position":{"start":{"line":4,"column":74,"offset":81},"end":{"line":4,"column":84,"offset":91}}},"children":"AllCases"}}]," 프로토콜은 열거형의 모든 케이스를 손쉽게 다룰 수 있도록 도와줍니다. 이번 글에서는 Swift의 열거형과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AllCases","position":{"start":{"line":4,"column":144,"offset":151},"end":{"line":4,"column":154,"offset":161}}}],"position":{"start":{"line":4,"column":144,"offset":151},"end":{"line":4,"column":154,"offset":161}}},"children":"AllCases"}}]," 프로토콜을 활용하는 방법을 상세히 살펴보겠습니다."]}],"\n",["$","h2",null,{"id":"8f29422a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"1. Enum과 AllCases란 무엇인가?"}],"\n",["$","h3",null,{"id":"0f003b12","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1.1 Enum의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"열거형(Enum)은 관련된 값을 그룹화하여 코드의 가독성을 높이고 타입 안정성을 보장하는 기능입니다. 예를 들어, 요일을 나타내는 열거형은 다음과 같이 정의할 수 있습니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"enum Weekday {\n    case monday, tuesday, wednesday, thursday, friday, saturday, sunday\n}\n"}],"position":{"start":{"line":12,"column":1,"offset":339},"end":{"line":16,"column":4,"offset":440}}},"children":"enum Weekday {\n    case monday, tuesday, wednesday, thursday, friday, saturday, sunday\n}\n"}}]}],"\n",["$","h3",null,{"id":"687dd7ea","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1.2 AllCases 프로토콜"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AllCases","position":{"start":{"line":20,"column":1,"offset":465},"end":{"line":20,"column":11,"offset":475}}}],"position":{"start":{"line":20,"column":1,"offset":465},"end":{"line":20,"column":11,"offset":475}}},"children":"AllCases"}}]," 프로토콜은 열거형이 자동으로 모든 케이스를 배열 형태로 제공할 수 있게 해줍니다. 이를 통해 열거형의 모든 케이스를 쉽게 순회하거나 접근할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AllCases","position":{"start":{"line":20,"column":98,"offset":562},"end":{"line":20,"column":108,"offset":572}}}],"position":{"start":{"line":20,"column":98,"offset":562},"end":{"line":20,"column":108,"offset":572}}},"children":"AllCases"}}]," 프로토콜을 채택하려면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CaseIterable","position":{"start":{"line":20,"column":121,"offset":585},"end":{"line":20,"column":135,"offset":599}}}],"position":{"start":{"line":20,"column":121,"offset":585},"end":{"line":20,"column":135,"offset":599}}},"children":"CaseIterable"}}],"을 사용하면 됩니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"enum Weekday: CaseIterable {\n    case monday, tuesday, wednesday, thursday, friday, saturday, sunday\n}\n"}],"position":{"start":{"line":22,"column":1,"offset":612},"end":{"line":26,"column":4,"offset":727}}},"children":"enum Weekday: CaseIterable {\n    case monday, tuesday, wednesday, thursday, friday, saturday, sunday\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Weekday","position":{"start":{"line":28,"column":8,"offset":736},"end":{"line":28,"column":17,"offset":745}}}],"position":{"start":{"line":28,"column":8,"offset":736},"end":{"line":28,"column":17,"offset":745}}},"children":"Weekday"}}]," 열거형은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CaseIterable","position":{"start":{"line":28,"column":23,"offset":751},"end":{"line":28,"column":37,"offset":765}}}],"position":{"start":{"line":28,"column":23,"offset":751},"end":{"line":28,"column":37,"offset":765}}},"children":"CaseIterable"}}],"을 채택하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"allCases","position":{"start":{"line":28,"column":44,"offset":772},"end":{"line":28,"column":54,"offset":782}}}],"position":{"start":{"line":28,"column":44,"offset":772},"end":{"line":28,"column":54,"offset":782}}},"children":"allCases"}}]," 배열을 자동으로 제공합니다."]}],"\n",["$","h2",null,{"id":"3bfaa1a4","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"2. AllCases의 활용 사례"}],"\n",["$","h3",null,{"id":"3b5fa5da","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2.1 모든 케이스 순회"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AllCases","position":{"start":{"line":34,"column":1,"offset":842},"end":{"line":34,"column":11,"offset":852}}}],"position":{"start":{"line":34,"column":1,"offset":842},"end":{"line":34,"column":11,"offset":852}}},"children":"AllCases"}}],"를 사용하면 열거형의 모든 케이스를 순회할 수 있습니다. 이는 특정 작업을 열거형의 모든 값에 대해 반복적으로 수행해야 할 때 유용합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"for day in Weekday.allCases {\n    print(day)\n}\n"}],"position":{"start":{"line":36,"column":1,"offset":931},"end":{"line":40,"column":4,"offset":990}}},"children":"for day in Weekday.allCases {\n    print(day)\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Weekday","position":{"start":{"line":42,"column":7,"offset":998},"end":{"line":42,"column":16,"offset":1007}}}],"position":{"start":{"line":42,"column":7,"offset":998},"end":{"line":42,"column":16,"offset":1007}}},"children":"Weekday"}}],"의 모든 케이스를 순회하며 출력합니다."]}],"\n",["$","h3",null,{"id":"02687b7f","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2.2 케이스의 개수 확인"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["열거형의 모든 케이스의 개수를 확인하고 싶을 때도 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AllCases","position":{"start":{"line":46,"column":29,"offset":1078},"end":{"line":46,"column":39,"offset":1088}}}],"position":{"start":{"line":46,"column":29,"offset":1078},"end":{"line":46,"column":39,"offset":1088}}},"children":"AllCases"}}],"가 유용합니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"print(\"총 요일의 수는 \\(Weekday.allCases.count)입니다.\")\n"}],"position":{"start":{"line":48,"column":1,"offset":1098},"end":{"line":50,"column":4,"offset":1158}}},"children":"print(\"총 요일의 수는 \\(Weekday.allCases.count)입니다.\")\n"}}]}],"\n",["$","h3",null,{"id":"7fdbdca0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2.3 스위프트UI와의 통합"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AllCases","position":{"start":{"line":54,"column":1,"offset":1181},"end":{"line":54,"column":11,"offset":1191}}}],"position":{"start":{"line":54,"column":1,"offset":1181},"end":{"line":54,"column":11,"offset":1191}}},"children":"AllCases"}}],"는 SwiftUI와의 통합에서도 유용하게 사용됩니다. 예를 들어, SwiftUI의 Picker에서 열거형의 모든 케이스를 선택할 수 있게 할 수 있습니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    @State private var selectedDay: Weekday = .monday\n\n    var body: some View {\n        Picker(\"Select a day\", selection: $selectedDay) {\n            ForEach(Weekday.allCases, id: \\.self) { day in\n                Text(day.capitalized).tag(day)\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":56,"column":1,"offset":1279},"end":{"line":68,"column":4,"offset":1595}}},"children":"struct ContentView: View {\n    @State private var selectedDay: Weekday = .monday\n\n    var body: some View {\n        Picker(\"Select a day\", selection: $selectedDay) {\n            ForEach(Weekday.allCases, id: \\.self) { day in\n                Text(day.capitalized).tag(day)\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위 코드는 SwiftUI의 Picker를 사용하여 요일을 선택할 수 있도록 합니다."}],"\n",["$","h2",null,{"id":"2e25df81","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"3. 실전 예제: 네트워크 요청 관리"}],"\n",["$","h3",null,{"id":"234a7108","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3.1 API 요청 타입 정의"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다양한 API 요청을 관리하기 위해 열거형을 사용할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AllCases","position":{"start":{"line":76,"column":38,"offset":1729},"end":{"line":76,"column":48,"offset":1739}}}],"position":{"start":{"line":76,"column":38,"offset":1729},"end":{"line":76,"column":48,"offset":1739}}},"children":"AllCases"}}],"를 사용하면 가능한 모든 요청 타입을 쉽게 관리할 수 있습니다."]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"enum APIRequest: String, CaseIterable {\n    case getUser = \"/user\"\n    case getPosts = \"/posts\"\n    case getComments = \"/comments\"\n}\n"}],"position":{"start":{"line":78,"column":1,"offset":1776},"end":{"line":84,"column":4,"offset":1921}}},"children":"enum APIRequest: String, CaseIterable {\n    case getUser = \"/user\"\n    case getPosts = \"/posts\"\n    case getComments = \"/comments\"\n}\n"}}]}],"\n",["$","h3",null,{"id":"47ab0b97","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3.2 네트워크 요청 함수"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"모든 요청 타입을 순회하며 네트워크 요청을 보내는 함수를 작성할 수 있습니다."}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func performAllRequests() {\n    for request in APIRequest.allCases {\n        print(\"Performing request to \\(request.rawValue)\")\n        // 네트워크 요청 코드 추가\n    }\n}\n"}],"position":{"start":{"line":90,"column":1,"offset":1988},"end":{"line":97,"column":4,"offset":2161}}},"children":"func performAllRequests() {\n    for request in APIRequest.allCases {\n        print(\"Performing request to \\(request.rawValue)\")\n        // 네트워크 요청 코드 추가\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"1a0cefc9","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"4. AllCases 활용 시 주의사항"}],"\n",["$","h3",null,{"id":"5261371a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"4.1 열거형에 추가적인 값 할당"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["열거형 케이스에 추가적인 값을 할당하려면 열거형의 원시 값(Raw Value)을 활용하거나 연관 값을 사용할 수 있습니다. 이 경우에도 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AllCases","position":{"start":{"line":103,"column":77,"offset":2289},"end":{"line":103,"column":87,"offset":2299}}}],"position":{"start":{"line":103,"column":77,"offset":2289},"end":{"line":103,"column":87,"offset":2299}}},"children":"AllCases"}}],"는 정상적으로 작동합니다."]}],"\n",["$","pre","pre-7",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"enum Beverage: String, CaseIterable {\n    case coffee = \"Coffee\"\n    case tea = \"Tea\"\n    case juice = \"Juice\"\n    case water = \"Water\"\n    case soda = \"Soda\"\n}\n\nfor beverage in Beverage.allCases {\n    print(beverage.rawValue)\n}\n"}],"position":{"start":{"line":105,"column":1,"offset":2315},"end":{"line":117,"column":4,"offset":2556}}},"children":"enum Beverage: String, CaseIterable {\n    case coffee = \"Coffee\"\n    case tea = \"Tea\"\n    case juice = \"Juice\"\n    case water = \"Water\"\n    case soda = \"Soda\"\n}\n\nfor beverage in Beverage.allCases {\n    print(beverage.rawValue)\n}\n"}}]}],"\n",["$","h3",null,{"id":"a935d98a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"4.2 연관 값이 있는 열거형"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["연관 값이 있는 열거형은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AllCases","position":{"start":{"line":121,"column":15,"offset":2594},"end":{"line":121,"column":25,"offset":2604}}}],"position":{"start":{"line":121,"column":15,"offset":2594},"end":{"line":121,"column":25,"offset":2604}}},"children":"AllCases"}}],"를 사용할 수 없습니다. 이 경우, 수동으로 모든 케이스를 배열로 정의해야 합니다."]}],"\n",["$","pre","pre-8",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"enum HTTPMethod: String, CaseIterable {\n    case get = \"GET\"\n    case post = \"POST\"\n    case put = \"PUT\"\n    case delete = \"DELETE\"\n}\n\nfor method in HTTPMethod.allCases {\n    print(method.rawValue)\n}\n"}],"position":{"start":{"line":123,"column":1,"offset":2652},"end":{"line":134,"column":4,"offset":2864}}},"children":"enum HTTPMethod: String, CaseIterable {\n    case get = \"GET\"\n    case post = \"POST\"\n    case put = \"PUT\"\n    case delete = \"DELETE\"\n}\n\nfor method in HTTPMethod.allCases {\n    print(method.rawValue)\n}\n"}}]}],"\n",["$","h2",null,{"id":"65a842f7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"5. 결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift의 열거형과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AllCases","position":{"start":{"line":138,"column":13,"offset":2888},"end":{"line":138,"column":23,"offset":2898}}}],"position":{"start":{"line":138,"column":13,"offset":2888},"end":{"line":138,"column":23,"offset":2898}}},"children":"AllCases"}}]," 프로토콜을 사용하면 코드를 더욱 간결하고 안전하게 작성할 수 있습니다. 열거형을 통해 관련된 값을 그룹화하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AllCases","position":{"start":{"line":138,"column":86,"offset":2961},"end":{"line":138,"column":96,"offset":2971}}}],"position":{"start":{"line":138,"column":86,"offset":2961},"end":{"line":138,"column":96,"offset":2971}}},"children":"AllCases"}}],"를 통해 이러한 값을 손쉽게 순회하거나 관리할 수 있습니다. 이를 통해 코드의 가독성을 높이고, 유지보수를 쉽게 할 수 있습니다. Swift 개발자라면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AllCases","position":{"start":{"line":138,"column":181,"offset":3056},"end":{"line":138,"column":191,"offset":3066}}}],"position":{"start":{"line":138,"column":181,"offset":3056},"end":{"line":138,"column":191,"offset":3066}}},"children":"AllCases"}}]," 프로토콜을 적극적으로 활용하여 효율적인 코드를 작성해 보세요. 이 글이 여러분의 고민을 해결하고, Swift Enum을 더욱 잘 활용할 수 있는 계기가 되기를 바랍니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift 언어의 가장 큰 장점, Enum과 AllCases를 활용하는 법","toc":[{"tagName":"h1","title":"본문:","id":"a83731d5"},{"tagName":"h2","title":"1. Enum과 AllCases란 무엇인가?","id":"8f29422a"},{"tagName":"h3","title":"1.1 Enum의 기본 개념","id":"0f003b12"},{"tagName":"h3","title":"1.2 AllCases 프로토콜","id":"687dd7ea"},{"tagName":"h2","title":"2. AllCases의 활용 사례","id":"3bfaa1a4"},{"tagName":"h3","title":"2.1 모든 케이스 순회","id":"3b5fa5da"},{"tagName":"h3","title":"2.2 케이스의 개수 확인","id":"02687b7f"},{"tagName":"h3","title":"2.3 스위프트UI와의 통합","id":"7fdbdca0"},{"tagName":"h2","title":"3. 실전 예제: 네트워크 요청 관리","id":"2e25df81"},{"tagName":"h3","title":"3.1 API 요청 타입 정의","id":"234a7108"},{"tagName":"h3","title":"3.2 네트워크 요청 함수","id":"47ab0b97"},{"tagName":"h2","title":"4. AllCases 활용 시 주의사항","id":"1a0cefc9"},{"tagName":"h3","title":"4.1 열거형에 추가적인 값 할당","id":"5261371a"},{"tagName":"h3","title":"4.2 연관 값이 있는 열거형","id":"a935d98a"},{"tagName":"h2","title":"5. 결론","id":"65a842f7"}],"language":"kr"}]}]]}]]
8:null
