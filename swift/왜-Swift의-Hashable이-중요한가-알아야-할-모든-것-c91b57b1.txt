1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","%EC%99%9C-Swift%EC%9D%98-Hashable%EC%9D%B4-%EC%A4%91%EC%9A%94%ED%95%9C%EA%B0%80-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0-%EB%AA%A8%EB%93%A0-%EA%B2%83-c91b57b1","d"],{"children":["__PAGE__?{\"slug\":\"왜-Swift의-Hashable이-중요한가-알아야-할-모든-것-c91b57b1\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","%EC%99%9C-Swift%EC%9D%98-Hashable%EC%9D%B4-%EC%A4%91%EC%9A%94%ED%95%9C%EA%B0%80-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0-%EB%AA%A8%EB%93%A0-%EA%B2%83-c91b57b1","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"왜-Swift의-Hashable이-중요한가-알아야-할-모든-것-c91b57b1\"}"},"styles":[]}],"segment":["slug","%EC%99%9C-Swift%EC%9D%98-Hashable%EC%9D%B4-%EC%A4%91%EC%9A%94%ED%95%9C%EA%B0%80-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0-%EB%AA%A8%EB%93%A0-%EA%B2%83-c91b57b1","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"왜 Swift의 Hashable이 중요한가? 알아야 할 모든 것 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift 프로그래밍 언어에서 중요한 프로토콜 중 하나는 Hashable입니다. Hashable 프로토콜의 개념과 의미, 그리고 이것이 왜 중요한지에 대해 깊이 탐구합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,Hashable,프로토콜,프로그래밍"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/%EC%99%9C-Swift%EC%9D%98-Hashable%EC%9D%B4-%EC%A4%91%EC%9A%94%ED%95%9C%EA%B0%80-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0-%EB%AA%A8%EB%93%A0-%EA%B2%83-c91b57b1"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"왜 Swift의 Hashable이 중요한가? 알아야 할 모든 것 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"왜 Swift의 Hashable이 중요한가? 알아야 할 모든 것 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift 프로그래밍 언어에서 중요한 프로토콜 중 하나는 Hashable입니다. Hashable 프로토콜의 개념과 의미, 그리고 이것이 왜 중요한지에 대해 깊이 탐구합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/%EC%99%9C-Swift%EC%9D%98-Hashable%EC%9D%B4-%EC%A4%91%EC%9A%94%ED%95%9C%EA%B0%80-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0-%EB%AA%A8%EB%93%A0-%EA%B2%83-c91b57b1"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"왜 Swift의 Hashable이 중요한가? 알아야 할 모든 것 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift 프로그래밍 언어에서 중요한 프로토콜 중 하나는 Hashable입니다. Hashable 프로토콜의 개념과 의미, 그리고 이것이 왜 중요한지에 대해 깊이 탐구합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"왜 Swift의 Hashable이 중요한가? 알아야 할 모든 것"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"왜 Swift의 Hashable이 중요한가? 알아야 할 모든 것"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-11"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"6c45950f","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"왜 Swift의 Hashable이 중요한가? 알아야 할 모든 것"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift 프로그래밍 언어는 타입 안전성과 성능을 중시하는 언어로, 다양한 프로토콜을 통해 강력한 타입 시스템을 제공하고 있습니다. 그 중에서도 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":4,"column":82,"offset":121},"end":{"line":4,"column":92,"offset":131}}}],"position":{"start":{"line":4,"column":82,"offset":121},"end":{"line":4,"column":92,"offset":131}}},"children":"Hashable"}}],"은 매우 중요한 프로토콜로, Swift 컬렉션 타입인 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Dictionary","position":{"start":{"line":4,"column":122,"offset":161},"end":{"line":4,"column":134,"offset":173}}}],"position":{"start":{"line":4,"column":122,"offset":161},"end":{"line":4,"column":134,"offset":173}}},"children":"Dictionary"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Set","position":{"start":{"line":4,"column":136,"offset":175},"end":{"line":4,"column":141,"offset":180}}}],"position":{"start":{"line":4,"column":136,"offset":175},"end":{"line":4,"column":141,"offset":180}}},"children":"Set"}}],"에서 핵심적인 역할을 합니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":4,"column":165,"offset":204},"end":{"line":4,"column":175,"offset":214}}}],"position":{"start":{"line":4,"column":165,"offset":204},"end":{"line":4,"column":175,"offset":214}}},"children":"Hashable"}}]," 프로토콜의 정의와 사용법, 그리고 이 프로토콜이 왜 중요한지에 대해 다루겠습니다."]}],"\n",["$","h2",null,{"id":"4fc436dc","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Hashable 프로토콜의 정의와 사용법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":8,"column":1,"offset":289},"end":{"line":8,"column":11,"offset":299}}}],"position":{"start":{"line":8,"column":1,"offset":289},"end":{"line":8,"column":11,"offset":299}}},"children":"Hashable"}}]," 프로토콜은 값이 해시 가능한지를 나타내는 타입에 해당합니다. 해시 가능하다는 것은 주어진 값을 해시 함수에 통과시켰을 때 결과적으로 고유한 숫자(해시 값)가 나온다는 의미입니다. Swift 표준 라이브러리에서는 다음과 같이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":8,"column":137,"offset":425},"end":{"line":8,"column":147,"offset":435}}}],"position":{"start":{"line":8,"column":137,"offset":425},"end":{"line":8,"column":147,"offset":435}}},"children":"Hashable"}}]," 프로토콜을 정의하고 있습니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"protocol Hashable : Equatable {\n    func hash(into hasher: inout Hasher)\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":454},"end":{"line":14,"column":4,"offset":541}}},"children":"protocol Hashable : Equatable {\n    func hash(into hasher: inout Hasher)\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 프로토콜은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Equatable","position":{"start":{"line":16,"column":9,"offset":551},"end":{"line":16,"column":20,"offset":562}}}],"position":{"start":{"line":16,"column":9,"offset":551},"end":{"line":16,"column":20,"offset":562}}},"children":"Equatable"}}]," 프로토콜을 상속하므로, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":16,"column":34,"offset":576},"end":{"line":16,"column":44,"offset":586}}}],"position":{"start":{"line":16,"column":34,"offset":576},"end":{"line":16,"column":44,"offset":586}}},"children":"Hashable"}}],"을 준수하려면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Equatable","position":{"start":{"line":16,"column":52,"offset":594},"end":{"line":16,"column":63,"offset":605}}}],"position":{"start":{"line":16,"column":52,"offset":594},"end":{"line":16,"column":63,"offset":605}}},"children":"Equatable"}}]," 또한 준수해야 합니다. 이는 동일한 두 값이 동일한 해시 값을 가져야 함을 보장합니다."]}],"\n",["$","h3",null,{"id":"7428b07a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"기본 사용법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":20,"column":1,"offset":668},"end":{"line":20,"column":11,"offset":678}}}],"position":{"start":{"line":20,"column":1,"offset":668},"end":{"line":20,"column":11,"offset":678}}},"children":"Hashable"}}]," 프로토콜을 준수하려면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"hash(into:)","position":{"start":{"line":20,"column":24,"offset":691},"end":{"line":20,"column":37,"offset":704}}}],"position":{"start":{"line":20,"column":24,"offset":691},"end":{"line":20,"column":37,"offset":704}}},"children":"hash(into:)"}}]," 메서드를 구현해야 합니다. 이 메서드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hasher","position":{"start":{"line":20,"column":60,"offset":727},"end":{"line":20,"column":68,"offset":735}}}],"position":{"start":{"line":20,"column":60,"offset":727},"end":{"line":20,"column":68,"offset":735}}},"children":"Hasher"}}]," 타입의 인스턴스를 매개변수로 받으며, 이 인스턴스에 값을 추가하여 해시값을 생성합니다. 예를 들어, 사용자 정의 타입을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":20,"column":136,"offset":803},"end":{"line":20,"column":146,"offset":813}}}],"position":{"start":{"line":20,"column":136,"offset":803},"end":{"line":20,"column":146,"offset":813}}},"children":"Hashable"}}],"로 만들기 위해서는 다음과 같은 코드를 작성할 수 있습니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct Person: Hashable {\n    var name: String\n    var age: Int\n\n    func hash(into hasher: inout Hasher) {\n        hasher.combine(name)\n        hasher.combine(age)\n    }\n\n    static func ==(lhs: Person, rhs: Person) -> Bool {\n        return lhs.name == rhs.name && lhs.age == rhs.age\n    }\n}\n"}],"position":{"start":{"line":22,"column":1,"offset":848},"end":{"line":36,"column":4,"offset":1153}}},"children":"struct Person: Hashable {\n    var name: String\n    var age: Int\n\n    func hash(into hasher: inout Hasher) {\n        hasher.combine(name)\n        hasher.combine(age)\n    }\n\n    static func ==(lhs: Person, rhs: Person) -> Bool {\n        return lhs.name == rhs.name && lhs.age == rhs.age\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Person","position":{"start":{"line":38,"column":9,"offset":1163},"end":{"line":38,"column":17,"offset":1171}}}],"position":{"start":{"line":38,"column":9,"offset":1163},"end":{"line":38,"column":17,"offset":1171}}},"children":"Person"}}]," 구조체가 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name","position":{"start":{"line":38,"column":23,"offset":1177},"end":{"line":38,"column":29,"offset":1183}}}],"position":{"start":{"line":38,"column":23,"offset":1177},"end":{"line":38,"column":29,"offset":1183}}},"children":"name"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"age","position":{"start":{"line":38,"column":31,"offset":1185},"end":{"line":38,"column":36,"offset":1190}}}],"position":{"start":{"line":38,"column":31,"offset":1185},"end":{"line":38,"column":36,"offset":1190}}},"children":"age"}}]," 프로퍼티를 가지며, 이 두 프로퍼티를 해시 함수로 결합하여 고유한 해시 값을 생성합니다."]}],"\n",["$","h3",null,{"id":"a832a955","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"해시 함수의 중요성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["해시 함수는 주어진 입력 값을 고정된 크기의 고유한 해시 값으로 변환합니다. 이 해시 값은 Swift의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Set","position":{"start":{"line":42,"column":59,"offset":1316},"end":{"line":42,"column":64,"offset":1321}}}],"position":{"start":{"line":42,"column":59,"offset":1316},"end":{"line":42,"column":64,"offset":1321}}},"children":"Set"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Dictionary","position":{"start":{"line":42,"column":66,"offset":1323},"end":{"line":42,"column":78,"offset":1335}}}],"position":{"start":{"line":42,"column":66,"offset":1323},"end":{"line":42,"column":78,"offset":1335}}},"children":"Dictionary"}}],"와 같은 컬렉션 타입에서 요소를 빠르게 검색하고 삽입할 수 있게 해줍니다. 예를 들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Dictionary","position":{"start":{"line":42,"column":127,"offset":1384},"end":{"line":42,"column":139,"offset":1396}}}],"position":{"start":{"line":42,"column":127,"offset":1384},"end":{"line":42,"column":139,"offset":1396}}},"children":"Dictionary"}}],"는 키-값 쌍을 저장하며, 키가 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":42,"column":157,"offset":1414},"end":{"line":42,"column":167,"offset":1424}}}],"position":{"start":{"line":42,"column":157,"offset":1414},"end":{"line":42,"column":167,"offset":1424}}},"children":"Hashable"}}],"을 준수해야합니다. 이는 해시 값이 동일한 경우 키가 동일함을 보장하기 때문에, 키를 빠르게 비교하고 검색할 수 있게 해줍니다."]}],"\n",["$","h2",null,{"id":"52faee26","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Hashable이 중요한 이유"}],"\n",["$","h3",null,{"id":"13645dff","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"최적화된 데이터 구조 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":48,"column":9,"offset":1546},"end":{"line":48,"column":19,"offset":1556}}}],"position":{"start":{"line":48,"column":9,"offset":1546},"end":{"line":48,"column":19,"offset":1556}}},"children":"Hashable"}}]," 프로토콜이 중요한 주된 이유는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Set","position":{"start":{"line":48,"column":37,"offset":1574},"end":{"line":48,"column":42,"offset":1579}}}],"position":{"start":{"line":48,"column":37,"offset":1574},"end":{"line":48,"column":42,"offset":1579}}},"children":"Set"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Dictionary","position":{"start":{"line":48,"column":44,"offset":1581},"end":{"line":48,"column":56,"offset":1593}}}],"position":{"start":{"line":48,"column":44,"offset":1581},"end":{"line":48,"column":56,"offset":1593}}},"children":"Dictionary"}}],"와 같은 데이터 구조에서 사용되기 때문입니다. 이러한 데이터 구조는 해시 함수를 사용하여 요소를 저장하고 검색하는 데 있어서 탁월한 성능을 발휘합니다. 예를 들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Set","position":{"start":{"line":48,"column":148,"offset":1685},"end":{"line":48,"column":153,"offset":1690}}}],"position":{"start":{"line":48,"column":148,"offset":1685},"end":{"line":48,"column":153,"offset":1690}}},"children":"Set"}}],"은 고유한 요소만 저장하며, 이는 중복을 제거하고 빠르게 요소를 검색할 수 있도록 해줍니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"var names: Set<String> = [\"Alice\", \"Bob\", \"Charlie\"]\nnames.insert(\"Alice\") // 이미 존재하는 요소이므로 추가되지 않습니다.\n"}],"position":{"start":{"line":50,"column":1,"offset":1743},"end":{"line":53,"column":4,"offset":1858}}},"children":"var names: Set<String> = [\"Alice\", \"Bob\", \"Charlie\"]\nnames.insert(\"Alice\") // 이미 존재하는 요소이므로 추가되지 않습니다.\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Set","position":{"start":{"line":55,"column":9,"offset":1868},"end":{"line":55,"column":14,"offset":1873}}}],"position":{"start":{"line":55,"column":9,"offset":1868},"end":{"line":55,"column":14,"offset":1873}}},"children":"Set"}}],"은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O(1)","position":{"start":{"line":55,"column":16,"offset":1875},"end":{"line":55,"column":22,"offset":1881}}}],"position":{"start":{"line":55,"column":16,"offset":1875},"end":{"line":55,"column":22,"offset":1881}}},"children":"O(1)"}}],"의 시간 복잡도로 요소를 검색할 수 있습니다. 이는 리스트 형태의 컬렉션과 비교했을 때 큰 이점을 제공합니다."]}],"\n",["$","h3",null,{"id":"8ab6d4c8","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"고유한 식별자 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":59,"column":1,"offset":1960},"end":{"line":59,"column":11,"offset":1970}}}],"position":{"start":{"line":59,"column":1,"offset":1960},"end":{"line":59,"column":11,"offset":1970}}},"children":"Hashable"}}]," 프로토콜은 고유한 식별자를 구현할 때 유용합니다. 예를 들어, 데이터베이스의 레코드나 네트워크 요청에서 고유한 식별자를 비교하고 추적할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":59,"column":90,"offset":2049},"end":{"line":59,"column":100,"offset":2059}}}],"position":{"start":{"line":59,"column":90,"offset":2049},"end":{"line":59,"column":100,"offset":2059}}},"children":"Hashable"}}],"을 사용하면 효율적입니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct Request: Hashable {\n    var id: UUID\n    var url: String\n\n    func hash(into hasher: inout Hasher) {\n        hasher.combine(id)\n    }\n\n    static func ==(lhs: Request, rhs: Request) -> Bool {\n        return lhs.id == rhs.id\n    }\n}\n"}],"position":{"start":{"line":61,"column":1,"offset":2075},"end":{"line":74,"column":4,"offset":2326}}},"children":"struct Request: Hashable {\n    var id: UUID\n    var url: String\n\n    func hash(into hasher: inout Hasher) {\n        hasher.combine(id)\n    }\n\n    static func ==(lhs: Request, rhs: Request) -> Bool {\n        return lhs.id == rhs.id\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Request","position":{"start":{"line":76,"column":9,"offset":2336},"end":{"line":76,"column":18,"offset":2345}}}],"position":{"start":{"line":76,"column":9,"offset":2336},"end":{"line":76,"column":18,"offset":2345}}},"children":"Request"}}]," 구조체의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id","position":{"start":{"line":76,"column":24,"offset":2351},"end":{"line":76,"column":28,"offset":2355}}}],"position":{"start":{"line":76,"column":24,"offset":2351},"end":{"line":76,"column":28,"offset":2355}}},"children":"id"}}]," 필드가 고유 식별자로 사용되며, 이를 통해 해시 값을 생성합니다. 이는 동일한 아이디를 가진 요청을 빠르게 검색하고 비교할 수 있게 해줍니다."]}],"\n",["$","h2",null,{"id":"b69be924","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Equatable 프로토콜과의 관계"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Equatable","position":{"start":{"line":80,"column":1,"offset":2461},"end":{"line":80,"column":12,"offset":2472}}}],"position":{"start":{"line":80,"column":1,"offset":2461},"end":{"line":80,"column":12,"offset":2472}}},"children":"Equatable"}}]," 프로토콜은 두 인스턴스가 동일한지 비교할 수 있게 해주며, 이는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":80,"column":49,"offset":2509},"end":{"line":80,"column":59,"offset":2519}}}],"position":{"start":{"line":80,"column":49,"offset":2509},"end":{"line":80,"column":59,"offset":2519}}},"children":"Hashable"}}]," 프로토콜의 중요한 부분입니다. 두 값이 동일하다면 동일한 해시 값을 가져야 하므로, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Equatable","position":{"start":{"line":80,"column":107,"offset":2567},"end":{"line":80,"column":118,"offset":2578}}}],"position":{"start":{"line":80,"column":107,"offset":2567},"end":{"line":80,"column":118,"offset":2578}}},"children":"Equatable"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":80,"column":120,"offset":2580},"end":{"line":80,"column":130,"offset":2590}}}],"position":{"start":{"line":80,"column":120,"offset":2580},"end":{"line":80,"column":130,"offset":2590}}},"children":"Hashable"}}],"의 구현은 항상 일관되게 설계되어야 합니다. 예를 들어, 아래처럼 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Equatable","position":{"start":{"line":80,"column":167,"offset":2627},"end":{"line":80,"column":178,"offset":2638}}}],"position":{"start":{"line":80,"column":167,"offset":2627},"end":{"line":80,"column":178,"offset":2638}}},"children":"Equatable"}}],"을 잘못 구현할 경우 해시 값의 일관성이 깨질 수 있습니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct Point: Hashable {\n    var x: Int\n    var y: Int\n\n    func hash(into hasher: inout Hasher) {\n        hasher.combine(x)\n        hasher.combine(y)\n    }\n\n    static func ==(lhs: Point, rhs: Point) -> Bool {\n        return lhs.x == rhs.x && lhs.y != rhs.y // 잘못된 구현\n    }\n}\n"}],"position":{"start":{"line":82,"column":1,"offset":2673},"end":{"line":96,"column":4,"offset":2962}}},"children":"struct Point: Hashable {\n    var x: Int\n    var y: Int\n\n    func hash(into hasher: inout Hasher) {\n        hasher.combine(x)\n        hasher.combine(y)\n    }\n\n    static func ==(lhs: Point, rhs: Point) -> Bool {\n        return lhs.x == rhs.x && lhs.y != rhs.y // 잘못된 구현\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 경우 두 값이 동일할 때 해시 값이 다를 수 있으며, 이는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Dictionary","position":{"start":{"line":98,"column":36,"offset":2999},"end":{"line":98,"column":48,"offset":3011}}}],"position":{"start":{"line":98,"column":36,"offset":2999},"end":{"line":98,"column":48,"offset":3011}}},"children":"Dictionary"}}],"나 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Set","position":{"start":{"line":98,"column":50,"offset":3013},"end":{"line":98,"column":55,"offset":3018}}}],"position":{"start":{"line":98,"column":50,"offset":3013},"end":{"line":98,"column":55,"offset":3018}}},"children":"Set"}}],"에서 의도치 않은 동작을 야기할 수 있습니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":102,"column":9,"offset":3060},"end":{"line":102,"column":19,"offset":3070}}}],"position":{"start":{"line":102,"column":9,"offset":3060},"end":{"line":102,"column":19,"offset":3070}}},"children":"Hashable"}}]," 프로토콜은 데이터 구조 최적화와 고유 식별자의 구현에 중요한 역할을 합니다. 이를 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Set","position":{"start":{"line":102,"column":69,"offset":3120},"end":{"line":102,"column":74,"offset":3125}}}],"position":{"start":{"line":102,"column":69,"offset":3120},"end":{"line":102,"column":74,"offset":3125}}},"children":"Set"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Dictionary","position":{"start":{"line":102,"column":76,"offset":3127},"end":{"line":102,"column":88,"offset":3139}}}],"position":{"start":{"line":102,"column":76,"offset":3127},"end":{"line":102,"column":88,"offset":3139}}},"children":"Dictionary"}}],"와 같은 컬렉션에서 빠른 검색과 삽입이 가능하며, 데이터의 고유성을 보장할 수 있습니다. 따라서, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Hashable","position":{"start":{"line":102,"column":143,"offset":3194},"end":{"line":102,"column":153,"offset":3204}}}],"position":{"start":{"line":102,"column":143,"offset":3194},"end":{"line":102,"column":153,"offset":3204}}},"children":"Hashable"}}]," 프로토콜의 정확한 구현과 사용은 Swift 프로그래머라면 반드시 숙지해야 할 부분입니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"왜 Swift의 Hashable이 중요한가? 알아야 할 모든 것","toc":[{"tagName":"h1","title":"왜 Swift의 Hashable이 중요한가? 알아야 할 모든 것","id":"6c45950f"},{"tagName":"h2","title":"Hashable 프로토콜의 정의와 사용법","id":"4fc436dc"},{"tagName":"h3","title":"기본 사용법","id":"7428b07a"},{"tagName":"h3","title":"해시 함수의 중요성","id":"a832a955"},{"tagName":"h2","title":"Hashable이 중요한 이유","id":"52faee26"},{"tagName":"h3","title":"최적화된 데이터 구조 사용","id":"13645dff"},{"tagName":"h3","title":"고유한 식별자 구현","id":"8ab6d4c8"},{"tagName":"h2","title":"Equatable 프로토콜과의 관계","id":"b69be924"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
