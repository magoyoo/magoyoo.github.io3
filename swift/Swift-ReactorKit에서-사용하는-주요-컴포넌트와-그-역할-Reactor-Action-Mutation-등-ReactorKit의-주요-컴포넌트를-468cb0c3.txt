1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-ReactorKit%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%A3%BC%EC%9A%94-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%99%80-%EA%B7%B8-%EC%97%AD%ED%95%A0-Reactor-Action-Mutation-%EB%93%B1-ReactorKit%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-468cb0c3","d"],{"children":["__PAGE__?{\"slug\":\"Swift-ReactorKit에서-사용하는-주요-컴포넌트와-그-역할-Reactor-Action-Mutation-등-ReactorKit의-주요-컴포넌트를-468cb0c3\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-ReactorKit%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%A3%BC%EC%9A%94-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%99%80-%EA%B7%B8-%EC%97%AD%ED%95%A0-Reactor-Action-Mutation-%EB%93%B1-ReactorKit%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-468cb0c3","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-ReactorKit에서-사용하는-주요-컴포넌트와-그-역할-Reactor-Action-Mutation-등-ReactorKit의-주요-컴포넌트를-468cb0c3\"}"},"styles":[]}],"segment":["slug","Swift-ReactorKit%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%A3%BC%EC%9A%94-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%99%80-%EA%B7%B8-%EC%97%AD%ED%95%A0-Reactor-Action-Mutation-%EB%93%B1-ReactorKit%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-468cb0c3","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"[Swift] ReactorKit에서 사용하는 주요 컴포넌트와 그 역할: Reactor, Action, Mutation 등 ReactorKit의 주요 컴포넌트를 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"ReactorKit는 Swift로 구현하는 애플리케이션에서 비즈니스 로직을 효과적으로 관리하기 위한 라이브러리입니다. 이 글에서는 ReactorKit의 주요 컴포넌트인 Reactor, Action, Mutation 등을 다루며 각각의 역할과 사용 방법을 설명합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,ReactorKit,Reactor,비즈니스 로직"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-ReactorKit%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%A3%BC%EC%9A%94-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%99%80-%EA%B7%B8-%EC%97%AD%ED%95%A0-Reactor-Action-Mutation-%EB%93%B1-ReactorKit%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-468cb0c3"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"[Swift] ReactorKit에서 사용하는 주요 컴포넌트와 그 역할: Reactor, Action, Mutation 등 ReactorKit의 주요 컴포넌트를 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"[Swift] ReactorKit에서 사용하는 주요 컴포넌트와 그 역할: Reactor, Action, Mutation 등 ReactorKit의 주요 컴포넌트를 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"ReactorKit는 Swift로 구현하는 애플리케이션에서 비즈니스 로직을 효과적으로 관리하기 위한 라이브러리입니다. 이 글에서는 ReactorKit의 주요 컴포넌트인 Reactor, Action, Mutation 등을 다루며 각각의 역할과 사용 방법을 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-ReactorKit%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%A3%BC%EC%9A%94-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%99%80-%EA%B7%B8-%EC%97%AD%ED%95%A0-Reactor-Action-Mutation-%EB%93%B1-ReactorKit%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-468cb0c3"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"[Swift] ReactorKit에서 사용하는 주요 컴포넌트와 그 역할: Reactor, Action, Mutation 등 ReactorKit의 주요 컴포넌트를 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"ReactorKit는 Swift로 구현하는 애플리케이션에서 비즈니스 로직을 효과적으로 관리하기 위한 라이브러리입니다. 이 글에서는 ReactorKit의 주요 컴포넌트인 Reactor, Action, Mutation 등을 다루며 각각의 역할과 사용 방법을 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
10:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
11:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T429,import ReactorKit
import RxSwift

class MyReactor: Reactor {
    enum Action {
        case doSomething
    }

    enum Mutation {
        case setLoading(Bool)
        case setResult(String)
    }

    struct State {
        var isLoading: Bool = false
        var result: String?
    }

    let initialState: State = State()

    func mutate(action: Action) -> Observable<Mutation> {
        switch action {
        case .doSomething:
            return Observable.concat([
                Observable.just(Mutation.setLoading(true)),
                // API call or some async task
                Observable.just(Mutation.setResult("Hello, ReactorKit")),
                Observable.just(Mutation.setLoading(false))
            ])
        }
    }

    func reduce(state: State, mutation: Mutation) -> State {
        var newState = state
        switch mutation {
        case .setLoading(let isLoading):
            newState.isLoading = isLoading
        case .setResult(let result):
            newState.result = result
        }
        return newState
    }
}
f:T429,import ReactorKit
import RxSwift

class MyReactor: Reactor {
    enum Action {
        case doSomething
    }

    enum Mutation {
        case setLoading(Bool)
        case setResult(String)
    }

    struct State {
        var isLoading: Bool = false
        var result: String?
    }

    let initialState: State = State()

    func mutate(action: Action) -> Observable<Mutation> {
        switch action {
        case .doSomething:
            return Observable.concat([
                Observable.just(Mutation.setLoading(true)),
                // API call or some async task
                Observable.just(Mutation.setResult("Hello, ReactorKit")),
                Observable.just(Mutation.setLoading(false))
            ])
        }
    }

    func reduce(state: State, mutation: Mutation) -> State {
        var newState = state
        switch mutation {
        case .setLoading(let isLoading):
            newState.isLoading = isLoading
        case .setResult(let result):
            newState.result = result
        }
        return newState
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"[Swift] ReactorKit에서 사용하는 주요 컴포넌트와 그 역할: Reactor, Action, Mutation 등 ReactorKit의 주요 컴포넌트를"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"[Swift] ReactorKit에서 사용하는 주요 컴포넌트와 그 역할: Reactor, Action, Mutation 등 ReactorKit의 주요 컴포넌트를"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-01"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"4aa56c0f","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift에서 ReactorKit 사용하는 법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"ReactorKit는 Swift 개발자들이 비즈니스 로직을 깔끔하고 직관적으로 관리할 수 있도록 돕는 라이브러리입니다. 이 글에서는 ReactorKit의 주요 컴포넌트인 Reactor, Action, Mutation에 대해 자세히 설명하고, 각각의 역할과 사용 방법을 다룹니다."}],"\n",["$","h2",null,{"id":"732e3207","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"ReactorKit의 개요"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["ReactorKit는 Model-View-ViewModel(MVVM) 패턴에 Reactor라는 개념을 추가하여, 상태(state)를 관리하고, 변화를 추적하며, 간단한 비즈니스 로직을 구현할 수 있게 해줍니다. ReactorKit는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Reactor","position":{"start":{"line":8,"column":131,"offset":336},"end":{"line":8,"column":140,"offset":345}}}],"position":{"start":{"line":8,"column":131,"offset":336},"end":{"line":8,"column":140,"offset":345}}},"children":"Reactor"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Action","position":{"start":{"line":8,"column":142,"offset":347},"end":{"line":8,"column":150,"offset":355}}}],"position":{"start":{"line":8,"column":142,"offset":347},"end":{"line":8,"column":150,"offset":355}}},"children":"Action"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Mutation","position":{"start":{"line":8,"column":152,"offset":357},"end":{"line":8,"column":162,"offset":367}}}],"position":{"start":{"line":8,"column":152,"offset":357},"end":{"line":8,"column":162,"offset":367}}},"children":"Mutation"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"State","position":{"start":{"line":8,"column":164,"offset":369},"end":{"line":8,"column":171,"offset":376}}}],"position":{"start":{"line":8,"column":164,"offset":369},"end":{"line":8,"column":171,"offset":376}}},"children":"State"}}],"라는 네 가지 주요 요소로 구성되어 있습니다."]}],"\n",["$","h2",null,{"id":"30fccb31","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Reactor"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Reactor","position":{"start":{"line":12,"column":1,"offset":415},"end":{"line":12,"column":10,"offset":424}}}],"position":{"start":{"line":12,"column":1,"offset":415},"end":{"line":12,"column":10,"offset":424}}},"children":"Reactor"}}],"는 앱 상태를 추상화한 것으로, 상태 변화를 관리하고, 비즈니스 로직을 포함합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Reactor","position":{"start":{"line":12,"column":57,"offset":471},"end":{"line":12,"column":66,"offset":480}}}],"position":{"start":{"line":12,"column":57,"offset":471},"end":{"line":12,"column":66,"offset":480}}},"children":"Reactor"}}],"는 다음과 같은 프로퍼티와 메소드를 가집니다:"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"initialState","position":{"start":{"line":14,"column":3,"offset":509},"end":{"line":14,"column":17,"offset":523}}}],"position":{"start":{"line":14,"column":3,"offset":509},"end":{"line":14,"column":17,"offset":523}}},"children":"initialState"}}],": 초기 상태를 정의합니다."]}],"\n",["$","li","li-1",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"action","position":{"start":{"line":15,"column":3,"offset":541},"end":{"line":15,"column":11,"offset":549}}}],"position":{"start":{"line":15,"column":3,"offset":541},"end":{"line":15,"column":11,"offset":549}}},"children":"action"}}],": 사용자로부터 발생하는 모든 액션을 받아들입니다."]}],"\n",["$","li","li-2",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"mutation","position":{"start":{"line":16,"column":3,"offset":580},"end":{"line":16,"column":13,"offset":590}}}],"position":{"start":{"line":16,"column":3,"offset":580},"end":{"line":16,"column":13,"offset":590}}},"children":"mutation"}}],": 액션(action)을 변환하여 상태 변화를 만드는 반응 객체입니다."]}],"\n",["$","li","li-3",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"state","position":{"start":{"line":17,"column":3,"offset":632},"end":{"line":17,"column":10,"offset":639}}}],"position":{"start":{"line":17,"column":3,"offset":632},"end":{"line":17,"column":10,"offset":639}}},"children":"state"}}],": 최종 상태를 나타내며, 화면에 반영됩니다."]}],"\n"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":19,"column":1,"offset":666},"end":{"line":63,"column":4,"offset":1743}}},"children":"$f"}}]}],"\n",["$","h2",null,{"id":"97c89a4d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Action"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Action","position":{"start":{"line":67,"column":1,"offset":1756},"end":{"line":67,"column":9,"offset":1764}}}],"position":{"start":{"line":67,"column":1,"offset":1756},"end":{"line":67,"column":9,"offset":1764}}},"children":"Action"}}],"은 사용자 인터페이스에서 발동되는 모든 이벤트의 열거형입니다. 여기에는 버튼 클릭, 텍스트 입력, 스크롤 등의 이벤트가 포함될 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Reactor","position":{"start":{"line":67,"column":88,"offset":1843},"end":{"line":67,"column":97,"offset":1852}}}],"position":{"start":{"line":67,"column":88,"offset":1843},"end":{"line":67,"column":97,"offset":1852}}},"children":"Reactor"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Action","position":{"start":{"line":67,"column":99,"offset":1854},"end":{"line":67,"column":107,"offset":1862}}}],"position":{"start":{"line":67,"column":99,"offset":1854},"end":{"line":67,"column":107,"offset":1862}}},"children":"Action"}}],"을 받아 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Mutation","position":{"start":{"line":67,"column":112,"offset":1867},"end":{"line":67,"column":122,"offset":1877}}}],"position":{"start":{"line":67,"column":112,"offset":1867},"end":{"line":67,"column":122,"offset":1877}}},"children":"Mutation"}}],"으로 변환합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class MyReactor: Reactor {\n    enum Action {\n        case buttonClicked\n        case textTyped(String)\n    }\n\n    // ... other code\n}\n"}],"position":{"start":{"line":69,"column":1,"offset":1888},"end":{"line":78,"column":4,"offset":2034}}},"children":"class MyReactor: Reactor {\n    enum Action {\n        case buttonClicked\n        case textTyped(String)\n    }\n\n    // ... other code\n}\n"}}]}],"\n",["$","h2",null,{"id":"13bcc5c2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Mutation"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Mutation","position":{"start":{"line":82,"column":1,"offset":2049},"end":{"line":82,"column":11,"offset":2059}}}],"position":{"start":{"line":82,"column":1,"offset":2049},"end":{"line":82,"column":11,"offset":2059}}},"children":"Mutation"}}],"은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Action","position":{"start":{"line":82,"column":13,"offset":2061},"end":{"line":82,"column":21,"offset":2069}}}],"position":{"start":{"line":82,"column":13,"offset":2061},"end":{"line":82,"column":21,"offset":2069}}},"children":"Action"}}],"이 실제로 변경되어 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"State","position":{"start":{"line":82,"column":32,"offset":2080},"end":{"line":82,"column":39,"offset":2087}}}],"position":{"start":{"line":82,"column":32,"offset":2080},"end":{"line":82,"column":39,"offset":2087}}},"children":"State"}}],"로 반영되기 전에 잠시 나타나는 변형입니다. 즉, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Action","position":{"start":{"line":82,"column":67,"offset":2115},"end":{"line":82,"column":75,"offset":2123}}}],"position":{"start":{"line":82,"column":67,"offset":2115},"end":{"line":82,"column":75,"offset":2123}}},"children":"Action"}}],"이 상태 변화에 어떤 영향을 미칠지 결정하는 중간 단계입니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class MyReactor: Reactor {\n    enum Mutation {\n        case setLoading(Bool)\n        case updateText(String)\n    }\n\n    // ... other code\n}\n"}],"position":{"start":{"line":84,"column":1,"offset":2159},"end":{"line":93,"column":4,"offset":2311}}},"children":"class MyReactor: Reactor {\n    enum Mutation {\n        case setLoading(Bool)\n        case updateText(String)\n    }\n\n    // ... other code\n}\n"}}]}],"\n",["$","h2",null,{"id":"a7250206","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"State"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"State","position":{"start":{"line":97,"column":1,"offset":2323},"end":{"line":97,"column":8,"offset":2330}}}],"position":{"start":{"line":97,"column":1,"offset":2323},"end":{"line":97,"column":8,"offset":2330}}},"children":"State"}}],"는 화면에 반영될 최종 상태를 나타내는 구조체입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Reactor","position":{"start":{"line":97,"column":38,"offset":2360},"end":{"line":97,"column":47,"offset":2369}}}],"position":{"start":{"line":97,"column":38,"offset":2360},"end":{"line":97,"column":47,"offset":2369}}},"children":"Reactor"}}],"는 지속적으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"State","position":{"start":{"line":97,"column":55,"offset":2377},"end":{"line":97,"column":62,"offset":2384}}}],"position":{"start":{"line":97,"column":55,"offset":2377},"end":{"line":97,"column":62,"offset":2384}}},"children":"State"}}],"를 관리하고 업데이트하여 화면과 상호작용합니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct State {\n    var isLoading: Bool = false\n    var text: String = \"\"\n}\n"}],"position":{"start":{"line":99,"column":1,"offset":2412},"end":{"line":104,"column":4,"offset":2499}}},"children":"struct State {\n    var isLoading: Bool = false\n    var text: String = \"\"\n}\n"}}]}],"\n",["$","h2",null,{"id":"767cbdaf","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"ReactorKit의 실사용 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"완전한 예제를 통해 ReactorKit의 사용법을 복습해보겠습니다. 이 예제에서는 버튼 클릭 시 API 호출을 시도하고, 결과를 화면에 표시하는 간단한 기능을 구현합니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\nimport ReactorKit\nimport RxSwift\nimport RxCocoa\n\nclass ViewController: UIViewController, View {\n    var disposeBag = DisposeBag()\n    let button = UIButton()\n    let resultLabel = UILabel()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        self.view.addSubview(button)\n        self.view.addSubview(resultLabel)\n        self.button.setTitle(\"Fetch Data\", for: .normal)\n    }\n\n    func bind(reactor: MyReactor) {\n        // Action\n        button.rx.tap\n            .map { Reactor.Action.doSomething }\n            .bind(to: reactor.action)\n            .disposed(by: disposeBag)\n\n        // State\n        reactor.state\n            .map { $0.result }\n            .bind(to: resultLabel.rx.text)\n            .disposed(by: disposeBag)\n    }\n}\n"}],"position":{"start":{"line":110,"column":1,"offset":2621},"end":{"line":142,"column":4,"offset":3402}}},"children":"import UIKit\nimport ReactorKit\nimport RxSwift\nimport RxCocoa\n\nclass ViewController: UIViewController, View {\n    var disposeBag = DisposeBag()\n    let button = UIButton()\n    let resultLabel = UILabel()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        self.view.addSubview(button)\n        self.view.addSubview(resultLabel)\n        self.button.setTitle(\"Fetch Data\", for: .normal)\n    }\n\n    func bind(reactor: MyReactor) {\n        // Action\n        button.rx.tap\n            .map { Reactor.Action.doSomething }\n            .bind(to: reactor.action)\n            .disposed(by: disposeBag)\n\n        // State\n        reactor.state\n            .map { $0.result }\n            .bind(to: resultLabel.rx.text)\n            .disposed(by: disposeBag)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"button","position":{"start":{"line":144,"column":7,"offset":3410},"end":{"line":144,"column":15,"offset":3418}}}],"position":{"start":{"line":144,"column":7,"offset":3410},"end":{"line":144,"column":15,"offset":3418}}},"children":"button"}}],"이 클릭될 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"doSomething","position":{"start":{"line":144,"column":23,"offset":3426},"end":{"line":144,"column":36,"offset":3439}}}],"position":{"start":{"line":144,"column":23,"offset":3426},"end":{"line":144,"column":36,"offset":3439}}},"children":"doSomething"}}],"이라는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Action","position":{"start":{"line":144,"column":40,"offset":3443},"end":{"line":144,"column":48,"offset":3451}}}],"position":{"start":{"line":144,"column":40,"offset":3443},"end":{"line":144,"column":48,"offset":3451}}},"children":"Action"}}],"을 트리거하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"resultLabel","position":{"start":{"line":144,"column":57,"offset":3460},"end":{"line":144,"column":70,"offset":3473}}}],"position":{"start":{"line":144,"column":57,"offset":3460},"end":{"line":144,"column":70,"offset":3473}}},"children":"resultLabel"}}],"에는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"state.result","position":{"start":{"line":144,"column":73,"offset":3476},"end":{"line":144,"column":87,"offset":3490}}}],"position":{"start":{"line":144,"column":73,"offset":3476},"end":{"line":144,"column":87,"offset":3490}}},"children":"state.result"}}],"가 업데이트될 때마다 텍스트를 변경합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"ReactorKit는 Swift로 구현된 애플리케이션에서 비즈니스 로직을 명확하게 관리할 수 있게 해줍니다. 이번 글에서는 ReactorKit의 주요 컴포넌트인 Reactor, Action, Mutation에 대해 설명했습니다. 이를 통해 더 깔끔하고 유지보수하기 쉬운 코드를 작성할 수 있기를 바랍니다."}]]}]}],["$","$L10",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L11",null,{"articleTitle":"[Swift] ReactorKit에서 사용하는 주요 컴포넌트와 그 역할: Reactor, Action, Mutation 등 ReactorKit의 주요 컴포넌트를","toc":[{"tagName":"h1","title":"Swift에서 ReactorKit 사용하는 법","id":"4aa56c0f"},{"tagName":"h2","title":"ReactorKit의 개요","id":"732e3207"},{"tagName":"h2","title":"Reactor","id":"30fccb31"},{"tagName":"h2","title":"Action","id":"97c89a4d"},{"tagName":"h2","title":"Mutation","id":"13bcc5c2"},{"tagName":"h2","title":"State","id":"a7250206"},{"tagName":"h2","title":"ReactorKit의 실사용 예제","id":"767cbdaf"}],"language":"kr"}]}]]}]]
8:null
