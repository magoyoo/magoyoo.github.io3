1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","draw%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-iOS-%EC%95%B1-%EB%B9%84%EC%A3%BC%EC%96%BC-%ED%96%A5%EC%83%81-%EB%B0%A9%EB%B2%95-fd83688d","d"],{"children":["__PAGE__?{\"slug\":\"draw를-사용한-iOS-앱-비주얼-향상-방법-fd83688d\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","draw%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-iOS-%EC%95%B1-%EB%B9%84%EC%A3%BC%EC%96%BC-%ED%96%A5%EC%83%81-%EB%B0%A9%EB%B2%95-fd83688d","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"draw를-사용한-iOS-앱-비주얼-향상-방법-fd83688d\"}"},"styles":[]}],"segment":["slug","draw%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-iOS-%EC%95%B1-%EB%B9%84%EC%A3%BC%EC%96%BC-%ED%96%A5%EC%83%81-%EB%B0%A9%EB%B2%95-fd83688d","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"draw(_:)를 사용한 iOS 앱 비주얼 향상 방법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 Swift에서 `draw(_:)` 메서드를 사용하여 iOS 애플리케이션의 비주얼을 향상시키는 방법에 대해 다룹니다. 이를 통해 커스터마이즈된 그래픽을 생성하고, 애플리케이션의 사용자 경험을 개선할 수 있습니다."}],["$","meta","3",{"name":"keywords","content":"Swift,iOS,draw(_:),그래픽"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/draw%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-iOS-%EC%95%B1-%EB%B9%84%EC%A3%BC%EC%96%BC-%ED%96%A5%EC%83%81-%EB%B0%A9%EB%B2%95-fd83688d"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"draw(_:)를 사용한 iOS 앱 비주얼 향상 방법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"draw(_:)를 사용한 iOS 앱 비주얼 향상 방법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 Swift에서 `draw(_:)` 메서드를 사용하여 iOS 애플리케이션의 비주얼을 향상시키는 방법에 대해 다룹니다. 이를 통해 커스터마이즈된 그래픽을 생성하고, 애플리케이션의 사용자 경험을 개선할 수 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/draw%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-iOS-%EC%95%B1-%EB%B9%84%EC%A3%BC%EC%96%BC-%ED%96%A5%EC%83%81-%EB%B0%A9%EB%B2%95-fd83688d"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"draw(_:)를 사용한 iOS 앱 비주얼 향상 방법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 Swift에서 `draw(_:)` 메서드를 사용하여 iOS 애플리케이션의 비주얼을 향상시키는 방법에 대해 다룹니다. 이를 통해 커스터마이즈된 그래픽을 생성하고, 애플리케이션의 사용자 경험을 개선할 수 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
10:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
11:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T438,class AnimatedView: UIView {
    var angle: CGFloat = 0
    var displayLink: CADisplayLink?

    override init(frame: CGRect) {
        super.init(frame: frame)
        setupDisplayLink()
    }

    required init?(coder: NSCoder) {
        super.init(coder: coder)
        setupDisplayLink()
    }

    func setupDisplayLink() {
        displayLink = CADisplayLink(target: self, selector: #selector(updateAnimation))
        displayLink?.add(to: .main, forMode: .default)
    }

    @objc func updateAnimation() {
        angle += 0.01
        setNeedsDisplay()
    }

    override func draw(_ rect: CGRect) {
        if let context = UIGraphicsGetCurrentContext() {
            context.setFillColor(UIColor.green.cgColor)
            let center = CGPoint(x: rect.width / 2, y: rect.height / 2)
            let radius: CGFloat = 50
            let endAngle = angle * CGFloat.pi * 2
            context.move(to: center)
            context.addArc(center: center, radius: radius, startAngle: 0, endAngle: endAngle, clockwise: false)
            context.fillPath()
        }
    }
}
f:T438,class AnimatedView: UIView {
    var angle: CGFloat = 0
    var displayLink: CADisplayLink?

    override init(frame: CGRect) {
        super.init(frame: frame)
        setupDisplayLink()
    }

    required init?(coder: NSCoder) {
        super.init(coder: coder)
        setupDisplayLink()
    }

    func setupDisplayLink() {
        displayLink = CADisplayLink(target: self, selector: #selector(updateAnimation))
        displayLink?.add(to: .main, forMode: .default)
    }

    @objc func updateAnimation() {
        angle += 0.01
        setNeedsDisplay()
    }

    override func draw(_ rect: CGRect) {
        if let context = UIGraphicsGetCurrentContext() {
            context.setFillColor(UIColor.green.cgColor)
            let center = CGPoint(x: rect.width / 2, y: rect.height / 2)
            let radius: CGFloat = 50
            let endAngle = angle * CGFloat.pi * 2
            context.move(to: center)
            context.addArc(center: center, radius: radius, startAngle: 0, endAngle: endAngle, clockwise: false)
            context.fillPath()
        }
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"draw(_:)를 사용한 iOS 앱 비주얼 향상 방법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"draw(_:)를 사용한 iOS 앱 비주얼 향상 방법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-30"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"a3967161","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":["iOS 앱의 비주얼 향상: ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":2,"column":18,"offset":18},"end":{"line":2,"column":28,"offset":28}}}],"position":{"start":{"line":2,"column":18,"offset":18},"end":{"line":2,"column":28,"offset":28}}},"children":"draw(_:)"}}]," 메서드 사용하기"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":4,"column":9,"offset":47},"end":{"line":4,"column":19,"offset":57}}}],"position":{"start":{"line":4,"column":9,"offset":47},"end":{"line":4,"column":19,"offset":57}}},"children":"draw(_:)"}}]," 메서드는 매우 강력한 도구로, 이를 통해 iOS 애플리케이션의 그래픽과 비주얼 측면을 크게 향상시킬 수 있습니다. 이 메서드는 사용자 정의 뷰(Custom View)를 생성하거나 애플리케이션의 그래픽 요소를 세부적으로 제어하고 싶은 경우에 사용됩니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":4,"column":168,"offset":206},"end":{"line":4,"column":178,"offset":216}}}],"position":{"start":{"line":4,"column":168,"offset":206},"end":{"line":4,"column":178,"offset":216}}},"children":"draw(_:)"}}]," 메서드를 사용하여 iOS 애플리케이션의 비주얼을 향상시키는 여러 가지 방법을 소개합니다."]}],"\n",["$","h2",null,{"id":"da39a3ee","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":6,"column":4,"offset":271},"end":{"line":6,"column":14,"offset":281}}}],"position":{"start":{"line":6,"column":4,"offset":271},"end":{"line":6,"column":14,"offset":281}}},"children":"draw(_:)"}}]," 메서드란?"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":8,"column":1,"offset":289},"end":{"line":8,"column":11,"offset":299}}}],"position":{"start":{"line":8,"column":1,"offset":289},"end":{"line":8,"column":11,"offset":299}}},"children":"draw(_:)"}}]," 메서드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIView","position":{"start":{"line":8,"column":17,"offset":305},"end":{"line":8,"column":25,"offset":313}}}],"position":{"start":{"line":8,"column":17,"offset":305},"end":{"line":8,"column":25,"offset":313}}},"children":"UIView"}}],"의 메서드 중 하나로, 특정 뷰의 콘텐츠를 그릴 때 사용됩니다. 이 메서드는 뷰가 화면에 처음 표시되거나 뷰의 내용이 변경될 때 호출됩니다. 여기서 중요한 것은, 이 메서드를 직접 호출하는 것이 아니라 뷰의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setNeedsDisplay","position":{"start":{"line":8,"column":141,"offset":429},"end":{"line":8,"column":158,"offset":446}}}],"position":{"start":{"line":8,"column":141,"offset":429},"end":{"line":8,"column":158,"offset":446}}},"children":"setNeedsDisplay"}}],"메서드를 호출하면 프레임워크가 적절한 시점에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":8,"column":183,"offset":471},"end":{"line":8,"column":193,"offset":481}}}],"position":{"start":{"line":8,"column":183,"offset":471},"end":{"line":8,"column":193,"offset":481}}},"children":"draw(_:)"}}]," 메서드를 호출하게 된다는 점입니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class CustomView: UIView {\n    override func draw(_ rect: CGRect) {\n        if let context = UIGraphicsGetCurrentContext() {\n            // 그래픽 작업을 여기에 추가합니다.\n        }\n    }\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":503},"end":{"line":18,"column":4,"offset":692}}},"children":"class CustomView: UIView {\n    override func draw(_ rect: CGRect) {\n        if let context = UIGraphicsGetCurrentContext() {\n            // 그래픽 작업을 여기에 추가합니다.\n        }\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"3290d38c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"주요 개념 및 용어"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"그래픽 컨텍스트(Graphics Context)"}],": 그래픽 작업을 수행하기 위한 환경입니다. 이곳에서 그리기 작업을 설정하고 실행합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"코어 그래픽스(Core Graphics)"}],": Apple의 2D 그래픽 라이브러리로, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":23,"column":53,"offset":844},"end":{"line":23,"column":63,"offset":854}}}],"position":{"start":{"line":23,"column":53,"offset":844},"end":{"line":23,"column":63,"offset":854}}},"children":"draw(_:)"}}]," 메서드에서 주로 사용됩니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"경로(Path)"}],": 도형의 외곽선을 정의하는 일련의 점과 직선, 곡선 등입니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"da39a3ee","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":26,"column":4,"offset":925},"end":{"line":26,"column":14,"offset":935}}}],"position":{"start":{"line":26,"column":4,"offset":925},"end":{"line":26,"column":14,"offset":935}}},"children":"draw(_:)"}}]," 메서드의 활용"]}],"\n",["$","h3",null,{"id":"70a5f045","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 간단한 도형 그리기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["가장 기본적인 예제로, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":30,"column":14,"offset":977},"end":{"line":30,"column":24,"offset":987}}}],"position":{"start":{"line":30,"column":14,"offset":977},"end":{"line":30,"column":24,"offset":987}}},"children":"draw(_:)"}}],"메서드를 사용하여 간단한 도형을 그려보겠습니다. 이를 통해 그래픽 컨텍스트에 접근하고, 경로를 설정한 후, 해당 경로를 채우거나 선을 그리는 방법을 배울 수 있습니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class SimpleShapeView: UIView {\n    override func draw(_ rect: CGRect) {\n        if let context = UIGraphicsGetCurrentContext() {\n            context.setFillColor(UIColor.red.cgColor)\n            context.fillEllipse(in: rect)\n        }\n    }\n}\n"}],"position":{"start":{"line":32,"column":1,"offset":1082},"end":{"line":41,"column":4,"offset":1338}}},"children":"class SimpleShapeView: UIView {\n    override func draw(_ rect: CGRect) {\n        if let context = UIGraphicsGetCurrentContext() {\n            context.setFillColor(UIColor.red.cgColor)\n            context.fillEllipse(in: rect)\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"context.fillEllipse(in:)","position":{"start":{"line":43,"column":9,"offset":1348},"end":{"line":43,"column":35,"offset":1374}}}],"position":{"start":{"line":43,"column":9,"offset":1348},"end":{"line":43,"column":35,"offset":1374}}},"children":"context.fillEllipse(in:)"}}]," 메서드를 사용하여 현재 뷰의 경계 내에 빨간색 원을 그립니다. 이렇게 간단한 작업을 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":43,"column":86,"offset":1425},"end":{"line":43,"column":96,"offset":1435}}}],"position":{"start":{"line":43,"column":86,"offset":1425},"end":{"line":43,"column":96,"offset":1435}}},"children":"draw(_:)"}}]," 사용하는 기본적인 방법을 익힐 수 있습니다."]}],"\n",["$","h3",null,{"id":"293b791a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 텍스트 그리기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["텍스트를 화면에 표시하는 것도 자주 사용되는 기능 중 하나입니다. 다음의 예제는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":47,"column":46,"offset":1523},"end":{"line":47,"column":56,"offset":1533}}}],"position":{"start":{"line":47,"column":46,"offset":1523},"end":{"line":47,"column":56,"offset":1533}}},"children":"draw(_:)"}}]," 메서드를 사용하여 텍스트를 그리는 방법을 보여줍니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class TextView: UIView {\n    override func draw(_ rect: CGRect) {\n        let text = \"Hello, Swift!\"\n        let attributes: [NSAttributedString.Key: Any] = [\n            .font: UIFont.systemFont(ofSize: 24),\n            .foregroundColor: UIColor.black\n        ]\n        text.draw(in: rect, withAttributes: attributes)\n    }\n}\n"}],"position":{"start":{"line":49,"column":1,"offset":1565},"end":{"line":60,"column":4,"offset":1904}}},"children":"class TextView: UIView {\n    override func draw(_ rect: CGRect) {\n        let text = \"Hello, Swift!\"\n        let attributes: [NSAttributedString.Key: Any] = [\n            .font: UIFont.systemFont(ofSize: 24),\n            .foregroundColor: UIColor.black\n        ]\n        text.draw(in: rect, withAttributes: attributes)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(in:withAttributes:)","position":{"start":{"line":62,"column":9,"offset":1914},"end":{"line":62,"column":35,"offset":1940}}}],"position":{"start":{"line":62,"column":9,"offset":1914},"end":{"line":62,"column":35,"offset":1940}}},"children":"draw(in:withAttributes:)"}}]," 메서드를 사용하여 주어진 사각형 영역 내에 텍스트를 그립니다. 속성 딕셔너리를 사용하여 텍스트의 폰트와 색상을 설정할 수 있습니다."]}],"\n",["$","h3",null,{"id":"6d56a58c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 이미지 그리기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["애플리케이션에서 이미지를 표시하려면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":66,"column":21,"offset":2052},"end":{"line":66,"column":31,"offset":2062}}}],"position":{"start":{"line":66,"column":21,"offset":2052},"end":{"line":66,"column":31,"offset":2062}}},"children":"draw(_:)"}}]," 메서드를 사용하여 이미지를 그릴 수 있습니다. 이는 벡터 그래픽이 아닌 래스터 이미지를 삽입할 때 유용합니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class ImageView: UIView {\n    override func draw(_ rect: CGRect) {\n        if let image = UIImage(named: \"SampleImage\") {\n            image.draw(in: rect)\n        }\n    }\n}\n"}],"position":{"start":{"line":68,"column":1,"offset":2126},"end":{"line":76,"column":4,"offset":2311}}},"children":"class ImageView: UIView {\n    override func draw(_ rect: CGRect) {\n        if let image = UIImage(named: \"SampleImage\") {\n            image.draw(in: rect)\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIImage","position":{"start":{"line":78,"column":9,"offset":2321},"end":{"line":78,"column":18,"offset":2330}}}],"position":{"start":{"line":78,"column":9,"offset":2321},"end":{"line":78,"column":18,"offset":2330}}},"children":"UIImage"}}]," 객체를 생성한 후, 해당 이미지를 주어진 사각형 영역 내에 그립니다."]}],"\n",["$","h2",null,{"id":"f2df776e","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"고급 사용법"}],"\n",["$","h3",null,{"id":"78392b45","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 사용자 상호작용 반영"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":84,"column":1,"offset":2402},"end":{"line":84,"column":11,"offset":2412}}}],"position":{"start":{"line":84,"column":1,"offset":2402},"end":{"line":84,"column":11,"offset":2412}}},"children":"draw(_:)"}}]," 메서드는 동적인 콘텐츠를 그릴 때도 유용합니다. 예를 들어, 사용자 상호작용에 따라 그래픽이 변하도록 설정할 수 있습니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class InteractiveView: UIView {\n    var touchPoint: CGPoint?\n\n    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {\n        if let touch = touches.first {\n            touchPoint = touch.location(in: self)\n            setNeedsDisplay()\n        }\n    }\n\n    override func draw(_ rect: CGRect) {\n        if let point = touchPoint {\n            if let context = UIGraphicsGetCurrentContext() {\n                context.setFillColor(UIColor.blue.cgColor)\n                context.fillEllipse(in: CGRect(x: point.x - 15, y: point.y - 15, width: 30, height: 30))\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":86,"column":1,"offset":2483},"end":{"line":106,"column":4,"offset":3107}}},"children":"class InteractiveView: UIView {\n    var touchPoint: CGPoint?\n\n    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {\n        if let touch = touches.first {\n            touchPoint = touch.location(in: self)\n            setNeedsDisplay()\n        }\n    }\n\n    override func draw(_ rect: CGRect) {\n        if let point = touchPoint {\n            if let context = UIGraphicsGetCurrentContext() {\n                context.setFillColor(UIColor.blue.cgColor)\n                context.fillEllipse(in: CGRect(x: point.x - 15, y: point.y - 15, width: 30, height: 30))\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제는 사용자가 터치한 위치에 파란색 원을 그립니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"touchesBegan(_:with:)","position":{"start":{"line":108,"column":33,"offset":3141},"end":{"line":108,"column":56,"offset":3164}}}],"position":{"start":{"line":108,"column":33,"offset":3141},"end":{"line":108,"column":56,"offset":3164}}},"children":"touchesBegan(_:with:)"}}]," 메서드에서 터치 위치를 저장한 후, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setNeedsDisplay()","position":{"start":{"line":108,"column":77,"offset":3185},"end":{"line":108,"column":96,"offset":3204}}}],"position":{"start":{"line":108,"column":77,"offset":3185},"end":{"line":108,"column":96,"offset":3204}}},"children":"setNeedsDisplay()"}}]," 메서드를 호출하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":108,"column":107,"offset":3215},"end":{"line":108,"column":117,"offset":3225}}}],"position":{"start":{"line":108,"column":107,"offset":3215},"end":{"line":108,"column":117,"offset":3225}}},"children":"draw(_:)"}}]," 메서드가 다시 호출되도록 합니다."]}],"\n",["$","h3",null,{"id":"1b4f98b2","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 애니메이션 적용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["그래픽 요소에 애니메이션을 적용하면 더욱 생동감 있는 사용자 경험을 제공할 수 있습니다. 다음의 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CADisplayLink","position":{"start":{"line":112,"column":61,"offset":3323},"end":{"line":112,"column":76,"offset":3338}}}],"position":{"start":{"line":112,"column":61,"offset":3323},"end":{"line":112,"column":76,"offset":3338}}},"children":"CADisplayLink"}}],"를 사용하여 애니메이션을 구현합니다."]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":114,"column":1,"offset":3360},"end":{"line":151,"column":4,"offset":4452}}},"children":"$f"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CADisplayLink","position":{"start":{"line":153,"column":9,"offset":4462},"end":{"line":153,"column":24,"offset":4477}}}],"position":{"start":{"line":153,"column":9,"offset":4462},"end":{"line":153,"column":24,"offset":4477}}},"children":"CADisplayLink"}}],"를 사용하여 주기적으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updateAnimation","position":{"start":{"line":153,"column":37,"offset":4490},"end":{"line":153,"column":54,"offset":4507}}}],"position":{"start":{"line":153,"column":37,"offset":4490},"end":{"line":153,"column":54,"offset":4507}}},"children":"updateAnimation"}}]," 메서드를 호출합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updateAnimation","position":{"start":{"line":153,"column":67,"offset":4520},"end":{"line":153,"column":84,"offset":4537}}}],"position":{"start":{"line":153,"column":67,"offset":4520},"end":{"line":153,"column":84,"offset":4537}}},"children":"updateAnimation"}}]," 메서드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"angle","position":{"start":{"line":153,"column":90,"offset":4543},"end":{"line":153,"column":97,"offset":4550}}}],"position":{"start":{"line":153,"column":90,"offset":4543},"end":{"line":153,"column":97,"offset":4550}}},"children":"angle"}}]," 변수를 업데이트한 후 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setNeedsDisplay()","position":{"start":{"line":153,"column":110,"offset":4563},"end":{"line":153,"column":129,"offset":4582}}}],"position":{"start":{"line":153,"column":110,"offset":4563},"end":{"line":153,"column":129,"offset":4582}}},"children":"setNeedsDisplay()"}}],"를 호출하여 뷰를 다시 그리도록 합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":153,"column":152,"offset":4605},"end":{"line":153,"column":162,"offset":4615}}}],"position":{"start":{"line":153,"column":152,"offset":4605},"end":{"line":153,"column":162,"offset":4615}}},"children":"draw(_:)"}}]," 메서드에서는 이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"angle","position":{"start":{"line":153,"column":172,"offset":4625},"end":{"line":153,"column":179,"offset":4632}}}],"position":{"start":{"line":153,"column":172,"offset":4625},"end":{"line":153,"column":179,"offset":4632}}},"children":"angle"}}]," 값을 사용하여 그래픽 요소를 회전시키며 애니메이션 효과를 구현합니다."]}],"\n",["$","h2",null,{"id":"ed8464a3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"마무리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"draw(_:)","position":{"start":{"line":157,"column":9,"offset":4689},"end":{"line":157,"column":19,"offset":4699}}}],"position":{"start":{"line":157,"column":9,"offset":4689},"end":{"line":157,"column":19,"offset":4699}}},"children":"draw(_:)"}}]," 메서드를 사용하는 것은 iOS 애플리케이션의 비주얼을 향상시키는 효과적인 방법입니다. 간단한 도형에서부터 사용자 상호작용, 애니메이션에 이르기까지 다양한 그래픽 요소를 커스터마이즈할 수 있습니다. 이를 통해 애플리케이션의 사용자 경험을 크게 개선할 수 있습니다. 이 글에서 소개된 방법들을 바탕으로, 한층 더 세련된 iOS 애플리케이션을 개발해 보시기 바랍니다."]}]]}]}],["$","$L10",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L11",null,{"articleTitle":"draw(_:)를 사용한 iOS 앱 비주얼 향상 방법","toc":[{"tagName":"h1","title":"iOS 앱의 비주얼 향상: ","id":"a3967161"},{"tagName":"h2","title":"$undefined","id":""},{"tagName":"h3","title":"주요 개념 및 용어","id":"3290d38c"},{"tagName":"h2","title":"$undefined","id":""},{"tagName":"h3","title":"1. 간단한 도형 그리기","id":"70a5f045"},{"tagName":"h3","title":"2. 텍스트 그리기","id":"293b791a"},{"tagName":"h3","title":"3. 이미지 그리기","id":"6d56a58c"},{"tagName":"h2","title":"고급 사용법","id":"f2df776e"},{"tagName":"h3","title":"1. 사용자 상호작용 반영","id":"78392b45"},{"tagName":"h3","title":"2. 애니메이션 적용","id":"1b4f98b2"},{"tagName":"h2","title":"마무리","id":"ed8464a3"}],"language":"kr"}]}]]}]]
8:null
