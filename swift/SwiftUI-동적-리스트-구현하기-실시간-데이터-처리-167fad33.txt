1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI-%EB%8F%99%EC%A0%81-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-167fad33","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI-동적-리스트-구현하기-실시간-데이터-처리-167fad33\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI-%EB%8F%99%EC%A0%81-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-167fad33","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI-동적-리스트-구현하기-실시간-데이터-처리-167fad33\"}"},"styles":[]}],"segment":["slug","SwiftUI-%EB%8F%99%EC%A0%81-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-167fad33","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI 동적 리스트 구현하기: 실시간 데이터 처리 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 SwiftUI를 사용해 동적 리스트를 구현하는 방법과 실시간 데이터를 처리하는 방법에 대해 설명합니다. 이를 통해 실시간으로 업데이트되는 데이터를 리스트 형태로 사용자에게 보여줄 수 있게 됩니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,실시간 데이터,동적 리스트,Swift"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI-%EB%8F%99%EC%A0%81-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-167fad33"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI 동적 리스트 구현하기: 실시간 데이터 처리 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI 동적 리스트 구현하기: 실시간 데이터 처리 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 SwiftUI를 사용해 동적 리스트를 구현하는 방법과 실시간 데이터를 처리하는 방법에 대해 설명합니다. 이를 통해 실시간으로 업데이트되는 데이터를 리스트 형태로 사용자에게 보여줄 수 있게 됩니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI-%EB%8F%99%EC%A0%81-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-167fad33"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI 동적 리스트 구현하기: 실시간 데이터 처리 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 SwiftUI를 사용해 동적 리스트를 구현하는 방법과 실시간 데이터를 처리하는 방법에 대해 설명합니다. 이를 통해 실시간으로 업데이트되는 데이터를 리스트 형태로 사용자에게 보여줄 수 있게 됩니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI 동적 리스트 구현하기: 실시간 데이터 처리"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI 동적 리스트 구현하기: 실시간 데이터 처리"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-18"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"d58aefd5","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI 동적 리스트 구현하기: 실시간 데이터 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 iOS, macOS, watchOS 및 tvOS에서 사용자 인터페이스를 구축하기 위한 프레임워크로, 선언형 문법을 사용하여 코드를 간결하고 직관적으로 작성할 수 있습니다. 이 글에서는 실시간 데이터를 처리하고, 이를 동적으로 업데이트되는 리스트 형태로 표시하는 방법에 대해 알아보겠습니다."}],"\n",["$","h2",null,{"id":"35ce895d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프로젝트 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저 Xcode에서 새 프로젝트를 생성한 후, SwiftUI를 사용하도록 설정합니다. 프로젝트가 준비되면, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ContentView.swift","position":{"start":{"line":8,"column":61,"offset":280},"end":{"line":8,"column":80,"offset":299}}}],"position":{"start":{"line":8,"column":61,"offset":280},"end":{"line":8,"column":80,"offset":299}}},"children":"ContentView.swift"}}]," 파일을 열어 초기 설정을 진행합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    var body: some View {\n        Text(\"Hello, SwiftUI!\")\n    }\n}\n\nstruct ContentView_Previews: PreviewProvider {\n    static var previews: some View {\n        ContentView()\n    }\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":322},"end":{"line":24,"column":4,"offset":558}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    var body: some View {\n        Text(\"Hello, SwiftUI!\")\n    }\n}\n\nstruct ContentView_Previews: PreviewProvider {\n    static var previews: some View {\n        ContentView()\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"여기서는 단순히 텍스트를 출력하는 기본 코드를 볼 수 있습니다. 이제 이 코드를 수정하여 동적 리스트를 표시해 보겠습니다."}],"\n",["$","h2",null,{"id":"e5939d53","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"데이터 모델 작성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["실시간 데이터 처리를 위해서는 데이터를 저장하고 업데이트할 수 있는 데이터 모델이 필요합니다. 아래는 예시로 사용할 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Item","position":{"start":{"line":30,"column":66,"offset":709},"end":{"line":30,"column":72,"offset":715}}}],"position":{"start":{"line":30,"column":66,"offset":709},"end":{"line":30,"column":72,"offset":715}}},"children":"Item"}}]," 모델입니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct Item: Identifiable {\n    let id = UUID()\n    let name: String\n}\n"}],"position":{"start":{"line":32,"column":1,"offset":724},"end":{"line":37,"column":4,"offset":807}}},"children":"struct Item: Identifiable {\n    let id = UUID()\n    let name: String\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 모델은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Identifiable","position":{"start":{"line":39,"column":7,"offset":815},"end":{"line":39,"column":21,"offset":829}}}],"position":{"start":{"line":39,"column":7,"offset":815},"end":{"line":39,"column":21,"offset":829}}},"children":"Identifiable"}}]," 프로토콜을 채택하여 리스트에서 각 항목이 고유의 ID를 가질 수 있도록 합니다."]}],"\n",["$","h2",null,{"id":"0c5c7f9a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"ViewModel 작성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음으로는 실제 데이터 소스를 업데이트하는 역할을 할 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ViewModel","position":{"start":{"line":43,"column":31,"offset":923},"end":{"line":43,"column":42,"offset":934}}}],"position":{"start":{"line":43,"column":31,"offset":923},"end":{"line":43,"column":42,"offset":934}}},"children":"ViewModel"}}],"을 작성합니다. 실시간 데이터를 처리하기 위해서는 ObservableObject를 사용합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class ItemViewModel: ObservableObject {\n    @Published var items: [Item] = []\n\n    func addItem(_ name: String) {\n        let newItem = Item(name: name)\n        items.append(newItem)\n    }\n}\n"}],"position":{"start":{"line":45,"column":1,"offset":988},"end":{"line":54,"column":4,"offset":1191}}},"children":"class ItemViewModel: ObservableObject {\n    @Published var items: [Item] = []\n\n    func addItem(_ name: String) {\n        let newItem = Item(name: name)\n        items.append(newItem)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@Published","position":{"start":{"line":56,"column":1,"offset":1193},"end":{"line":56,"column":13,"offset":1205}}}],"position":{"start":{"line":56,"column":1,"offset":1193},"end":{"line":56,"column":13,"offset":1205}}},"children":"@Published"}}]," 속성 래퍼는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"items","position":{"start":{"line":56,"column":21,"offset":1213},"end":{"line":56,"column":28,"offset":1220}}}],"position":{"start":{"line":56,"column":21,"offset":1213},"end":{"line":56,"column":28,"offset":1220}}},"children":"items"}}]," 배열이 업데이트될 때마다 해당 변화를 모든 구독자에게 자동으로 알립니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addItem","position":{"start":{"line":56,"column":70,"offset":1262},"end":{"line":56,"column":79,"offset":1271}}}],"position":{"start":{"line":56,"column":70,"offset":1262},"end":{"line":56,"column":79,"offset":1271}}},"children":"addItem"}}]," 메서드는 새 항목을 추가하는 예제입니다."]}],"\n",["$","h2",null,{"id":"24fb33c0","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"동적 리스트 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ContentView","position":{"start":{"line":60,"column":4,"offset":1313},"end":{"line":60,"column":17,"offset":1326}}}],"position":{"start":{"line":60,"column":4,"offset":1313},"end":{"line":60,"column":17,"offset":1326}}},"children":"ContentView"}}],"에서 위에서 만든 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ViewModel","position":{"start":{"line":60,"column":27,"offset":1336},"end":{"line":60,"column":38,"offset":1347}}}],"position":{"start":{"line":60,"column":27,"offset":1336},"end":{"line":60,"column":38,"offset":1347}}},"children":"ViewModel"}}],"을 사용해 동적 리스트를 구현해 보겠습니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    @StateObject private var viewModel = ItemViewModel()\n    @State private var newItemName: String = \"\"\n\n    var body: some View {\n        VStack {\n            TextField(\"Enter new item\", text: $newItemName, onCommit: addItem)\n                .textFieldStyle(RoundedBorderTextFieldStyle())\n                .padding()\n\n            List(viewModel.items) { item in\n                Text(item.name)\n            }\n        }\n        .navigationTitle(\"Dynamic List\")\n    }\n\n    private func addItem() {\n        guard !newItemName.isEmpty else { return }\n        viewModel.addItem(newItemName)\n        newItemName = \"\"\n    }\n}\n"}],"position":{"start":{"line":62,"column":1,"offset":1373},"end":{"line":86,"column":4,"offset":2031}}},"children":"struct ContentView: View {\n    @StateObject private var viewModel = ItemViewModel()\n    @State private var newItemName: String = \"\"\n\n    var body: some View {\n        VStack {\n            TextField(\"Enter new item\", text: $newItemName, onCommit: addItem)\n                .textFieldStyle(RoundedBorderTextFieldStyle())\n                .padding()\n\n            List(viewModel.items) { item in\n                Text(item.name)\n            }\n        }\n        .navigationTitle(\"Dynamic List\")\n    }\n\n    private func addItem() {\n        guard !newItemName.isEmpty else { return }\n        viewModel.addItem(newItemName)\n        newItemName = \"\"\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드는 텍스트 필드와 리스트로 구성된 간단한 User Interface를 생성합니다. 사용자가 텍스트 필드에 항목을 입력하고 Enter 키를 누르면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addItem","position":{"start":{"line":88,"column":86,"offset":2118},"end":{"line":88,"column":95,"offset":2127}}}],"position":{"start":{"line":88,"column":86,"offset":2118},"end":{"line":88,"column":95,"offset":2127}}},"children":"addItem"}}]," 메서드가 호출되어 리스트에 새 항목이 추가됩니다."]}],"\n",["$","h2",null,{"id":"83fd451c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"실시간 데이터 업데이트"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"실제 프로젝트에서는 웹소켓(WebSocket)이나 푸시 알림(Push Notification) 등을 통해 실시간 데이터를 받는 상황이 있을 수 있습니다. 본 예제에서는 타이머를 사용해 데이터가 실시간으로 업데이트되는 상황을 시뮬레이션해 보겠습니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class ItemViewModel: ObservableObject {\n    @Published var items: [Item] = []\n\n    init() {\n        Timer.scheduledTimer(withTimeInterval: 5.0, repeats: true) { _ in\n            self.addItem(\"Item at \\(Date())\")\n        }\n    }\n\n    func addItem(_ name: String) {\n        let newItem = Item(name: name)\n        items.append(newItem)\n    }\n}\n"}],"position":{"start":{"line":94,"column":1,"offset":2314},"end":{"line":109,"column":4,"offset":2667}}},"children":"class ItemViewModel: ObservableObject {\n    @Published var items: [Item] = []\n\n    init() {\n        Timer.scheduledTimer(withTimeInterval: 5.0, repeats: true) { _ in\n            self.addItem(\"Item at \\(Date())\")\n        }\n    }\n\n    func addItem(_ name: String) {\n        let newItem = Item(name: name)\n        items.append(newItem)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Timer","position":{"start":{"line":111,"column":9,"offset":2677},"end":{"line":111,"column":16,"offset":2684}}}],"position":{"start":{"line":111,"column":9,"offset":2677},"end":{"line":111,"column":16,"offset":2684}}},"children":"Timer"}}],"를 사용해 5초마다 새로운 항목이 자동으로 리스트에 추가되도록 설정했습니다. 실제로는 이 부분을 웹소켓 수신 처리 등의 실시간 데이터 수신 코드로 대체하면 됩니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI를 사용해 동적 리스트를 구현하고 실시간 데이터를 처리하는 방법에 대해 알아보았습니다. 본 예제에서는 간단한 UI와 타이머 기반의 실시간 데이터 업데이트를 구현하였지만, 실제 애플리케이션에서는 다양한 데이터 소스와 상호작용할 수 있습니다. SwiftUI의 강력한 데이터 바인딩 기능을 활용하면 복잡한 데이터 처리도 쉽게 관리할 수 있습니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI 동적 리스트 구현하기: 실시간 데이터 처리","toc":[{"tagName":"h1","title":"SwiftUI 동적 리스트 구현하기: 실시간 데이터 처리","id":"d58aefd5"},{"tagName":"h2","title":"프로젝트 설정","id":"35ce895d"},{"tagName":"h2","title":"데이터 모델 작성","id":"e5939d53"},{"tagName":"h2","title":"ViewModel 작성","id":"0c5c7f9a"},{"tagName":"h2","title":"동적 리스트 구현","id":"24fb33c0"},{"tagName":"h2","title":"실시간 데이터 업데이트","id":"83fd451c"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
