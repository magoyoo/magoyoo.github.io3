1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-Alamofire%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%89%BD%EA%B2%8C-API-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0","d"],{"children":["__PAGE__?{\"slug\":\"Swift-Alamofire를-활용해서-쉽게-API-연동하기\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-Alamofire%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%89%BD%EA%B2%8C-API-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-Alamofire를-활용해서-쉽게-API-연동하기\"}"},"styles":[]}],"segment":["slug","Swift-Alamofire%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%89%BD%EA%B2%8C-API-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift Alamofire를 활용해서 쉽게 API 연동하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 Swift 언어에서 네트워크 라이브러리인 Alamofire를 활용하여 API와 쉽게 연동하는 방법을 다룹니다. Alamofire의 설치부터 기본적인 GET 및 POST 요청, 파라미터와 헤더 추가, JSON 데이터 파싱까지 다양한 예제 코드를 통해 설명합니다. 이를 통해 iOS 애플리케이션 개발 시 효율적인 네트워크 통신을 구현할 수 있도록 돕습니다. Alamofire를 사용하여 더 간결하고 읽기 쉬운 코드로 서버와의 데이터 통신을 처리해 보세요."}],["$","meta","3",{"name":"keywords","content":"swift,API통신,라이브러리"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-Alamofire%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%89%BD%EA%B2%8C-API-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift Alamofire를 활용해서 쉽게 API 연동하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift Alamofire를 활용해서 쉽게 API 연동하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 Swift 언어에서 네트워크 라이브러리인 Alamofire를 활용하여 API와 쉽게 연동하는 방법을 다룹니다. Alamofire의 설치부터 기본적인 GET 및 POST 요청, 파라미터와 헤더 추가, JSON 데이터 파싱까지 다양한 예제 코드를 통해 설명합니다. 이를 통해 iOS 애플리케이션 개발 시 효율적인 네트워크 통신을 구현할 수 있도록 돕습니다. Alamofire를 사용하여 더 간결하고 읽기 쉬운 코드로 서버와의 데이터 통신을 처리해 보세요."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-Alamofire%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%89%BD%EA%B2%8C-API-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift Alamofire를 활용해서 쉽게 API 연동하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 Swift 언어에서 네트워크 라이브러리인 Alamofire를 활용하여 API와 쉽게 연동하는 방법을 다룹니다. Alamofire의 설치부터 기본적인 GET 및 POST 요청, 파라미터와 헤더 추가, JSON 데이터 파싱까지 다양한 예제 코드를 통해 설명합니다. 이를 통해 iOS 애플리케이션 개발 시 효율적인 네트워크 통신을 구현할 수 있도록 돕습니다. Alamofire를 사용하여 더 간결하고 읽기 쉬운 코드로 서버와의 데이터 통신을 처리해 보세요."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBasic.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift Alamofire를 활용해서 쉽게 API 연동하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift Alamofire를 활용해서 쉽게 API 연동하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-06"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h3",null,{"id":"4fbf3662","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"서론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"모바일 애플리케이션을 개발할 때, 서버와의 데이터 통신은 필수적입니다. Swift 언어를 사용하여 iOS 애플리케이션을 개발하는 과정에서, RESTful API와의 통신을 효율적으로 처리하기 위해 Alamofire라는 네트워크 라이브러리를 사용할 수 있습니다. 이 글에서는 Alamofire를 활용하여 API 연동을 쉽게 구현하는 방법을 소개하고, 예제 코드를 통해 실습해 보겠습니다."}],"\n",["$","h3",null,{"id":"8074c771","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Alamofire 소개"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Alamofire는 Swift 언어로 작성된 네트워크 라이브러리로, HTTP 네트워킹을 간편하게 처리할 수 있도록 도와줍니다. Apple의 URLSession을 래핑(wrapping)하여 더 간결하고 읽기 쉬운 코드로 네트워크 요청을 작성할 수 있게 해줍니다. Alamofire를 사용하면 데이터 요청, 파일 다운로드 및 업로드, JSON 파싱 등을 쉽게 수행할 수 있습니다."}],"\n",["$","h3",null,{"id":"330d6537","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Alamofire 설치"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Alamofire를 프로젝트에 추가하려면 CocoaPods, Carthage, Swift Package Manager(SPM)와 같은 의존성 관리 도구를 사용할 수 있습니다. 여기서는 CocoaPods를 이용한 설치 방법을 설명합니다."}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"Podfile 생성 및 수정"}],": 프로젝트 루트 디렉토리에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Podfile","position":{"start":{"line":14,"column":39,"offset":645},"end":{"line":14,"column":48,"offset":654}}}],"position":{"start":{"line":14,"column":39,"offset":645},"end":{"line":14,"column":48,"offset":654}}},"children":"Podfile"}}],"을 생성하고, 다음 내용을 추가합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-ruby","node":{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"text","value":"platform :ios, '11.0'\nuse_frameworks!\n\ntarget 'YourAppName' do\n  pod 'Alamofire', '~> 5.4'\nend\n"}],"position":{"start":{"line":16,"column":4,"offset":680},"end":{"line":23,"column":7,"offset":804}}},"children":"platform :ios, '11.0'\nuse_frameworks!\n\ntarget 'YourAppName' do\n  pod 'Alamofire', '~> 5.4'\nend\n"}}]}],"\n"]}],"\n",["$","li","li-1",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"Pod 설치"}],": 터미널을 열고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pod install","position":{"start":{"line":25,"column":25,"offset":830},"end":{"line":25,"column":38,"offset":843}}}],"position":{"start":{"line":25,"column":25,"offset":830},"end":{"line":25,"column":38,"offset":843}}},"children":"pod install"}}]," 명령어를 실행합니다. 그러면 Alamofire가 프로젝트에 추가됩니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-sh","node":{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"pod install\n"}],"position":{"start":{"line":27,"column":4,"offset":888},"end":{"line":29,"column":7,"offset":915}}},"children":"pod install\n"}}]}],"\n"]}],"\n",["$","li","li-2",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"Workspace 열기"}],": 설치가 완료되면, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".xcworkspace","position":{"start":{"line":31,"column":32,"offset":948},"end":{"line":31,"column":46,"offset":962}}}],"position":{"start":{"line":31,"column":32,"offset":948},"end":{"line":31,"column":46,"offset":962}}},"children":".xcworkspace"}}]," 파일을 열어 프로젝트를 진행합니다."]}],"\n"]}],"\n"]}],"\n",["$","h3",null,{"id":"9e1f5ff1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"기본적인 API 요청"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Alamofire를 사용하여 API 요청을 보내는 기본적인 방법을 살펴보겠습니다. 예를 들어, JSONPlaceholder라는 테스트용 API에서 사용자 목록을 가져오는 요청을 구현해 보겠습니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Alamofire\n\nfunc fetchUsers() {\n    let url = \"https://jsonplaceholder.typicode.com/users\"\n\n    AF.request(url).responseJSON { response in\n        switch response.result {\n        case .success(let data):\n            print(\"Success with JSON: \\(data)\")\n        case .failure(let error):\n            print(\"Request failed with error: \\(error)\")\n        }\n    }\n}\n"}],"position":{"start":{"line":37,"column":1,"offset":1112},"end":{"line":52,"column":4,"offset":1492}}},"children":"import Alamofire\n\nfunc fetchUsers() {\n    let url = \"https://jsonplaceholder.typicode.com/users\"\n\n    AF.request(url).responseJSON { response in\n        switch response.result {\n        case .success(let data):\n            print(\"Success with JSON: \\(data)\")\n        case .failure(let error):\n            print(\"Request failed with error: \\(error)\")\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AF.request","position":{"start":{"line":54,"column":9,"offset":1502},"end":{"line":54,"column":21,"offset":1514}}}],"position":{"start":{"line":54,"column":9,"offset":1502},"end":{"line":54,"column":21,"offset":1514}}},"children":"AF.request"}}]," 메서드를 사용하여 URL에 GET 요청을 보내고, 응답을 JSON 형식으로 받아옵니다. 요청이 성공하면 JSON 데이터를 출력하고, 실패하면 에러 메시지를 출력합니다."]}],"\n",["$","h3",null,{"id":"511e13a8","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"파라미터와 헤더 추가하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"API 요청 시 파라미터나 헤더를 추가해야 하는 경우가 있습니다. Alamofire는 이를 매우 간단하게 처리할 수 있습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func fetchUsersWithParameters() {\n    let url = \"https://jsonplaceholder.typicode.com/users\"\n    let parameters: [String: Any] = [\"userId\": 1]\n    let headers: HTTPHeaders = [\n        \"Authorization\": \"Bearer your_token_here\",\n        \"Accept\": \"application/json\"\n    ]\n\n    AF.request(url, parameters: parameters, headers: headers).responseJSON { response in\n        switch response.result {\n        case .success(let data):\n            print(\"Success with JSON: \\(data)\")\n        case .failure(let error):\n            print(\"Request failed with error: \\(error)\")\n        }\n    }\n}\n"}],"position":{"start":{"line":60,"column":1,"offset":1701},"end":{"line":78,"column":4,"offset":2296}}},"children":"func fetchUsersWithParameters() {\n    let url = \"https://jsonplaceholder.typicode.com/users\"\n    let parameters: [String: Any] = [\"userId\": 1]\n    let headers: HTTPHeaders = [\n        \"Authorization\": \"Bearer your_token_here\",\n        \"Accept\": \"application/json\"\n    ]\n\n    AF.request(url, parameters: parameters, headers: headers).responseJSON { response in\n        switch response.result {\n        case .success(let data):\n            print(\"Success with JSON: \\(data)\")\n        case .failure(let error):\n            print(\"Request failed with error: \\(error)\")\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"parameters","position":{"start":{"line":80,"column":6,"offset":2303},"end":{"line":80,"column":18,"offset":2315}}}],"position":{"start":{"line":80,"column":6,"offset":2303},"end":{"line":80,"column":18,"offset":2315}}},"children":"parameters"}}]," 딕셔너리와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"HTTPHeaders","position":{"start":{"line":80,"column":25,"offset":2322},"end":{"line":80,"column":38,"offset":2335}}}],"position":{"start":{"line":80,"column":25,"offset":2322},"end":{"line":80,"column":38,"offset":2335}}},"children":"HTTPHeaders"}}]," 객체를 사용하여 요청에 파라미터와 헤더를 추가했습니다. 이렇게 하면 인증 토큰이나 특정 필터링 조건을 서버에 전달할 수 있습니다."]}],"\n",["$","h3",null,{"id":"504bea86","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"POST 요청 보내기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"POST 요청은 주로 서버에 데이터를 전송할 때 사용됩니다. Alamofire에서는 POST 요청도 간단히 처리할 수 있습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func createUser() {\n    let url = \"https://jsonplaceholder.typicode.com/users\"\n    let parameters: [String: Any] = [\n        \"name\": \"John Doe\",\n        \"username\": \"johndoe\",\n        \"email\": \"johndoe@example.com\"\n    ]\n\n    AF.request(url, method: .post, parameters: parameters, encoding: JSONEncoding.default).responseJSON { response in\n        switch response.result {\n        case .success(let data):\n            print(\"User created with response: \\(data)\")\n        case .failure(let error):\n            print(\"Request failed with error: \\(error)\")\n        }\n    }\n}\n"}],"position":{"start":{"line":86,"column":1,"offset":2500},"end":{"line":104,"column":4,"offset":3084}}},"children":"func createUser() {\n    let url = \"https://jsonplaceholder.typicode.com/users\"\n    let parameters: [String: Any] = [\n        \"name\": \"John Doe\",\n        \"username\": \"johndoe\",\n        \"email\": \"johndoe@example.com\"\n    ]\n\n    AF.request(url, method: .post, parameters: parameters, encoding: JSONEncoding.default).responseJSON { response in\n        switch response.result {\n        case .success(let data):\n            print(\"User created with response: \\(data)\")\n        case .failure(let error):\n            print(\"Request failed with error: \\(error)\")\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["POST 요청을 보내기 위해서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"method","position":{"start":{"line":106,"column":19,"offset":3104},"end":{"line":106,"column":27,"offset":3112}}}],"position":{"start":{"line":106,"column":19,"offset":3104},"end":{"line":106,"column":27,"offset":3112}}},"children":"method"}}]," 파라미터를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".post","position":{"start":{"line":106,"column":34,"offset":3119},"end":{"line":106,"column":41,"offset":3126}}}],"position":{"start":{"line":106,"column":34,"offset":3119},"end":{"line":106,"column":41,"offset":3126}}},"children":".post"}}],"로 설정하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"parameters","position":{"start":{"line":106,"column":49,"offset":3134},"end":{"line":106,"column":61,"offset":3146}}}],"position":{"start":{"line":106,"column":49,"offset":3134},"end":{"line":106,"column":61,"offset":3146}}},"children":"parameters"}}],"를 JSON 형식으로 인코딩하여 전송합니다."]}],"\n",["$","h3",null,{"id":"a1579506","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"JSON 데이터 파싱"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"서버로부터 받은 JSON 데이터를 Swift 객체로 변환하려면 Codable 프로토콜을 사용합니다. 아래는 사용자 정보를 담는 모델을 정의하고, JSON 데이터를 파싱하는 예제입니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\n\nstruct User: Codable {\n    let id: Int\n    let name: String\n    let username: String\n    let email: String\n}\n\nfunc fetchAndParseUsers() {\n    let url = \"https://jsonplaceholder.typicode.com/users\"\n\n    AF.request(url).responseData { response in\n        switch response.result {\n        case .success(let data):\n            do {\n                let users = try JSONDecoder().decode([User].self, from: data)\n                print(\"Parsed Users: \\(users)\")\n            } catch {\n                print(\"Failed to decode JSON with error: \\(error)\")\n            }\n        case .failure(let error):\n            print(\"Request failed with error: \\(error)\")\n        }\n    }\n}\n"}],"position":{"start":{"line":112,"column":1,"offset":3293},"end":{"line":139,"column":4,"offset":3991}}},"children":"import Foundation\n\nstruct User: Codable {\n    let id: Int\n    let name: String\n    let username: String\n    let email: String\n}\n\nfunc fetchAndParseUsers() {\n    let url = \"https://jsonplaceholder.typicode.com/users\"\n\n    AF.request(url).responseData { response in\n        switch response.result {\n        case .success(let data):\n            do {\n                let users = try JSONDecoder().decode([User].self, from: data)\n                print(\"Parsed Users: \\(users)\")\n            } catch {\n                print(\"Failed to decode JSON with error: \\(error)\")\n            }\n        case .failure(let error):\n            print(\"Request failed with error: \\(error)\")\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"responseData","position":{"start":{"line":141,"column":6,"offset":3998},"end":{"line":141,"column":20,"offset":4012}}}],"position":{"start":{"line":141,"column":6,"offset":3998},"end":{"line":141,"column":20,"offset":4012}}},"children":"responseData"}}],"를 사용하여 응답 데이터를 받아온 후, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"JSONDecoder","position":{"start":{"line":141,"column":42,"offset":4034},"end":{"line":141,"column":55,"offset":4047}}}],"position":{"start":{"line":141,"column":42,"offset":4034},"end":{"line":141,"column":55,"offset":4047}}},"children":"JSONDecoder"}}],"를 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"User","position":{"start":{"line":141,"column":62,"offset":4054},"end":{"line":141,"column":68,"offset":4060}}}],"position":{"start":{"line":141,"column":62,"offset":4054},"end":{"line":141,"column":68,"offset":4060}}},"children":"User"}}]," 배열로 디코딩합니다. 이렇게 하면 JSON 데이터를 쉽게 Swift 객체로 변환하여 사용할 수 있습니다."]}],"\n",["$","h3",null,{"id":"5b12bcf2","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Alamofire를 사용하면 Swift에서 네트워크 요청을 매우 간편하게 처리할 수 있습니다. 이 글에서는 Alamofire를 설치하고, 기본적인 GET 및 POST 요청을 보내고, 파라미터와 헤더를 추가하고, JSON 데이터를 파싱하는 방법을 설명했습니다. 이 외에도 Alamofire는 파일 업로드 및 다운로드, 네트워크 상태 모니터링 등 다양한 기능을 제공하므로, 공식 문서를 참고하여 더욱 깊이 있는 활용 방법을 익히는 것을 추천합니다. Alamofire를 통해 네트워크 통신을 효율적으로 처리하여 더 나은 iOS 애플리케이션을 개발해 보세요."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift Alamofire를 활용해서 쉽게 API 연동하기","toc":[{"tagName":"h3","title":"서론","id":"4fbf3662"},{"tagName":"h3","title":"Alamofire 소개","id":"8074c771"},{"tagName":"h3","title":"Alamofire 설치","id":"330d6537"},{"tagName":"h3","title":"기본적인 API 요청","id":"9e1f5ff1"},{"tagName":"h3","title":"파라미터와 헤더 추가하기","id":"511e13a8"},{"tagName":"h3","title":"POST 요청 보내기","id":"504bea86"},{"tagName":"h3","title":"JSON 데이터 파싱","id":"a1579506"},{"tagName":"h3","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
