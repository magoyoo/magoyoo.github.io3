1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","NSCollectionLayoutDimension%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EC%B2%AB-UICollectionViewCompositionalLayout-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-6ff98357","d"],{"children":["__PAGE__?{\"slug\":\"NSCollectionLayoutDimension을-사용한-첫-UICollectionViewCompositionalLayout-구현하기-6ff98357\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","NSCollectionLayoutDimension%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EC%B2%AB-UICollectionViewCompositionalLayout-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-6ff98357","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"NSCollectionLayoutDimension을-사용한-첫-UICollectionViewCompositionalLayout-구현하기-6ff98357\"}"},"styles":[]}],"segment":["slug","NSCollectionLayoutDimension%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EC%B2%AB-UICollectionViewCompositionalLayout-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-6ff98357","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"NSCollectionLayoutDimension을 사용한 첫 UICollectionViewCompositionalLayout 구현하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 UICollectionViewCompositionalLayout을 통해 새로운 형태로 컬렉션뷰를 레이아웃하고, NSCollectionLayoutDimension을 사용하여 첫 번째 컴포지셔널 레이아웃을 구현하는 방법을 단계별로 살펴봅니다."}],["$","meta","3",{"name":"keywords","content":"Swift,UICollectionView,iOS,CompositionalLayout"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/NSCollectionLayoutDimension%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EC%B2%AB-UICollectionViewCompositionalLayout-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-6ff98357"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"NSCollectionLayoutDimension을 사용한 첫 UICollectionViewCompositionalLayout 구현하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"NSCollectionLayoutDimension을 사용한 첫 UICollectionViewCompositionalLayout 구현하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 UICollectionViewCompositionalLayout을 통해 새로운 형태로 컬렉션뷰를 레이아웃하고, NSCollectionLayoutDimension을 사용하여 첫 번째 컴포지셔널 레이아웃을 구현하는 방법을 단계별로 살펴봅니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/NSCollectionLayoutDimension%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EC%B2%AB-UICollectionViewCompositionalLayout-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-6ff98357"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"NSCollectionLayoutDimension을 사용한 첫 UICollectionViewCompositionalLayout 구현하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 UICollectionViewCompositionalLayout을 통해 새로운 형태로 컬렉션뷰를 레이아웃하고, NSCollectionLayoutDimension을 사용하여 첫 번째 컴포지셔널 레이아웃을 구현하는 방법을 단계별로 살펴봅니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
10:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
11:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T430,import UIKit

class ViewController: UIViewController {
    var collectionView: UICollectionView!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        configureHierarchy()
    }
    
    private func configureHierarchy() {
        collectionView = UICollectionView(frame: view.bounds, collectionViewLayout: createLayout())
        collectionView.autoresizingMask = [.flexibleWidth, .flexibleHeight]
        view.addSubview(collectionView)
    }
    
    private func createLayout() -> UICollectionViewCompositionalLayout {
        let layout = UICollectionViewCompositionalLayout { (sectionIndex: Int, layoutEnvironment: NSCollectionLayoutEnvironment) -> NSCollectionLayoutSection? in
            return self.createSection(for: sectionIndex)
        }
        return layout
    }

    private func createSection(for sectionIndex: Int) -> NSCollectionLayoutSection {
        // 섹션을 정의합니다.
        if sectionIndex == 0 {
            return createFirstSection()
        } else {
            return createSecondSection()
        }
    }
}
f:T430,import UIKit

class ViewController: UIViewController {
    var collectionView: UICollectionView!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        configureHierarchy()
    }
    
    private func configureHierarchy() {
        collectionView = UICollectionView(frame: view.bounds, collectionViewLayout: createLayout())
        collectionView.autoresizingMask = [.flexibleWidth, .flexibleHeight]
        view.addSubview(collectionView)
    }
    
    private func createLayout() -> UICollectionViewCompositionalLayout {
        let layout = UICollectionViewCompositionalLayout { (sectionIndex: Int, layoutEnvironment: NSCollectionLayoutEnvironment) -> NSCollectionLayoutSection? in
            return self.createSection(for: sectionIndex)
        }
        return layout
    }

    private func createSection(for sectionIndex: Int) -> NSCollectionLayoutSection {
        // 섹션을 정의합니다.
        if sectionIndex == 0 {
            return createFirstSection()
        } else {
            return createSecondSection()
        }
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner5.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"NSCollectionLayoutDimension을 사용한 첫 UICollectionViewCompositionalLayout 구현하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"NSCollectionLayoutDimension을 사용한 첫 UICollectionViewCompositionalLayout 구현하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-28"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"0b5f6e67","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"NSCollectionLayoutDimension을 사용한 첫 UICollectionViewCompositionalLayout 구현하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["UICollectionView는 iOS 개발에서 굉장히 강력한 도구입니다. UICollectionView를 사용하면 화면에 데이터를 다양한 방식으로 배치할 수 있습니다. Swift에서는 컴포지셔널 레이아웃을 사용하여 복잡한 레이아웃을 간단하게 구축할 수 있습니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSCollectionLayoutDimension","position":{"start":{"line":4,"column":156,"offset":235},"end":{"line":4,"column":185,"offset":264}}}],"position":{"start":{"line":4,"column":156,"offset":235},"end":{"line":4,"column":185,"offset":264}}},"children":"NSCollectionLayoutDimension"}}],"을 사용하여 첫 번째 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UICollectionViewCompositionalLayout","position":{"start":{"line":4,"column":197,"offset":276},"end":{"line":4,"column":234,"offset":313}}}],"position":{"start":{"line":4,"column":197,"offset":276},"end":{"line":4,"column":234,"offset":313}}},"children":"UICollectionViewCompositionalLayout"}}],"을 구현하는 방법을 설명하겠습니다."]}],"\n",["$","h2",null,{"id":"7d6d141c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"컴포지셔널 레이아웃의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"컴포지셔널 레이아웃은 iOS 13에서 소개된 기능으로, 새로운 방식으로 컬렉션뷰의 레이아웃을 구성할 수 있게 해줍니다. 이 레이아웃 시스템은 레이아웃을 작은 단위인 섹션으로 나누고, 각 섹션은 항목들로 구성됩니다. 각 항목은 상응하는 레이아웃 크기와 위치를 지정할 수 있습니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"컴포지셔널 레이아웃의 주요 요소는 다음과 같습니다."}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"아이템"}],": 기본 구성 요소로, 셀에 해당합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"그룹"}],": 아이템들을 포함하는 컨테이너입니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"섹션"}],": 그룹들을 포함하는 컨테이너입니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"레이아웃"}],": 섹션들을 배열하여 전체 컴포지셔널 레이아웃을 정의합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"894ab016","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"NSCollectionLayoutDimension 소개 및 사용 예시"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSCollectionLayoutDimension","position":{"start":{"line":18,"column":1,"offset":721},"end":{"line":18,"column":30,"offset":750}}}],"position":{"start":{"line":18,"column":1,"offset":721},"end":{"line":18,"column":30,"offset":750}}},"children":"NSCollectionLayoutDimension"}}],"은 아이템, 그룹 또는 섹션의 크기를 정의하는 데 사용됩니다. 이 클래스는 항목의 너비와 높이를 지정하는 다양한 방법을 제공합니다. 주요 메서드는 다음과 같습니다."]}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"absolute(_:)","position":{"start":{"line":19,"column":3,"offset":844},"end":{"line":19,"column":17,"offset":858}}}],"position":{"start":{"line":19,"column":3,"offset":844},"end":{"line":19,"column":17,"offset":858}}},"children":"absolute(_:)"}}],": 절대 값을 사용하여 크기를 지정합니다."]}],"\n",["$","li","li-1",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fractionalWidth(_:)","position":{"start":{"line":20,"column":3,"offset":884},"end":{"line":20,"column":24,"offset":905}}}],"position":{"start":{"line":20,"column":3,"offset":884},"end":{"line":20,"column":24,"offset":905}}},"children":"fractionalWidth(_:)"}}],": 부모의 너비에 대한 비율로 크기를 지정합니다."]}],"\n",["$","li","li-2",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fractionalHeight(_:)","position":{"start":{"line":21,"column":3,"offset":935},"end":{"line":21,"column":25,"offset":957}}}],"position":{"start":{"line":21,"column":3,"offset":935},"end":{"line":21,"column":25,"offset":957}}},"children":"fractionalHeight(_:)"}}],": 부모의 높이에 대한 비율로 크기를 지정합니다."]}],"\n",["$","li","li-3",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"estimated(_:)","position":{"start":{"line":22,"column":3,"offset":987},"end":{"line":22,"column":18,"offset":1002}}}],"position":{"start":{"line":22,"column":3,"offset":987},"end":{"line":22,"column":18,"offset":1002}}},"children":"estimated(_:)"}}],": 추정 크기를 사용하여 지정합니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"4dea733b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"절대 크기 사용 예시"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"절대 크기를 사용하면 항목의 크기를 픽셀 단위로 고정합니다. 예를 들어, 아이템의 너비와 높이를 각각 100포인트로 설정할 수 있습니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let itemSize = NSCollectionLayoutSize(widthDimension: .absolute(100), heightDimension: .absolute(100))\nlet item = NSCollectionLayoutItem(layoutSize: itemSize)\n"}],"position":{"start":{"line":26,"column":1,"offset":1117},"end":{"line":29,"column":4,"offset":1288}}},"children":"let itemSize = NSCollectionLayoutSize(widthDimension: .absolute(100), heightDimension: .absolute(100))\nlet item = NSCollectionLayoutItem(layoutSize: itemSize)\n"}}]}],"\n",["$","h3",null,{"id":"d422da90","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"비율 크기 사용 예시"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"부모의 크기에 대한 비율을 사용하여 크기를 지정할 수도 있습니다. 예를 들어, 아이템의 너비를 부모의 너비의 50%로 설정할 수 있습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let itemSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(0.5), heightDimension: .fractionalHeight(1.0))\nlet item = NSCollectionLayoutItem(layoutSize: itemSize)\n"}],"position":{"start":{"line":32,"column":1,"offset":1383},"end":{"line":35,"column":4,"offset":1569}}},"children":"let itemSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(0.5), heightDimension: .fractionalHeight(1.0))\nlet item = NSCollectionLayoutItem(layoutSize: itemSize)\n"}}]}],"\n",["$","h2",null,{"id":"93889780","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"첫 번재 UICollectionViewCompositionalLayout 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 앞서 설명한 개념들을 조합하여 첫 번째 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UICollectionViewCompositionalLayout","position":{"start":{"line":39,"column":26,"offset":1644},"end":{"line":39,"column":63,"offset":1681}}}],"position":{"start":{"line":39,"column":26,"offset":1644},"end":{"line":39,"column":63,"offset":1681}}},"children":"UICollectionViewCompositionalLayout"}}],"을 구현해 보겠습니다. 이 예제에서는 두 개의 다른 섹션이 있으며, 첫 번째 섹션에는 가로 스크롤이 가능한 큰 이미지 아이템이 있고, 두 번째 섹션에는 세 개의 작은 이미지 아이템이 세로로 배치됩니다."]}],"\n",["$","h3",null,{"id":"0a49fd14","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"기본 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["우리는 먼저 기본 설정으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UICollectionView","position":{"start":{"line":42,"column":16,"offset":1820},"end":{"line":42,"column":34,"offset":1838}}}],"position":{"start":{"line":42,"column":16,"offset":1820},"end":{"line":42,"column":34,"offset":1838}}},"children":"UICollectionView"}}],"를 생성하고 레이아웃을 정의하도록 하겠습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":43,"column":1,"offset":1864},"end":{"line":76,"column":4,"offset":2932}}},"children":"$f"}}]}],"\n",["$","h3",null,{"id":"fb492ddd","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"섹션 구성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"첫 번째 섹션은 가로 스크롤이 가능한 큰 이미지 아이템들을 포함합니다. 각 아이템의 너비는 부모의 전체 너비이고 높이는 200포인트로 설정합니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"private func createFirstSection() -> NSCollectionLayoutSection {\n    let itemSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0), heightDimension: .absolute(200))\n    let item = NSCollectionLayoutItem(layoutSize: itemSize)\n\n    let groupSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0), heightDimension: .absolute(200))\n    let group = NSCollectionLayoutGroup.horizontal(layoutSize: groupSize, subitems: [item])\n    \n    let section = NSCollectionLayoutSection(group: group)\n    section.orthogonalScrollingBehavior = .continuous\n    return section\n}\n"}],"position":{"start":{"line":80,"column":1,"offset":3026},"end":{"line":92,"column":4,"offset":3623}}},"children":"private func createFirstSection() -> NSCollectionLayoutSection {\n    let itemSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0), heightDimension: .absolute(200))\n    let item = NSCollectionLayoutItem(layoutSize: itemSize)\n\n    let groupSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0), heightDimension: .absolute(200))\n    let group = NSCollectionLayoutGroup.horizontal(layoutSize: groupSize, subitems: [item])\n    \n    let section = NSCollectionLayoutSection(group: group)\n    section.orthogonalScrollingBehavior = .continuous\n    return section\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"두 번째 섹션은 세 개의 세로로 배치된 작은 이미지 아이템들을 포함합니다. 각각의 아이템은 부모의 너비의 1/3로 설정합니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"private func createSecondSection() -> NSCollectionLayoutSection {\n    let itemSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(0.3), heightDimension: .fractionalHeight(1.0))\n    let item = NSCollectionLayoutItem(layoutSize: itemSize)\n\n    let groupSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0), heightDimension: .absolute(100))\n    let group = NSCollectionLayoutGroup.horizontal(layoutSize: groupSize, subitems: [item])\n    \n    let section = NSCollectionLayoutSection(group: group)\n    return section\n}\n"}],"position":{"start":{"line":94,"column":1,"offset":3695},"end":{"line":105,"column":4,"offset":4247}}},"children":"private func createSecondSection() -> NSCollectionLayoutSection {\n    let itemSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(0.3), heightDimension: .fractionalHeight(1.0))\n    let item = NSCollectionLayoutItem(layoutSize: itemSize)\n\n    let groupSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0), heightDimension: .absolute(100))\n    let group = NSCollectionLayoutGroup.horizontal(layoutSize: groupSize, subitems: [item])\n    \n    let section = NSCollectionLayoutSection(group: group)\n    return section\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"createSection(for:)","position":{"start":{"line":106,"column":4,"offset":4251},"end":{"line":106,"column":25,"offset":4272}}}],"position":{"start":{"line":106,"column":4,"offset":4251},"end":{"line":106,"column":25,"offset":4272}}},"children":"createSection(for:)"}}]," 메서드에서 섹션들을 반환합니다."]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"private func createSection(for sectionIndex: Int) -> NSCollectionLayoutSection {\n    if sectionIndex == 0 {\n        return createFirstSection()\n    } else {\n        return createSecondSection()\n    }\n}\n"}],"position":{"start":{"line":107,"column":1,"offset":4291},"end":{"line":115,"column":4,"offset":4505}}},"children":"private func createSection(for sectionIndex: Int) -> NSCollectionLayoutSection {\n    if sectionIndex == 0 {\n        return createFirstSection()\n    } else {\n        return createSecondSection()\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이로써, 우리는 첫 번째 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UICollectionViewCompositionalLayout","position":{"start":{"line":116,"column":15,"offset":4520},"end":{"line":116,"column":52,"offset":4557}}}],"position":{"start":{"line":116,"column":15,"offset":4520},"end":{"line":116,"column":52,"offset":4557}}},"children":"UICollectionViewCompositionalLayout"}}],"을 구현했습니다. 이제 이 레이아웃을 통해 컬렉션뷰가 다양한 데이터와 스크롤 동작을 가진 섹션들로 채워질 수 있습니다."]}],"\n",["$","h3",null,{"id":"5b12bcf2","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSCollectionLayoutDimension","position":{"start":{"line":120,"column":8,"offset":4640},"end":{"line":120,"column":37,"offset":4669}}}],"position":{"start":{"line":120,"column":8,"offset":4640},"end":{"line":120,"column":37,"offset":4669}}},"children":"NSCollectionLayoutDimension"}}],"을 사용하여 첫 번째 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UICollectionViewCompositionalLayout","position":{"start":{"line":120,"column":49,"offset":4681},"end":{"line":120,"column":86,"offset":4718}}}],"position":{"start":{"line":120,"column":49,"offset":4681},"end":{"line":120,"column":86,"offset":4718}}},"children":"UICollectionViewCompositionalLayout"}}],"을 구현하는 방법을 다루었습니다. 컴포지셔널 레이아웃을 사용하면 복잡한 레이아웃도 손쉽게 정의할 수 있으며, 다양한 스크롤 동작과 항목 배치를 구현할 수 있습니다. iOS 개발에서 컬렉션뷰의 유연성을 최대한 활용하고 싶다면, 컴포지셔널 레이아웃은 반드시 익혀야 할 도구입니다."]}]]}]}],["$","$L10",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L11",null,{"articleTitle":"NSCollectionLayoutDimension을 사용한 첫 UICollectionViewCompositionalLayout 구현하기","toc":[{"tagName":"h1","title":"NSCollectionLayoutDimension을 사용한 첫 UICollectionViewCompositionalLayout 구현하기","id":"0b5f6e67"},{"tagName":"h2","title":"컴포지셔널 레이아웃의 기본 개념","id":"7d6d141c"},{"tagName":"h2","title":"NSCollectionLayoutDimension 소개 및 사용 예시","id":"894ab016"},{"tagName":"h3","title":"절대 크기 사용 예시","id":"4dea733b"},{"tagName":"h3","title":"비율 크기 사용 예시","id":"d422da90"},{"tagName":"h2","title":"첫 번재 UICollectionViewCompositionalLayout 구현","id":"93889780"},{"tagName":"h3","title":"기본 설정","id":"0a49fd14"},{"tagName":"h3","title":"섹션 구성","id":"fb492ddd"},{"tagName":"h3","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
