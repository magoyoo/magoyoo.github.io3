1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-%EC%86%8D%EC%84%B1-%EB%9E%98%ED%8D%BC%EC%9D%98-%EC%9D%B4%ED%95%B4%EC%99%80-%ED%99%9C%EC%9A%A9-%EC%86%8D%EC%84%B1-%EA%B4%80%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%9E%98%ED%8D%BC-%EA%B5%AC%ED%98%84-%EB%B0%A9%EB%B2%95-e40ea0af","d"],{"children":["__PAGE__?{\"slug\":\"Swift-속성-래퍼의-이해와-활용-속성-관리를-위한-커스텀-래퍼-구현-방법-e40ea0af\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-%EC%86%8D%EC%84%B1-%EB%9E%98%ED%8D%BC%EC%9D%98-%EC%9D%B4%ED%95%B4%EC%99%80-%ED%99%9C%EC%9A%A9-%EC%86%8D%EC%84%B1-%EA%B4%80%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%9E%98%ED%8D%BC-%EA%B5%AC%ED%98%84-%EB%B0%A9%EB%B2%95-e40ea0af","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-속성-래퍼의-이해와-활용-속성-관리를-위한-커스텀-래퍼-구현-방법-e40ea0af\"}"},"styles":[]}],"segment":["slug","Swift-%EC%86%8D%EC%84%B1-%EB%9E%98%ED%8D%BC%EC%9D%98-%EC%9D%B4%ED%95%B4%EC%99%80-%ED%99%9C%EC%9A%A9-%EC%86%8D%EC%84%B1-%EA%B4%80%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%9E%98%ED%8D%BC-%EA%B5%AC%ED%98%84-%EB%B0%A9%EB%B2%95-e40ea0af","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift 속성 래퍼의 이해와 활용: 속성 관리를 위한 커스텀 래퍼 구현 방법. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift 속성 래퍼를 활용한 속성 관리 방법을 소개합니다. 속성 래퍼의 기본 개념부터 커스텀 래퍼 구현 및 그 활용 방법까지 상세히 설명합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,속성 래퍼,Swift 프로그래밍,커스텀 래퍼"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-%EC%86%8D%EC%84%B1-%EB%9E%98%ED%8D%BC%EC%9D%98-%EC%9D%B4%ED%95%B4%EC%99%80-%ED%99%9C%EC%9A%A9-%EC%86%8D%EC%84%B1-%EA%B4%80%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%9E%98%ED%8D%BC-%EA%B5%AC%ED%98%84-%EB%B0%A9%EB%B2%95-e40ea0af"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift 속성 래퍼의 이해와 활용: 속성 관리를 위한 커스텀 래퍼 구현 방법. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift 속성 래퍼의 이해와 활용: 속성 관리를 위한 커스텀 래퍼 구현 방법. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift 속성 래퍼를 활용한 속성 관리 방법을 소개합니다. 속성 래퍼의 기본 개념부터 커스텀 래퍼 구현 및 그 활용 방법까지 상세히 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-%EC%86%8D%EC%84%B1-%EB%9E%98%ED%8D%BC%EC%9D%98-%EC%9D%B4%ED%95%B4%EC%99%80-%ED%99%9C%EC%9A%A9-%EC%86%8D%EC%84%B1-%EA%B4%80%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%9E%98%ED%8D%BC-%EA%B5%AC%ED%98%84-%EB%B0%A9%EB%B2%95-e40ea0af"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift 속성 래퍼의 이해와 활용: 속성 관리를 위한 커스텀 래퍼 구현 방법. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift 속성 래퍼를 활용한 속성 관리 방법을 소개합니다. 속성 래퍼의 기본 개념부터 커스텀 래퍼 구현 및 그 활용 방법까지 상세히 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift 속성 래퍼의 이해와 활용: 속성 관리를 위한 커스텀 래퍼 구현 방법."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift 속성 래퍼의 이해와 활용: 속성 관리를 위한 커스텀 래퍼 구현 방법."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-28"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"1d306fb5","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift 속성 래퍼의 이해와 활용: 속성 관리를 위한 커스텀 래퍼 구현 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift 속성 래퍼는 속성의 선언, 수정, 접근 방식을 간단하고 명료하게 만들어주는 강력한 도구입니다. 이 글에서는 속성 래퍼의 기본 개념, 이를 활용하는 방법 및 커스텀 속성 래퍼를 구현하여 특정 요구 사항을 충족하는 방법을 다룹니다."}],"\n",["$","h2",null,{"id":"164a42fc","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"속성 래퍼란 무엇인가?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["속성 래퍼는 속성의 접근 및 수정 방식을 커스터마이징할 수 있는 메커니즘입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@propertyWrapper","position":{"start":{"line":8,"column":46,"offset":245},"end":{"line":8,"column":64,"offset":263}}}],"position":{"start":{"line":8,"column":46,"offset":245},"end":{"line":8,"column":64,"offset":263}}},"children":"@propertyWrapper"}}],"를 사용하여 속성 선언 시 특정 로직을 자동으로 적용할 수 있습니다. 속성 래퍼는 재사용 가능한 코드 조각으로서, 코드의 가독성을 높이고 반복적인 코드 작성을 줄여줄 수 있습니다."]}],"\n",["$","h3",null,{"id":"b7fbc784","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"기본 속성 래퍼의 구조"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"속성 래퍼는 Swift에서 정의되며 다음과 같은 기본 구조를 가집니다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"@propertyWrapper\nstruct CustomWrapper {\n    private var value: Int\n\n    var wrappedValue: Int {\n        get { return value }\n        set { value = newValue }\n    }\n\n    init() {\n        self.value = 0\n    }\n}\n"}],"position":{"start":{"line":14,"column":1,"offset":424},"end":{"line":28,"column":4,"offset":645}}},"children":"@propertyWrapper\nstruct CustomWrapper {\n    private var value: Int\n\n    var wrappedValue: Int {\n        get { return value }\n        set { value = newValue }\n    }\n\n    init() {\n        self.value = 0\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 예시에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CustomWrapper","position":{"start":{"line":30,"column":9,"offset":655},"end":{"line":30,"column":24,"offset":670}}}],"position":{"start":{"line":30,"column":9,"offset":655},"end":{"line":30,"column":24,"offset":670}}},"children":"CustomWrapper"}}],"라는 래퍼는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Int","position":{"start":{"line":30,"column":31,"offset":677},"end":{"line":30,"column":36,"offset":682}}}],"position":{"start":{"line":30,"column":31,"offset":677},"end":{"line":30,"column":36,"offset":682}}},"children":"Int"}}]," 타입의 값을 래핑합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wrappedValue","position":{"start":{"line":30,"column":51,"offset":697},"end":{"line":30,"column":65,"offset":711}}}],"position":{"start":{"line":30,"column":51,"offset":697},"end":{"line":30,"column":65,"offset":711}}},"children":"wrappedValue"}}]," 프로퍼티를 통해 래핑된 값에 접근할 수 있으며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"get","position":{"start":{"line":30,"column":93,"offset":739},"end":{"line":30,"column":98,"offset":744}}}],"position":{"start":{"line":30,"column":93,"offset":739},"end":{"line":30,"column":98,"offset":744}}},"children":"get"}}]," 및 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"set","position":{"start":{"line":30,"column":101,"offset":747},"end":{"line":30,"column":106,"offset":752}}}],"position":{"start":{"line":30,"column":101,"offset":747},"end":{"line":30,"column":106,"offset":752}}},"children":"set"}}]," 블록을 통해 값을 가져오거나 설정할 때 특정 로직을 추가할 수 있습니다."]}],"\n",["$","h2",null,{"id":"d1091ba3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"속성 래퍼의 활용 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"속성 래퍼는 다양한 상황에서 활용될 수 있습니다. 예를 들어, 값의 유효성을 검사하거나 특정 동작을 로그로 남기는 용도로 사용할 수 있습니다. 다음은 몇 가지 활용 예시입니다."}],"\n",["$","h3",null,{"id":"e4b36bc5","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"값의 유효성 검사"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"속성 래퍼를 사용하여 속성의 값을 설정할 때 유효성 검사를 실시할 수 있습니다. 이는 입력 값이 특정 조건을 만족하는지 확인하는데 유용합니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"@propertyWrapper\nstruct NonNegative {\n    private var value: Int\n\n    var wrappedValue: Int {\n        get { return value }\n        set { value = max(0, newValue) }\n    }\n\n    init() {\n        self.value = 0\n    }\n}\n\nstruct Example {\n    @NonNegative var number: Int\n}\n\nvar example = Example()\nexample.number = -10\nprint(example.number) // 0으로 출력\n"}],"position":{"start":{"line":40,"column":1,"offset":1008},"end":{"line":62,"column":4,"offset":1366}}},"children":"@propertyWrapper\nstruct NonNegative {\n    private var value: Int\n\n    var wrappedValue: Int {\n        get { return value }\n        set { value = max(0, newValue) }\n    }\n\n    init() {\n        self.value = 0\n    }\n}\n\nstruct Example {\n    @NonNegative var number: Int\n}\n\nvar example = Example()\nexample.number = -10\nprint(example.number) // 0으로 출력\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@NonNegative","position":{"start":{"line":64,"column":9,"offset":1376},"end":{"line":64,"column":23,"offset":1390}}}],"position":{"start":{"line":64,"column":9,"offset":1376},"end":{"line":64,"column":23,"offset":1390}}},"children":"@NonNegative"}}]," 래퍼가 값을 설정할 때마다 값을 0과 비교하여 음수 값을 0으로 바꾸는 식으로 유효성을 검사하게 됩니다."]}],"\n",["$","h3",null,{"id":"1d1897c4","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"로그 기록"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"속성 래퍼를 사용하여 속성 값이 변경될 때마다 로그를 남길 수 있습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"@propertyWrapper\nstruct LoggingWrapper<T> {\n    private var value: T\n\n    var wrappedValue: T {\n        get { return value }\n        set {\n            print(\"값이 \\(value)에서 \\(newValue)로 변경되었습니다.\")\n            value = newValue\n        }\n    }\n\n    init(initialValue: T) {\n        self.value = initialValue\n    }\n}\n\nstruct LoggerExample {\n    @LoggingWrapper var value: Int = 0\n}\n\nvar loggerExample = LoggerExample()\nloggerExample.value = 42 // 값이 0에서 42로 변경되었습니다. 가 출력됨\n"}],"position":{"start":{"line":70,"column":1,"offset":1504},"end":{"line":94,"column":4,"offset":1984}}},"children":"@propertyWrapper\nstruct LoggingWrapper<T> {\n    private var value: T\n\n    var wrappedValue: T {\n        get { return value }\n        set {\n            print(\"값이 \\(value)에서 \\(newValue)로 변경되었습니다.\")\n            value = newValue\n        }\n    }\n\n    init(initialValue: T) {\n        self.value = initialValue\n    }\n}\n\nstruct LoggerExample {\n    @LoggingWrapper var value: Int = 0\n}\n\nvar loggerExample = LoggerExample()\nloggerExample.value = 42 // 값이 0에서 42로 변경되었습니다. 가 출력됨\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 예시에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LoggingWrapper","position":{"start":{"line":96,"column":10,"offset":1995},"end":{"line":96,"column":26,"offset":2011}}}],"position":{"start":{"line":96,"column":10,"offset":1995},"end":{"line":96,"column":26,"offset":2011}}},"children":"LoggingWrapper"}}]," 래퍼를 사용하여 속성 값이 변경될 때마다 콘솔에 로그 메시지를 남깁니다."]}],"\n",["$","h2",null,{"id":"d990833d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"커스텀 속성 래퍼 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"커스텀 속성 래퍼를 구현하는 방법은 간단합니다. 필요한 동작을 정의하고 이를 래핑한 구조체 또는 클래스로 만들면 됩니다."}],"\n",["$","h3",null,{"id":"d577407c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"커스텀 래퍼 예제: 연대기화 속성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"예를 들어, 속성 값이 설정될 때마다 이전 값들을 기록하는 래퍼를 만들어 보겠습니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"@propertyWrapper\nstruct Chronological<T> {\n    private var history: [T] = []\n    private var current: T\n\n    var wrappedValue: T {\n        get { return current }\n        set {\n            history.append(current)\n            current = newValue\n        }\n    }\n\n    var projectedValue: [T] {\n        return history\n    }\n\n    init(wrappedValue: T) {\n        self.current = wrappedValue\n    }\n}\n\nstruct ChronicleExample {\n    @Chronological(wrappedValue: 0) var value: Int\n}\n\nvar chronicle = ChronicleExample()\nchronicle.value = 10\nchronicle.value = 20\nprint(chronicle.$value) // 이전 값들이 순서대로 출력됨 (0, 10)\n"}],"position":{"start":{"line":106,"column":1,"offset":2213},"end":{"line":137,"column":4,"offset":2826}}},"children":"@propertyWrapper\nstruct Chronological<T> {\n    private var history: [T] = []\n    private var current: T\n\n    var wrappedValue: T {\n        get { return current }\n        set {\n            history.append(current)\n            current = newValue\n        }\n    }\n\n    var projectedValue: [T] {\n        return history\n    }\n\n    init(wrappedValue: T) {\n        self.current = wrappedValue\n    }\n}\n\nstruct ChronicleExample {\n    @Chronological(wrappedValue: 0) var value: Int\n}\n\nvar chronicle = ChronicleExample()\nchronicle.value = 10\nchronicle.value = 20\nprint(chronicle.$value) // 이전 값들이 순서대로 출력됨 (0, 10)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 예시에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Chronological","position":{"start":{"line":139,"column":9,"offset":2836},"end":{"line":139,"column":24,"offset":2851}}}],"position":{"start":{"line":139,"column":9,"offset":2836},"end":{"line":139,"column":24,"offset":2851}}},"children":"Chronological"}}]," 래퍼는 속성 값이 변경될 때마다 이전 값을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"history","position":{"start":{"line":139,"column":49,"offset":2876},"end":{"line":139,"column":58,"offset":2885}}}],"position":{"start":{"line":139,"column":49,"offset":2876},"end":{"line":139,"column":58,"offset":2885}}},"children":"history"}}]," 배열에 저장합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"projectedValue","position":{"start":{"line":139,"column":70,"offset":2897},"end":{"line":139,"column":86,"offset":2913}}}],"position":{"start":{"line":139,"column":70,"offset":2897},"end":{"line":139,"column":86,"offset":2913}}},"children":"projectedValue"}}],"를 사용하여 래퍼 외부에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"history","position":{"start":{"line":139,"column":101,"offset":2928},"end":{"line":139,"column":110,"offset":2937}}}],"position":{"start":{"line":139,"column":101,"offset":2928},"end":{"line":139,"column":110,"offset":2937}}},"children":"history"}}],"에 접근할 수 있도록 합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift 속성 래퍼는 속성의 관리를 쉽게 하고, 반복적인 코드를 줄이며, 코드의 가독성을 높이는 효과적인 방법입니다. 기본 속성 래퍼를 이해하고 커스텀 래퍼를 구현하는 방법을 익히면, 다양한 상황에서 이 강력한 도구를 활용할 수 있습니다. 속성 래퍼를 통해 코드의 모듈성을 높이고 더 유지 보수하기 쉬운 코드를 작성해 보세요."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift 속성 래퍼의 이해와 활용: 속성 관리를 위한 커스텀 래퍼 구현 방법.","toc":[{"tagName":"h1","title":"Swift 속성 래퍼의 이해와 활용: 속성 관리를 위한 커스텀 래퍼 구현 방법","id":"1d306fb5"},{"tagName":"h2","title":"속성 래퍼란 무엇인가?","id":"164a42fc"},{"tagName":"h3","title":"기본 속성 래퍼의 구조","id":"b7fbc784"},{"tagName":"h2","title":"속성 래퍼의 활용 방법","id":"d1091ba3"},{"tagName":"h3","title":"값의 유효성 검사","id":"e4b36bc5"},{"tagName":"h3","title":"로그 기록","id":"1d1897c4"},{"tagName":"h2","title":"커스텀 속성 래퍼 구현","id":"d990833d"},{"tagName":"h3","title":"커스텀 래퍼 예제: 연대기화 속성","id":"d577407c"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
