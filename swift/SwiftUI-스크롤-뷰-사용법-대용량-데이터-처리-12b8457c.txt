1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EB%B7%B0-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8C%80%EC%9A%A9%EB%9F%89-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-12b8457c","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI-스크롤-뷰-사용법-대용량-데이터-처리-12b8457c\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EB%B7%B0-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8C%80%EC%9A%A9%EB%9F%89-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-12b8457c","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI-스크롤-뷰-사용법-대용량-데이터-처리-12b8457c\"}"},"styles":[]}],"segment":["slug","SwiftUI-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EB%B7%B0-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8C%80%EC%9A%A9%EB%9F%89-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-12b8457c","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI 스크롤 뷰 사용법: 대용량 데이터 처리 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 SwiftUI에서 스크롤 뷰를 사용하여 대용량 데이터를 효율적으로 처리하는 방법에 대해 다룹니다. 스크롤 뷰의 기본 사용법부터 성능 최적화 기법까지 폭넓게 설명합니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,스크롤 뷰,대용량 데이터,성능 최적화"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EB%B7%B0-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8C%80%EC%9A%A9%EB%9F%89-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-12b8457c"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI 스크롤 뷰 사용법: 대용량 데이터 처리 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI 스크롤 뷰 사용법: 대용량 데이터 처리 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 SwiftUI에서 스크롤 뷰를 사용하여 대용량 데이터를 효율적으로 처리하는 방법에 대해 다룹니다. 스크롤 뷰의 기본 사용법부터 성능 최적화 기법까지 폭넓게 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EB%B7%B0-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8C%80%EC%9A%A9%EB%9F%89-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-12b8457c"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI 스크롤 뷰 사용법: 대용량 데이터 처리 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 SwiftUI에서 스크롤 뷰를 사용하여 대용량 데이터를 효율적으로 처리하는 방법에 대해 다룹니다. 스크롤 뷰의 기본 사용법부터 성능 최적화 기법까지 폭넓게 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI 스크롤 뷰 사용법: 대용량 데이터 처리"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI 스크롤 뷰 사용법: 대용량 데이터 처리"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-09"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"b34a4d8f","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI 스크롤 뷰 사용법: 대용량 데이터 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI는 애플의 최신 사용자 인터페이스 프레임워크로, iOS, macOS, watchOS 및 tvOS에서 쉽게 UI를 만들 수 있게 해줍니다. 그러나 대용량 데이터를 처리하는 애플리케이션을 개발할 때는 추가적인 고려 사항이 필요합니다. 이 글에서는 SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ScrollView","position":{"start":{"line":4,"column":153,"offset":186},"end":{"line":4,"column":165,"offset":198}}}],"position":{"start":{"line":4,"column":153,"offset":186},"end":{"line":4,"column":165,"offset":198}}},"children":"ScrollView"}}],"를 사용하여 대용량 데이터를 효율적으로 처리하는 방법에 대해 알아보겠습니다."]}],"\n",["$","h2",null,{"id":"d843b28d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"기본 스크롤 뷰 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ScrollView","position":{"start":{"line":8,"column":12,"offset":269},"end":{"line":8,"column":24,"offset":281}}}],"position":{"start":{"line":8,"column":12,"offset":269},"end":{"line":8,"column":24,"offset":281}}},"children":"ScrollView"}}],"를 사용하여 스크롤 가능한 콘텐츠를 쉽게 만들 수 있습니다. 기본적인 예제 코드를 살펴보겠습니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    var body: some View {\n        ScrollView {\n            VStack(spacing: 20) {\n                ForEach(0..<100) { index in\n                    Text(\"Item \\(index)\")\n                        .padding()\n                        .background(Color.blue)\n                        .cornerRadius(10)\n                }\n            }\n            .padding()\n        }\n    }\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":337},"end":{"line":28,"column":4,"offset":757}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    var body: some View {\n        ScrollView {\n            VStack(spacing: 20) {\n                ForEach(0..<100) { index in\n                    Text(\"Item \\(index)\")\n                        .padding()\n                        .background(Color.blue)\n                        .cornerRadius(10)\n                }\n            }\n            .padding()\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제는 단순히 100개의 텍스트 아이템을 가진 스크롤 뷰를 생성합니다. 그러나 실제 앱에서는 대용량 데이터를 처리해야 할 경우가 많습니다. 이러한 경우를 위해 다양한 최적화 기법을 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"e0749cee","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"성능 최적화를 위한 테크닉"}],"\n",["$","h3",null,{"id":"a32dd53e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"LazyVStack을 이용한 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["기본 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"VStack","position":{"start":{"line":35,"column":4,"offset":918},"end":{"line":35,"column":12,"offset":926}}}],"position":{"start":{"line":35,"column":4,"offset":918},"end":{"line":35,"column":12,"offset":926}}},"children":"VStack"}}],"을 사용하면 모든 뷰가 한 번에 생성되므로 성능에 부담이 될 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyVStack","position":{"start":{"line":35,"column":54,"offset":968},"end":{"line":35,"column":66,"offset":980}}}],"position":{"start":{"line":35,"column":54,"offset":968},"end":{"line":35,"column":66,"offset":980}}},"children":"LazyVStack"}}],"을 사용하면 필요한 시점에만 뷰를 생성하므로 메모리 사용과 렌더링 성능이 크게 향상됩니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"ScrollView {\n    LazyVStack(spacing: 20) {\n        ForEach(0..<1000) { index in\n            Text(\"Item \\(index)\")\n                .padding()\n                .background(Color.blue)\n                .cornerRadius(10)\n        }\n    }\n    .padding()\n}\n"}],"position":{"start":{"line":37,"column":1,"offset":1032},"end":{"line":49,"column":4,"offset":1292}}},"children":"ScrollView {\n    LazyVStack(spacing: 20) {\n        ForEach(0..<1000) { index in\n            Text(\"Item \\(index)\")\n                .padding()\n                .background(Color.blue)\n                .cornerRadius(10)\n        }\n    }\n    .padding()\n}\n"}}]}],"\n",["$","h3",null,{"id":"7215825f","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"LazyHStack을 사용한 수평 스크롤"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["만약 수평 스크롤이 필요하다면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHStack","position":{"start":{"line":53,"column":18,"offset":1339},"end":{"line":53,"column":30,"offset":1351}}}],"position":{"start":{"line":53,"column":18,"offset":1339},"end":{"line":53,"column":30,"offset":1351}}},"children":"LazyHStack"}}],"을 사용할 수 있습니다. 이 역시 필요한 시점에만 뷰를 생성하므로 효율적으로 대용량 데이터를 처리합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"ScrollView(.horizontal) {\n    LazyHStack(spacing: 20) {\n        ForEach(0..<1000) { index in\n            Text(\"Item \\(index)\")\n                .padding()\n                .background(Color.blue)\n                .cornerRadius(10)\n        }\n    }\n    .padding()\n}\n"}],"position":{"start":{"line":55,"column":1,"offset":1411},"end":{"line":67,"column":4,"offset":1684}}},"children":"ScrollView(.horizontal) {\n    LazyHStack(spacing: 20) {\n        ForEach(0..<1000) { index in\n            Text(\"Item \\(index)\")\n                .padding()\n                .background(Color.blue)\n                .cornerRadius(10)\n        }\n    }\n    .padding()\n}\n"}}]}],"\n",["$","h2",null,{"id":"7ad7aaec","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"대용량 데이터에 대한 추가 고려사항"}],"\n",["$","h3",null,{"id":"e9883da0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"데이터 소싱과 비동기 로딩"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"대용량 데이터를 로컬에 모두 로드하는 것은 비효율적입니다. 비동기 로딩과 페이징을 활용해 성능을 더 향상시킬 수 있습니다. 예를 들어, Combine 프레임워크를 이용해 데이터를 비동기적으로 로드할 수 있습니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Combine\n\nclass DataModel: ObservableObject {\n    @Published var items: [String] = []\n    private var cancellable: AnyCancellable?\n    \n    init() {\n        loadData()\n    }\n    \n    func loadData() {\n        cancellable = URLSession.shared.dataTaskPublisher(for: URL(string: \"https://example.com/data\")!)\n            .map { $0.data }\n            .decode(type: [String].self, decoder: JSONDecoder())\n            .replaceError(with: [])\n            .receive(on: DispatchQueue.main)\n            .sink { [weak self] in self?.items = $0 }\n    }\n}\n"}],"position":{"start":{"line":75,"column":1,"offset":1850},"end":{"line":95,"column":4,"offset":2411}}},"children":"import Combine\n\nclass DataModel: ObservableObject {\n    @Published var items: [String] = []\n    private var cancellable: AnyCancellable?\n    \n    init() {\n        loadData()\n    }\n    \n    func loadData() {\n        cancellable = URLSession.shared.dataTaskPublisher(for: URL(string: \"https://example.com/data\")!)\n            .map { $0.data }\n            .decode(type: [String].self, decoder: JSONDecoder())\n            .replaceError(with: [])\n            .receive(on: DispatchQueue.main)\n            .sink { [weak self] in self?.items = $0 }\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"c500126e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Paginated List"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["대용량 데이터를 페이지 단위로 로드하여 메모리 사용을 줄일 수 있습니다. SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"List","position":{"start":{"line":99,"column":51,"offset":2483},"end":{"line":99,"column":57,"offset":2489}}}],"position":{"start":{"line":99,"column":51,"offset":2483},"end":{"line":99,"column":57,"offset":2489}}},"children":"List"}}],"와 함께 사용하면 무한 스크롤을 구현할 수 있습니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    @StateObject private var dataModel = DataModel()\n    @State private var currentPage = 1\n\n    var body: some View {\n        List(dataModel.items, id: \\ .self) { item in\n            Text(item)\n                .onAppear {\n                    if item == dataModel.items.last {\n                        currentPage += 1\n                        dataModel.loadPage(page: currentPage)\n                    }\n                }\n        }\n        .onAppear(perform: loadInitialData)\n    }\n\n    private func loadInitialData() {\n        dataModel.loadPage(page: currentPage)\n    }\n}\n"}],"position":{"start":{"line":101,"column":1,"offset":2520},"end":{"line":123,"column":4,"offset":3131}}},"children":"struct ContentView: View {\n    @StateObject private var dataModel = DataModel()\n    @State private var currentPage = 1\n\n    var body: some View {\n        List(dataModel.items, id: \\ .self) { item in\n            Text(item)\n                .onAppear {\n                    if item == dataModel.items.last {\n                        currentPage += 1\n                        dataModel.loadPage(page: currentPage)\n                    }\n                }\n        }\n        .onAppear(perform: loadInitialData)\n    }\n\n    private func loadInitialData() {\n        dataModel.loadPage(page: currentPage)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["클래스 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DataModel","position":{"start":{"line":125,"column":5,"offset":3137},"end":{"line":125,"column":16,"offset":3148}}}],"position":{"start":{"line":125,"column":5,"offset":3137},"end":{"line":125,"column":16,"offset":3148}}},"children":"DataModel"}}],"에서 페이지 단위로 데이터를 로드하는 메서드를 추가하면 됩니다."]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func loadPage(page: Int) {\n    let url = URL(string: \"https://example.com/data?page=\\(page)\")!\n    cancellable = URLSession.shared.dataTaskPublisher(for: url)\n        .map { $0.data }\n        .decode(type: [String].self, decoder: JSONDecoder())\n        .replaceError(with: [])\n        .receive(on: DispatchQueue.main)\n        .sink { [weak self] newItems in\n            self?.items.append(contentsOf: newItems)\n        }\n}\n"}],"position":{"start":{"line":127,"column":1,"offset":3185},"end":{"line":139,"column":4,"offset":3620}}},"children":"func loadPage(page: Int) {\n    let url = URL(string: \"https://example.com/data?page=\\(page)\")!\n    cancellable = URLSession.shared.dataTaskPublisher(for: url)\n        .map { $0.data }\n        .decode(type: [String].self, decoder: JSONDecoder())\n        .replaceError(with: [])\n        .receive(on: DispatchQueue.main)\n        .sink { [weak self] newItems in\n            self?.items.append(contentsOf: newItems)\n        }\n}\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ScrollView","position":{"start":{"line":143,"column":10,"offset":3638},"end":{"line":143,"column":22,"offset":3650}}}],"position":{"start":{"line":143,"column":10,"offset":3638},"end":{"line":143,"column":22,"offset":3650}}},"children":"ScrollView"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyVStack","position":{"start":{"line":143,"column":24,"offset":3652},"end":{"line":143,"column":36,"offset":3664}}}],"position":{"start":{"line":143,"column":24,"offset":3652},"end":{"line":143,"column":36,"offset":3664}}},"children":"LazyVStack"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHStack","position":{"start":{"line":143,"column":38,"offset":3666},"end":{"line":143,"column":50,"offset":3678}}}],"position":{"start":{"line":143,"column":38,"offset":3666},"end":{"line":143,"column":50,"offset":3678}}},"children":"LazyHStack"}}],"을 통해 대용량 데이터를 효율적으로 처리하는 방법에 대해 알아보았습니다. 비동기 데이터 로딩과 페이징 기법을 활용하면 성능을 더욱 최적화할 수 있습니다. 이 글을 통해 향후 개발에 있어 스크롤 뷰를 효율적으로 활용하는데 도움이 되었길 바랍니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI 스크롤 뷰 사용법: 대용량 데이터 처리","toc":[{"tagName":"h1","title":"SwiftUI 스크롤 뷰 사용법: 대용량 데이터 처리","id":"b34a4d8f"},{"tagName":"h2","title":"기본 스크롤 뷰 설정","id":"d843b28d"},{"tagName":"h2","title":"성능 최적화를 위한 테크닉","id":"e0749cee"},{"tagName":"h3","title":"LazyVStack을 이용한 최적화","id":"a32dd53e"},{"tagName":"h3","title":"LazyHStack을 사용한 수평 스크롤","id":"7215825f"},{"tagName":"h2","title":"대용량 데이터에 대한 추가 고려사항","id":"7ad7aaec"},{"tagName":"h3","title":"데이터 소싱과 비동기 로딩","id":"e9883da0"},{"tagName":"h3","title":"Paginated List","id":"c500126e"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
