1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B3%BC-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-DispatchQueue%EC%99%80-AsyncAwait-%ED%99%9C%EC%9A%A9-83e0c699","d"],{"children":["__PAGE__?{\"slug\":\"Swift-비동기-프로그래밍과-동시성-처리하기-DispatchQueue와-AsyncAwait-활용-83e0c699\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B3%BC-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-DispatchQueue%EC%99%80-AsyncAwait-%ED%99%9C%EC%9A%A9-83e0c699","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-비동기-프로그래밍과-동시성-처리하기-DispatchQueue와-AsyncAwait-활용-83e0c699\"}"},"styles":[]}],"segment":["slug","Swift-%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B3%BC-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-DispatchQueue%EC%99%80-AsyncAwait-%ED%99%9C%EC%9A%A9-83e0c699","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift 비동기 프로그래밍과 동시성 처리하기: DispatchQueue와 Async/Await 활용 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Swift 언어에서 비동기 프로그래밍과 동시성 처리를 위한 주요 도구인 DispatchQueue와 Async/Await를 두루 살펴보겠습니다. 이를 통해 더 나은 성능과 응답성을 보장하는 애플리케이션을 개발하는 방법을 이해하게 될 것입니다."}],["$","meta","3",{"name":"keywords","content":"Swift,비동기 프로그래밍,동시성,DispatchQueue"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B3%BC-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-DispatchQueue%EC%99%80-AsyncAwait-%ED%99%9C%EC%9A%A9-83e0c699"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift 비동기 프로그래밍과 동시성 처리하기: DispatchQueue와 Async/Await 활용 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift 비동기 프로그래밍과 동시성 처리하기: DispatchQueue와 Async/Await 활용 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Swift 언어에서 비동기 프로그래밍과 동시성 처리를 위한 주요 도구인 DispatchQueue와 Async/Await를 두루 살펴보겠습니다. 이를 통해 더 나은 성능과 응답성을 보장하는 애플리케이션을 개발하는 방법을 이해하게 될 것입니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B3%BC-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-DispatchQueue%EC%99%80-AsyncAwait-%ED%99%9C%EC%9A%A9-83e0c699"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift 비동기 프로그래밍과 동시성 처리하기: DispatchQueue와 Async/Await 활용 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Swift 언어에서 비동기 프로그래밍과 동시성 처리를 위한 주요 도구인 DispatchQueue와 Async/Await를 두루 살펴보겠습니다. 이를 통해 더 나은 성능과 응답성을 보장하는 애플리케이션을 개발하는 방법을 이해하게 될 것입니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift 비동기 프로그래밍과 동시성 처리하기: DispatchQueue와 Async/Await 활용"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift 비동기 프로그래밍과 동시성 처리하기: DispatchQueue와 Async/Await 활용"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-04"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"39114d1d","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift 비동기 프로그래밍과 동시성 처리하기: DispatchQueue와 Async/Await 활용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["비동기 프로그래밍과 동시성 처리는 현대 애플리케이션 개발에서 매우 중요한 요소입니다. Swift에서는 이를 위해 다양한 도구와 패턴을 제공하며, 그 중에서도 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":4,"column":89,"offset":149},"end":{"line":4,"column":104,"offset":164}}}],"position":{"start":{"line":4,"column":89,"offset":149},"end":{"line":4,"column":104,"offset":164}}},"children":"DispatchQueue"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Async/Await","position":{"start":{"line":4,"column":106,"offset":166},"end":{"line":4,"column":119,"offset":179}}}],"position":{"start":{"line":4,"column":106,"offset":166},"end":{"line":4,"column":119,"offset":179}}},"children":"Async/Await"}}],"는 가장 핵심적인 역할을 합니다. 이 글에서는 이 두 가지 도구에 대해 자세히 살펴보고, 이를 활용하여 효율적이고 빠른 애플리케이션을 개발하는 방법을 알아보겠습니다."]}],"\n",["$","h2",null,{"id":"78047722","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"DispatchQueue: 시작하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":8,"column":1,"offset":297},"end":{"line":8,"column":16,"offset":312}}}],"position":{"start":{"line":8,"column":1,"offset":297},"end":{"line":8,"column":16,"offset":312}}},"children":"DispatchQueue"}}],"는 Grand Central Dispatch(GCD)의 일부분으로, 작업을 비동기적으로 실행할 때 사용하는 추상화 도구입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":8,"column":87,"offset":383},"end":{"line":8,"column":102,"offset":398}}}],"position":{"start":{"line":8,"column":87,"offset":383},"end":{"line":8,"column":102,"offset":398}}},"children":"DispatchQueue"}}],"는 기본적으로 두 종류가 있습니다:"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"Serial DispatchQueue"}],": 한 번에 하나의 작업만 실행됩니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"Concurrent DispatchQueue"}],": 여러 작업을 동시에 실행할 수 있습니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":13,"column":1,"offset":523},"end":{"line":13,"column":16,"offset":538}}}],"position":{"start":{"line":13,"column":1,"offset":523},"end":{"line":13,"column":16,"offset":538}}},"children":"DispatchQueue"}}],"를 사용하면 복잡한 스레드 관리를 직접 하지 않아도 되므로 관련 오류를 줄일 수 있습니다. 간단한 예제를 통해 이를 더 잘 이해해 보겠습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let serialQueue = DispatchQueue(label: \"com.example.serialQueue\")\n\nserialQueue.async {\n    print(\"작업 1 시작\")\n    sleep(2)\n    print(\"작업 1 종료\")\n}\n\nserialQueue.async {\n    print(\"작업 2 시작\")\n    sleep(1)\n    print(\"작업 2 종료\")\n}\n"}],"position":{"start":{"line":15,"column":1,"offset":619},"end":{"line":29,"column":4,"offset":853}}},"children":"let serialQueue = DispatchQueue(label: \"com.example.serialQueue\")\n\nserialQueue.async {\n    print(\"작업 1 시작\")\n    sleep(2)\n    print(\"작업 1 종료\")\n}\n\nserialQueue.async {\n    print(\"작업 2 시작\")\n    sleep(1)\n    print(\"작업 2 종료\")\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"serialQueue","position":{"start":{"line":31,"column":8,"offset":862},"end":{"line":31,"column":21,"offset":875}}}],"position":{"start":{"line":31,"column":8,"offset":862},"end":{"line":31,"column":21,"offset":875}}},"children":"serialQueue"}}],"는 두 개의 작업을 순차적으로 실행합니다. 첫 번째 작업이 종료된 후에야 두 번째 작업이 시작됩니다. 반면, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Concurrent DispatchQueue","position":{"start":{"line":31,"column":82,"offset":936},"end":{"line":31,"column":108,"offset":962}}}],"position":{"start":{"line":31,"column":82,"offset":936},"end":{"line":31,"column":108,"offset":962}}},"children":"Concurrent DispatchQueue"}}],"는 다음과 같이 동작합니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let concurrentQueue = DispatchQueue(label: \"com.example.concurrentQueue\", attributes: .concurrent)\n\nconcurrentQueue.async {\n    print(\"작업 1 시작\")\n    sleep(2)\n    print(\"작업 1 종료\")\n}\n\nconcurrentQueue.async {\n    print(\"작업 2 시작\")\n    sleep(1)\n    print(\"작업 2 종료\")\n}\n"}],"position":{"start":{"line":33,"column":1,"offset":979},"end":{"line":47,"column":4,"offset":1254}}},"children":"let concurrentQueue = DispatchQueue(label: \"com.example.concurrentQueue\", attributes: .concurrent)\n\nconcurrentQueue.async {\n    print(\"작업 1 시작\")\n    sleep(2)\n    print(\"작업 1 종료\")\n}\n\nconcurrentQueue.async {\n    print(\"작업 2 시작\")\n    sleep(1)\n    print(\"작업 2 종료\")\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"concurrentQueue","position":{"start":{"line":49,"column":1,"offset":1256},"end":{"line":49,"column":18,"offset":1273}}}],"position":{"start":{"line":49,"column":1,"offset":1256},"end":{"line":49,"column":18,"offset":1273}}},"children":"concurrentQueue"}}],"는 두 개의 작업을 동시에 실행하며, 각 작업은 독립적으로 실행됩니다. 이 때문에 작업 2가 작업 1보다 먼저 종료될 수 있습니다."]}],"\n",["$","h2",null,{"id":"37a1a302","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Async/Await: 더 나은 비동기 프로그래밍"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift 5.5에서는 더욱 직관적이고 관리하기 쉬운 비동기 코드를 작성할 수 있는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Async/Await","position":{"start":{"line":53,"column":48,"offset":1427},"end":{"line":53,"column":61,"offset":1440}}}],"position":{"start":{"line":53,"column":48,"offset":1427},"end":{"line":53,"column":61,"offset":1440}}},"children":"Async/Await"}}]," 문법이 도입되었습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Async/Await","position":{"start":{"line":53,"column":75,"offset":1454},"end":{"line":53,"column":88,"offset":1467}}}],"position":{"start":{"line":53,"column":75,"offset":1454},"end":{"line":53,"column":88,"offset":1467}}},"children":"Async/Await"}}],"는 기존의 콜백 기반 비동기 코드의 복잡성을 줄여줍니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["아래는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Async/Await","position":{"start":{"line":55,"column":5,"offset":1504},"end":{"line":55,"column":18,"offset":1517}}}],"position":{"start":{"line":55,"column":5,"offset":1504},"end":{"line":55,"column":18,"offset":1517}}},"children":"Async/Await"}}],"를 사용한 예제입니다:"]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func fetchData() async -> String {\n    // 네트워크 요청 시뮬레이션\n    await Task.sleep(2 * 1_000_000_000)\n    return \"데이터 로드 완료\"\n}\n\n@main\nstruct MyApp {\n    static func main() async {\n        let result = await fetchData()\n        print(result)\n    }\n}\n"}],"position":{"start":{"line":57,"column":1,"offset":1531},"end":{"line":71,"column":4,"offset":1786}}},"children":"func fetchData() async -> String {\n    // 네트워크 요청 시뮬레이션\n    await Task.sleep(2 * 1_000_000_000)\n    return \"데이터 로드 완료\"\n}\n\n@main\nstruct MyApp {\n    static func main() async {\n        let result = await fetchData()\n        print(result)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetchData","position":{"start":{"line":73,"column":8,"offset":1795},"end":{"line":73,"column":19,"offset":1806}}}],"position":{"start":{"line":73,"column":8,"offset":1795},"end":{"line":73,"column":19,"offset":1806}}},"children":"fetchData"}}]," 함수는 비동기로 동작하며, 데이터 로드를 시뮬레이션하기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Task.sleep","position":{"start":{"line":73,"column":54,"offset":1841},"end":{"line":73,"column":66,"offset":1853}}}],"position":{"start":{"line":73,"column":54,"offset":1841},"end":{"line":73,"column":66,"offset":1853}}},"children":"Task.sleep"}}],"을 사용하고 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"main","position":{"start":{"line":73,"column":79,"offset":1866},"end":{"line":73,"column":85,"offset":1872}}}],"position":{"start":{"line":73,"column":79,"offset":1866},"end":{"line":73,"column":85,"offset":1872}}},"children":"main"}}]," 함수에서 이 비동기 함수를 호출할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":73,"column":107,"offset":1894},"end":{"line":73,"column":114,"offset":1901}}}],"position":{"start":{"line":73,"column":107,"offset":1894},"end":{"line":73,"column":114,"offset":1901}}},"children":"await"}}]," 키워드를 사용하여 결과를 기다립니다. 이는 마치 동기 함수처럼 보이지만 실제로는 비동기로 동작합니다."]}],"\n",["$","h2",null,{"id":"4289f478","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"DispatchQueue와 Async/Await 혼합 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여러 상황에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":77,"column":9,"offset":2007},"end":{"line":77,"column":24,"offset":2022}}}],"position":{"start":{"line":77,"column":9,"offset":2007},"end":{"line":77,"column":24,"offset":2022}}},"children":"DispatchQueue"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Async/Await","position":{"start":{"line":77,"column":26,"offset":2024},"end":{"line":77,"column":39,"offset":2037}}}],"position":{"start":{"line":77,"column":26,"offset":2024},"end":{"line":77,"column":39,"offset":2037}}},"children":"Async/Await"}}],"를 함께 사용하면 더욱 강력한 비동기 프로그래밍을 구현할 수 있습니다. 예를 들어, 특정 작업을 백그라운드에서 실행하면서 UI 작업은 메인 스레드에서 유지해야 하는 경우를 생각해봅시다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func performBackgroundTask() async {\n    await withCheckedContinuation { continuation in\n        DispatchQueue.global().async {\n            // 백그라운드 작업 수행\n            sleep(2)\n            continuation.resume(returning: \"작업 완료\")\n        }\n    }\n}\n\n@main\nstruct MyApp {\n    static func main() async {\n        let result = await performBackgroundTask()\n        await MainActor.run {\n            print(\"메인 스레드에서 결과 처리: \\(result)\")\n        }\n    }\n}\n"}],"position":{"start":{"line":79,"column":1,"offset":2142},"end":{"line":99,"column":4,"offset":2599}}},"children":"func performBackgroundTask() async {\n    await withCheckedContinuation { continuation in\n        DispatchQueue.global().async {\n            // 백그라운드 작업 수행\n            sleep(2)\n            continuation.resume(returning: \"작업 완료\")\n        }\n    }\n}\n\n@main\nstruct MyApp {\n    static func main() async {\n        let result = await performBackgroundTask()\n        await MainActor.run {\n            print(\"메인 스레드에서 결과 처리: \\(result)\")\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"performBackgroundTask","position":{"start":{"line":101,"column":7,"offset":2607},"end":{"line":101,"column":30,"offset":2630}}}],"position":{"start":{"line":101,"column":7,"offset":2607},"end":{"line":101,"column":30,"offset":2630}}},"children":"performBackgroundTask"}}]," 함수는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue.global().async","position":{"start":{"line":101,"column":35,"offset":2635},"end":{"line":101,"column":65,"offset":2665}}}],"position":{"start":{"line":101,"column":35,"offset":2635},"end":{"line":101,"column":65,"offset":2665}}},"children":"DispatchQueue.global().async"}}],"를 사용하여 백그라운드 작업을 수행한 후, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"withCheckedContinuation","position":{"start":{"line":101,"column":89,"offset":2689},"end":{"line":101,"column":114,"offset":2714}}}],"position":{"start":{"line":101,"column":89,"offset":2689},"end":{"line":101,"column":114,"offset":2714}}},"children":"withCheckedContinuation"}}],"을 사용해 비동기 계산의 결괏값을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":101,"column":133,"offset":2733},"end":{"line":101,"column":140,"offset":2740}}}],"position":{"start":{"line":101,"column":133,"offset":2733},"end":{"line":101,"column":140,"offset":2740}}},"children":"await"}}]," 키워드로 기다립니다. 이 기능은 더 복잡한 비동기 시나리오를 단순하게 구현할 수 있게 합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서 비동기 프로그래밍과 동시성 처리를 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":105,"column":31,"offset":2832},"end":{"line":105,"column":46,"offset":2847}}}],"position":{"start":{"line":105,"column":31,"offset":2832},"end":{"line":105,"column":46,"offset":2847}}},"children":"DispatchQueue"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Async/Await","position":{"start":{"line":105,"column":48,"offset":2849},"end":{"line":105,"column":61,"offset":2862}}}],"position":{"start":{"line":105,"column":48,"offset":2849},"end":{"line":105,"column":61,"offset":2862}}},"children":"Async/Await"}}],"를 활용하는 방법을 알아보았습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":105,"column":81,"offset":2882},"end":{"line":105,"column":96,"offset":2897}}}],"position":{"start":{"line":105,"column":81,"offset":2882},"end":{"line":105,"column":96,"offset":2897}}},"children":"DispatchQueue"}}],"는 적절한 스레드 관리와 동시성 제어를 가능하게 해주며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Async/Await","position":{"start":{"line":105,"column":128,"offset":2929},"end":{"line":105,"column":141,"offset":2942}}}],"position":{"start":{"line":105,"column":128,"offset":2929},"end":{"line":105,"column":141,"offset":2942}}},"children":"Async/Await"}}],"는 비동기 코드를 더욱 읽기 쉽고 관리하기 쉽게 만들어줍니다. 이 두 가지 도구를 적절히 조합하면 복잡한 비동기 프로그램도 효율적으로 구현할 수 있습니다. Swift로 개발하는 모든 애플리케이션에서 이러한 도구들을 적극 활용해 보세요."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift 비동기 프로그래밍과 동시성 처리하기: DispatchQueue와 Async/Await 활용","toc":[{"tagName":"h1","title":"Swift 비동기 프로그래밍과 동시성 처리하기: DispatchQueue와 Async/Await 활용","id":"39114d1d"},{"tagName":"h2","title":"DispatchQueue: 시작하기","id":"78047722"},{"tagName":"h2","title":"Async/Await: 더 나은 비동기 프로그래밍","id":"37a1a302"},{"tagName":"h2","title":"DispatchQueue와 Async/Await 혼합 사용하기","id":"4289f478"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
