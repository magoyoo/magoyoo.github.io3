1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","JavaScript-%EB%AA%A8%EB%93%88-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%BD%94%EB%93%9C-%EA%B5%AC%EC%A1%B0%ED%99%94-%EB%B0%8F-%EC%9E%AC%EC%82%AC%EC%9A%A9%EC%84%B1-%ED%96%A5%EC%83%81-3f1b1f83","d"],{"children":["__PAGE__?{\"slug\":\"JavaScript-모듈-시스템-코드-구조화-및-재사용성-향상-3f1b1f83\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","JavaScript-%EB%AA%A8%EB%93%88-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%BD%94%EB%93%9C-%EA%B5%AC%EC%A1%B0%ED%99%94-%EB%B0%8F-%EC%9E%AC%EC%82%AC%EC%9A%A9%EC%84%B1-%ED%96%A5%EC%83%81-3f1b1f83","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"JavaScript-모듈-시스템-코드-구조화-및-재사용성-향상-3f1b1f83\"}"},"styles":[]}],"segment":["slug","JavaScript-%EB%AA%A8%EB%93%88-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%BD%94%EB%93%9C-%EA%B5%AC%EC%A1%B0%ED%99%94-%EB%B0%8F-%EC%9E%AC%EC%82%AC%EC%9A%A9%EC%84%B1-%ED%96%A5%EC%83%81-3f1b1f83","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"JavaScript 모듈 시스템: 코드 구조화 및 재사용성 향상 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 JavaScript 모듈 시스템의 기초와 이를 통해 코드 구조화 및 재사용성을 어떻게 향상시킬 수 있는지에 대해 설명합니다. 다양한 모듈 시스템의 종류와 사용법을 다루며, 모듈화의 중요성도 강조합니다."}],["$","meta","3",{"name":"keywords","content":"JavaScript,모듈,코드 재사용,코드 구조화"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/JavaScript-%EB%AA%A8%EB%93%88-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%BD%94%EB%93%9C-%EA%B5%AC%EC%A1%B0%ED%99%94-%EB%B0%8F-%EC%9E%AC%EC%82%AC%EC%9A%A9%EC%84%B1-%ED%96%A5%EC%83%81-3f1b1f83"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"JavaScript 모듈 시스템: 코드 구조화 및 재사용성 향상 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"JavaScript 모듈 시스템: 코드 구조화 및 재사용성 향상 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 JavaScript 모듈 시스템의 기초와 이를 통해 코드 구조화 및 재사용성을 어떻게 향상시킬 수 있는지에 대해 설명합니다. 다양한 모듈 시스템의 종류와 사용법을 다루며, 모듈화의 중요성도 강조합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/JavaScript-%EB%AA%A8%EB%93%88-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%BD%94%EB%93%9C-%EA%B5%AC%EC%A1%B0%ED%99%94-%EB%B0%8F-%EC%9E%AC%EC%82%AC%EC%9A%A9%EC%84%B1-%ED%96%A5%EC%83%81-3f1b1f83"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"JavaScript 모듈 시스템: 코드 구조화 및 재사용성 향상 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 JavaScript 모듈 시스템의 기초와 이를 통해 코드 구조화 및 재사용성을 어떻게 향상시킬 수 있는지에 대해 설명합니다. 다양한 모듈 시스템의 종류와 사용법을 다루며, 모듈화의 중요성도 강조합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"JavaScript 모듈 시스템: 코드 구조화 및 재사용성 향상"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"JavaScript 모듈 시스템: 코드 구조화 및 재사용성 향상"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-24"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"8002b071","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"JavaScript 모듈 시스템: 코드 구조화 및 재사용성 향상"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"JavaScript는 원래 작은 스크립트를 위한 언어로 설계되었지만, 시간이 지나면서 큰 애플리케이션을 개발하는 데에도 널리 사용되고 있습니다. 큰 코드베이스를 관리하려면 코드를 재사용 가능하고 구조적으로 작게 나누는 것이 필수적입니다. 이는 유지보수성과 읽기 쉬운 코드를 만드는 데 중요한 역할을 합니다. 이 글에서는 JavaScript 모듈 시스템의 기본 개념과 다양한 모듈 시스템을 살펴보고, 이를 사용하여 코드 구조화 및 재사용성을 어떻게 향상시킬 수 있는지 설명합니다."}],"\n",["$","h2",null,{"id":"8fdd7179","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"왜 모듈화가 중요한가?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"모듈화는 코드를 작게 나누어 여러 파일로 관리하는 방법을 말합니다. 모듈화의 주요 장점은 다음과 같습니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"재사용성"}],": 코드를 한 번 작성하고 여러 곳에서 사용할 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"유지보수성"}],": 코드의 특정 부분만 수정해도 전체 애플리케이션에 영향을 미치지 않습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"가독성"}],": 코드를 작은 단위로 나누면 읽고 이해하기 쉬워집니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"협업 효율성"}],": 여러 사람이 동시에 같은 프로젝트에서 작업할 때 충돌을 줄일 수 있습니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이러한 이유로 많은 개발자가 모듈화를 통해 코드를 구조화합니다."}],"\n",["$","h2",null,{"id":"6f3fe9fa","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"JavaScript 모듈 시스템의 종류"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"JavaScript는 다양한 모듈 시스템을 제공합니다. 가장 널리 사용되는 모듈 시스템은 다음과 같습니다:"}],"\n",["$","h3",null,{"id":"377dd01e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"CommonJS"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"CommonJS는 Node.js에서 사용되는 모듈 시스템입니다. 서버사이드 JavaScript 개발에서 주로 사용되며, 모듈을 정의하고 가져오는 방법을 제공합니다. CommonJS의 예는 다음과 같습니다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// 모듈 정의 (math.js)\nmodule.exports.add = function(a, b) {\n    return a + b;\n};\n\n// 모듈 가져오기 (app.js)\nconst math = require('./math');\nconsole.log(math.add(2, 3)); // 출력: 5\n"}],"position":{"start":{"line":25,"column":1,"offset":841},"end":{"line":34,"column":4,"offset":1027}}},"children":"// 모듈 정의 (math.js)\nmodule.exports.add = function(a, b) {\n    return a + b;\n};\n\n// 모듈 가져오기 (app.js)\nconst math = require('./math');\nconsole.log(math.add(2, 3)); // 출력: 5\n"}}]}],"\n",["$","h3",null,{"id":"b4137654","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"AMD (Asynchronous Module Definition)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"AMD는 주로 브라우저 환경에서 사용되는 모듈 시스템입니다. 비동기적으로 모듈을 로드할 수 있어 성능과 사용자 경험을 향상시킵니다. RequireJS와 같은 라이브러리를 통해 구현됩니다. AMD의 예는 다음과 같습니다:"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"define(['math'], function(math) {\n    console.log(math.add(2, 3)); // 출력: 5\n});\n"}],"position":{"start":{"line":40,"column":1,"offset":1195},"end":{"line":44,"column":4,"offset":1292}}},"children":"define(['math'], function(math) {\n    console.log(math.add(2, 3)); // 출력: 5\n});\n"}}]}],"\n",["$","h3",null,{"id":"b44634ab","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"ES6 모듈 (ECMAScript 2015)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["ES6 모듈은 최신 JavaScript 표준에서 도입된 모듈 시스템으로, 브라우저와 Node.js 모두에서 사용할 수 있습니다. ES6 모듈의 주요 특징은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import","position":{"start":{"line":48,"column":88,"offset":1411},"end":{"line":48,"column":96,"offset":1419}}}],"position":{"start":{"line":48,"column":88,"offset":1411},"end":{"line":48,"column":96,"offset":1419}}},"children":"import"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"export","position":{"start":{"line":48,"column":98,"offset":1421},"end":{"line":48,"column":106,"offset":1429}}}],"position":{"start":{"line":48,"column":98,"offset":1421},"end":{"line":48,"column":106,"offset":1429}}},"children":"export"}}]," 키워드를 사용하여 모듈을 정의하고 가져오는 것입니다. ES6 모듈의 예는 다음과 같습니다:"]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// 모듈 정의 (math.js)\nexport function add(a, b) {\n    return a + b;\n}\n\n// 모듈 가져오기 (app.js)\nimport { add } from './math.js';\nconsole.log(add(2, 3)); // 출력: 5\n"}],"position":{"start":{"line":50,"column":1,"offset":1482},"end":{"line":59,"column":4,"offset":1653}}},"children":"// 모듈 정의 (math.js)\nexport function add(a, b) {\n    return a + b;\n}\n\n// 모듈 가져오기 (app.js)\nimport { add } from './math.js';\nconsole.log(add(2, 3)); // 출력: 5\n"}}]}],"\n",["$","h2",null,{"id":"b534f110","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"ES6 모듈 자세히 살펴보기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"ES6 모듈은 JavaScript의 표준 모듈 시스템으로, 많은 장점을 가지고 있습니다:"}],"\n",["$","ol","ol-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"쉽고 직관적인 문법"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import","position":{"start":{"line":65,"column":20,"offset":1745},"end":{"line":65,"column":28,"offset":1753}}}],"position":{"start":{"line":65,"column":20,"offset":1745},"end":{"line":65,"column":28,"offset":1753}}},"children":"import"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"export","position":{"start":{"line":65,"column":30,"offset":1755},"end":{"line":65,"column":38,"offset":1763}}}],"position":{"start":{"line":65,"column":30,"offset":1755},"end":{"line":65,"column":38,"offset":1763}}},"children":"export"}}]," 키워드는 매우 명료하고 사용하기 쉽습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"정적 구조"}],": 컴파일 타임에 모듈 의존성을 분석할 수 있어 최적화에 유리합니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"c8de3403","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"모듈 내보내기 (Export)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"모듈을 내보내는 방법은 크게 두 가지입니다:"}],"\n",["$","ol","ol-2",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"Named Exports"}],": 여러 개의 함수를 내보낼 수 있습니다."]}],"\n"]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// utils.js\nexport function add(a, b) { return a + b; }\nexport function subtract(a, b) { return a - b; }\n"}],"position":{"start":{"line":74,"column":1,"offset":1933},"end":{"line":78,"column":4,"offset":2055}}},"children":"// utils.js\nexport function add(a, b) { return a + b; }\nexport function subtract(a, b) { return a - b; }\n"}}]}],"\n",["$","ol","ol-3",{"start":2,"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"Default Export"}],": 하나의 키 모듈을 내보낼 때 사용합니다."]}],"\n"]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// calculator.js\nexport default function(a, b) { return a * b; }\n"}],"position":{"start":{"line":82,"column":1,"offset":2104},"end":{"line":85,"column":4,"offset":2186}}},"children":"// calculator.js\nexport default function(a, b) { return a * b; }\n"}}]}],"\n",["$","h3",null,{"id":"193372eb","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"모듈 가져오기 (Import)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"모듈을 가져오는 방법도 두 가지로 나뉩니다:"}],"\n",["$","ol","ol-4",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"Named Imports"}],": 특정 함수를 가져옵니다."]}],"\n"]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import { add } from './utils.js';\nconsole.log(add(2, 3)); // 출력: 5\n"}],"position":{"start":{"line":93,"column":1,"offset":2273},"end":{"line":96,"column":4,"offset":2357}}},"children":"import { add } from './utils.js';\nconsole.log(add(2, 3)); // 출력: 5\n"}}]}],"\n",["$","ol","ol-5",{"start":2,"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"Default Import"}],": 기본으로 내보낸 모듈을 가져옵니다."]}],"\n"]}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import multiply from './calculator.js';\nconsole.log(multiply(2, 3)); // 출력: 6\n"}],"position":{"start":{"line":100,"column":1,"offset":2403},"end":{"line":103,"column":4,"offset":2498}}},"children":"import multiply from './calculator.js';\nconsole.log(multiply(2, 3)); // 출력: 6\n"}}]}],"\n",["$","h3",null,{"id":"6e8b9486","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"기타 기능"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"ES6 모듈에는 이 외에도 다양한 기능이 있습니다. 여러 개의 모듈을 한 번에 가져오거나, 별칭을 사용하여 모듈 이름을 바꿔 사용할 수도 있습니다."}],"\n",["$","pre","pre-7",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import * as math from './utils.js';\nconsole.log(math.add(2, 3)); // 출력: 5\n"}],"position":{"start":{"line":109,"column":1,"offset":2595},"end":{"line":112,"column":4,"offset":2686}}},"children":"import * as math from './utils.js';\nconsole.log(math.add(2, 3)); // 출력: 5\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"모듈 시스템은 JavaScript 애플리케이션 개발에서 중요한 역할을 합니다. CommonJS, AMD, ES6 모듈 등 다양한 모듈 시스템이 존재하며, 각기 다른 용도와 환경에서 사용됩니다. ES6 모듈은 최신 표준으로 브라우저와 서버 모두에서 사용할 수 있어 매우 유용합니다. 모듈화를 통해 코드를 구조화하고 재사용성을 높여보세요. 이는 코드 유지보수성과 가독성을 크게 향상시킬 수 있습니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"JavaScript 모듈 시스템: 코드 구조화 및 재사용성 향상","toc":[{"tagName":"h1","title":"JavaScript 모듈 시스템: 코드 구조화 및 재사용성 향상","id":"8002b071"},{"tagName":"h2","title":"왜 모듈화가 중요한가?","id":"8fdd7179"},{"tagName":"h2","title":"JavaScript 모듈 시스템의 종류","id":"6f3fe9fa"},{"tagName":"h3","title":"CommonJS","id":"377dd01e"},{"tagName":"h3","title":"AMD (Asynchronous Module Definition)","id":"b4137654"},{"tagName":"h3","title":"ES6 모듈 (ECMAScript 2015)","id":"b44634ab"},{"tagName":"h2","title":"ES6 모듈 자세히 살펴보기","id":"b534f110"},{"tagName":"h3","title":"모듈 내보내기 (Export)","id":"c8de3403"},{"tagName":"h3","title":"모듈 가져오기 (Import)","id":"193372eb"},{"tagName":"h3","title":"기타 기능","id":"6e8b9486"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
