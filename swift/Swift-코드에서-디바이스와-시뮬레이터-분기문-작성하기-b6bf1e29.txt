1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%99%80-%EC%8B%9C%EB%AE%AC%EB%A0%88%EC%9D%B4%ED%84%B0-%EB%B6%84%EA%B8%B0%EB%AC%B8-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0-b6bf1e29","d"],{"children":["__PAGE__?{\"slug\":\"Swift-코드에서-디바이스와-시뮬레이터-분기문-작성하기-b6bf1e29\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%99%80-%EC%8B%9C%EB%AE%AC%EB%A0%88%EC%9D%B4%ED%84%B0-%EB%B6%84%EA%B8%B0%EB%AC%B8-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0-b6bf1e29","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-코드에서-디바이스와-시뮬레이터-분기문-작성하기-b6bf1e29\"}"},"styles":[]}],"segment":["slug","Swift-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%99%80-%EC%8B%9C%EB%AE%AC%EB%A0%88%EC%9D%B4%ED%84%B0-%EB%B6%84%EA%B8%B0%EB%AC%B8-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0-b6bf1e29","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift 코드에서 디바이스와 시뮬레이터 분기문 작성하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift 언어를 사용하여 애플리케이션을 개발할 때, 디바이스와 시뮬레이터에서 코드가 다르게 실행되도록 조건문을 작성하는 방법에 대해 알아봅니다."}],["$","meta","3",{"name":"keywords","content":"Swift,iOS,시뮬레이터,디바이스"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%99%80-%EC%8B%9C%EB%AE%AC%EB%A0%88%EC%9D%B4%ED%84%B0-%EB%B6%84%EA%B8%B0%EB%AC%B8-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0-b6bf1e29"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift 코드에서 디바이스와 시뮬레이터 분기문 작성하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift 코드에서 디바이스와 시뮬레이터 분기문 작성하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift 언어를 사용하여 애플리케이션을 개발할 때, 디바이스와 시뮬레이터에서 코드가 다르게 실행되도록 조건문을 작성하는 방법에 대해 알아봅니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%99%80-%EC%8B%9C%EB%AE%AC%EB%A0%88%EC%9D%B4%ED%84%B0-%EB%B6%84%EA%B8%B0%EB%AC%B8-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0-b6bf1e29"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift 코드에서 디바이스와 시뮬레이터 분기문 작성하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift 언어를 사용하여 애플리케이션을 개발할 때, 디바이스와 시뮬레이터에서 코드가 다르게 실행되도록 조건문을 작성하는 방법에 대해 알아봅니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift 코드에서 디바이스와 시뮬레이터 분기문 작성하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift 코드에서 디바이스와 시뮬레이터 분기문 작성하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-17"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"66a105b6","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift 코드에서 디바이스와 시뮬레이터 분기문 작성하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift를 사용한 iOS 애플리케이션 개발 시, 디바이스와 시뮬레이터 간에 특정 코드가 다르게 실행되어야 하는 경우가 종종 있습니다. 예를 들어, 디바이스에서만 동작하는 하드웨어 관련 코드와 시뮬레이터에서만 동작하는 테스트 코드 등을 들 수 있습니다. 이 글에서는 이런 상황에서 유용하게 사용할 수 있는 분기문 작성법에 대해 알아보겠습니다."}],"\n",["$","h2",null,{"id":"e7da1fc6","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"시뮬레이터와 디바이스 구분하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저, 시뮬레이터와 물리적 디바이스를 구분하는 방법에 대해 살펴보겠습니다. Xcode는 시뮬레이터에서 실행 중인 지 확인하기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#if targetEnvironment(simulator)","position":{"start":{"line":8,"column":74,"offset":323},"end":{"line":8,"column":108,"offset":357}}}],"position":{"start":{"line":8,"column":74,"offset":323},"end":{"line":8,"column":108,"offset":357}}},"children":"#if targetEnvironment(simulator)"}}]," 조건을 제공합니다. 이 조건을 사용하면 하드웨어에 특화된 코드가 시뮬레이터에서 안전하게 무시될 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"#if targetEnvironment(simulator)\nprint(\"시뮬레이터에서 실행 중\")\n#else\nprint(\"디바이스에서 실행 중\")\n#endif\n"}],"position":{"start":{"line":10,"column":1,"offset":420},"end":{"line":16,"column":4,"offset":521}}},"children":"#if targetEnvironment(simulator)\nprint(\"시뮬레이터에서 실행 중\")\n#else\nprint(\"디바이스에서 실행 중\")\n#endif\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위의 예제 코드는 간단한 출력문을 사용해 시뮬레이터와 디바이스를 구분합니다. 이 분기문은 매우 강력하며, 다양한 시나리오에서 활용될 수 있습니다."}],"\n",["$","h3",null,{"id":"1bb039d2","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"분기문을 활용한 실제 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"구체적인 예시를 통해 시뮬레이터와 디바이스 간의 코드 분기를 어떻게 구현할 수 있는지 알아보겠습니다. 예를 들어, 카메라 기능을 사용하는 코드가 있다고 가정하겠습니다. 시뮬레이터에는 카메라가 없으므로 이를 감안한 분기 처리가 필요합니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\nimport AVFoundation\n\nclass CameraViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        setupCamera()\n    }\n\n    func setupCamera() {\n        #if targetEnvironment(simulator)\n        print(\"시뮬레이터에서는 카메라를 사용할 수 없습니다.\")\n        // 시뮬레이터에서 대체할 코드를 작성합니다.\n        #else\n        let captureSession = AVCaptureSession()\n        guard let videoCaptureDevice = AVCaptureDevice.default(for: .video) else { return }\n        let videoInput: AVCaptureDeviceInput\n        \n        do {\n            videoInput = try AVCaptureDeviceInput(device: videoCaptureDevice)\n        } catch {\n            return\n        }\n\n        if (captureSession.canAddInput(videoInput)) {\n            captureSession.addInput(videoInput)\n        } else {\n            // 디바이스에서 카메라가 사용 불가할 경우의 처리를 추가합니다.\n            return\n        }\n\n        // 추가적인 카메라 설정이나 사용 코드를 여기에 작성합니다.\n        #endif\n    }\n}\n"}],"position":{"start":{"line":24,"column":1,"offset":760},"end":{"line":61,"column":4,"offset":1699}}},"children":"import UIKit\nimport AVFoundation\n\nclass CameraViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        setupCamera()\n    }\n\n    func setupCamera() {\n        #if targetEnvironment(simulator)\n        print(\"시뮬레이터에서는 카메라를 사용할 수 없습니다.\")\n        // 시뮬레이터에서 대체할 코드를 작성합니다.\n        #else\n        let captureSession = AVCaptureSession()\n        guard let videoCaptureDevice = AVCaptureDevice.default(for: .video) else { return }\n        let videoInput: AVCaptureDeviceInput\n        \n        do {\n            videoInput = try AVCaptureDeviceInput(device: videoCaptureDevice)\n        } catch {\n            return\n        }\n\n        if (captureSession.canAddInput(videoInput)) {\n            captureSession.addInput(videoInput)\n        } else {\n            // 디바이스에서 카메라가 사용 불가할 경우의 처리를 추가합니다.\n            return\n        }\n\n        // 추가적인 카메라 설정이나 사용 코드를 여기에 작성합니다.\n        #endif\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위의 코드 예제는 뷰 컨트롤러에서 카메라를 설정하는 과정에서 시뮬레이터와 디바이스를 분리하여 처리하고 있습니다. 시뮬레이터에서는 카메라 설정을 생략하고 디버깅 메시지를 출력합니다. 반면, 실제 디바이스에서는 AVCaptureDevice를 사용해 카메라를 설정합니다."}],"\n",["$","h2",null,{"id":"ddf9e0a1","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"코드 모듈리티 유지하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"시뮬레이터와 디바이스 간의 분기 처리를 응용 프로그램 전반에 걸쳐 구현할 때는 코드의 모듈리티를 유지하는 것이 중요합니다. 분기 조건이 여러 곳에 흩어져 있으면 유지보수가 어려워질 수 있습니다. 따라서 분기 처리를 별도의 함수나 유틸리티 클래스로 분리하는 것이 좋습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class DeviceUtils {\n    static var isSimulator: Bool {\n        #if targetEnvironment(simulator)\n        return true\n        #else\n        return false\n        #endif\n    }\n}\n"}],"position":{"start":{"line":69,"column":1,"offset":2021},"end":{"line":79,"column":4,"offset":2207}}},"children":"class DeviceUtils {\n    static var isSimulator: Bool {\n        #if targetEnvironment(simulator)\n        return true\n        #else\n        return false\n        #endif\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 다음과 같이 간단하게 해당 클래스를 사용하여 코드 분기를 구현할 수 있습니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"if DeviceUtils.isSimulator {\n    print(\"시뮬레이터에서 실행 중\")\n    // 시뮬레이터 전용 코드\n} else {\n    print(\"디바이스에서 실행 중\")\n    // 디바이스 전용 코드\n}\n"}],"position":{"start":{"line":83,"column":1,"offset":2257},"end":{"line":91,"column":4,"offset":2397}}},"children":"if DeviceUtils.isSimulator {\n    print(\"시뮬레이터에서 실행 중\")\n    // 시뮬레이터 전용 코드\n} else {\n    print(\"디바이스에서 실행 중\")\n    // 디바이스 전용 코드\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이를 통해 코드의 가독성을 높이고 유연성을 확보할 수 있습니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift를 사용한 iOS 애플리케이션 개발에서는 디바이스와 시뮬레이터 간의 조건 분기 처리를 통해 더 안정적이고 테스트 가능한 코드를 작성할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#if targetEnvironment(simulator)","position":{"start":{"line":97,"column":89,"offset":2531},"end":{"line":97,"column":123,"offset":2565}}}],"position":{"start":{"line":97,"column":89,"offset":2531},"end":{"line":97,"column":123,"offset":2565}}},"children":"#if targetEnvironment(simulator)"}}]," 조건을 사용하여 시뮬레이터와 디바이스를 구분하는 방법을 배웠으며, 이를 응용하여 코드의 모듈리티를 유지하는 방법도 살펴보았습니다. 이러한 기술을 통해 다양한 환경에서 더 나은 품질의 애플리케이션을 개발할 수 있을 것입니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift 코드에서 디바이스와 시뮬레이터 분기문 작성하기","toc":[{"tagName":"h1","title":"Swift 코드에서 디바이스와 시뮬레이터 분기문 작성하기","id":"66a105b6"},{"tagName":"h2","title":"시뮬레이터와 디바이스 구분하기","id":"e7da1fc6"},{"tagName":"h3","title":"분기문을 활용한 실제 예제","id":"1bb039d2"},{"tagName":"h2","title":"코드 모듈리티 유지하기","id":"ddf9e0a1"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
