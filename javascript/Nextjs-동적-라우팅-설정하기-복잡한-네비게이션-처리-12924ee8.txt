1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","Nextjs-%EB%8F%99%EC%A0%81-%EB%9D%BC%EC%9A%B0%ED%8C%85-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-%EC%B2%98%EB%A6%AC-12924ee8","d"],{"children":["__PAGE__?{\"slug\":\"Nextjs-동적-라우팅-설정하기-복잡한-네비게이션-처리-12924ee8\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","Nextjs-%EB%8F%99%EC%A0%81-%EB%9D%BC%EC%9A%B0%ED%8C%85-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-%EC%B2%98%EB%A6%AC-12924ee8","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Nextjs-동적-라우팅-설정하기-복잡한-네비게이션-처리-12924ee8\"}"},"styles":[]}],"segment":["slug","Nextjs-%EB%8F%99%EC%A0%81-%EB%9D%BC%EC%9A%B0%ED%8C%85-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-%EC%B2%98%EB%A6%AC-12924ee8","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Next.js 동적 라우팅 설정하기: 복잡한 네비게이션 처리 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Next.js의 동적 라우팅 설정 방법과 복잡한 네비게이션 처리를 설명합니다. Next.js의 파일 기반 라우팅, 동적 라우팅 사용법, getStaticPaths 및 getServerSideProps 함수 활용법 등을 다룹니다."}],["$","meta","3",{"name":"keywords","content":"Next.js,동적 라우팅,네비게이션,웹 개발"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/Nextjs-%EB%8F%99%EC%A0%81-%EB%9D%BC%EC%9A%B0%ED%8C%85-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-%EC%B2%98%EB%A6%AC-12924ee8"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Next.js 동적 라우팅 설정하기: 복잡한 네비게이션 처리 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Next.js 동적 라우팅 설정하기: 복잡한 네비게이션 처리 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Next.js의 동적 라우팅 설정 방법과 복잡한 네비게이션 처리를 설명합니다. Next.js의 파일 기반 라우팅, 동적 라우팅 사용법, getStaticPaths 및 getServerSideProps 함수 활용법 등을 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/Nextjs-%EB%8F%99%EC%A0%81-%EB%9D%BC%EC%9A%B0%ED%8C%85-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-%EC%B2%98%EB%A6%AC-12924ee8"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Next.js 동적 라우팅 설정하기: 복잡한 네비게이션 처리 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Next.js의 동적 라우팅 설정 방법과 복잡한 네비게이션 처리를 설명합니다. Next.js의 파일 기반 라우팅, 동적 라우팅 사용법, getStaticPaths 및 getServerSideProps 함수 활용법 등을 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Next.js 동적 라우팅 설정하기: 복잡한 네비게이션 처리"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Next.js 동적 라우팅 설정하기: 복잡한 네비게이션 처리"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-12"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"fbdae19c","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Next.js 동적 라우팅 설정하기: 복잡한 네비게이션 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Next.js는 React 기반의 프레임워크로, 서버 사이드 렌더링과 정적 사이트 생성이 매우 간편합니다. Next.js의 가장 큰 장점 중 하나는 파일 기반의 라우팅 시스템입니다. 이 시스템을 사용하면 특정 파일 구조를 만들기만 해도 자동으로 라우팅이 설정됩니다. 그러나 앱이 커지면서 더 복잡한 네비게이션이 필요한 경우, 동적 라우팅이 필수적입니다. 이번 글에서는 Next.js에서 동적 라우팅을 설정하고 복잡한 네비게이션을 처리하는 방법에 대해 알아보겠습니다."}],"\n",["$","h2",null,{"id":"92be03c4","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"동적 라우팅을 위한 파일 및 폴더 구조"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Next.js에서 동적 라우팅을 구현하려면, 우선 파일과 폴더 구조를 잘 이해해야 합니다. 동적 라우팅을 설정하기 위해서는 대괄호(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[]","position":{"start":{"line":8,"column":74,"offset":399},"end":{"line":8,"column":78,"offset":403}}}],"position":{"start":{"line":8,"column":74,"offset":399},"end":{"line":8,"column":78,"offset":403}}},"children":"[]"}}],")를 사용합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"예를 들어, 특정 사용자의 프로필 페이지를 라우팅하려면 다음과 같은 구조를 가질 수 있습니다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/pages\n  /users\n    [id].js\n"}],"position":{"start":{"line":12,"column":1,"offset":468},"end":{"line":16,"column":4,"offset":503}}},"children":"/pages\n  /users\n    [id].js\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이렇게 하면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/users/1","position":{"start":{"line":18,"column":8,"offset":512},"end":{"line":18,"column":18,"offset":522}}}],"position":{"start":{"line":18,"column":8,"offset":512},"end":{"line":18,"column":18,"offset":522}}},"children":"/users/1"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/users/2","position":{"start":{"line":18,"column":20,"offset":524},"end":{"line":18,"column":30,"offset":534}}}],"position":{"start":{"line":18,"column":20,"offset":524},"end":{"line":18,"column":30,"offset":534}}},"children":"/users/2"}}]," 같은 URL들이 자동으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[id].js","position":{"start":{"line":18,"column":45,"offset":549},"end":{"line":18,"column":54,"offset":558}}}],"position":{"start":{"line":18,"column":45,"offset":549},"end":{"line":18,"column":54,"offset":558}}},"children":"[id].js"}}]," 파일로 라우팅됩니다."]}],"\n",["$","h2",null,{"id":"b7989fa6","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"getStaticPaths 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["동적 라우팅을 위한 파일 구조를 설정한 뒤에는 데이터를 가져와야 합니다. 이는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":22,"column":45,"offset":640},"end":{"line":22,"column":61,"offset":656}}}],"position":{"start":{"line":22,"column":45,"offset":640},"end":{"line":22,"column":61,"offset":656}}},"children":"getStaticPaths"}}]," 함수를 사용하여 이루어집니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":22,"column":79,"offset":674},"end":{"line":22,"column":95,"offset":690}}}],"position":{"start":{"line":22,"column":79,"offset":674},"end":{"line":22,"column":95,"offset":690}}},"children":"getStaticPaths"}}],"는 반환된 경로들에 대한 정적 페이지를 생성합니다. 다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":22,"column":128,"offset":723},"end":{"line":22,"column":144,"offset":739}}}],"position":{"start":{"line":22,"column":128,"offset":723},"end":{"line":22,"column":144,"offset":739}}},"children":"getStaticPaths"}}],"를 사용하는 예제입니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// /pages/users/[id].js\nimport { useRouter } from 'next/router';\n\nexport async function getStaticPaths() {\n  // API 등을 통해 얻은 사용자 목록 데이터입니다.\n  const users = await fetch('https://api.example.com/users').then(res => res.json());\n  const paths = users.map(user => ({ params: { id: user.id.toString() }}));\n\n  return { paths, fallback: false };\n}\n\nexport async function getStaticProps({ params }) {\n  const user = await fetch(`https://api.example.com/users/${params.id}`).then(res => res.json());\n  return { props: { user } };\n}\n\nconst UserProfile = ({ user }) => {\n  return (\n    <div>\n      <h1>{user.name}</h1>\n      <p>{user.bio}</p>\n    </div>\n  );\n};\n\nexport default UserProfile;\n"}],"position":{"start":{"line":24,"column":1,"offset":754},"end":{"line":51,"column":4,"offset":1452}}},"children":"// /pages/users/[id].js\nimport { useRouter } from 'next/router';\n\nexport async function getStaticPaths() {\n  // API 등을 통해 얻은 사용자 목록 데이터입니다.\n  const users = await fetch('https://api.example.com/users').then(res => res.json());\n  const paths = users.map(user => ({ params: { id: user.id.toString() }}));\n\n  return { paths, fallback: false };\n}\n\nexport async function getStaticProps({ params }) {\n  const user = await fetch(`https://api.example.com/users/${params.id}`).then(res => res.json());\n  return { props: { user } };\n}\n\nconst UserProfile = ({ user }) => {\n  return (\n    <div>\n      <h1>{user.name}</h1>\n      <p>{user.bio}</p>\n    </div>\n  );\n};\n\nexport default UserProfile;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":53,"column":8,"offset":1461},"end":{"line":53,"column":24,"offset":1477}}}],"position":{"start":{"line":53,"column":8,"offset":1461},"end":{"line":53,"column":24,"offset":1477}}},"children":"getStaticPaths"}}]," 함수는 API에서 사용자 목록을 가져와 각 사용자 별 경로를 반환합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticProps","position":{"start":{"line":53,"column":66,"offset":1519},"end":{"line":53,"column":82,"offset":1535}}}],"position":{"start":{"line":53,"column":66,"offset":1519},"end":{"line":53,"column":82,"offset":1535}}},"children":"getStaticProps"}}]," 함수는 개별 사용자의 데이터를 가져와 컴포넌트에 props로 전달합니다."]}],"\n",["$","h2",null,{"id":"6634eb51","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"getServerSideProps 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["동적 데이터를 서버 사이드에서 바로 가져오는 또 다른 방법으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getServerSideProps","position":{"start":{"line":57,"column":36,"offset":1641},"end":{"line":57,"column":56,"offset":1661}}}],"position":{"start":{"line":57,"column":36,"offset":1641},"end":{"line":57,"column":56,"offset":1661}}},"children":"getServerSideProps"}}],"를 사용할 수도 있습니다. 이 함수는 요청이 들어올 때마다 실행되며, SSR(Server-Side Rendering)을 가능하게 합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// /pages/users/[id].js\nimport { useRouter } from 'next/router';\n\nexport async function getServerSideProps({ params }) {\n  const user = await fetch(`https://api.example.com/users/${params.id}`).then(res => res.json());\n  return { props: { user } };\n}\n\nconst UserProfile = ({ user }) => {\n  return (\n    <div>\n      <h1>{user.name}</h1>\n      <p>{user.bio}</p>\n    </div>\n  );\n};\n\nexport default UserProfile;\n"}],"position":{"start":{"line":59,"column":1,"offset":1739},"end":{"line":78,"column":4,"offset":2164}}},"children":"// /pages/users/[id].js\nimport { useRouter } from 'next/router';\n\nexport async function getServerSideProps({ params }) {\n  const user = await fetch(`https://api.example.com/users/${params.id}`).then(res => res.json());\n  return { props: { user } };\n}\n\nconst UserProfile = ({ user }) => {\n  return (\n    <div>\n      <h1>{user.name}</h1>\n      <p>{user.bio}</p>\n    </div>\n  );\n};\n\nexport default UserProfile;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getServerSideProps","position":{"start":{"line":80,"column":9,"offset":2174},"end":{"line":80,"column":29,"offset":2194}}}],"position":{"start":{"line":80,"column":9,"offset":2174},"end":{"line":80,"column":29,"offset":2194}}},"children":"getServerSideProps"}}]," 함수를 사용하여 매 요청마다 데이터를 가져옵니다. 이는 데이터를 항상 최신 상태로 유지해야 할 때 유용합니다."]}],"\n",["$","h2",null,{"id":"6043bd17","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"복잡한 네비게이션 처리하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"동적 라우팅을 통해 다양한 경로의 페이지를 생성할 수 있지만, 복잡한 네비게이션을 처리하기 위해서는 추가적인 고려사항이 필요합니다."}],"\n",["$","h3",null,{"id":"d5ab89e8","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"중첩된 동적 라우팅"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"중첩된 동적 라우팅을 설정하려면 더 많은 폴더와 파일 구조가 필요합니다. 예를 들어, 특정 사용자의 특정 게시물에 대한 경로는 다음과 같이 설정할 수 있습니다:"}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/pages\n  /users\n    [id]\n      /posts\n        [postId].js\n"}],"position":{"start":{"line":90,"column":1,"offset":2459},"end":{"line":96,"column":4,"offset":2524}}},"children":"/pages\n  /users\n    [id]\n      /posts\n        [postId].js\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이를 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/users/1/posts/10","position":{"start":{"line":98,"column":7,"offset":2532},"end":{"line":98,"column":26,"offset":2551}}}],"position":{"start":{"line":98,"column":7,"offset":2532},"end":{"line":98,"column":26,"offset":2551}}},"children":"/users/1/posts/10"}}]," 같은 URL들이 동적으로 라우팅됩니다."]}],"\n",["$","h3",null,{"id":"b0b69b3b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"동적 URL 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Next.js에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useRouter","position":{"start":{"line":102,"column":12,"offset":2601},"end":{"line":102,"column":23,"offset":2612}}}],"position":{"start":{"line":102,"column":12,"offset":2601},"end":{"line":102,"column":23,"offset":2612}}},"children":"useRouter"}}]," 훅을 사용하여 현재 라우터의 정보를 가져올 수 있습니다. 이를 통해 동적 URL의 파라미터를 처리할 수 있습니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import { useRouter } from 'next/router';\n\nconst PostPage = () => {\n  const router = useRouter();\n  const { id, postId } = router.query;\n\n  return (\n    <div>\n      <h1>Post {postId} by User {id}</h1>\n    </div>\n  );\n};\n\nexport default PostPage;\n"}],"position":{"start":{"line":104,"column":1,"offset":2678},"end":{"line":119,"column":4,"offset":2940}}},"children":"import { useRouter } from 'next/router';\n\nconst PostPage = () => {\n  const router = useRouter();\n  const { id, postId } = router.query;\n\n  return (\n    <div>\n      <h1>Post {postId} by User {id}</h1>\n    </div>\n  );\n};\n\nexport default PostPage;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useRouter","position":{"start":{"line":121,"column":9,"offset":2950},"end":{"line":121,"column":20,"offset":2961}}}],"position":{"start":{"line":121,"column":9,"offset":2950},"end":{"line":121,"column":20,"offset":2961}}},"children":"useRouter"}}],"를 사용하여 URL에서 동적 파라미터 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id","position":{"start":{"line":121,"column":41,"offset":2982},"end":{"line":121,"column":45,"offset":2986}}}],"position":{"start":{"line":121,"column":41,"offset":2982},"end":{"line":121,"column":45,"offset":2986}}},"children":"id"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"postId","position":{"start":{"line":121,"column":47,"offset":2988},"end":{"line":121,"column":55,"offset":2996}}}],"position":{"start":{"line":121,"column":47,"offset":2988},"end":{"line":121,"column":55,"offset":2996}}},"children":"postId"}}],"를 추출합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Next.js의 동적 라우팅을 사용하면 파일 기반 라우팅 시스템을 벗어나 더 복잡하고 역동적인 네비게이션을 구현할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":125,"column":73,"offset":3085},"end":{"line":125,"column":89,"offset":3101}}}],"position":{"start":{"line":125,"column":73,"offset":3085},"end":{"line":125,"column":89,"offset":3101}}},"children":"getStaticPaths"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getServerSideProps","position":{"start":{"line":125,"column":91,"offset":3103},"end":{"line":125,"column":111,"offset":3123}}}],"position":{"start":{"line":125,"column":91,"offset":3103},"end":{"line":125,"column":111,"offset":3123}}},"children":"getServerSideProps"}}]," 함수를 통해 데이터를 가져오는 방법과 여러 동적 라우팅 설정을 통해 다양한 요구 사항을 충족할 수 있습니다. 네비게이션이 복잡해질수록 이러한 기술을 잘 활용하여 효율적인 라우팅과 데이터 관리를 할 수 있습니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Next.js 동적 라우팅 설정하기: 복잡한 네비게이션 처리","toc":[{"tagName":"h1","title":"Next.js 동적 라우팅 설정하기: 복잡한 네비게이션 처리","id":"fbdae19c"},{"tagName":"h2","title":"동적 라우팅을 위한 파일 및 폴더 구조","id":"92be03c4"},{"tagName":"h2","title":"getStaticPaths 사용하기","id":"b7989fa6"},{"tagName":"h2","title":"getServerSideProps 사용하기","id":"6634eb51"},{"tagName":"h2","title":"복잡한 네비게이션 처리하기","id":"6043bd17"},{"tagName":"h3","title":"중첩된 동적 라우팅","id":"d5ab89e8"},{"tagName":"h3","title":"동적 URL 처리","id":"b0b69b3b"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
