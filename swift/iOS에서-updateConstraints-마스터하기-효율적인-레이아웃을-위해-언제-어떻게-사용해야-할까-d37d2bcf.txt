1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","iOS%EC%97%90%EC%84%9C-updateConstraints-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%95%98%EA%B8%B0-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83%EC%9D%84-%EC%9C%84%ED%95%B4-%EC%96%B8%EC%A0%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-d37d2bcf","d"],{"children":["__PAGE__?{\"slug\":\"iOS에서-updateConstraints-마스터하기-효율적인-레이아웃을-위해-언제-어떻게-사용해야-할까-d37d2bcf\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","iOS%EC%97%90%EC%84%9C-updateConstraints-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%95%98%EA%B8%B0-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83%EC%9D%84-%EC%9C%84%ED%95%B4-%EC%96%B8%EC%A0%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-d37d2bcf","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"iOS에서-updateConstraints-마스터하기-효율적인-레이아웃을-위해-언제-어떻게-사용해야-할까-d37d2bcf\"}"},"styles":[]}],"segment":["slug","iOS%EC%97%90%EC%84%9C-updateConstraints-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%95%98%EA%B8%B0-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83%EC%9D%84-%EC%9C%84%ED%95%B4-%EC%96%B8%EC%A0%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-d37d2bcf","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"iOS에서 updateConstraints 마스터하기: 효율적인 레이아웃을 위해 언제, 어떻게 사용해야 할까? | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"iOS 개발에서 레이아웃을 다루는 것은 중요한 작업 중 하나입니다. 이 글에서는 효율적인 레이아웃 관리를 위해 `updateConstraints` 메서드를 언제, 어떻게 사용해야 하는지에 대해 마스터하는 방법을 다룹니다."}],["$","meta","3",{"name":"keywords","content":"iOS,Swift,컨스트레인트,레이아웃"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/iOS%EC%97%90%EC%84%9C-updateConstraints-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%95%98%EA%B8%B0-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83%EC%9D%84-%EC%9C%84%ED%95%B4-%EC%96%B8%EC%A0%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-d37d2bcf"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"iOS에서 updateConstraints 마스터하기: 효율적인 레이아웃을 위해 언제, 어떻게 사용해야 할까? | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"iOS에서 updateConstraints 마스터하기: 효율적인 레이아웃을 위해 언제, 어떻게 사용해야 할까? | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"iOS 개발에서 레이아웃을 다루는 것은 중요한 작업 중 하나입니다. 이 글에서는 효율적인 레이아웃 관리를 위해 `updateConstraints` 메서드를 언제, 어떻게 사용해야 하는지에 대해 마스터하는 방법을 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/iOS%EC%97%90%EC%84%9C-updateConstraints-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%95%98%EA%B8%B0-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83%EC%9D%84-%EC%9C%84%ED%95%B4-%EC%96%B8%EC%A0%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-d37d2bcf"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"iOS에서 updateConstraints 마스터하기: 효율적인 레이아웃을 위해 언제, 어떻게 사용해야 할까? | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"iOS 개발에서 레이아웃을 다루는 것은 중요한 작업 중 하나입니다. 이 글에서는 효율적인 레이아웃 관리를 위해 `updateConstraints` 메서드를 언제, 어떻게 사용해야 하는지에 대해 마스터하는 방법을 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
12:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
13:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T521,class MyView: UIView {
    private let label = UILabel()
    private let button = UIButton()

    override init(frame: CGRect) {
        super.init(frame: frame)
        setupViews()
    }

    required init?(coder: NSCoder) {
        super.init(coder: coder)
        setupViews()
    }

    private func setupViews() {
        addSubview(label)
        addSubview(button)
        label.translatesAutoresizingMaskIntoConstraints = false
        button.translatesAutoresizingMaskIntoConstraints = false

        // 초기 제약 조건 설정
        NSLayoutConstraint.activate([
            label.topAnchor.constraint(equalTo: topAnchor, constant: 20),
            label.centerXAnchor.constraint(equalTo: centerXAnchor),
            button.topAnchor.constraint(equalTo: label.bottomAnchor, constant: 20),
            button.centerXAnchor.constraint(equalTo: centerXAnchor)
        ])

        button.addTarget(self, action: #selector(buttonTapped), for: .touchUpInside)
    }

    @objc private func buttonTapped() {
        label.text = "더 긴 텍스트로 변경됨"
        setNeedsUpdateConstraints()  // 제약 조건 업데이트가 필요함을 알림
    }

    override func updateConstraints() {
        // 필요한 경우 추가 제약 조건 업데이트
        super.updateConstraints()
    }
}
f:T521,class MyView: UIView {
    private let label = UILabel()
    private let button = UIButton()

    override init(frame: CGRect) {
        super.init(frame: frame)
        setupViews()
    }

    required init?(coder: NSCoder) {
        super.init(coder: coder)
        setupViews()
    }

    private func setupViews() {
        addSubview(label)
        addSubview(button)
        label.translatesAutoresizingMaskIntoConstraints = false
        button.translatesAutoresizingMaskIntoConstraints = false

        // 초기 제약 조건 설정
        NSLayoutConstraint.activate([
            label.topAnchor.constraint(equalTo: topAnchor, constant: 20),
            label.centerXAnchor.constraint(equalTo: centerXAnchor),
            button.topAnchor.constraint(equalTo: label.bottomAnchor, constant: 20),
            button.centerXAnchor.constraint(equalTo: centerXAnchor)
        ])

        button.addTarget(self, action: #selector(buttonTapped), for: .touchUpInside)
    }

    @objc private func buttonTapped() {
        label.text = "더 긴 텍스트로 변경됨"
        setNeedsUpdateConstraints()  // 제약 조건 업데이트가 필요함을 알림
    }

    override func updateConstraints() {
        // 필요한 경우 추가 제약 조건 업데이트
        super.updateConstraints()
    }
}
10:T52f,class RotatingView: UIView {
    private let subview = UIView()

    override init(frame: CGRect) {
        super.init(frame: frame)
        setupViews()
    }

    required init?(coder: NSCoder) {
        super.init(coder: coder)
        setupViews()
    }

    private func setupViews() {
        addSubview(subview)
        subview.translatesAutoresizingMaskIntoConstraints = false

        // 초기 제약 조건 설정
        NSLayoutConstraint.activate([
            subview.centerXAnchor.constraint(equalTo: centerXAnchor),
            subview.centerYAnchor.constraint(equalTo: centerYAnchor),
            subview.widthAnchor.constraint(equalToConstant: 100),
            subview.heightAnchor.constraint(equalToConstant: 100)
        ])
    }

    override func layoutSubviews() {
        super.layoutSubviews()
        setNeedsUpdateConstraints()  // 레이아웃이 변경될 때마다 제약 조건 업데이트 필요
    }

    override func updateConstraints() {
        if UIDevice.current.orientation.isLandscape {
            // 가로 모드일 때 제약 조건 업데이트
            subviewWidthConstraint.constant = 150
        } else {
            // 세로 모드일 때 제약 조건 업데이트
            subviewWidthConstraint.constant = 100
        }
        super.updateConstraints()
    }
}
11:T52f,class RotatingView: UIView {
    private let subview = UIView()

    override init(frame: CGRect) {
        super.init(frame: frame)
        setupViews()
    }

    required init?(coder: NSCoder) {
        super.init(coder: coder)
        setupViews()
    }

    private func setupViews() {
        addSubview(subview)
        subview.translatesAutoresizingMaskIntoConstraints = false

        // 초기 제약 조건 설정
        NSLayoutConstraint.activate([
            subview.centerXAnchor.constraint(equalTo: centerXAnchor),
            subview.centerYAnchor.constraint(equalTo: centerYAnchor),
            subview.widthAnchor.constraint(equalToConstant: 100),
            subview.heightAnchor.constraint(equalToConstant: 100)
        ])
    }

    override func layoutSubviews() {
        super.layoutSubviews()
        setNeedsUpdateConstraints()  // 레이아웃이 변경될 때마다 제약 조건 업데이트 필요
    }

    override func updateConstraints() {
        if UIDevice.current.orientation.isLandscape {
            // 가로 모드일 때 제약 조건 업데이트
            subviewWidthConstraint.constant = 150
        } else {
            // 세로 모드일 때 제약 조건 업데이트
            subviewWidthConstraint.constant = 100
        }
        super.updateConstraints()
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"iOS에서 updateConstraints 마스터하기: 효율적인 레이아웃을 위해 언제, 어떻게 사용해야 할까?"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"iOS에서 updateConstraints 마스터하기: 효율적인 레이아웃을 위해 언제, 어떻게 사용해야 할까?"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-26"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"0996e8ce","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"iOS에서 updateConstraints 마스터하기: 효율적인 레이아웃을 위해 언제, 어떻게 사용해야 할까?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["iOS 앱을 개발하다 보면 레이아웃을 동적으로 조정해야 할 필요성이 자주 있습니다. 이 때 가장 중요한 메서드 중 하나가 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updateConstraints","position":{"start":{"line":4,"column":69,"offset":134},"end":{"line":4,"column":88,"offset":153}}}],"position":{"start":{"line":4,"column":69,"offset":134},"end":{"line":4,"column":88,"offset":153}}},"children":"updateConstraints"}}]," 입니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updateConstraints","position":{"start":{"line":4,"column":101,"offset":166},"end":{"line":4,"column":120,"offset":185}}}],"position":{"start":{"line":4,"column":101,"offset":166},"end":{"line":4,"column":120,"offset":185}}},"children":"updateConstraints"}}]," 메서드가 무엇인지, 언제 사용해야 하는지, 그리고 어떻게 효과적으로 활용할 수 있는지 자세히 알아보겠습니다."]}],"\n",["$","h2",null,{"id":"da39a3ee","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updateConstraints","position":{"start":{"line":6,"column":4,"offset":251},"end":{"line":6,"column":23,"offset":270}}}],"position":{"start":{"line":6,"column":4,"offset":251},"end":{"line":6,"column":23,"offset":270}}},"children":"updateConstraints"}}],"란 무엇인가?"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updateConstraints","position":{"start":{"line":8,"column":1,"offset":279},"end":{"line":8,"column":20,"offset":298}}}],"position":{"start":{"line":8,"column":1,"offset":279},"end":{"line":8,"column":20,"offset":298}}},"children":"updateConstraints"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIView","position":{"start":{"line":8,"column":22,"offset":300},"end":{"line":8,"column":30,"offset":308}}}],"position":{"start":{"line":8,"column":22,"offset":300},"end":{"line":8,"column":30,"offset":308}}},"children":"UIView"}}],"의 메서드로, 뷰의 제약 조건을 업데이트할 때 사용됩니다. 이 메서드는 뷰의 레이아웃을 변경해야 하는 상황에서 호출되며, UIKit에서 자동으로 호출되기도 합니다. 중요한 점은 이 메서드를 직접 호출하는 것이 아니라 오버라이드하여 사용해야 한다는 것입니다."]}],"\n",["$","h3",null,{"id":"08c817d9","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"기본적인 메서드 구조"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"override func updateConstraints() {\n    super.updateConstraints()\n    // 제약 조건 업데이트 로직\n}\n"}],"position":{"start":{"line":12,"column":1,"offset":470},"end":{"line":17,"column":4,"offset":571}}},"children":"override func updateConstraints() {\n    super.updateConstraints()\n    // 제약 조건 업데이트 로직\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위와 같이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"super.updateConstraints()","position":{"start":{"line":19,"column":7,"offset":579},"end":{"line":19,"column":34,"offset":606}}}],"position":{"start":{"line":19,"column":7,"offset":579},"end":{"line":19,"column":34,"offset":606}}},"children":"super.updateConstraints()"}}],"를 호출한 후에 필요한 제약 조건을 설정합니다. 이를 통해 부모 클래스의 업데이트 로직을 유지하면서, 추가적으로 필요한 제약 조건을 정의할 수 있습니다."]}],"\n",["$","h2",null,{"id":"fe2284c0","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":["언제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updateConstraints","position":{"start":{"line":21,"column":7,"offset":699},"end":{"line":21,"column":26,"offset":718}}}],"position":{"start":{"line":21,"column":7,"offset":699},"end":{"line":21,"column":26,"offset":718}}},"children":"updateConstraints"}}],"를 사용해야 할까?"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다양한 상황에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updateConstraints","position":{"start":{"line":23,"column":10,"offset":739},"end":{"line":23,"column":29,"offset":758}}}],"position":{"start":{"line":23,"column":10,"offset":739},"end":{"line":23,"column":29,"offset":758}}},"children":"updateConstraints"}}],"를 사용하지만, 특히 다음과 같은 경우에 유용합니다:"]}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"동적 데이터에 따라 레이아웃이 변경될 때"}],": 예를 들어, 유저 인터페이스가 사용자 입력이나 데이터 변경에 따라 동적으로 변하는 경우, 제약 조건을 동적으로 업데이트해야 할 수 있습니다."]}],"\n"]}],"\n",["$","li","li-1",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"디바이스 회전에 대응할 때"}],": iPad나 iPhone처럼 사용자 인터페이스가 가로세로 전환되는 경우에도 제약 조건을 업데이트해야 할 수 있습니다."]}],"\n"]}],"\n",["$","li","li-2",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"애니메이션과 함께 레이아웃을 변경할 때"}],": 애니메이션과 함께 제약 조건을 변경하여 부드러운 전환 효과를 만들기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updateConstraints","position":{"start":{"line":29,"column":72,"offset":1060},"end":{"line":29,"column":91,"offset":1079}}}],"position":{"start":{"line":29,"column":72,"offset":1060},"end":{"line":29,"column":91,"offset":1079}}},"children":"updateConstraints"}}],"를 사용할 수 있습니다."]}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"id":"da39a3ee","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updateConstraints","position":{"start":{"line":31,"column":4,"offset":1097},"end":{"line":31,"column":23,"offset":1116}}}],"position":{"start":{"line":31,"column":4,"offset":1097},"end":{"line":31,"column":23,"offset":1116}}},"children":"updateConstraints"}}]," 활용 예제"]}],"\n",["$","h3",null,{"id":"65454bc0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제 1: 동적 데이터에 대응하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"사용자가 버튼을 클릭하여 레이블의 텍스트를 변경하는 경우를 생각해봅시다. 새로운 텍스트가 더 길거나 짧을 수 있기 때문에 레이아웃을 업데이트해야 합니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":37,"column":1,"offset":1235},"end":{"line":79,"column":4,"offset":2466}}},"children":"$f"}}]}],"\n",["$","h3",null,{"id":"3030cd05","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제 2: 디바이스 회전에 대응하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"디바이스가 회전할 때 레이아웃을 업데이트해야 하는 경우를 예로 들어보겠습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$10"}],"position":{"start":{"line":85,"column":1,"offset":2538},"end":{"line":128,"column":4,"offset":3763}}},"children":"$11"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제에서는 디바이스의 회전에 따른 제약 조건을 업데이트하여 뷰의 크기를 적절하게 조정합니다."}],"\n",["$","h2",null,{"id":"d2b34987","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"중요한 고려 사항"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updateConstraints","position":{"start":{"line":134,"column":1,"offset":3834},"end":{"line":134,"column":20,"offset":3853}}}],"position":{"start":{"line":134,"column":1,"offset":3834},"end":{"line":134,"column":20,"offset":3853}}},"children":"updateConstraints"}}],"를 최대한 효율적으로 사용하기 위해 다음 사항을 고려해야 합니다:"]}],"\n",["$","ol","ol-1",{"children":["\n",["$","li","li-0",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"필요하지 않을 때는 호출하지 않기"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setNeedsUpdateConstraints","position":{"start":{"line":136,"column":28,"offset":3918},"end":{"line":136,"column":55,"offset":3945}}}],"position":{"start":{"line":136,"column":28,"offset":3918},"end":{"line":136,"column":55,"offset":3945}}},"children":"setNeedsUpdateConstraints"}}],"를 너무 자주 호출하면 성능 문제가 발생할 수 있습니다."]}],"\n"]}],"\n",["$","li","li-1",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"명확한 업데이트 트리거 정의"}],": 상태가 변경될 때마다 제약 조건을 즉시 업데이트하는 것이 아니라, 필요한 경우에만 호출하도록 합니다."]}],"\n"]}],"\n",["$","li","li-2",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"기본 동작 유지"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"super.updateConstraints()","position":{"start":{"line":140,"column":18,"offset":4077},"end":{"line":140,"column":45,"offset":4104}}}],"position":{"start":{"line":140,"column":18,"offset":4077},"end":{"line":140,"column":45,"offset":4104}}},"children":"super.updateConstraints()"}}],"를 항상 호출하여 부모 클래스의 기본 동작을 유지한 후, 필요한 추가 작업을 수행합니다."]}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updateConstraints","position":{"start":{"line":144,"column":1,"offset":4162},"end":{"line":144,"column":20,"offset":4181}}}],"position":{"start":{"line":144,"column":1,"offset":4162},"end":{"line":144,"column":20,"offset":4181}}},"children":"updateConstraints"}}],"는 iOS 앱 개발에서 효율적인 레이아웃 관리를 위한 매우 중요한 도구입니다. 이를 적절히 활용하면 동적인 사용자 인터페이스를 구현하고, 다양한 상황에 대처할 수 있습니다. 이 글에서 다룬 개념과 예제들을 바탕으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updateConstraints","position":{"start":{"line":144,"column":140,"offset":4301},"end":{"line":144,"column":159,"offset":4320}}}],"position":{"start":{"line":144,"column":140,"offset":4301},"end":{"line":144,"column":159,"offset":4320}}},"children":"updateConstraints"}}]," 메서드를 마스터하여 더 나은 iOS 앱을 개발해보세요."]}]]}]}],["$","$L12",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L13",null,{"articleTitle":"iOS에서 updateConstraints 마스터하기: 효율적인 레이아웃을 위해 언제, 어떻게 사용해야 할까?","toc":[{"tagName":"h1","title":"iOS에서 updateConstraints 마스터하기: 효율적인 레이아웃을 위해 언제, 어떻게 사용해야 할까?","id":"0996e8ce"},{"tagName":"h2","title":"$undefined","id":""},{"tagName":"h3","title":"기본적인 메서드 구조","id":"08c817d9"},{"tagName":"h2","title":"언제 ","id":"fe2284c0"},{"tagName":"h2","title":"$undefined","id":""},{"tagName":"h3","title":"예제 1: 동적 데이터에 대응하기","id":"65454bc0"},{"tagName":"h3","title":"예제 2: 디바이스 회전에 대응하기","id":"3030cd05"},{"tagName":"h2","title":"중요한 고려 사항","id":"d2b34987"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
