1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","React-Native-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%A0%84%EB%9E%B5-Jest%EC%99%80-Detox-%ED%99%9C%EC%9A%A9%EB%B2%95-a33e089a","d"],{"children":["__PAGE__?{\"slug\":\"React-Native-테스트-전략-Jest와-Detox-활용법-a33e089a\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","React-Native-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%A0%84%EB%9E%B5-Jest%EC%99%80-Detox-%ED%99%9C%EC%9A%A9%EB%B2%95-a33e089a","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"React-Native-테스트-전략-Jest와-Detox-활용법-a33e089a\"}"},"styles":[]}],"segment":["slug","React-Native-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%A0%84%EB%9E%B5-Jest%EC%99%80-Detox-%ED%99%9C%EC%9A%A9%EB%B2%95-a33e089a","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"React Native 테스트 전략: Jest와 Detox 활용법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 React Native 애플리케이션에서 테스트를 효과적으로 수행하기 위한 전략과 Jest 및 Detox의 활용법에 대해 다룹니다. unittest, integration test 및 end-to-end test에 관한 구체적인 예제를 통해 애플리케이션의 품질을 높이는 방법을 설명합니다."}],["$","meta","3",{"name":"keywords","content":"React Native,Testing,Jest,Detox"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/React-Native-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%A0%84%EB%9E%B5-Jest%EC%99%80-Detox-%ED%99%9C%EC%9A%A9%EB%B2%95-a33e089a"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"React Native 테스트 전략: Jest와 Detox 활용법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"React Native 테스트 전략: Jest와 Detox 활용법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 React Native 애플리케이션에서 테스트를 효과적으로 수행하기 위한 전략과 Jest 및 Detox의 활용법에 대해 다룹니다. unittest, integration test 및 end-to-end test에 관한 구체적인 예제를 통해 애플리케이션의 품질을 높이는 방법을 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/React-Native-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%A0%84%EB%9E%B5-Jest%EC%99%80-Detox-%ED%99%9C%EC%9A%A9%EB%B2%95-a33e089a"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner5.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"React Native 테스트 전략: Jest와 Detox 활용법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 React Native 애플리케이션에서 테스트를 효과적으로 수행하기 위한 전략과 Jest 및 Detox의 활용법에 대해 다룹니다. unittest, integration test 및 end-to-end test에 관한 구체적인 예제를 통해 애플리케이션의 품질을 높이는 방법을 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner5.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner5.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"React Native 테스트 전략: Jest와 Detox 활용법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"React Native 테스트 전략: Jest와 Detox 활용법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-08-07"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"26b2fc41","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"React Native 테스트 전략: Jest와 Detox 활용법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"React Native로 애플리케이션을 개발하다 보면 품질 관리를 위해 테스트가 필수적입니다. 다양한 종류의 테스트가 있으며, 이에 따라 테스트 도구도 다양합니다. 이 글에서는 대표적인 테스트 도구인 Jest와 Detox를 사용한 테스트 전략을 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"246b601c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"유닛 테스트 (Unit Test)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["유닛 테스트는 애플리케이션의 가장 작은 단위를 테스트하는 것으로, 일반적으로 함수 하나 또는 컴포넌트 하나를 테스트합니다. React Native에서 유닛 테스트를 할 때 가장 많이 사용하는 도구는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Jest","position":{"start":{"line":8,"column":112,"offset":322},"end":{"line":8,"column":118,"offset":328}}}],"position":{"start":{"line":8,"column":112,"offset":322},"end":{"line":8,"column":118,"offset":328}}},"children":"Jest"}}],"입니다."]}],"\n",["$","h3",null,{"id":"dccbea43","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Jest 설정하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Jest","position":{"start":{"line":12,"column":4,"offset":352},"end":{"line":12,"column":10,"offset":358}}}],"position":{"start":{"line":12,"column":4,"offset":352},"end":{"line":12,"column":10,"offset":358}}},"children":"Jest"}}],"를 설치해야 합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-bash","node":{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"npm install --save-dev jest\n"}],"position":{"start":{"line":14,"column":1,"offset":371},"end":{"line":16,"column":4,"offset":410}}},"children":"npm install --save-dev jest\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["그 다음 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"package.json","position":{"start":{"line":18,"column":6,"offset":417},"end":{"line":18,"column":20,"offset":431}}}],"position":{"start":{"line":18,"column":6,"offset":417},"end":{"line":18,"column":20,"offset":431}}},"children":"package.json"}}]," 파일에 다음과 같은 설정을 추가합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-json","node":{"type":"element","tagName":"code","properties":{"className":["language-json"]},"children":[{"type":"text","value":"{\n  \"scripts\": {\n    \"test\": \"jest\"\n  }\n}\n"}],"position":{"start":{"line":20,"column":1,"offset":455},"end":{"line":26,"column":4,"offset":508}}},"children":"{\n  \"scripts\": {\n    \"test\": \"jest\"\n  }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["기본 설정이 완료되면 테스트 파일을 작성할 수 있습니다. 예를 들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sum.js","position":{"start":{"line":28,"column":40,"offset":549},"end":{"line":28,"column":48,"offset":557}}}],"position":{"start":{"line":28,"column":40,"offset":549},"end":{"line":28,"column":48,"offset":557}}},"children":"sum.js"}}]," 파일이 있다고 가정합시다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// sum.js\nfunction sum(a, b) {\n  return a + b;\n}\nmodule.exports = sum;\n"}],"position":{"start":{"line":30,"column":1,"offset":574},"end":{"line":36,"column":4,"offset":662}}},"children":"// sum.js\nfunction sum(a, b) {\n  return a + b;\n}\nmodule.exports = sum;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 함수에 대한 유닛 테스트를 작성해보겠습니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// sum.test.js\nconst sum = require('./sum');\n\ntest('adds 1 + 2 to equal 3', () => {\n  expect(sum(1, 2)).toBe(3);\n});\n"}],"position":{"start":{"line":40,"column":1,"offset":692},"end":{"line":47,"column":4,"offset":826}}},"children":"// sum.test.js\nconst sum = require('./sum');\n\ntest('adds 1 + 2 to equal 3', () => {\n  expect(sum(1, 2)).toBe(3);\n});\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 터미널에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"npm test","position":{"start":{"line":49,"column":10,"offset":837},"end":{"line":49,"column":20,"offset":847}}}],"position":{"start":{"line":49,"column":10,"offset":837},"end":{"line":49,"column":20,"offset":847}}},"children":"npm test"}}],"를 실행하면 유닛 테스트가 실행됩니다."]}],"\n",["$","h2",null,{"id":"df9d3427","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"통합 테스트 (Integration Test)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"통합 테스트는 여러 유닛들이 모여서 제대로 작동하는지 확인하는 테스트입니다. 보통 여러 컴포넌트 또는 모듈이 올바르게 연동되는지 확인합니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["통합 테스트도 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Jest","position":{"start":{"line":55,"column":9,"offset":988},"end":{"line":55,"column":15,"offset":994}}}],"position":{"start":{"line":55,"column":9,"offset":988},"end":{"line":55,"column":15,"offset":994}}},"children":"Jest"}}],"를 사용할 수 있으며, 추가로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React Testing Library","position":{"start":{"line":55,"column":32,"offset":1011},"end":{"line":55,"column":55,"offset":1034}}}],"position":{"start":{"line":55,"column":32,"offset":1011},"end":{"line":55,"column":55,"offset":1034}}},"children":"React Testing Library"}}],"를 사용하여 컴포넌트를 렌더링하고 상호작용할 수 있습니다."]}],"\n",["$","h3",null,{"id":"b28b71c6","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"React Testing Library 설정하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React Testing Library","position":{"start":{"line":59,"column":4,"offset":1103},"end":{"line":59,"column":27,"offset":1126}}}],"position":{"start":{"line":59,"column":4,"offset":1103},"end":{"line":59,"column":27,"offset":1126}}},"children":"React Testing Library"}}],"를 설치합니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-bash","node":{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"npm install --save-dev @testing-library/react-native\n"}],"position":{"start":{"line":61,"column":1,"offset":1136},"end":{"line":63,"column":4,"offset":1200}}},"children":"npm install --save-dev @testing-library/react-native\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음으로, 간단한 버튼 컴포넌트를 테스트해보겠습니다."}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// Button.js\nimport React from 'react';\nimport { Button, Text, View } from 'react-native';\n\nconst MyButton = ({ onPress, title }) => (\n  <View>\n    <Button onPress={onPress} title={title} />\n  </View>\n);\n\nexport default MyButton;\n"}],"position":{"start":{"line":67,"column":1,"offset":1233},"end":{"line":79,"column":4,"offset":1480}}},"children":"// Button.js\nimport React from 'react';\nimport { Button, Text, View } from 'react-native';\n\nconst MyButton = ({ onPress, title }) => (\n  <View>\n    <Button onPress={onPress} title={title} />\n  </View>\n);\n\nexport default MyButton;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 컴포넌트에 대한 통합 테스트를 작성합시다."}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// Button.test.js\nimport React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport MyButton from './Button';\n\ntest('button click updates text', () => {\n  const handlePress = jest.fn();\n  const { getByText } = render(<MyButton onPress={handlePress} title=\"Press me\" />);\n\n  fireEvent.press(getByText('Press me'));\n  expect(handlePress).toHaveBeenCalledTimes(1);\n});\n"}],"position":{"start":{"line":83,"column":1,"offset":1509},"end":{"line":96,"column":4,"offset":1927}}},"children":"// Button.test.js\nimport React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport MyButton from './Button';\n\ntest('button click updates text', () => {\n  const handlePress = jest.fn();\n  const { getByText } = render(<MyButton onPress={handlePress} title=\"Press me\" />);\n\n  fireEvent.press(getByText('Press me'));\n  expect(handlePress).toHaveBeenCalledTimes(1);\n});\n"}}]}],"\n",["$","h2",null,{"id":"2bc70009","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"End-to-End 테스트 (E2E Test)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["End-to-End 테스트는 애플리케이션의 전체 흐름을 테스트하는 것으로, 실제 사용자 관점에서 테스트를 수행합니다. 이 때는 주로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Detox","position":{"start":{"line":100,"column":75,"offset":2033},"end":{"line":100,"column":82,"offset":2040}}}],"position":{"start":{"line":100,"column":75,"offset":2033},"end":{"line":100,"column":82,"offset":2040}}},"children":"Detox"}}],"를 사용합니다."]}],"\n",["$","h3",null,{"id":"ac473eb6","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Detox 설정하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Detox","position":{"start":{"line":104,"column":1,"offset":2066},"end":{"line":104,"column":8,"offset":2073}}}],"position":{"start":{"line":104,"column":1,"offset":2066},"end":{"line":104,"column":8,"offset":2073}}},"children":"Detox"}}],"를 설치하고 설정하는 과정은 조금 복잡할 수 있습니다. 먼저 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Detox","position":{"start":{"line":104,"column":42,"offset":2107},"end":{"line":104,"column":49,"offset":2114}}}],"position":{"start":{"line":104,"column":42,"offset":2107},"end":{"line":104,"column":49,"offset":2114}}},"children":"Detox"}}],"와 필요한 의존성을 설치합니다."]}],"\n",["$","pre","pre-7",{"children":["$","$Ld",null,{"props":{"className":"language-bash","node":{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"npm install --save-dev detox\nnpm install --save-dev jest-circus\n"}],"position":{"start":{"line":106,"column":1,"offset":2133},"end":{"line":109,"column":4,"offset":2208}}},"children":"npm install --save-dev detox\nnpm install --save-dev jest-circus\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Detox","position":{"start":{"line":111,"column":6,"offset":2215},"end":{"line":111,"column":13,"offset":2222}}}],"position":{"start":{"line":111,"column":6,"offset":2215},"end":{"line":111,"column":13,"offset":2222}}},"children":"Detox"}}]," 설정 파일을 생성해야 합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"e2e/config.json","position":{"start":{"line":111,"column":31,"offset":2240},"end":{"line":111,"column":48,"offset":2257}}}],"position":{"start":{"line":111,"column":31,"offset":2240},"end":{"line":111,"column":48,"offset":2257}}},"children":"e2e/config.json"}}]," 파일을 생성하고 다음과 같이 작성합니다."]}],"\n",["$","pre","pre-8",{"children":["$","$Ld",null,{"props":{"className":"language-json","node":{"type":"element","tagName":"code","properties":{"className":["language-json"]},"children":[{"type":"text","value":"{\n  \"testRunner\": \"jest\",\n  \"runnerConfig\": \"e2e/config.js\",\n  \"configurations\": {\n    \"ios.sim.debug\": {\n      \"binaryPath\": \"ios/build/Build/Products/Debug-iphonesimulator/YourApp.app\",\n      \"build\": \"xcodebuild -workspace ios/YourApp.xcworkspace -scheme YourApp -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build\",\n      \"type\": \"ios.simulator\",\n      \"name\": \"iPhone 12\"\n    }\n  }\n}\n"}],"position":{"start":{"line":113,"column":1,"offset":2282},"end":{"line":126,"column":4,"offset":2699}}},"children":"{\n  \"testRunner\": \"jest\",\n  \"runnerConfig\": \"e2e/config.js\",\n  \"configurations\": {\n    \"ios.sim.debug\": {\n      \"binaryPath\": \"ios/build/Build/Products/Debug-iphonesimulator/YourApp.app\",\n      \"build\": \"xcodebuild -workspace ios/YourApp.xcworkspace -scheme YourApp -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build\",\n      \"type\": \"ios.simulator\",\n      \"name\": \"iPhone 12\"\n    }\n  }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음으로, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"e2e/config.js","position":{"start":{"line":128,"column":7,"offset":2707},"end":{"line":128,"column":22,"offset":2722}}}],"position":{"start":{"line":128,"column":7,"offset":2707},"end":{"line":128,"column":22,"offset":2722}}},"children":"e2e/config.js"}}]," 파일을 생성하고 다음과 같이 작성합니다."]}],"\n",["$","pre","pre-9",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const { init, device, expect, element, by } = require('detox');\nconst { detox: { configurations } } = require('../package.json');\n\ndescribe('Example', () => {\n  beforeAll(async () => {\n    await init(configurations);\n  });\n\n  beforeEach(async () => {\n    await device.reloadReactNative();\n  });\n\n  it('should have welcome screen', async () => {\n    await expect(element(by.id('welcome'))).toBeVisible();\n  });\n\n  it('should show hello screen after tap', async () => {\n    await element(by.id('welcome_button')).tap();\n    await expect(element(by.id('hello'))).toBeVisible();\n  });\n});\n"}],"position":{"start":{"line":130,"column":1,"offset":2747},"end":{"line":152,"column":4,"offset":3349}}},"children":"const { init, device, expect, element, by } = require('detox');\nconst { detox: { configurations } } = require('../package.json');\n\ndescribe('Example', () => {\n  beforeAll(async () => {\n    await init(configurations);\n  });\n\n  beforeEach(async () => {\n    await device.reloadReactNative();\n  });\n\n  it('should have welcome screen', async () => {\n    await expect(element(by.id('welcome'))).toBeVisible();\n  });\n\n  it('should show hello screen after tap', async () => {\n    await element(by.id('welcome_button')).tap();\n    await expect(element(by.id('hello'))).toBeVisible();\n  });\n});\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"npm run build","position":{"start":{"line":154,"column":4,"offset":3354},"end":{"line":154,"column":19,"offset":3369}}}],"position":{"start":{"line":154,"column":4,"offset":3354},"end":{"line":154,"column":19,"offset":3369}}},"children":"npm run build"}}]," 명령어로 애플리케이션을 빌드하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"detox test","position":{"start":{"line":154,"column":39,"offset":3389},"end":{"line":154,"column":51,"offset":3401}}}],"position":{"start":{"line":154,"column":39,"offset":3389},"end":{"line":154,"column":51,"offset":3401}}},"children":"detox test"}}]," 명령어로 테스트를 실행하면 됩니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"React Native 애플리케이션의 테스트는 초기 설정에 다소 시간이 걸리지만, Jest와 Detox를 활용하면 유닛 테스트, 통합 테스트 및 End-to-End 테스트를 효과적으로 수행할 수 있습니다. 이러한 테스트들은 애플리케이션의 품질을 보장하고, 버그를 사전에 발견하여 유지 보수 비용을 절감하는데 큰 도움을 줍니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"React Native 테스트 전략: Jest와 Detox 활용법","toc":[{"tagName":"h1","title":"React Native 테스트 전략: Jest와 Detox 활용법","id":"26b2fc41"},{"tagName":"h2","title":"유닛 테스트 (Unit Test)","id":"246b601c"},{"tagName":"h3","title":"Jest 설정하기","id":"dccbea43"},{"tagName":"h2","title":"통합 테스트 (Integration Test)","id":"df9d3427"},{"tagName":"h3","title":"React Testing Library 설정하기","id":"b28b71c6"},{"tagName":"h2","title":"End-to-End 테스트 (E2E Test)","id":"2bc70009"},{"tagName":"h3","title":"Detox 설정하기","id":"ac473eb6"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
