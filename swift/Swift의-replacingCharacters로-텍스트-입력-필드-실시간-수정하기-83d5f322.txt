1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift%EC%9D%98-replacingCharacters%EB%A1%9C-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%9E%85%EB%A0%A5-%ED%95%84%EB%93%9C-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0-83d5f322","d"],{"children":["__PAGE__?{\"slug\":\"Swift의-replacingCharacters로-텍스트-입력-필드-실시간-수정하기-83d5f322\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift%EC%9D%98-replacingCharacters%EB%A1%9C-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%9E%85%EB%A0%A5-%ED%95%84%EB%93%9C-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0-83d5f322","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift의-replacingCharacters로-텍스트-입력-필드-실시간-수정하기-83d5f322\"}"},"styles":[]}],"segment":["slug","Swift%EC%9D%98-replacingCharacters%EB%A1%9C-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%9E%85%EB%A0%A5-%ED%95%84%EB%93%9C-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0-83d5f322","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift의 replacingCharacters로 텍스트 입력 필드 실시간 수정하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift의 replacingCharacters 메소드를 사용하여 텍스트 입력 필드의 내용을 실시간으로 수정하는 방법을 설명합니다. 이 방법을 통해 사용자 입력을 실시간으로 포맷팅하거나 검증할 수 있습니다."}],["$","meta","3",{"name":"keywords","content":"Swift,iOS,replacingCharacters,텍스트 필드"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift%EC%9D%98-replacingCharacters%EB%A1%9C-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%9E%85%EB%A0%A5-%ED%95%84%EB%93%9C-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0-83d5f322"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift의 replacingCharacters로 텍스트 입력 필드 실시간 수정하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift의 replacingCharacters로 텍스트 입력 필드 실시간 수정하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift의 replacingCharacters 메소드를 사용하여 텍스트 입력 필드의 내용을 실시간으로 수정하는 방법을 설명합니다. 이 방법을 통해 사용자 입력을 실시간으로 포맷팅하거나 검증할 수 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift%EC%9D%98-replacingCharacters%EB%A1%9C-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%9E%85%EB%A0%A5-%ED%95%84%EB%93%9C-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0-83d5f322"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift의 replacingCharacters로 텍스트 입력 필드 실시간 수정하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift의 replacingCharacters 메소드를 사용하여 텍스트 입력 필드의 내용을 실시간으로 수정하는 방법을 설명합니다. 이 방법을 통해 사용자 입력을 실시간으로 포맷팅하거나 검증할 수 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift의 replacingCharacters로 텍스트 입력 필드 실시간 수정하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift의 replacingCharacters로 텍스트 입력 필드 실시간 수정하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-17"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"2761429d","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift의 replacingCharacters로 텍스트 입력 필드 실시간 수정하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서는 텍스트 입력 필드의 내용을 실시간으로 수정하거나 검증할 수 있는 여러 가지 방법이 있습니다. 그 중 하나가 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"replacingCharacters(in:with:)","position":{"start":{"line":4,"column":70,"offset":120},"end":{"line":4,"column":101,"offset":151}}}],"position":{"start":{"line":4,"column":70,"offset":120},"end":{"line":4,"column":101,"offset":151}}},"children":"replacingCharacters(in:with:)"}}]," 메소드를 사용하는 것입니다. 이 메소드는 텍스트의 특정 부분을 대체할 수 있도록 해주며, 텍스트 필드에서 사용자의 입력을 즉각적으로 처리할 수 있게 해줍니다."]}],"\n",["$","h2",null,{"id":"e0fb1527","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"텍스트 필드 설정하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"먼저 기본적인 텍스트 필드를 설정합니다. Interface Builder에서 텍스트 필드를 추가하고 관련 아웃렛을 연결한 다음, 델리게이트를 설정합니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass ViewController: UIViewController, UITextFieldDelegate {\n    @IBOutlet weak var textField: UITextField!\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        textField.delegate = self\n    }\n}\n"}],"position":{"start":{"line":9,"column":1,"offset":344},"end":{"line":20,"column":4,"offset":588}}},"children":"import UIKit\n\nclass ViewController: UIViewController, UITextFieldDelegate {\n    @IBOutlet weak var textField: UITextField!\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        textField.delegate = self\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"6a8f7002","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UITextFieldDelegate 메소드 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["텍스트 필드의 내용이 변경될 때마다 특정 행동을 수행하려면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextFieldDelegate","position":{"start":{"line":23,"column":34,"offset":655},"end":{"line":23,"column":55,"offset":676}}}],"position":{"start":{"line":23,"column":34,"offset":655},"end":{"line":23,"column":55,"offset":676}}},"children":"UITextFieldDelegate"}}]," 프로토콜의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"textField(_:shouldChangeCharactersIn:replacementString:)","position":{"start":{"line":23,"column":62,"offset":683},"end":{"line":23,"column":120,"offset":741}}}],"position":{"start":{"line":23,"column":62,"offset":683},"end":{"line":23,"column":120,"offset":741}}},"children":"textField(_:shouldChangeCharactersIn:replacementString:)"}}]," 메소드를 사용합니다. 이 메소드는 사용자가 텍스트 필드에 새로운 문자를 입력하거나 기존 문자를 삭제할 때마다 호출됩니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {\n    // 현재 텍스트 필드의 텍스트\n    guard let currentText = textField.text as NSString? else {\n        return true\n    }\n\n    // 문자열을 대체\n    let newString = currentText.replacingCharacters(in: range, with: string)\n\n    // 새로운 문자열을 사용하여 원하는 작업 수행\n    print(\"New String: \\(newString)\")\n\n    // true를 반환하여 텍스트 필드의 텍스트를 업데이트\n    return true\n}\n"}],"position":{"start":{"line":25,"column":1,"offset":811},"end":{"line":41,"column":4,"offset":1278}}},"children":"func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {\n    // 현재 텍스트 필드의 텍스트\n    guard let currentText = textField.text as NSString? else {\n        return true\n    }\n\n    // 문자열을 대체\n    let newString = currentText.replacingCharacters(in: range, with: string)\n\n    // 새로운 문자열을 사용하여 원하는 작업 수행\n    print(\"New String: \\(newString)\")\n\n    // true를 반환하여 텍스트 필드의 텍스트를 업데이트\n    return true\n}\n"}}]}],"\n",["$","h2",null,{"id":"0edc2395","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"입력 형식 지정하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"replacingCharacters(in:with:)","position":{"start":{"line":44,"column":1,"offset":1294},"end":{"line":44,"column":32,"offset":1325}}}],"position":{"start":{"line":44,"column":1,"offset":1294},"end":{"line":44,"column":32,"offset":1325}}},"children":"replacingCharacters(in:with:)"}}]," 메소드를 사용하여 사용자의 입력을 특정 형식으로 제한할 수 있습니다. 예를 들어, 사용자가 입력한 전화번호를 실시간으로 포맷팅할 수 있습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func formatPhoneNumber(_ number: String) -> String {\n    let cleanedNumber = number.replacingOccurrences(of: \"[^0-9]\", with: \"\", options: .regularExpression)\n    let length = cleanedNumber.count\n    \n    if length <= 3 {\n        return cleanedNumber\n    } else if length <= 6 {\n        return \"(\\(cleanedNumber.prefix(3))) \\(cleanedNumber.suffix(length - 3))\"\n    } else {\n        let areaCode = cleanedNumber.prefix(3)\n        let middle = cleanedNumber[cleanedNumber.index(cleanedNumber.startIndex, offsetBy: 3)..<cleanedNumber.index(cleanedNumber.startIndex, offsetBy: 6)]\n        let last = cleanedNumber.suffix(length - 6)\n        return \"(\\(areaCode)) \\(middle)-\\(last)\"\n    }\n}\n"}],"position":{"start":{"line":46,"column":1,"offset":1407},"end":{"line":62,"column":4,"offset":2104}}},"children":"func formatPhoneNumber(_ number: String) -> String {\n    let cleanedNumber = number.replacingOccurrences(of: \"[^0-9]\", with: \"\", options: .regularExpression)\n    let length = cleanedNumber.count\n    \n    if length <= 3 {\n        return cleanedNumber\n    } else if length <= 6 {\n        return \"(\\(cleanedNumber.prefix(3))) \\(cleanedNumber.suffix(length - 3))\"\n    } else {\n        let areaCode = cleanedNumber.prefix(3)\n        let middle = cleanedNumber[cleanedNumber.index(cleanedNumber.startIndex, offsetBy: 3)..<cleanedNumber.index(cleanedNumber.startIndex, offsetBy: 6)]\n        let last = cleanedNumber.suffix(length - 6)\n        return \"(\\(areaCode)) \\(middle)-\\(last)\"\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 함수를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"textField(_:shouldChangeCharactersIn:replacementString:)","position":{"start":{"line":64,"column":7,"offset":2112},"end":{"line":64,"column":65,"offset":2170}}}],"position":{"start":{"line":64,"column":7,"offset":2112},"end":{"line":64,"column":65,"offset":2170}}},"children":"textField(_:shouldChangeCharactersIn:replacementString:)"}}]," 메소드 내부에서 호출하여 포맷팅된 문자열을 다시 입력 필드에 반영합니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {\n    guard let currentText = textField.text as NSString? else {\n        return true\n    }\n\n    let newString = currentText.replacingCharacters(in: range, with: string)\n    let formattedString = formatPhoneNumber(newString)\n    textField.text = formattedString\n\n    return false\n}\n"}],"position":{"start":{"line":66,"column":1,"offset":2213},"end":{"line":78,"column":4,"offset":2630}}},"children":"func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {\n    guard let currentText = textField.text as NSString? else {\n        return true\n    }\n\n    let newString = currentText.replacingCharacters(in: range, with: string)\n    let formattedString = formatPhoneNumber(newString)\n    textField.text = formattedString\n\n    return false\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"return false","position":{"start":{"line":80,"column":1,"offset":2632},"end":{"line":80,"column":15,"offset":2646}}}],"position":{"start":{"line":80,"column":1,"offset":2632},"end":{"line":80,"column":15,"offset":2646}}},"children":"return false"}}],"를 반환하여 텍스트 필드의 텍스트가 수동으로 업데이트되도록 합니다. 이렇게 하면 사용자가 입력한 전화번호가 실시간으로 포맷팅된 형태로 텍스트 필드에 표시됩니다."]}],"\n",["$","h2",null,{"id":"e4d17ca6","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"유효성 검사"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"사용자의 입력이 특정 조건을 만족하도록 제한할 수도 있습니다. 예를 들어, 사용자가 입력한 내용이 숫자로만 구성되어 있는지 검사할 수 있습니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {\n    guard let currentText = textField.text as NSString? else {\n        return true\n    }\n\n    let newString = currentText.replacingCharacters(in: range, with: string)\n    guard !newString.isEmpty else {\n        return true\n    }\n\n    let characterSet = CharacterSet(charactersIn: \"0123456789\").inverted\n    let filtered = string.components(separatedBy: characterSet).joined(separator: \"\")\n    return string == filtered\n}\n"}],"position":{"start":{"line":85,"column":1,"offset":2829},"end":{"line":100,"column":4,"offset":3388}}},"children":"func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {\n    guard let currentText = textField.text as NSString? else {\n        return true\n    }\n\n    let newString = currentText.replacingCharacters(in: range, with: string)\n    guard !newString.isEmpty else {\n        return true\n    }\n\n    let characterSet = CharacterSet(charactersIn: \"0123456789\").inverted\n    let filtered = string.components(separatedBy: characterSet).joined(separator: \"\")\n    return string == filtered\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 코드는 사용자가 입력한 내용이 숫자가 아닌 경우 입력을 무시하도록 합니다. 이를 통해 특정 형식의 입력만 허용할 수 있습니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"replacingCharacters(in:with:)","position":{"start":{"line":105,"column":1,"offset":3470},"end":{"line":105,"column":32,"offset":3501}}}],"position":{"start":{"line":105,"column":1,"offset":3470},"end":{"line":105,"column":32,"offset":3501}}},"children":"replacingCharacters(in:with:)"}}]," 메소드를 사용하면 텍스트 필드에서 사용자의 입력을 실시간으로 처리하여 원하는 형식으로 변환하거나 유효성을 검사할 수 있습니다. 이를 활용하면 보다 직관적이고 사용자 친화적인 UI를 구현할 수 있습니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift의 replacingCharacters로 텍스트 입력 필드 실시간 수정하기","toc":[{"tagName":"h1","title":"Swift의 replacingCharacters로 텍스트 입력 필드 실시간 수정하기","id":"2761429d"},{"tagName":"h2","title":"텍스트 필드 설정하기","id":"e0fb1527"},{"tagName":"h2","title":"UITextFieldDelegate 메소드 사용하기","id":"6a8f7002"},{"tagName":"h2","title":"입력 형식 지정하기","id":"0edc2395"},{"tagName":"h2","title":"유효성 검사","id":"e4d17ca6"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
