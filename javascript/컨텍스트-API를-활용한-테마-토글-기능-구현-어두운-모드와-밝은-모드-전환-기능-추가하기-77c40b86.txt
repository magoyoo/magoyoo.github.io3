1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-API%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%85%8C%EB%A7%88-%ED%86%A0%EA%B8%80-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84-%EC%96%B4%EB%91%90%EC%9A%B4-%EB%AA%A8%EB%93%9C%EC%99%80-%EB%B0%9D%EC%9D%80-%EB%AA%A8%EB%93%9C-%EC%A0%84%ED%99%98-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0-77c40b86","d"],{"children":["__PAGE__?{\"slug\":\"컨텍스트-API를-활용한-테마-토글-기능-구현-어두운-모드와-밝은-모드-전환-기능-추가하기-77c40b86\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-API%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%85%8C%EB%A7%88-%ED%86%A0%EA%B8%80-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84-%EC%96%B4%EB%91%90%EC%9A%B4-%EB%AA%A8%EB%93%9C%EC%99%80-%EB%B0%9D%EC%9D%80-%EB%AA%A8%EB%93%9C-%EC%A0%84%ED%99%98-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0-77c40b86","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"컨텍스트-API를-활용한-테마-토글-기능-구현-어두운-모드와-밝은-모드-전환-기능-추가하기-77c40b86\"}"},"styles":[]}],"segment":["slug","%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-API%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%85%8C%EB%A7%88-%ED%86%A0%EA%B8%80-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84-%EC%96%B4%EB%91%90%EC%9A%B4-%EB%AA%A8%EB%93%9C%EC%99%80-%EB%B0%9D%EC%9D%80-%EB%AA%A8%EB%93%9C-%EC%A0%84%ED%99%98-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0-77c40b86","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"컨텍스트 API를 활용한 테마 토글 기능 구현: 어두운 모드와 밝은 모드 전환 기능 추가하기. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 React 컨텍스트 API를 사용하여 어두운 모드와 밝은 모드를 전환할 수 있는 테마 토글 기능을 구현하는 방법에 대해 살펴봅니다. 각 단계별로 필요한 코드와 설명을 제공하며, 실제 프로젝트에서 활용할 수 있도록 안내합니다."}],["$","meta","3",{"name":"keywords","content":"React,Context API,테마 토글,JavaScript"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-API%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%85%8C%EB%A7%88-%ED%86%A0%EA%B8%80-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84-%EC%96%B4%EB%91%90%EC%9A%B4-%EB%AA%A8%EB%93%9C%EC%99%80-%EB%B0%9D%EC%9D%80-%EB%AA%A8%EB%93%9C-%EC%A0%84%ED%99%98-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0-77c40b86"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"컨텍스트 API를 활용한 테마 토글 기능 구현: 어두운 모드와 밝은 모드 전환 기능 추가하기. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"컨텍스트 API를 활용한 테마 토글 기능 구현: 어두운 모드와 밝은 모드 전환 기능 추가하기. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 React 컨텍스트 API를 사용하여 어두운 모드와 밝은 모드를 전환할 수 있는 테마 토글 기능을 구현하는 방법에 대해 살펴봅니다. 각 단계별로 필요한 코드와 설명을 제공하며, 실제 프로젝트에서 활용할 수 있도록 안내합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-API%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%85%8C%EB%A7%88-%ED%86%A0%EA%B8%80-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84-%EC%96%B4%EB%91%90%EC%9A%B4-%EB%AA%A8%EB%93%9C%EC%99%80-%EB%B0%9D%EC%9D%80-%EB%AA%A8%EB%93%9C-%EC%A0%84%ED%99%98-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0-77c40b86"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"컨텍스트 API를 활용한 테마 토글 기능 구현: 어두운 모드와 밝은 모드 전환 기능 추가하기. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 React 컨텍스트 API를 사용하여 어두운 모드와 밝은 모드를 전환할 수 있는 테마 토글 기능을 구현하는 방법에 대해 살펴봅니다. 각 단계별로 필요한 코드와 설명을 제공하며, 실제 프로젝트에서 활용할 수 있도록 안내합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"컨텍스트 API를 활용한 테마 토글 기능 구현: 어두운 모드와 밝은 모드 전환 기능 추가하기."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"컨텍스트 API를 활용한 테마 토글 기능 구현: 어두운 모드와 밝은 모드 전환 기능 추가하기."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-23"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"f1ad2f6e","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"컨텍스트 API를 활용한 테마 토글 기능 구현: 어두운 모드와 밝은 모드 전환 기능 추가하기"}],"\n",["$","h2",null,{"id":"fa255f0c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"소개"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"현대 웹 애플리케이션에서는 사용자 경험을 향상시키기 위해 개별 사용자 설정에 맞추어 테마 모드를 제공하는 경우가 많습니다. 어두운 모드와 밝은 모드를 전환할 수 있는 테마 토글 기능은 이러한 사용자 맞춤형 경험을 제공하는 대표적인 예입니다. 이번 글에서는 React의 컨텍스트 API를 사용하여 이러한 테마 토글 기능을 구현하는 방법을 단계별로 설명하겠습니다."}],"\n",["$","h2",null,{"id":"e384d912","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"컨텍스트 API란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"React의 컨텍스트 API(Context API)는 깊게 중첩된 컴포넌트 트리를 통하지 않고도 데이터를 전역에서 공유할 수 있도록 도와주는 강력한 기능입니다. 이를 통해 전역 상태를 관리하고 다양한 컴포넌트 간의 데이터 공유를 손쉽게 관리할 수 있습니다. 컨텍스트 API를 사용하면 전역 상태를 필요로 하는 값을 부가적인 작업 없이 쉽게 전달할 수 있습니다."}],"\n",["$","h2",null,{"id":"7c7e21cd","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"테마 토글 기능 구현하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"테마 토글 기능을 구현하기 위해 다음과 같은 단계로 작업을 진행합니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":"테마 컨텍스트 생성"}],"\n",["$","li","li-1",{"children":"테마 프로바이더 구성"}],"\n",["$","li","li-2",{"children":"테마를 적용할 컴포넌트 구현"}],"\n",["$","li","li-3",{"children":"테마 토글 기능 연결"}],"\n"]}],"\n",["$","h2",null,{"id":"69198749","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"1. 테마 컨텍스트 생성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저 테마를 관리할 컨텍스트를 생성합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ThemeContext","position":{"start":{"line":18,"column":25,"offset":644},"end":{"line":18,"column":39,"offset":658}}}],"position":{"start":{"line":18,"column":25,"offset":644},"end":{"line":18,"column":39,"offset":658}}},"children":"ThemeContext"}}],"는 테마 상태와 테마를 토글하는 함수를 포함합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { createContext, useState, useContext } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n"}],"position":{"start":{"line":20,"column":1,"offset":688},"end":{"line":40,"column":4,"offset":1200}}},"children":"import React, { createContext, useState, useContext } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 테마 컨텍스트를 생성하고 테마 상태와 테마를 토글하는 함수를 제공하는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ThemeProvider","position":{"start":{"line":42,"column":46,"offset":1247},"end":{"line":42,"column":61,"offset":1262}}}],"position":{"start":{"line":42,"column":46,"offset":1247},"end":{"line":42,"column":61,"offset":1262}}},"children":"ThemeProvider"}}]," 컴포넌트를 정의합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useTheme","position":{"start":{"line":42,"column":75,"offset":1276},"end":{"line":42,"column":85,"offset":1286}}}],"position":{"start":{"line":42,"column":75,"offset":1276},"end":{"line":42,"column":85,"offset":1286}}},"children":"useTheme"}}]," 훅을 통해 쉽게 컨텍스트 값을 사용할 수 있도록 합니다."]}],"\n",["$","h2",null,{"id":"cf0bd409","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"2. 테마 프로바이더 구성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ThemeProvider","position":{"start":{"line":45,"column":4,"offset":1341},"end":{"line":45,"column":19,"offset":1356}}}],"position":{"start":{"line":45,"column":4,"offset":1341},"end":{"line":45,"column":19,"offset":1356}}},"children":"ThemeProvider"}}],"를 애플리케이션의 루트 컴포넌트에 추가하여 전역 테마 상태를 설정합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from './ThemeContext';\n\nReactDOM.render(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"}],"position":{"start":{"line":47,"column":1,"offset":1398},"end":{"line":59,"column":4,"offset":1654}}},"children":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from './ThemeContext';\n\nReactDOM.render(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이렇게 하면 애플리케이션 내의 모든 컴포넌트가 테마 컨텍스트에 접근할 수 있게 됩니다."}],"\n",["$","h2",null,{"id":"5f4ed92c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"3. 테마를 적용할 컴포넌트 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["테마를 적용할 컴포넌트를 만들어 봅시다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useTheme","position":{"start":{"line":64,"column":24,"offset":1751},"end":{"line":64,"column":34,"offset":1761}}}],"position":{"start":{"line":64,"column":24,"offset":1751},"end":{"line":64,"column":34,"offset":1761}}},"children":"useTheme"}}]," 훅을 사용하여 현재 테마에 따라 스타일을 적용합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React from 'react';\nimport { useTheme } from './ThemeContext';\nimport './App.css';\n\nconst ThemedComponent = () => {\n  const { theme } = useTheme();\n\n  return (\n    <div className={`container ${theme}`}>\n      <h1>This is a {theme} theme!</h1>\n    </div>\n  );\n};\n\nexport default ThemedComponent;\n"}],"position":{"start":{"line":66,"column":1,"offset":1793},"end":{"line":82,"column":4,"offset":2112}}},"children":"import React from 'react';\nimport { useTheme } from './ThemeContext';\nimport './App.css';\n\nconst ThemedComponent = () => {\n  const { theme } = useTheme();\n\n  return (\n    <div className={`container ${theme}`}>\n      <h1>This is a {theme} theme!</h1>\n    </div>\n  );\n};\n\nexport default ThemedComponent;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 컴포넌트는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"theme","position":{"start":{"line":84,"column":9,"offset":2122},"end":{"line":84,"column":16,"offset":2129}}}],"position":{"start":{"line":84,"column":9,"offset":2122},"end":{"line":84,"column":16,"offset":2129}}},"children":"theme"}}]," 값을 받아서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"container","position":{"start":{"line":84,"column":24,"offset":2137},"end":{"line":84,"column":35,"offset":2148}}}],"position":{"start":{"line":84,"column":24,"offset":2137},"end":{"line":84,"column":35,"offset":2148}}},"children":"container"}}]," 클래스에 현재 테마를 추가합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App.css","position":{"start":{"line":84,"column":55,"offset":2168},"end":{"line":84,"column":64,"offset":2177}}}],"position":{"start":{"line":84,"column":55,"offset":2168},"end":{"line":84,"column":64,"offset":2177}}},"children":"App.css"}}]," 파일에서 각 테마에 대한 스타일을 정의합니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-css","node":{"type":"element","tagName":"code","properties":{"className":["language-css"]},"children":[{"type":"text","value":".container {\n  padding: 20px;\n  text-align: center;\n}\n\n.light {\n  background-color: #fff;\n  color: #000;\n}\n\n.dark {\n  background-color: #333;\n  color: #fff;\n}\n"}],"position":{"start":{"line":86,"column":1,"offset":2205},"end":{"line":101,"column":4,"offset":2374}}},"children":".container {\n  padding: 20px;\n  text-align: center;\n}\n\n.light {\n  background-color: #fff;\n  color: #000;\n}\n\n.dark {\n  background-color: #333;\n  color: #fff;\n}\n"}}]}],"\n",["$","h2",null,{"id":"907395d1","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"4. 테마 토글 기능 연결"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"테마 토글 버튼을 추가하여 사용자가 테마를 전환할 수 있도록 합니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React from 'react';\nimport ThemedComponent from './ThemedComponent';\nimport { useTheme } from './ThemeContext';\n\nconst App = () => {\n  const { toggleTheme } = useTheme();\n\n  return (\n    <div>\n      <button onClick={toggleTheme}>Toggle Theme</button>\n      <ThemedComponent />\n    </div>\n  );\n};\n\nexport default App;\n"}],"position":{"start":{"line":106,"column":1,"offset":2434},"end":{"line":123,"column":4,"offset":2775}}},"children":"import React from 'react';\nimport ThemedComponent from './ThemedComponent';\nimport { useTheme } from './ThemeContext';\n\nconst App = () => {\n  const { toggleTheme } = useTheme();\n\n  return (\n    <div>\n      <button onClick={toggleTheme}>Toggle Theme</button>\n      <ThemedComponent />\n    </div>\n  );\n};\n\nexport default App;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 코드는 테마 토글 버튼을 추가하고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toggleTheme","position":{"start":{"line":125,"column":23,"offset":2799},"end":{"line":125,"column":36,"offset":2812}}}],"position":{"start":{"line":125,"column":23,"offset":2799},"end":{"line":125,"column":36,"offset":2812}}},"children":"toggleTheme"}}]," 함수를 연결하여 버튼 클릭 시 테마가 전환되도록 합니다. 이제 애플리케이션을 실행하면 테마 토글 기능이 정상적으로 작동하는 것을 확인할 수 있습니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"React 컨텍스트 API를 사용하면 전역 상태 관리가 더욱 용이해지며, 사용자 경험을 향상시키기 위한 다양한 기능을 구현할 수 있습니다. 이번 글에서는 테마 토글 기능을 구현하기 위한 전 과정을 살펴보았습니다. 이 같은 방법을 응용하면 다양한 전역 상태를 관리하고 사용자 맞춤형 기능을 쉽게 추가할 수 있습니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"컨텍스트 API를 활용한 테마 토글 기능 구현: 어두운 모드와 밝은 모드 전환 기능 추가하기.","toc":[{"tagName":"h1","title":"컨텍스트 API를 활용한 테마 토글 기능 구현: 어두운 모드와 밝은 모드 전환 기능 추가하기","id":"f1ad2f6e"},{"tagName":"h2","title":"소개","id":"fa255f0c"},{"tagName":"h2","title":"컨텍스트 API란?","id":"e384d912"},{"tagName":"h2","title":"테마 토글 기능 구현하기","id":"7c7e21cd"},{"tagName":"h2","title":"1. 테마 컨텍스트 생성","id":"69198749"},{"tagName":"h2","title":"2. 테마 프로바이더 구성","id":"cf0bd409"},{"tagName":"h2","title":"3. 테마를 적용할 컴포넌트 구현","id":"5f4ed92c"},{"tagName":"h2","title":"4. 테마 토글 기능 연결","id":"907395d1"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
