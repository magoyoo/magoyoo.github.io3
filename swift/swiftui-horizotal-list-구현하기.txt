1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","swiftui-horizotal-list-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0","d"],{"children":["__PAGE__?{\"slug\":\"swiftui-horizotal-list-구현하기\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","swiftui-horizotal-list-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"swiftui-horizotal-list-구현하기\"}"},"styles":[]}],"segment":["slug","swiftui-horizotal-list-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI Horizontal List 구현하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"SwiftUI에서 ScrollView와 LazyHStack을 사용해 수평 리스트를 구현하는 방법을 알아보세요. 이 가이드는 SwiftUI List의 제한 사항과 수평 스크롤 리스트의 기본 및 고급 기능을 포함한 다양한 예제를 제공합니다. 아이템 레이아웃 커스터마이징, 무한 스크롤, 섹션별 리스트 구현, 성능 최적화 전략 등을 통해 효율적이고 유연한 수평 스크롤 리스트를 만드는 방법을 자세히 설명합니다. SwiftUI 애플리케이션을 향상시키기 위한 다양한 팁과 트릭을 배워보세요."}],["$","meta","3",{"name":"keywords","content":"swift,swiftUI"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/swiftui-horizotal-list-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI Horizontal List 구현하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI Horizontal List 구현하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"SwiftUI에서 ScrollView와 LazyHStack을 사용해 수평 리스트를 구현하는 방법을 알아보세요. 이 가이드는 SwiftUI List의 제한 사항과 수평 스크롤 리스트의 기본 및 고급 기능을 포함한 다양한 예제를 제공합니다. 아이템 레이아웃 커스터마이징, 무한 스크롤, 섹션별 리스트 구현, 성능 최적화 전략 등을 통해 효율적이고 유연한 수평 스크롤 리스트를 만드는 방법을 자세히 설명합니다. SwiftUI 애플리케이션을 향상시키기 위한 다양한 팁과 트릭을 배워보세요."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/swiftui-horizotal-list-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI Horizontal List 구현하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"SwiftUI에서 ScrollView와 LazyHStack을 사용해 수평 리스트를 구현하는 방법을 알아보세요. 이 가이드는 SwiftUI List의 제한 사항과 수평 스크롤 리스트의 기본 및 고급 기능을 포함한 다양한 예제를 제공합니다. 아이템 레이아웃 커스터마이징, 무한 스크롤, 섹션별 리스트 구현, 성능 최적화 전략 등을 통해 효율적이고 유연한 수평 스크롤 리스트를 만드는 방법을 자세히 설명합니다. SwiftUI 애플리케이션을 향상시키기 위한 다양한 팁과 트릭을 배워보세요."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
10:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
11:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T527,class InfiniteScrollViewModel: ObservableObject {
    @Published var items = [String]()
    private var isLoading = false

    init() {
        loadMoreItems()
    }

    func loadMoreItems() {
        guard !isLoading else { return }
        isLoading = true
        DispatchQueue.global().asyncAfter(deadline: .now() + 2) {
            let moreItems = (self.items.count..<self.items.count + 20).map { "Item \($0)" }
            DispatchQueue.main.async {
                self.items.append(contentsOf: moreItems)
                self.isLoading = false
            }
        }
    }
}

struct InfiniteHorizontalListView: View {
    @StateObject private var viewModel = InfiniteScrollViewModel()

    var body: some View {
        ScrollView(.horizontal, showsIndicators: false) {
            LazyHStack {
                ForEach(viewModel.items, id: \.self) { item in
                    Text(item)
                        .padding()
                        .background(Color.blue)
                        .cornerRadius(8)
                        .onAppear {
                            if item == viewModel.items.last {
                                viewModel.loadMoreItems()
                            }
                        }
                }
            }
            .padding(.horizontal)
        }
    }
}
f:T527,class InfiniteScrollViewModel: ObservableObject {
    @Published var items = [String]()
    private var isLoading = false

    init() {
        loadMoreItems()
    }

    func loadMoreItems() {
        guard !isLoading else { return }
        isLoading = true
        DispatchQueue.global().asyncAfter(deadline: .now() + 2) {
            let moreItems = (self.items.count..<self.items.count + 20).map { "Item \($0)" }
            DispatchQueue.main.async {
                self.items.append(contentsOf: moreItems)
                self.isLoading = false
            }
        }
    }
}

struct InfiniteHorizontalListView: View {
    @StateObject private var viewModel = InfiniteScrollViewModel()

    var body: some View {
        ScrollView(.horizontal, showsIndicators: false) {
            LazyHStack {
                ForEach(viewModel.items, id: \.self) { item in
                    Text(item)
                        .padding()
                        .background(Color.blue)
                        .cornerRadius(8)
                        .onAppear {
                            if item == viewModel.items.last {
                                viewModel.loadMoreItems()
                            }
                        }
                }
            }
            .padding(.horizontal)
        }
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBasic.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI Horizontal List 구현하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI Horizontal List 구현하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-05-25"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h3",null,{"id":"09d56357","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"SwiftUI Horizontal List 구현하기: ScrollView와 LazyHStack 활용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI에서 데이터를 수평으로 스크롤 가능한 리스트 형태로 표시하는 것은 유용한 기능입니다. 그러나 기본 제공되는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"List","position":{"start":{"line":4,"column":68,"offset":129},"end":{"line":4,"column":74,"offset":135}}}],"position":{"start":{"line":4,"column":68,"offset":129},"end":{"line":4,"column":74,"offset":135}}},"children":"List"}}]," 뷰는 수평 방향을 지원하지 않습니다. 대신, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ScrollView","position":{"start":{"line":4,"column":100,"offset":161},"end":{"line":4,"column":112,"offset":173}}}],"position":{"start":{"line":4,"column":100,"offset":161},"end":{"line":4,"column":112,"offset":173}}},"children":"ScrollView"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHStack","position":{"start":{"line":4,"column":114,"offset":175},"end":{"line":4,"column":126,"offset":187}}}],"position":{"start":{"line":4,"column":114,"offset":175},"end":{"line":4,"column":126,"offset":187}}},"children":"LazyHStack"}}],"을 결합하여 수평 리스트를 구현할 수 있습니다. 이 글에서는 SwiftUI에서 horizontal list를 구현하는 방법과 커스터마이징, 고급 기능을 살펴보겠습니다."]}],"\n",["$","h3",null,{"id":"050f249e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"SwiftUI List와 ScrollView + LazyHStack 비교"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"List","position":{"start":{"line":8,"column":1,"offset":328},"end":{"line":8,"column":7,"offset":334}}}],"position":{"start":{"line":8,"column":1,"offset":328},"end":{"line":8,"column":7,"offset":334}}},"children":"List"}}],"는 SwiftUI에서 가장 많이 사용되는 데이터 디스플레이 컴포넌트 중 하나입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"List","position":{"start":{"line":8,"column":54,"offset":381},"end":{"line":8,"column":60,"offset":387}}}],"position":{"start":{"line":8,"column":54,"offset":381},"end":{"line":8,"column":60,"offset":387}}},"children":"List"}}],"는 세로 스크롤만을 지원하며, 기본적으로 수평 스크롤을 제공하지 않습니다. 반면에, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ScrollView","position":{"start":{"line":8,"column":107,"offset":434},"end":{"line":8,"column":119,"offset":446}}}],"position":{"start":{"line":8,"column":107,"offset":434},"end":{"line":8,"column":119,"offset":446}}},"children":"ScrollView"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHStack","position":{"start":{"line":8,"column":121,"offset":448},"end":{"line":8,"column":133,"offset":460}}}],"position":{"start":{"line":8,"column":121,"offset":448},"end":{"line":8,"column":133,"offset":460}}},"children":"LazyHStack"}}],"을 사용하면 수평 스크롤이 가능한 리스트를 쉽게 구현할 수 있습니다."]}],"\n",["$","h4","h4-0",{"children":"List의 제한 사항"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"수평 스크롤 미지원"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"List","position":{"start":{"line":12,"column":19,"offset":536},"end":{"line":12,"column":25,"offset":542}}}],"position":{"start":{"line":12,"column":19,"offset":536},"end":{"line":12,"column":25,"offset":542}}},"children":"List"}}],"는 기본적으로 수평 방향으로 스크롤할 수 없습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"커스터마이징 제약"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"List","position":{"start":{"line":13,"column":18,"offset":588},"end":{"line":13,"column":24,"offset":594}}}],"position":{"start":{"line":13,"column":18,"offset":588},"end":{"line":13,"column":24,"offset":594}}},"children":"List"}}],"는 정해진 레이아웃과 스타일을 따르기 때문에, 복잡한 커스텀 레이아웃을 구현하기 어렵습니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"78ff9f04","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"ScrollView와 LazyHStack 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ScrollView","position":{"start":{"line":17,"column":1,"offset":680},"end":{"line":17,"column":13,"offset":692}}}],"position":{"start":{"line":17,"column":1,"offset":680},"end":{"line":17,"column":13,"offset":692}}},"children":"ScrollView"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHStack","position":{"start":{"line":17,"column":15,"offset":694},"end":{"line":17,"column":27,"offset":706}}}],"position":{"start":{"line":17,"column":15,"offset":694},"end":{"line":17,"column":27,"offset":706}}},"children":"LazyHStack"}}],"을 사용하면 수평 스크롤이 가능한 리스트를 유연하게 구현할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHStack","position":{"start":{"line":17,"column":68,"offset":747},"end":{"line":17,"column":80,"offset":759}}}],"position":{"start":{"line":17,"column":68,"offset":747},"end":{"line":17,"column":80,"offset":759}}},"children":"LazyHStack"}}],"은 필요한 아이템만 로드하여 성능을 최적화하는 데 도움을 줍니다."]}],"\n",["$","h4","h4-1",{"children":"기본 사용법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["아래는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ScrollView","position":{"start":{"line":21,"column":5,"offset":814},"end":{"line":21,"column":17,"offset":826}}}],"position":{"start":{"line":21,"column":5,"offset":814},"end":{"line":21,"column":17,"offset":826}}},"children":"ScrollView"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHStack","position":{"start":{"line":21,"column":19,"offset":828},"end":{"line":21,"column":31,"offset":840}}}],"position":{"start":{"line":21,"column":19,"offset":828},"end":{"line":21,"column":31,"offset":840}}},"children":"LazyHStack"}}],"을 사용하여 수평 리스트를 구현하는 간단한 예제입니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct HorizontalListView: View {\n    let items = Array(1...20).map { \"Item \\($0)\" }\n\n    var body: some View {\n        ScrollView(.horizontal, showsIndicators: false) {\n            LazyHStack {\n                ForEach(items, id: \\.self) { item in\n                    Text(item)\n                        .padding()\n                        .background(Color.blue)\n                        .cornerRadius(8)\n                }\n            }\n            .padding(.horizontal)\n        }\n    }\n}\n"}],"position":{"start":{"line":23,"column":1,"offset":872},"end":{"line":41,"column":4,"offset":1371}}},"children":"struct HorizontalListView: View {\n    let items = Array(1...20).map { \"Item \\($0)\" }\n\n    var body: some View {\n        ScrollView(.horizontal, showsIndicators: false) {\n            LazyHStack {\n                ForEach(items, id: \\.self) { item in\n                    Text(item)\n                        .padding()\n                        .background(Color.blue)\n                        .cornerRadius(8)\n                }\n            }\n            .padding(.horizontal)\n        }\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"5a12d36e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"커스터마이징"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ScrollView","position":{"start":{"line":45,"column":1,"offset":1385},"end":{"line":45,"column":13,"offset":1397}}}],"position":{"start":{"line":45,"column":1,"offset":1385},"end":{"line":45,"column":13,"offset":1397}}},"children":"ScrollView"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHStack","position":{"start":{"line":45,"column":15,"offset":1399},"end":{"line":45,"column":27,"offset":1411}}}],"position":{"start":{"line":45,"column":15,"offset":1399},"end":{"line":45,"column":27,"offset":1411}}},"children":"LazyHStack"}}],"을 사용하면 각 아이템의 레이아웃과 스타일을 자유롭게 커스터마이징할 수 있습니다."]}],"\n",["$","h4","h4-2",{"children":"아이템 레이아웃"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"각 아이템의 레이아웃을 커스터마이징하여 더욱 복잡하고 매력적인 UI를 만들 수 있습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct CustomItemView: View {\n    var item: String\n\n    var body: some View {\n        VStack {\n            Image(systemName: \"star\")\n                .resizable()\n                .frame(width: 50, height: 50)\n                .padding()\n            Text(item)\n                .font(.headline)\n        }\n        .background(Color.gray.opacity(0.3))\n        .cornerRadius(10)\n        .padding(5)\n    }\n}\n\nstruct HorizontalListView: View {\n    let items = Array(1...20).map { \"Item \\($0)\" }\n\n    var body: some View {\n        ScrollView(.horizontal, showsIndicators: false) {\n            LazyHStack {\n                ForEach(items, id: \\.self) { item in\n                    CustomItemView(item: item)\n                }\n            }\n            .padding(.horizontal)\n        }\n    }\n}\n"}],"position":{"start":{"line":51,"column":1,"offset":1524},"end":{"line":84,"column":4,"offset":2316}}},"children":"struct CustomItemView: View {\n    var item: String\n\n    var body: some View {\n        VStack {\n            Image(systemName: \"star\")\n                .resizable()\n                .frame(width: 50, height: 50)\n                .padding()\n            Text(item)\n                .font(.headline)\n        }\n        .background(Color.gray.opacity(0.3))\n        .cornerRadius(10)\n        .padding(5)\n    }\n}\n\nstruct HorizontalListView: View {\n    let items = Array(1...20).map { \"Item \\($0)\" }\n\n    var body: some View {\n        ScrollView(.horizontal, showsIndicators: false) {\n            LazyHStack {\n                ForEach(items, id: \\.self) { item in\n                    CustomItemView(item: item)\n                }\n            }\n            .padding(.horizontal)\n        }\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"dfd9044c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"고급 기능"}],"\n",["$","h4","h4-3",{"children":"무한 스크롤 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"무한 스크롤을 구현하려면 추가 데이터를 동적으로 로드하여 리스트에 추가하는 기능이 필요합니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":92,"column":1,"offset":2399},"end":{"line":136,"column":4,"offset":3730}}},"children":"$f"}}]}],"\n",["$","h4","h4-4",{"children":"섹션 및 그룹화된 리스트"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"섹션 헤더를 추가하여 데이터를 그룹화할 수 있습니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct SectionedHorizontalListView: View {\n    let sections = [\n        [\"Header 1\": [\"Item 1\", \"Item 2\"]],\n        [\"Header 2\": [\"Item 3\", \"Item 4\"]]\n    ]\n\n    var body: some View {\n        ScrollView(.horizontal, showsIndicators: false) {\n            HStack(alignment: .top) {\n                ForEach(sections, id: \\.keys.first!) { section in\n                    VStack {\n                        Text(section.keys.first!)\n                            .font(.headline)\n                            .padding()\n                        LazyHStack {\n                            ForEach(section.values.first!, id: \\.self) { item in\n                                Text(item)\n                                    .padding()\n                                    .background(Color.blue)\n                                    .cornerRadius(8)\n                            }\n                        }\n                    }\n                    .padding(.horizontal)\n                }\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":142,"column":1,"offset":3783},"end":{"line":172,"column":4,"offset":4795}}},"children":"struct SectionedHorizontalListView: View {\n    let sections = [\n        [\"Header 1\": [\"Item 1\", \"Item 2\"]],\n        [\"Header 2\": [\"Item 3\", \"Item 4\"]]\n    ]\n\n    var body: some View {\n        ScrollView(.horizontal, showsIndicators: false) {\n            HStack(alignment: .top) {\n                ForEach(sections, id: \\.keys.first!) { section in\n                    VStack {\n                        Text(section.keys.first!)\n                            .font(.headline)\n                            .padding()\n                        LazyHStack {\n                            ForEach(section.values.first!, id: \\.self) { item in\n                                Text(item)\n                                    .padding()\n                                    .background(Color.blue)\n                                    .cornerRadius(8)\n                            }\n                        }\n                    }\n                    .padding(.horizontal)\n                }\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"d0b3c807","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"성능 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHStack","position":{"start":{"line":176,"column":1,"offset":4809},"end":{"line":176,"column":13,"offset":4821}}}],"position":{"start":{"line":176,"column":1,"offset":4809},"end":{"line":176,"column":13,"offset":4821}}},"children":"LazyHStack"}}],"을 사용하면 필요한 뷰만 로드하여 메모리 효율성을 극대화할 수 있습니다. 또한, 많은 데이터를 처리할 때 불필요한 뷰 로딩을 방지하여 성능을 향상시킬 수 있습니다."]}],"\n",["$","h3",null,{"id":"5b12bcf2","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI에서 수평 스크롤 리스트를 구현하려면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"List","position":{"start":{"line":180,"column":29,"offset":4950},"end":{"line":180,"column":35,"offset":4956}}}],"position":{"start":{"line":180,"column":29,"offset":4950},"end":{"line":180,"column":35,"offset":4956}}},"children":"List"}}]," 대신 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ScrollView","position":{"start":{"line":180,"column":39,"offset":4960},"end":{"line":180,"column":51,"offset":4972}}}],"position":{"start":{"line":180,"column":39,"offset":4960},"end":{"line":180,"column":51,"offset":4972}}},"children":"ScrollView"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHStack","position":{"start":{"line":180,"column":53,"offset":4974},"end":{"line":180,"column":65,"offset":4986}}}],"position":{"start":{"line":180,"column":53,"offset":4974},"end":{"line":180,"column":65,"offset":4986}}},"children":"LazyHStack"}}],"을 사용해야 합니다. 이러한 접근 방식은 유연성과 성능 최적화를 제공하며, 다양한 커스터마이징과 고급 기능을 활용할 수 있습니다. 이 글에서 소개한 방법을 통해 SwiftUI에서 수평 스크롤 리스트를 효과적으로 구현할 수 있을 것입니다."]}]]}]}],["$","$L10",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L11",null,{"articleTitle":"SwiftUI Horizontal List 구현하기","toc":[{"tagName":"h3","title":"SwiftUI Horizontal List 구현하기: ScrollView와 LazyHStack 활용","id":"09d56357"},{"tagName":"h3","title":"SwiftUI List와 ScrollView + LazyHStack 비교","id":"050f249e"},{"tagName":"h3","title":"ScrollView와 LazyHStack 사용하기","id":"78ff9f04"},{"tagName":"h3","title":"커스터마이징","id":"5a12d36e"},{"tagName":"h3","title":"고급 기능","id":"dfd9044c"},{"tagName":"h3","title":"성능 최적화","id":"d0b3c807"},{"tagName":"h3","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
