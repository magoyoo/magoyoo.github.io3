1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","JavaScript-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%EB%B3%80%EC%88%98%EC%99%80-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EC%9D%98-%EB%B9%84%EB%B0%80-5215ac5a","d"],{"children":["__PAGE__?{\"slug\":\"JavaScript-호이스팅-이해하기-변수와-함수-선언의-비밀-5215ac5a\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","JavaScript-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%EB%B3%80%EC%88%98%EC%99%80-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EC%9D%98-%EB%B9%84%EB%B0%80-5215ac5a","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"JavaScript-호이스팅-이해하기-변수와-함수-선언의-비밀-5215ac5a\"}"},"styles":[]}],"segment":["slug","JavaScript-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%EB%B3%80%EC%88%98%EC%99%80-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EC%9D%98-%EB%B9%84%EB%B0%80-5215ac5a","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"JavaScript 호이스팅 이해하기: 변수와 함수 선언의 비밀 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"JavaScript에서 호이스팅은 변수와 함수 선언을 코드의 상단으로 끌어올리는 동작을 의미합니다. 이 글에서는 호이스팅의 작동 방식을 깊이 있게 탐구하고, 변수와 함수의 선언 위치가 코드 실행 및 디버깅에 어떻게 영향을 미치는지 살펴봅니다."}],["$","meta","3",{"name":"keywords","content":"JavaScript,호이스팅,변수,함수"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/JavaScript-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%EB%B3%80%EC%88%98%EC%99%80-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EC%9D%98-%EB%B9%84%EB%B0%80-5215ac5a"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"JavaScript 호이스팅 이해하기: 변수와 함수 선언의 비밀 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"JavaScript 호이스팅 이해하기: 변수와 함수 선언의 비밀 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"JavaScript에서 호이스팅은 변수와 함수 선언을 코드의 상단으로 끌어올리는 동작을 의미합니다. 이 글에서는 호이스팅의 작동 방식을 깊이 있게 탐구하고, 변수와 함수의 선언 위치가 코드 실행 및 디버깅에 어떻게 영향을 미치는지 살펴봅니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/JavaScript-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%EB%B3%80%EC%88%98%EC%99%80-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EC%9D%98-%EB%B9%84%EB%B0%80-5215ac5a"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner5.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"JavaScript 호이스팅 이해하기: 변수와 함수 선언의 비밀 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"JavaScript에서 호이스팅은 변수와 함수 선언을 코드의 상단으로 끌어올리는 동작을 의미합니다. 이 글에서는 호이스팅의 작동 방식을 깊이 있게 탐구하고, 변수와 함수의 선언 위치가 코드 실행 및 디버깅에 어떻게 영향을 미치는지 살펴봅니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner5.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner5.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"JavaScript 호이스팅 이해하기: 변수와 함수 선언의 비밀"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"JavaScript 호이스팅 이해하기: 변수와 함수 선언의 비밀"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-08-08"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"6042bdc6","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"JavaScript 호이스팅 이해하기: 변수와 함수 선언의 비밀"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"JavaScript는 다른 여러 프로그래밍 언어와는 다르게, 변수와 함수 선언을 코드의 최상단으로 끌어올리는 '호이스팅'이라는 개념을 가지고 있습니다. 이 글에서는 호이스팅의 작동 방식을 깊이 있게 탐구하고, 변수와 함수의 선언 위치가 코드 실행 및 디버깅에 어떻게 영향을 미치는지 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"3a46b4c2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"변수 호이스팅"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["JavaScript에서 변수 호이스팅은 변수 선언이 해당 스코프의 최상단으로 끌어 올려지는 현상을 말합니다. 그러나 변수 초기화는 그 자리에 남아 있습니다. 이는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var","position":{"start":{"line":8,"column":92,"offset":311},"end":{"line":8,"column":97,"offset":316}}}],"position":{"start":{"line":8,"column":92,"offset":311},"end":{"line":8,"column":97,"offset":316}}},"children":"var"}}]," 키워드로 선언된 변수에 특히 해당됩니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"예제를 통해 자세히 살펴보겠습니다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"console.log(x); // 출력: undefined\nvar x = 5;\nconsole.log(x); // 출력: 5\n"}],"position":{"start":{"line":12,"column":1,"offset":362},"end":{"line":16,"column":4,"offset":448}}},"children":"console.log(x); // 출력: undefined\nvar x = 5;\nconsole.log(x); // 출력: 5\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"x","position":{"start":{"line":18,"column":8,"offset":457},"end":{"line":18,"column":11,"offset":460}}}],"position":{"start":{"line":18,"column":8,"offset":457},"end":{"line":18,"column":11,"offset":460}}},"children":"x"}}],"의 선언은 호이스팅되어 첫 번째 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":18,"column":29,"offset":478},"end":{"line":18,"column":42,"offset":491}}}],"position":{"start":{"line":18,"column":29,"offset":478},"end":{"line":18,"column":42,"offset":491}}},"children":"console.log"}}]," 호출 이전에 실행된 것으로 간주됩니다. 그러나 초기화는 후에 발생하므로 첫 번째 출력은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"undefined","position":{"start":{"line":18,"column":92,"offset":541},"end":{"line":18,"column":103,"offset":552}}}],"position":{"start":{"line":18,"column":92,"offset":541},"end":{"line":18,"column":103,"offset":552}}},"children":"undefined"}}],"입니다. 이를 풀어서 설명하면 다음과 같습니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"var x;\nconsole.log(x); // undefined\nx = 5;\nconsole.log(x); // 5\n"}],"position":{"start":{"line":20,"column":1,"offset":580},"end":{"line":25,"column":4,"offset":661}}},"children":"var x;\nconsole.log(x); // undefined\nx = 5;\nconsole.log(x); // 5\n"}}]}],"\n",["$","h3",null,{"id":"da39a3ee","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let","position":{"start":{"line":27,"column":5,"offset":667},"end":{"line":27,"column":10,"offset":672}}}],"position":{"start":{"line":27,"column":5,"offset":667},"end":{"line":27,"column":10,"offset":672}}},"children":"let"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const","position":{"start":{"line":27,"column":12,"offset":674},"end":{"line":27,"column":19,"offset":681}}}],"position":{"start":{"line":27,"column":12,"offset":674},"end":{"line":27,"column":19,"offset":681}}},"children":"const"}}],"의 호이스팅"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["호이스팅은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let","position":{"start":{"line":29,"column":7,"offset":695},"end":{"line":29,"column":12,"offset":700}}}],"position":{"start":{"line":29,"column":7,"offset":695},"end":{"line":29,"column":12,"offset":700}}},"children":"let"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const","position":{"start":{"line":29,"column":14,"offset":702},"end":{"line":29,"column":21,"offset":709}}}],"position":{"start":{"line":29,"column":14,"offset":702},"end":{"line":29,"column":21,"offset":709}}},"children":"const"}}],"로 선언된 변수에도 적용됩니다. 그러나 차이점은 변수 초기화가 일어나기 전에 해당 변수를 참조하려고 하면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ReferenceError","position":{"start":{"line":29,"column":80,"offset":768},"end":{"line":29,"column":96,"offset":784}}}],"position":{"start":{"line":29,"column":80,"offset":768},"end":{"line":29,"column":96,"offset":784}}},"children":"ReferenceError"}}],"가 발생한다는 점입니다. 예를 들면:"]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"console.log(y); // ReferenceError: Cannot access 'y' before initialization\nlet y = 10;\n"}],"position":{"start":{"line":31,"column":1,"offset":806},"end":{"line":34,"column":4,"offset":910}}},"children":"console.log(y); // ReferenceError: Cannot access 'y' before initialization\nlet y = 10;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"y","position":{"start":{"line":36,"column":7,"offset":918},"end":{"line":36,"column":10,"offset":921}}}],"position":{"start":{"line":36,"column":7,"offset":918},"end":{"line":36,"column":10,"offset":921}}},"children":"y"}}],"가 선언되었지만 초기화되기 전까지는 잠재적으로 사용되지 못하도록 막는 '일시적 사각지대(TDZ, Temporal Dead Zone)'를 생성합니다."]}],"\n",["$","h2",null,{"id":"19445c1f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"함수 호이스팅"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"함수 선언도 호이스팅의 대상입니다. 그러나 함수 표현식과는 다릅니다. 먼저 함수 선언의 예를 들어봅시다:"}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"console.log(add(2, 3)); // 출력: 5\n\nfunction add(a, b) {\n  return a + b;\n}\n"}],"position":{"start":{"line":42,"column":1,"offset":1077},"end":{"line":48,"column":4,"offset":1167}}},"children":"console.log(add(2, 3)); // 출력: 5\n\nfunction add(a, b) {\n  return a + b;\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 제대로 작동하며, 첫 번째 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":50,"column":22,"offset":1190},"end":{"line":50,"column":35,"offset":1203}}}],"position":{"start":{"line":50,"column":22,"offset":1190},"end":{"line":50,"column":35,"offset":1203}}},"children":"console.log"}}]," 호출 이전에 함수 선언이 호이스팅되었기 때문입니다. 실제로 이 코드는 다음과 같이 실행됩니다:"]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function add(a, b) {\n  return a + b;\n}\nconsole.log(add(2, 3)); // 출력: 5\n"}],"position":{"start":{"line":52,"column":1,"offset":1258},"end":{"line":57,"column":4,"offset":1347}}},"children":"function add(a, b) {\n  return a + b;\n}\nconsole.log(add(2, 3)); // 출력: 5\n"}}]}],"\n",["$","h3",null,{"id":"32665018","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"함수 표현식의 호이스팅"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"함수 표현식은 변수 할당과 같이 동작합니다. 따라서 함수 표현식은 호이스팅되지 않습니다. 다음 예제를 보겠습니다:"}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"console.log(addExpr(2, 3)); // TypeError: addExpr is not a function\n\nvar addExpr = function(a, b) {\n  return a + b;\n};\n"}],"position":{"start":{"line":63,"column":1,"offset":1432},"end":{"line":69,"column":4,"offset":1568}}},"children":"console.log(addExpr(2, 3)); // TypeError: addExpr is not a function\n\nvar addExpr = function(a, b) {\n  return a + b;\n};\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TypeError","position":{"start":{"line":71,"column":7,"offset":1576},"end":{"line":71,"column":18,"offset":1587}}}],"position":{"start":{"line":71,"column":7,"offset":1576},"end":{"line":71,"column":18,"offset":1587}}},"children":"TypeError"}}],"를 발생시키며, 이는 변수 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addExpr","position":{"start":{"line":71,"column":33,"offset":1602},"end":{"line":71,"column":42,"offset":1611}}}],"position":{"start":{"line":71,"column":33,"offset":1602},"end":{"line":71,"column":42,"offset":1611}}},"children":"addExpr"}}],"가 호이스팅되어 정의되었지만 아직 함수가 할당되지 않았기 때문에 발생합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"코드는 실제로 다음과 같은 순서로 실행됩니다:"}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"var addExpr;\nconsole.log(addExpr); // undefined\naddExpr = function(a, b) {\n  return a + b;\n};\n"}],"position":{"start":{"line":75,"column":1,"offset":1682},"end":{"line":81,"column":4,"offset":1793}}},"children":"var addExpr;\nconsole.log(addExpr); // undefined\naddExpr = function(a, b) {\n  return a + b;\n};\n"}}]}],"\n",["$","h2",null,{"id":"1d963f54","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"호이스팅을 이용한 코드 개선 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"호이스팅을 이해하면 더 깨끗하고 오류가 적은 코드를 작성할 수 있습니다. 예를 들어, 변수를 선언하기 전에 사용하는 것을 피하거나 함수 선언과 표현식을 적절히 구분하여 사용할 수 있습니다."}],"\n",["$","h3",null,{"id":"9be20ed7","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제: 호이스팅을 활용한 함수"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"호이스팅을 적절히 활용하면 초기화 코드를 간결하게 만들 수 있습니다. 예를 들면, 여러 곳에서 사용할 함수들을 코드 상단에 선언하면 가독성을 높일 수 있습니다:"}],"\n",["$","pre","pre-7",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"initApp();\n\nfunction initApp() {\n  setupEventListeners();\n  initializeData();\n}\n\nfunction setupEventListeners() {\n  // 이벤트 리스너 설정\n}\n\nfunction initializeData() {\n  // 데이터 초기화\n}\n"}],"position":{"start":{"line":91,"column":1,"offset":2038},"end":{"line":106,"column":4,"offset":2231}}},"children":"initApp();\n\nfunction initApp() {\n  setupEventListeners();\n  initializeData();\n}\n\nfunction setupEventListeners() {\n  // 이벤트 리스너 설정\n}\n\nfunction initializeData() {\n  // 데이터 초기화\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이렇게 하면 초기화 논리가 훨씬 더 명확해집니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["호이스팅은 JavaScript에서 매우 중요한 개념이며, 이를 제대로 이해하는 것이 효율적이고 버그가 없는 코드를 작성하는 데 도움이 됩니다. 변수를 선언할 때는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let","position":{"start":{"line":112,"column":92,"offset":2360},"end":{"line":112,"column":97,"offset":2365}}}],"position":{"start":{"line":112,"column":92,"offset":2360},"end":{"line":112,"column":97,"offset":2365}}},"children":"let"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const","position":{"start":{"line":112,"column":99,"offset":2367},"end":{"line":112,"column":106,"offset":2374}}}],"position":{"start":{"line":112,"column":99,"offset":2367},"end":{"line":112,"column":106,"offset":2374}}},"children":"const"}}],"를 사용하고, 함수는 명확한 위치에 선언하여 호이스팅으로 인한 예기치 않은 동작을 피할 수 있습니다. 호이스팅을 깊이 이해하고 활용하면 더 나은 JavaScript 코드를 작성할 수 있습니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"JavaScript 호이스팅 이해하기: 변수와 함수 선언의 비밀","toc":[{"tagName":"h1","title":"JavaScript 호이스팅 이해하기: 변수와 함수 선언의 비밀","id":"6042bdc6"},{"tagName":"h2","title":"변수 호이스팅","id":"3a46b4c2"},{"tagName":"h3","title":"$undefined","id":""},{"tagName":"h2","title":"함수 호이스팅","id":"19445c1f"},{"tagName":"h3","title":"함수 표현식의 호이스팅","id":"32665018"},{"tagName":"h2","title":"호이스팅을 이용한 코드 개선 방법","id":"1d963f54"},{"tagName":"h3","title":"예제: 호이스팅을 활용한 함수","id":"9be20ed7"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
