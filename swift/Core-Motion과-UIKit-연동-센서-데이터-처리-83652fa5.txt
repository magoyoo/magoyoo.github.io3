1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Core-Motion%EA%B3%BC-UIKit-%EC%97%B0%EB%8F%99-%EC%84%BC%EC%84%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-83652fa5","d"],{"children":["__PAGE__?{\"slug\":\"Core-Motion과-UIKit-연동-센서-데이터-처리-83652fa5\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Core-Motion%EA%B3%BC-UIKit-%EC%97%B0%EB%8F%99-%EC%84%BC%EC%84%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-83652fa5","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Core-Motion과-UIKit-연동-센서-데이터-처리-83652fa5\"}"},"styles":[]}],"segment":["slug","Core-Motion%EA%B3%BC-UIKit-%EC%97%B0%EB%8F%99-%EC%84%BC%EC%84%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-83652fa5","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Core Motion과 UIKit 연동: 센서 데이터 처리 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 Apple의 `Core Motion` 프레임워크와 `UIKit`을 연동하여 센서 데이터를 처리하는 방법에 대해 설명합니다. 자세한 구현 방법과 예제 코드를 포함하여 `Core Motion`의 기능을 최대한 활용하는 방법을 다룹니다."}],["$","meta","3",{"name":"keywords","content":"Core Motion,UIKit,iOS 개발,센서 데이터"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Core-Motion%EA%B3%BC-UIKit-%EC%97%B0%EB%8F%99-%EC%84%BC%EC%84%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-83652fa5"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Core Motion과 UIKit 연동: 센서 데이터 처리 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Core Motion과 UIKit 연동: 센서 데이터 처리 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 Apple의 `Core Motion` 프레임워크와 `UIKit`을 연동하여 센서 데이터를 처리하는 방법에 대해 설명합니다. 자세한 구현 방법과 예제 코드를 포함하여 `Core Motion`의 기능을 최대한 활용하는 방법을 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Core-Motion%EA%B3%BC-UIKit-%EC%97%B0%EB%8F%99-%EC%84%BC%EC%84%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-83652fa5"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Core Motion과 UIKit 연동: 센서 데이터 처리 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 Apple의 `Core Motion` 프레임워크와 `UIKit`을 연동하여 센서 데이터를 처리하는 방법에 대해 설명합니다. 자세한 구현 방법과 예제 코드를 포함하여 `Core Motion`의 기능을 최대한 활용하는 방법을 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Core Motion과 UIKit 연동: 센서 데이터 처리"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Core Motion과 UIKit 연동: 센서 데이터 처리"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-18"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"c352b191","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Core Motion과 UIKit 연동: 센서 데이터 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Apple의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Core Motion","position":{"start":{"line":4,"column":8,"offset":44},"end":{"line":4,"column":21,"offset":57}}}],"position":{"start":{"line":4,"column":8,"offset":44},"end":{"line":4,"column":21,"offset":57}}},"children":"Core Motion"}}]," 프레임워크는 iOS 장치의 다양한 센서 데이터를 수집하고 처리하는 데 유용합니다. 이를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIKit","position":{"start":{"line":4,"column":71,"offset":107},"end":{"line":4,"column":78,"offset":114}}}],"position":{"start":{"line":4,"column":71,"offset":107},"end":{"line":4,"column":78,"offset":114}}},"children":"UIKit"}}],"과 결합하면 직관적이고 인터랙티브한 사용자 인터페이스를 구현할 수 있습니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Core Motion","position":{"start":{"line":4,"column":128,"offset":164},"end":{"line":4,"column":141,"offset":177}}}],"position":{"start":{"line":4,"column":128,"offset":164},"end":{"line":4,"column":141,"offset":177}}},"children":"Core Motion"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIKit","position":{"start":{"line":4,"column":143,"offset":179},"end":{"line":4,"column":150,"offset":186}}}],"position":{"start":{"line":4,"column":143,"offset":179},"end":{"line":4,"column":150,"offset":186}}},"children":"UIKit"}}],"을 연동하여 센서 데이터를 처리하는 방법을 단계별로 설명합니다."]}],"\n",["$","h2",null,{"id":"706ecb18","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Core Motion 개요"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Core Motion","position":{"start":{"line":8,"column":1,"offset":242},"end":{"line":8,"column":14,"offset":255}}}],"position":{"start":{"line":8,"column":1,"offset":242},"end":{"line":8,"column":14,"offset":255}}},"children":"Core Motion"}}]," 프레임워크는 가속도계, 자이로스코프, 기압계 및 기타 센서로부터 데이터를 수집할 수 있는 강력한 API입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CMMotionManager","position":{"start":{"line":8,"column":77,"offset":318},"end":{"line":8,"column":94,"offset":335}}}],"position":{"start":{"line":8,"column":77,"offset":318},"end":{"line":8,"column":94,"offset":335}}},"children":"CMMotionManager"}}]," 클래스는 이러한 센서 데이터를 관리하고, 주기적으로 데이터 업데이트를 받을 수 있도록 합니다."]}],"\n",["$","h3",null,{"id":"9190dec9","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"CMMotionManager의 주요 기능"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CMMotionManager","position":{"start":{"line":11,"column":1,"offset":417},"end":{"line":11,"column":18,"offset":434}}}],"position":{"start":{"line":11,"column":1,"offset":417},"end":{"line":11,"column":18,"offset":434}}},"children":"CMMotionManager"}}],"는 다음과 같은 주요 센서 데이터를 처리합니다:"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"가속도계 데이터"}],": 장치의 각 축(x, y, z)에 대한 가속도를 제공합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"자이로스코프 데이터"}],": 각 축에 대한 회전 속도를 제공합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"자기장 데이터"}],": 장치의 각 축에 대한 자기장 강도를 측정할 수 있습니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"디바이스 모션 데이터"}],": 가속도계, 자이로스코프 및 자기장 데이터를 합성하여 장치의 현재 상태를 제공합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"47db85a2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Core Motion과 UIKit 연동하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Core Motion","position":{"start":{"line":19,"column":4,"offset":695},"end":{"line":19,"column":17,"offset":708}}}],"position":{"start":{"line":19,"column":4,"offset":695},"end":{"line":19,"column":17,"offset":708}}},"children":"Core Motion"}}],"을 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIKit","position":{"start":{"line":19,"column":24,"offset":715},"end":{"line":19,"column":31,"offset":722}}}],"position":{"start":{"line":19,"column":24,"offset":715},"end":{"line":19,"column":31,"offset":722}}},"children":"UIKit"}}]," 인터페이스와 상호작용하는 방법을 알아보겠습니다. 여기서는 가속도계 데이터를 이용해 간단한 애니메이션을 구현하는 예제를 다룹니다."]}],"\n",["$","h3",null,{"id":"35ce895d","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"프로젝트 설정"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":"Xcode에서 새로운 iOS 프로젝트를 생성합니다."}],"\n",["$","li","li-1",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Info.plist","position":{"start":{"line":24,"column":4,"offset":844},"end":{"line":24,"column":16,"offset":856}}}],"position":{"start":{"line":24,"column":4,"offset":844},"end":{"line":24,"column":16,"offset":856}}},"children":"Info.plist"}}]," 파일에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Privacy - Motion Usage Description","position":{"start":{"line":24,"column":21,"offset":861},"end":{"line":24,"column":57,"offset":897}}}],"position":{"start":{"line":24,"column":21,"offset":861},"end":{"line":24,"column":57,"offset":897}}},"children":"Privacy - Motion Usage Description"}}]," 키를 추가하고, 해당 키에 대한 설명을 입력합니다. 이 설명은 사용자에게 센서 데이터를 사용하는 이유를 제공하는 역할을 합니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"763c0219","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"CMMotionManager 초기화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저, ViewController에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CMMotionManager","position":{"start":{"line":28,"column":21,"offset":1016},"end":{"line":28,"column":38,"offset":1033}}}],"position":{"start":{"line":28,"column":21,"offset":1016},"end":{"line":28,"column":38,"offset":1033}}},"children":"CMMotionManager"}}],"를 초기화합니다. 이 예제에서는 가속도계 데이터를 사용해 UIView의 위치를 업데이트합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\nimport CoreMotion\n\nclass ViewController: UIViewController {\n    let motionManager = CMMotionManager()\n    var squareView: UIView!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        setupSquareView()\n        startAccelerometerUpdates()\n    }\n\n    func setupSquareView() {\n        squareView = UIView(frame: CGRect(x: 100, y: 100, width: 50, height: 50))\n        squareView.backgroundColor = .red\n        view.addSubview(squareView)\n    }\n}\n"}],"position":{"start":{"line":30,"column":1,"offset":1087},"end":{"line":50,"column":4,"offset":1571}}},"children":"import UIKit\nimport CoreMotion\n\nclass ViewController: UIViewController {\n    let motionManager = CMMotionManager()\n    var squareView: UIView!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        setupSquareView()\n        startAccelerometerUpdates()\n    }\n\n    func setupSquareView() {\n        squareView = UIView(frame: CGRect(x: 100, y: 100, width: 50, height: 50))\n        squareView.backgroundColor = .red\n        view.addSubview(squareView)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위 코드는 간단한 빨간색 사각형을 화면에 추가합니다. 이제 가속도계 데이터에 따라 이 사각형을 움직이도록 합니다."}],"\n",["$","h3",null,{"id":"4d0d72dd","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"가속도계 데이터 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"startAccelerometerUpdates","position":{"start":{"line":56,"column":4,"offset":1658},"end":{"line":56,"column":31,"offset":1685}}}],"position":{"start":{"line":56,"column":4,"offset":1658},"end":{"line":56,"column":31,"offset":1685}}},"children":"startAccelerometerUpdates"}}]," 메서드를 구현하여 가속도계 데이터를 처리합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func startAccelerometerUpdates() {\n    if motionManager.isAccelerometerAvailable {\n        motionManager.accelerometerUpdateInterval = 0.1\n        motionManager.startAccelerometerUpdates(to: OperationQueue.main) { [weak self] (data, error) in\n            guard let self = self else { return }\n            if let accelerometerData = data {\n                let acceleration = accelerometerData.acceleration\n                let x = CGFloat(acceleration.x * 100)\n                let y = CGFloat(acceleration.y * 100)\n\n                // 현재 위치를 계산하고 업데이트합니다\n                let newX = self.squareView.center.x + x\n                let newY = self.squareView.center.y - y\n                self.squareView.center = CGPoint(x: newX, y: newY)\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":58,"column":1,"offset":1714},"end":{"line":77,"column":4,"offset":2490}}},"children":"func startAccelerometerUpdates() {\n    if motionManager.isAccelerometerAvailable {\n        motionManager.accelerometerUpdateInterval = 0.1\n        motionManager.startAccelerometerUpdates(to: OperationQueue.main) { [weak self] (data, error) in\n            guard let self = self else { return }\n            if let accelerometerData = data {\n                let acceleration = accelerometerData.acceleration\n                let x = CGFloat(acceleration.x * 100)\n                let y = CGFloat(acceleration.y * 100)\n\n                // 현재 위치를 계산하고 업데이트합니다\n                let newX = self.squareView.center.x + x\n                let newY = self.squareView.center.y - y\n                self.squareView.center = CGPoint(x: newX, y: newY)\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"중요"}],": 센서 데이터는 실시간으로 변화하므로, 데이터를 처리할 때는 꼭 사용자의 안전을 고려해야 합니다. 자칫하면 장치의 너무 빠른 이동으로 인해 예상치 못한 결과가 발생할 수 있습니다."]}],"\n",["$","h2",null,{"id":"bd0436c1","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"최적화 및 고급 기능"}],"\n",["$","h3",null,{"id":"4d33bd7f","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"저전력 모드 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"센서 데이터 수집은 배터리 소비가 많은 작업입니다. 사용자 경험을 해치지 않으면서도 전력을 절약하기 위해, 필요하지 않을 때는 센서 업데이트를 중지하는 것이 좋습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func stopAccelerometerUpdates() {\n    if motionManager.isAccelerometerActive {\n        motionManager.stopAccelerometerUpdates()\n    }\n}\n"}],"position":{"start":{"line":87,"column":1,"offset":2727},"end":{"line":93,"column":4,"offset":2875}}},"children":"func stopAccelerometerUpdates() {\n    if motionManager.isAccelerometerActive {\n        motionManager.stopAccelerometerUpdates()\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"6d791c8e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"디바이스 모션 데이터 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Core Motion","position":{"start":{"line":97,"column":1,"offset":2897},"end":{"line":97,"column":14,"offset":2910}}}],"position":{"start":{"line":97,"column":1,"offset":2897},"end":{"line":97,"column":14,"offset":2910}}},"children":"Core Motion"}}],"은 가속도계 데이터 외에도 디바이스 모션 데이터를 제공하여 보다 정교한 센서 데이터를 다루게 합니다. 예를 들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CMDeviceMotion","position":{"start":{"line":97,"column":78,"offset":2974},"end":{"line":97,"column":94,"offset":2990}}}],"position":{"start":{"line":97,"column":78,"offset":2974},"end":{"line":97,"column":94,"offset":2990}}},"children":"CMDeviceMotion"}}]," 객체는 장치의 중력 벡터, 사용자 가속도 및 회전 속도를 모두 포함합니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"motionManager.startDeviceMotionUpdates(to: OperationQueue.main) { [weak self] (data, error) in\n    guard let data = data else { return }\n    let gravity = data.gravity\n    let userAcceleration = data.userAcceleration\n    let rotationRate = data.rotationRate\n    // 디바이스 모션 데이터를 처리합니다\n}\n"}],"position":{"start":{"line":99,"column":1,"offset":3034},"end":{"line":107,"column":4,"offset":3332}}},"children":"motionManager.startDeviceMotionUpdates(to: OperationQueue.main) { [weak self] (data, error) in\n    guard let data = data else { return }\n    let gravity = data.gravity\n    let userAcceleration = data.userAcceleration\n    let rotationRate = data.rotationRate\n    // 디바이스 모션 데이터를 처리합니다\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이와 같은 고급 기능을 이용하면 더 정교한 사용자 인터페이스와 경험을 제공할 수 있습니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Core Motion","position":{"start":{"line":113,"column":8,"offset":3400},"end":{"line":113,"column":21,"offset":3413}}}],"position":{"start":{"line":113,"column":8,"offset":3400},"end":{"line":113,"column":21,"offset":3413}}},"children":"Core Motion"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIKit","position":{"start":{"line":113,"column":23,"offset":3415},"end":{"line":113,"column":30,"offset":3422}}}],"position":{"start":{"line":113,"column":23,"offset":3415},"end":{"line":113,"column":30,"offset":3422}}},"children":"UIKit"}}],"을 연동하여 센서 데이터를 처리하는 기본적인 방법을 소개했습니다. 이 기술을 활용하면 다양한 상호작용 및 애니메이션을 쉽게 구현할 수 있습니다. 다양한 응용 프로그램에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Core Motion","position":{"start":{"line":113,"column":125,"offset":3517},"end":{"line":113,"column":138,"offset":3530}}}],"position":{"start":{"line":113,"column":125,"offset":3517},"end":{"line":113,"column":138,"offset":3530}}},"children":"Core Motion"}}],"을 활용하여 사용자 경험을 크게 향상시킬 수 있습니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Core Motion과 UIKit 연동: 센서 데이터 처리","toc":[{"tagName":"h1","title":"Core Motion과 UIKit 연동: 센서 데이터 처리","id":"c352b191"},{"tagName":"h2","title":"Core Motion 개요","id":"706ecb18"},{"tagName":"h3","title":"CMMotionManager의 주요 기능","id":"9190dec9"},{"tagName":"h2","title":"Core Motion과 UIKit 연동하기","id":"47db85a2"},{"tagName":"h3","title":"프로젝트 설정","id":"35ce895d"},{"tagName":"h3","title":"CMMotionManager 초기화","id":"763c0219"},{"tagName":"h3","title":"가속도계 데이터 처리","id":"4d0d72dd"},{"tagName":"h2","title":"최적화 및 고급 기능","id":"bd0436c1"},{"tagName":"h3","title":"저전력 모드 사용","id":"4d33bd7f"},{"tagName":"h3","title":"디바이스 모션 데이터 사용","id":"6d791c8e"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
