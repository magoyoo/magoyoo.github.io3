1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-Combine-MVVM-%EC%98%88%EC%A0%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8","d"],{"children":["__PAGE__?{\"slug\":\"Swift-Combine-MVVM-예제-프로젝트\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-Combine-MVVM-%EC%98%88%EC%A0%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-Combine-MVVM-예제-프로젝트\"}"},"styles":[]}],"segment":["slug","Swift-Combine-MVVM-%EC%98%88%EC%A0%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift Combine MVVM 예제 프로젝트 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Swift Combine과 MVVM 패턴을 통합하여 간단한 예제 프로젝트를 구현하는 방법을 자세히 설명합니다."}],["$","meta","3",{"name":"keywords","content":"swift,combine"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-Combine-MVVM-%EC%98%88%EC%A0%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift Combine MVVM 예제 프로젝트 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift Combine MVVM 예제 프로젝트 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Swift Combine과 MVVM 패턴을 통합하여 간단한 예제 프로젝트를 구현하는 방법을 자세히 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-Combine-MVVM-%EC%98%88%EC%A0%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swift-combine.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift Combine MVVM 예제 프로젝트 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Swift Combine과 MVVM 패턴을 통합하여 간단한 예제 프로젝트를 구현하는 방법을 자세히 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swift-combine.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
10:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
11:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T416,import Combine
import Foundation

class UserViewModel: ObservableObject {
    @Published var users: [User] = []
    @Published var isLoading: Bool = false
    @Published var errorMessage: String?

    private var cancellables = Set<AnyCancellable>()

    func fetchUsers() {
        isLoading = true
        errorMessage = nil

        let url = URL(string: "https://jsonplaceholder.typicode.com/users")!

        URLSession.shared.dataTaskPublisher(for: url)
            .map { $0.data }
            .decode(type: [User].self, decoder: JSONDecoder())
            .receive(on: DispatchQueue.main)
            .sink(receiveCompletion: { completion in
                self.isLoading = false
                switch completion {
                case .finished:
                    break
                case .failure(let error):
                    self.errorMessage = error.localizedDescription
                }
            }, receiveValue: { users in
                self.users = users
            })
            .store(in: &cancellables)
    }
}
f:T416,import Combine
import Foundation

class UserViewModel: ObservableObject {
    @Published var users: [User] = []
    @Published var isLoading: Bool = false
    @Published var errorMessage: String?

    private var cancellables = Set<AnyCancellable>()

    func fetchUsers() {
        isLoading = true
        errorMessage = nil

        let url = URL(string: "https://jsonplaceholder.typicode.com/users")!

        URLSession.shared.dataTaskPublisher(for: url)
            .map { $0.data }
            .decode(type: [User].self, decoder: JSONDecoder())
            .receive(on: DispatchQueue.main)
            .sink(receiveCompletion: { completion in
                self.isLoading = false
                switch completion {
                case .finished:
                    break
                case .failure(let error):
                    self.errorMessage = error.localizedDescription
                }
            }, receiveValue: { users in
                self.users = users
            })
            .store(in: &cancellables)
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swift-combine.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift Combine MVVM 예제 프로젝트"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift Combine MVVM 예제 프로젝트"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-05-28"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"8cd91544","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift Combine MVVM 예제 프로젝트"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift Combine은 애플의 리액티브 프로그래밍 프레임워크로, 비동기 이벤트 처리와 데이터 스트림 관리를 위한 강력한 도구입니다. MVVM(Model-View-ViewModel) 패턴은 코드의 유지보수성과 테스트 용이성을 높이는 데 도움을 주는 아키텍처 패턴입니다. 이 글에서는 Swift Combine과 MVVM 패턴을 통합하여 예제 프로젝트를 구현하는 방법을 자세히 살펴보겠습니다. 예제 프로젝트는 간단한 네트워크 요청을 통해 데이터를 받아와 사용자 인터페이스에 표시하는 기능을 구현합니다."}],"\n",["$","h2",null,{"id":"68adefb2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프로젝트 개요"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이번 예제 프로젝트에서는 JSONPlaceholder API를 사용하여 가상의 사용자 목록을 가져와 SwiftUI를 통해 화면에 표시합니다. 이 프로젝트는 Swift Combine과 MVVM 패턴을 활용하여 데이터를 비동기적으로 가져오고, UI와 데이터를 바인딩하는 방법을 설명합니다."}],"\n",["$","h2",null,{"id":"098c64bf","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프로젝트 구조"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"프로젝트는 다음과 같은 구조로 구성됩니다:"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"Model"}],": 데이터를 표현하는 구조체"]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"ViewModel"}],": 비즈니스 로직과 데이터 변환을 담당"]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"View"}],": 사용자 인터페이스를 담당"]}],"\n"]}],"\n",["$","h3",null,{"id":"68c2cc7f","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Model"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Model은 애플리케이션의 데이터를 표현합니다. 이번 예제에서는 사용자 정보를 나타내는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"User","position":{"start":{"line":20,"column":50,"offset":673},"end":{"line":20,"column":56,"offset":679}}}],"position":{"start":{"line":20,"column":50,"offset":673},"end":{"line":20,"column":56,"offset":679}}},"children":"User"}}]," 구조체를 정의합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\n\nstruct User: Codable, Identifiable {\n    let id: Int\n    let name: String\n    let username: String\n    let email: String\n}\n"}],"position":{"start":{"line":22,"column":1,"offset":693},"end":{"line":31,"column":4,"offset":847}}},"children":"import Foundation\n\nstruct User: Codable, Identifiable {\n    let id: Int\n    let name: String\n    let username: String\n    let email: String\n}\n"}}]}],"\n",["$","h3",null,{"id":"c45be100","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"ViewModel"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"ViewModel은 Model과 View 사이의 중개자로서, Combine을 사용하여 데이터를 관리하고 변환합니다. 또한 네트워크 요청을 통해 데이터를 가져오는 역할도 수행합니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":37,"column":1,"offset":966},"end":{"line":72,"column":4,"offset":2024}}},"children":"$f"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 ViewModel에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetchUsers","position":{"start":{"line":74,"column":16,"offset":2041},"end":{"line":74,"column":28,"offset":2053}}}],"position":{"start":{"line":74,"column":16,"offset":2041},"end":{"line":74,"column":28,"offset":2053}}},"children":"fetchUsers"}}]," 메서드를 통해 네트워크 요청을 보내고, 응답 데이터를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"users","position":{"start":{"line":74,"column":59,"offset":2084},"end":{"line":74,"column":66,"offset":2091}}}],"position":{"start":{"line":74,"column":59,"offset":2084},"end":{"line":74,"column":66,"offset":2091}}},"children":"users"}}]," 배열에 저장합니다. 또한, 로딩 상태와 오류 메시지를 관리합니다."]}],"\n",["$","h3",null,{"id":"69bd4ef9","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"View"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"View는 사용자 인터페이스를 담당하며, SwiftUI를 사용하여 구현합니다. View는 ViewModel을 구독하여 데이터가 변경될 때마다 UI를 업데이트합니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct UserListView: View {\n    @ObservedObject var viewModel: UserViewModel\n\n    var body: some View {\n        NavigationView {\n            VStack {\n                if viewModel.isLoading {\n                    ProgressView(\"Loading...\")\n                } else if let errorMessage = viewModel.errorMessage {\n                    Text(\"Error: \\(errorMessage)\")\n                        .foregroundColor(.red)\n                } else {\n                    List(viewModel.users) { user in\n                        VStack(alignment: .leading) {\n                            Text(user.name)\n                                .font(.headline)\n                            Text(user.email)\n                                .font(.subheadline)\n                                .foregroundColor(.gray)\n                        }\n                    }\n                }\n            }\n            .navigationBarTitle(\"Users\")\n            .onAppear {\n                viewModel.fetchUsers()\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":80,"column":1,"offset":2233},"end":{"line":113,"column":4,"offset":3260}}},"children":"import SwiftUI\n\nstruct UserListView: View {\n    @ObservedObject var viewModel: UserViewModel\n\n    var body: some View {\n        NavigationView {\n            VStack {\n                if viewModel.isLoading {\n                    ProgressView(\"Loading...\")\n                } else if let errorMessage = viewModel.errorMessage {\n                    Text(\"Error: \\(errorMessage)\")\n                        .foregroundColor(.red)\n                } else {\n                    List(viewModel.users) { user in\n                        VStack(alignment: .leading) {\n                            Text(user.name)\n                                .font(.headline)\n                            Text(user.email)\n                                .font(.subheadline)\n                                .foregroundColor(.gray)\n                        }\n                    }\n                }\n            }\n            .navigationBarTitle(\"Users\")\n            .onAppear {\n                viewModel.fetchUsers()\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 View에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UserViewModel","position":{"start":{"line":115,"column":11,"offset":3272},"end":{"line":115,"column":26,"offset":3287}}}],"position":{"start":{"line":115,"column":11,"offset":3272},"end":{"line":115,"column":26,"offset":3287}}},"children":"UserViewModel"}}],"을 구독하고, 로딩 상태, 오류 메시지, 사용자 목록을 각각 다른 UI 요소로 표시합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onAppear","position":{"start":{"line":115,"column":77,"offset":3338},"end":{"line":115,"column":87,"offset":3348}}}],"position":{"start":{"line":115,"column":77,"offset":3338},"end":{"line":115,"column":87,"offset":3348}}},"children":"onAppear"}}]," 수명주기 메서드를 사용하여 View가 나타날 때 데이터를 가져오도록 합니다."]}],"\n",["$","h3",null,{"id":"2476f08d","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"앱의 통합"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"마지막으로, View와 ViewModel을 통합하여 앱을 완성합니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\n@main\nstruct CombineMVVMApp: App {\n    var body: some Scene {\n        WindowGroup {\n            UserListView(viewModel: UserViewModel())\n        }\n    }\n}\n"}],"position":{"start":{"line":121,"column":1,"offset":3444},"end":{"line":132,"column":4,"offset":3627}}},"children":"import SwiftUI\n\n@main\nstruct CombineMVVMApp: App {\n    var body: some Scene {\n        WindowGroup {\n            UserListView(viewModel: UserViewModel())\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CombineMVVMApp","position":{"start":{"line":134,"column":9,"offset":3637},"end":{"line":134,"column":25,"offset":3653}}}],"position":{"start":{"line":134,"column":9,"offset":3637},"end":{"line":134,"column":25,"offset":3653}}},"children":"CombineMVVMApp"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"body","position":{"start":{"line":134,"column":27,"offset":3655},"end":{"line":134,"column":33,"offset":3661}}}],"position":{"start":{"line":134,"column":27,"offset":3655},"end":{"line":134,"column":33,"offset":3661}}},"children":"body"}}]," 속성에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UserListView","position":{"start":{"line":134,"column":39,"offset":3667},"end":{"line":134,"column":53,"offset":3681}}}],"position":{"start":{"line":134,"column":39,"offset":3667},"end":{"line":134,"column":53,"offset":3681}}},"children":"UserListView"}}],"를 생성하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UserViewModel","position":{"start":{"line":134,"column":61,"offset":3689},"end":{"line":134,"column":76,"offset":3704}}}],"position":{"start":{"line":134,"column":61,"offset":3689},"end":{"line":134,"column":76,"offset":3704}}},"children":"UserViewModel"}}],"을 전달하여 앱을 시작합니다."]}],"\n",["$","h2",null,{"id":"260b2584","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"데이터 바인딩"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Combine과 MVVM 패턴을 사용하면 데이터 바인딩을 손쉽게 구현할 수 있습니다. ViewModel에서 데이터의 변경을 처리하고, View는 이를 자동으로 반영합니다. 예를 들어, 사용자가 네트워크 요청을 통해 받아온 사용자 목록이 업데이트되면, View는 이를 실시간으로 반영하여 사용자에게 표시합니다."}],"\n",["$","h2",null,{"id":"558b8fc2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"비동기 작업 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Combine을 사용하면 비동기 작업을 간단하게 처리할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"URLSession.shared.dataTaskPublisher","position":{"start":{"line":142,"column":40,"offset":3961},"end":{"line":142,"column":77,"offset":3998}}}],"position":{"start":{"line":142,"column":40,"offset":3961},"end":{"line":142,"column":77,"offset":3998}}},"children":"URLSession.shared.dataTaskPublisher"}}],"를 사용하여 네트워크 요청을 보내고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sink","position":{"start":{"line":142,"column":98,"offset":4019},"end":{"line":142,"column":104,"offset":4025}}}],"position":{"start":{"line":142,"column":98,"offset":4019},"end":{"line":142,"column":104,"offset":4025}}},"children":"sink"}}]," 연산자를 통해 응답 데이터를 처리합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"receive(on:)","position":{"start":{"line":142,"column":128,"offset":4049},"end":{"line":142,"column":142,"offset":4063}}}],"position":{"start":{"line":142,"column":128,"offset":4049},"end":{"line":142,"column":142,"offset":4063}}},"children":"receive(on:)"}}]," 연산자를 사용하여 메인 스레드에서 데이터를 수신하고, UI를 안전하게 업데이트합니다."]}],"\n",["$","h2",null,{"id":"f4c70288","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"오류 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["비동기 작업에서는 오류 처리가 매우 중요합니다. Combine의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sink","position":{"start":{"line":146,"column":37,"offset":4159},"end":{"line":146,"column":43,"offset":4165}}}],"position":{"start":{"line":146,"column":37,"offset":4159},"end":{"line":146,"column":43,"offset":4165}}},"children":"sink"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"receiveCompletion","position":{"start":{"line":146,"column":45,"offset":4167},"end":{"line":146,"column":64,"offset":4186}}}],"position":{"start":{"line":146,"column":45,"offset":4167},"end":{"line":146,"column":64,"offset":4186}}},"children":"receiveCompletion"}}]," 클로저를 통해 오류를 처리할 수 있습니다. 이 예제에서는 네트워크 요청에서 오류가 발생할 경우 오류 메시지를 사용자에게 표시합니다."]}],"\n",["$","h2",null,{"id":"28ffda16","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"로딩 상태 관리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["로딩 상태를 관리하여 사용자에게 현재 데이터를 가져오는 중임을 알려줄 수 있습니다. 이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"isLoading","position":{"start":{"line":150,"column":56,"offset":4330},"end":{"line":150,"column":67,"offset":4341}}}],"position":{"start":{"line":150,"column":56,"offset":4330},"end":{"line":150,"column":67,"offset":4341}}},"children":"isLoading"}}]," 플래그를 사용하여 데이터를 가져오는 동안 로딩 인디케이터를 표시하고, 데이터가 로드되면 목록을 표시합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift Combine과 MVVM 패턴을 통합하면 비동기 데이터를 효율적으로 관리하고, View와의 데이터 바인딩을 간편하게 구현할 수 있습니다. Combine의 강력한 기능을 활용하여 비동기 작업을 손쉽게 처리하고, MVVM 패턴을 통해 코드의 재사용성과 유지보수성을 높일 수 있습니다. 이 예제 프로젝트를 통해 Swift Combine과 MVVM 패턴의 통합 방법을 익히고, 실제 애플리케이션 개발에 적용해 보세요."}]]}]}],["$","$L10",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L11",null,{"articleTitle":"Swift Combine MVVM 예제 프로젝트","toc":[{"tagName":"h1","title":"Swift Combine MVVM 예제 프로젝트","id":"8cd91544"},{"tagName":"h2","title":"프로젝트 개요","id":"68adefb2"},{"tagName":"h2","title":"프로젝트 구조","id":"098c64bf"},{"tagName":"h3","title":"Model","id":"68c2cc7f"},{"tagName":"h3","title":"ViewModel","id":"c45be100"},{"tagName":"h3","title":"View","id":"69bd4ef9"},{"tagName":"h3","title":"앱의 통합","id":"2476f08d"},{"tagName":"h2","title":"데이터 바인딩","id":"260b2584"},{"tagName":"h2","title":"비동기 작업 처리","id":"558b8fc2"},{"tagName":"h2","title":"오류 처리","id":"f4c70288"},{"tagName":"h2","title":"로딩 상태 관리","id":"28ffda16"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
