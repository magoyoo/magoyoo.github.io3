1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-Combine-Subject%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%8A%A4%ED%8A%B8%EB%A6%BC-%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0","d"],{"children":["__PAGE__?{\"slug\":\"Swift-Combine-Subject로-데이터-스트림-제어하기\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-Combine-Subject%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%8A%A4%ED%8A%B8%EB%A6%BC-%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-Combine-Subject로-데이터-스트림-제어하기\"}"},"styles":[]}],"segment":["slug","Swift-Combine-Subject%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%8A%A4%ED%8A%B8%EB%A6%BC-%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift Combine Subject로 데이터 스트림 제어하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift Combine의 Subject를 활용하여 데이터 스트림을 생성하고 제어하는 방법을 다양한 코드 예제를 통해 설명합니다."}],["$","meta","3",{"name":"keywords","content":"swift,combine"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-Combine-Subject%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%8A%A4%ED%8A%B8%EB%A6%BC-%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift Combine Subject로 데이터 스트림 제어하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift Combine Subject로 데이터 스트림 제어하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift Combine의 Subject를 활용하여 데이터 스트림을 생성하고 제어하는 방법을 다양한 코드 예제를 통해 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-Combine-Subject%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%8A%A4%ED%8A%B8%EB%A6%BC-%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swift-combine.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift Combine Subject로 데이터 스트림 제어하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift Combine의 Subject를 활용하여 데이터 스트림을 생성하고 제어하는 방법을 다양한 코드 예제를 통해 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swift-combine.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swift-combine.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift Combine Subject로 데이터 스트림 제어하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift Combine Subject로 데이터 스트림 제어하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-05-28"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h2",null,{"id":"79557cd7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Swift Combine Subject로 데이터 스트림 제어하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift Combine은 애플의 리액티브 프로그래밍 프레임워크로, 비동기 이벤트 처리와 데이터 스트림 관리를 위한 강력한 도구를 제공합니다. 이 중에서 Subject는 Publisher와 Subscriber의 역할을 동시에 수행할 수 있는 특별한 객체로, 데이터 스트림을 제어하는 데 매우 유용합니다. 이 글에서는 Swift Combine Subject를 활용하여 데이터 스트림을 제어하는 방법을 다양한 예제를 통해 자세히 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"31b488b2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Subject란 무엇인가?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Subject는 Combine에서 데이터를 발행(Publisher)하고, 다른 Publisher로부터 데이터를 구독(Subscriber)할 수 있는 객체입니다. 이를 통해 데이터 스트림을 생성, 제어 및 가공할 수 있습니다. Combine에는 두 가지 주요 타입의 Subject가 있습니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"PassthroughSubject"}],": 초기값 없이 새로운 값을 발행하는 Subject입니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"CurrentValueSubject"}],": 초기값을 가지며, 최신 값을 유지하는 Subject입니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"24918676","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"PassthroughSubject"}],"\n",["$","h3",null,{"id":"9f41f9b8","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"PassthroughSubject는 초기값이 없으며, 새로운 값을 발행할 때마다 이를 구독자에게 전달합니다. 주로 이벤트를 전달하는 데 사용되며, 이전에 발행된 값은 보존되지 않습니다."}],"\n",["$","h3",null,{"id":"af7af39c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"사용 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"PassthroughSubject를 사용하여 간단한 이벤트 스트림을 생성해보겠습니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Combine\n\n// PassthroughSubject 생성\nlet subject = PassthroughSubject<String, Never>()\n\n// Subscriber 생성 및 구독\nlet cancellable = subject.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { value in\n    print(\"Received value: \\(value)\")\n})\n\n// 값 발행\nsubject.send(\"Hello\")\nsubject.send(\"Combine\")\nsubject.send(completion: .finished)\n"}],"position":{"start":{"line":23,"column":1,"offset":791},"end":{"line":45,"column":4,"offset":1282}}},"children":"import Combine\n\n// PassthroughSubject 생성\nlet subject = PassthroughSubject<String, Never>()\n\n// Subscriber 생성 및 구독\nlet cancellable = subject.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { value in\n    print(\"Received value: \\(value)\")\n})\n\n// 값 발행\nsubject.send(\"Hello\")\nsubject.send(\"Combine\")\nsubject.send(completion: .finished)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"PassthroughSubject","position":{"start":{"line":47,"column":8,"offset":1291},"end":{"line":47,"column":28,"offset":1311}}}],"position":{"start":{"line":47,"column":8,"offset":1291},"end":{"line":47,"column":28,"offset":1311}}},"children":"PassthroughSubject"}}],"는 \"Hello\"와 \"Combine\" 문자열을 발행하고, 이를 구독자에게 전달합니다. 마지막으로 완료 이벤트를 발행하여 스트림이 종료되었음을 알립니다."]}],"\n",["$","h3",null,{"id":"8fa4ffde","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"사용자 이벤트 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"PassthroughSubject는 사용자 이벤트를 처리하는 데 유용합니다. 예를 들어, 버튼 클릭 이벤트를 처리하는 경우를 생각해볼 수 있습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Combine\nimport UIKit\n\n// 버튼 생성\nlet button = UIButton()\n\n// PassthroughSubject 생성\nlet buttonTapSubject = PassthroughSubject<Void, Never>()\n\n// 버튼 클릭 이벤트를 PassthroughSubject로 전달\nbutton.addTarget(self, action: #selector(buttonTapped), for: .touchUpInside)\n\n@objc func buttonTapped() {\n    buttonTapSubject.send()\n}\n\n// Subscriber 생성 및 구독\nlet cancellable = buttonTapSubject.sink {\n    print(\"Button was tapped!\")\n}\n"}],"position":{"start":{"line":53,"column":1,"offset":1497},"end":{"line":74,"column":4,"offset":1927}}},"children":"import Combine\nimport UIKit\n\n// 버튼 생성\nlet button = UIButton()\n\n// PassthroughSubject 생성\nlet buttonTapSubject = PassthroughSubject<Void, Never>()\n\n// 버튼 클릭 이벤트를 PassthroughSubject로 전달\nbutton.addTarget(self, action: #selector(buttonTapped), for: .touchUpInside)\n\n@objc func buttonTapped() {\n    buttonTapSubject.send()\n}\n\n// Subscriber 생성 및 구독\nlet cancellable = buttonTapSubject.sink {\n    print(\"Button was tapped!\")\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서 버튼 클릭 이벤트가 발생할 때마다 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"buttonTapSubject","position":{"start":{"line":76,"column":27,"offset":1955},"end":{"line":76,"column":45,"offset":1973}}}],"position":{"start":{"line":76,"column":27,"offset":1955},"end":{"line":76,"column":45,"offset":1973}}},"children":"buttonTapSubject"}}],"가 값을 발행하고, 이를 구독자에게 전달합니다. 이를 통해 버튼 클릭 이벤트를 간단하게 처리할 수 있습니다."]}],"\n",["$","h2",null,{"id":"5f891e0f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"CurrentValueSubject"}],"\n",["$","h3",null,{"id":"9f41f9b8","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"CurrentValueSubject는 초기값을 가지며, 최신 값을 유지합니다. 새로운 값을 발행할 때마다 최신 값이 업데이트되며, 구독자가 구독할 때 현재 저장된 값을 즉시 받을 수 있습니다. 주로 상태 관리에 사용됩니다."}],"\n",["$","h3",null,{"id":"af7af39c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"사용 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"CurrentValueSubject를 사용하여 상태를 관리하는 예제를 살펴보겠습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Combine\n\n// CurrentValueSubject 생성 (초기값 설정)\nlet subject = CurrentValueSubject<String, Never>(\"Initial value\")\n\n// Subscriber 생성 및 구독\nlet cancellable = subject.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { value in\n    print(\"Received value: \\(value)\")\n})\n\n// 값 발행\nsubject.send(\"Updated value\")\nsubject.send(\"Another update\")\nsubject.send(completion: .finished)\n"}],"position":{"start":{"line":88,"column":1,"offset":2256},"end":{"line":110,"column":4,"offset":2788}}},"children":"import Combine\n\n// CurrentValueSubject 생성 (초기값 설정)\nlet subject = CurrentValueSubject<String, Never>(\"Initial value\")\n\n// Subscriber 생성 및 구독\nlet cancellable = subject.sink(receiveCompletion: { completion in\n    switch completion {\n    case .finished:\n        print(\"Finished\")\n    case .failure(let error):\n        print(\"Error: \\(error)\")\n    }\n}, receiveValue: { value in\n    print(\"Received value: \\(value)\")\n})\n\n// 값 발행\nsubject.send(\"Updated value\")\nsubject.send(\"Another update\")\nsubject.send(completion: .finished)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CurrentValueSubject","position":{"start":{"line":112,"column":8,"offset":2797},"end":{"line":112,"column":29,"offset":2818}}}],"position":{"start":{"line":112,"column":8,"offset":2797},"end":{"line":112,"column":29,"offset":2818}}},"children":"CurrentValueSubject"}}],"는 \"Initial value\"로 초기화되며, 새로운 값이 발행될 때마다 최신 값이 업데이트됩니다. 구독자는 항상 최신 값을 받을 수 있습니다."]}],"\n",["$","h3",null,{"id":"0bfbe571","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"상태 관리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"CurrentValueSubject는 주로 상태 관리를 위해 사용됩니다. 예를 들어, ViewModel에서 UI 상태를 관리하는 경우를 생각해볼 수 있습니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Combine\n\nclass ViewModel {\n    // CurrentValueSubject를 사용하여 상태 관리\n    var state = CurrentValueSubject<String, Never>(\"Initial state\")\n\n    func updateState(newState: String) {\n        state.send(newState)\n    }\n}\n\n// ViewModel 인스턴스 생성\nlet viewModel = ViewModel()\n\n// Subscriber 생성 및 구독\nlet cancellable = viewModel.state.sink { value in\n    print(\"State updated to: \\(value)\")\n}\n\n// 상태 업데이트\nviewModel.updateState(newState: \"Loading\")\nviewModel.updateState(newState: \"Loaded\")\n"}],"position":{"start":{"line":118,"column":1,"offset":3001},"end":{"line":141,"column":4,"offset":3495}}},"children":"import Combine\n\nclass ViewModel {\n    // CurrentValueSubject를 사용하여 상태 관리\n    var state = CurrentValueSubject<String, Never>(\"Initial state\")\n\n    func updateState(newState: String) {\n        state.send(newState)\n    }\n}\n\n// ViewModel 인스턴스 생성\nlet viewModel = ViewModel()\n\n// Subscriber 생성 및 구독\nlet cancellable = viewModel.state.sink { value in\n    print(\"State updated to: \\(value)\")\n}\n\n// 상태 업데이트\nviewModel.updateState(newState: \"Loading\")\nviewModel.updateState(newState: \"Loaded\")\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ViewModel","position":{"start":{"line":143,"column":8,"offset":3504},"end":{"line":143,"column":19,"offset":3515}}}],"position":{"start":{"line":143,"column":8,"offset":3504},"end":{"line":143,"column":19,"offset":3515}}},"children":"ViewModel"}}],"은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CurrentValueSubject","position":{"start":{"line":143,"column":21,"offset":3517},"end":{"line":143,"column":42,"offset":3538}}}],"position":{"start":{"line":143,"column":21,"offset":3517},"end":{"line":143,"column":42,"offset":3538}}},"children":"CurrentValueSubject"}}],"를 사용하여 UI 상태를 관리하며, 상태가 업데이트될 때마다 구독자에게 최신 상태를 전달합니다."]}],"\n",["$","h2",null,{"id":"8a71f8df","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"PassthroughSubject와 CurrentValueSubject 비교"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"PassthroughSubject와 CurrentValueSubject는 각각 고유한 용도와 특성을 가지고 있습니다. PassthroughSubject는 주로 일회성 이벤트를 처리하는 데 사용되며, CurrentValueSubject는 최신 상태를 관리하는 데 적합합니다. 두 Subject를 적절히 활용하면 다양한 비동기 데이터 스트림을 효과적으로 처리할 수 있습니다."}],"\n",["$","h3",null,{"id":"59e2e049","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"사용 사례 요약"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"PassthroughSubject"}],":"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":"초기값이 필요 없는 경우"}],"\n",["$","li","li-1",{"children":"일회성 이벤트(예: 사용자 입력, 네트워크 응답) 처리"}],"\n",["$","li","li-2",{"children":"값을 발행하기 전까지는 아무 데이터도 보유하지 않음"}],"\n"]}],"\n"]}],"\n",["$","li","li-1",{"children":["\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"CurrentValueSubject"}],":"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":"초기값이 필요한 경우"}],"\n",["$","li","li-1",{"children":"상태 관리(예: UI 상태) 및 최신 값 유지"}],"\n",["$","li","li-2",{"children":"구독 시점에 최신 값을 즉시 전달"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"id":"93c204c6","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Subject로 데이터 스트림 제어하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Subject는 데이터 스트림을 제어하는 데 매우 유용합니다. 여러 Publisher를 결합하거나 데이터를 가공하여 구독자에게 전달할 수 있습니다. 몇 가지 응용 예제를 통해 이를 살펴보겠습니다."}],"\n",["$","h3",null,{"id":"56684c75","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"여러 Publisher 결합"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Subject를 사용하여 여러 Publisher의 데이터를 결합할 수 있습니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Combine\n\nlet subject1 = PassthroughSubject<Int, Never>()\nlet subject2 = PassthroughSubject<String, Never>()\n\nlet cancellable = subject1.combineLatest(subject2)\n    .sink { int, string in\n        print(\"Received \\(int) and \\(string)\")\n    }\n\nsubject1.send(1)\nsubject2.send(\"A\")\nsubject1.send(2)\nsubject2.send(\"B\")\n"}],"position":{"start":{"line":170,"column":1,"offset":4278},"end":{"line":185,"column":4,"offset":4610}}},"children":"import Combine\n\nlet subject1 = PassthroughSubject<Int, Never>()\nlet subject2 = PassthroughSubject<String, Never>()\n\nlet cancellable = subject1.combineLatest(subject2)\n    .sink { int, string in\n        print(\"Received \\(int) and \\(string)\")\n    }\n\nsubject1.send(1)\nsubject2.send(\"A\")\nsubject1.send(2)\nsubject2.send(\"B\")\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"subject1","position":{"start":{"line":187,"column":8,"offset":4619},"end":{"line":187,"column":18,"offset":4629}}}],"position":{"start":{"line":187,"column":8,"offset":4619},"end":{"line":187,"column":18,"offset":4629}}},"children":"subject1"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"subject2","position":{"start":{"line":187,"column":20,"offset":4631},"end":{"line":187,"column":30,"offset":4641}}}],"position":{"start":{"line":187,"column":20,"offset":4631},"end":{"line":187,"column":30,"offset":4641}}},"children":"subject2"}}],"는 각각 정수와 문자열을 발행하며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"combineLatest","position":{"start":{"line":187,"column":50,"offset":4661},"end":{"line":187,"column":65,"offset":4676}}}],"position":{"start":{"line":187,"column":50,"offset":4661},"end":{"line":187,"column":65,"offset":4676}}},"children":"combineLatest"}}]," 연산자를 사용하여 두 Subject의 최신 값을 결합하여 구독자에게 전달합니다."]}],"\n",["$","h3",null,{"id":"c472a0e4","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"데이터 가공"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Subject를 사용하여 데이터를 가공하고 구독자에게 전달할 수 있습니다."}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Combine\n\nlet subject = PassthroughSubject<Int, Never>()\n\nlet cancellable = subject\n    .map { $0 * 2 }\n    .sink { value in\n        print(\"Received value: \\(value)\")\n    }\n\nsubject.send(1)\nsubject.send(2)\nsubject.send(3)\n"}],"position":{"start":{"line":193,"column":1,"offset":4778},"end":{"line":207,"column":4,"offset":5018}}},"children":"import Combine\n\nlet subject = PassthroughSubject<Int, Never>()\n\nlet cancellable = subject\n    .map { $0 * 2 }\n    .sink { value in\n        print(\"Received value: \\(value)\")\n    }\n\nsubject.send(1)\nsubject.send(2)\nsubject.send(3)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"subject","position":{"start":{"line":209,"column":8,"offset":5027},"end":{"line":209,"column":17,"offset":5036}}}],"position":{"start":{"line":209,"column":8,"offset":5027},"end":{"line":209,"column":17,"offset":5036}}},"children":"subject"}}],"는 정수를 발행하며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"map","position":{"start":{"line":209,"column":29,"offset":5048},"end":{"line":209,"column":34,"offset":5053}}}],"position":{"start":{"line":209,"column":29,"offset":5048},"end":{"line":209,"column":34,"offset":5053}}},"children":"map"}}]," 연산자를 사용하여 발행된 값을 두 배로 변환하여 구독자에게 전달합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift Combine의 Subject는 비동기 데이터 스트림을 제어하고 관리하는 데 매우 유용한 도구입니다. PassthroughSubject와 CurrentValueSubject를 적절히 활용하면 다양한 비동기 이벤트와 상태 변화를 효율적으로 처리할 수 있습니다. Combine을 사용하여 복잡한 비동기 로직을 간단하고 명확하게 구현할 수 있으며, 이를 통해 더 나은 사용자 경험을 제공할 수 있습니다. Subject의 기본 개념과 사용법을 이해하고 다양한 예제를 통해 익숙해지면, 리액티브 프로그래밍의 강력한 기능을 최대한 활용할 수 있을 것입니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift Combine Subject로 데이터 스트림 제어하기","toc":[{"tagName":"h2","title":"Swift Combine Subject로 데이터 스트림 제어하기","id":"79557cd7"},{"tagName":"h2","title":"Subject란 무엇인가?","id":"31b488b2"},{"tagName":"h2","title":"PassthroughSubject","id":"24918676"},{"tagName":"h3","title":"기본 개념","id":"9f41f9b8"},{"tagName":"h3","title":"사용 예제","id":"af7af39c"},{"tagName":"h3","title":"사용자 이벤트 처리","id":"8fa4ffde"},{"tagName":"h2","title":"CurrentValueSubject","id":"5f891e0f"},{"tagName":"h3","title":"기본 개념","id":"9f41f9b8"},{"tagName":"h3","title":"사용 예제","id":"af7af39c"},{"tagName":"h3","title":"상태 관리","id":"0bfbe571"},{"tagName":"h2","title":"PassthroughSubject와 CurrentValueSubject 비교","id":"8a71f8df"},{"tagName":"h3","title":"사용 사례 요약","id":"59e2e049"},{"tagName":"h2","title":"Subject로 데이터 스트림 제어하기","id":"93c204c6"},{"tagName":"h3","title":"여러 Publisher 결합","id":"56684c75"},{"tagName":"h3","title":"데이터 가공","id":"c472a0e4"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
