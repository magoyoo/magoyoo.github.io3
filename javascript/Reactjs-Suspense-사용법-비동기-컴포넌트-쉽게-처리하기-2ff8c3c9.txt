1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","Reactjs-Suspense-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%89%BD%EA%B2%8C-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-2ff8c3c9","d"],{"children":["__PAGE__?{\"slug\":\"Reactjs-Suspense-사용법-비동기-컴포넌트-쉽게-처리하기-2ff8c3c9\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","Reactjs-Suspense-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%89%BD%EA%B2%8C-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-2ff8c3c9","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Reactjs-Suspense-사용법-비동기-컴포넌트-쉽게-처리하기-2ff8c3c9\"}"},"styles":[]}],"segment":["slug","Reactjs-Suspense-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%89%BD%EA%B2%8C-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-2ff8c3c9","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"React.js Suspense 사용법: 비동기 컴포넌트 쉽게 처리하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"React.js의 Suspense 기능을 이용하여 비동기 컴포넌트를 처리하는 방법을 다룹니다. 이 글에서 주요 개념과 함께 다양한 예제 코드를 통해 Suspense의 활용 방법을 익힐 수 있습니다."}],["$","meta","3",{"name":"keywords","content":"React.js,Suspense,비동기 컴포넌트"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/Reactjs-Suspense-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%89%BD%EA%B2%8C-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-2ff8c3c9"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"React.js Suspense 사용법: 비동기 컴포넌트 쉽게 처리하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"React.js Suspense 사용법: 비동기 컴포넌트 쉽게 처리하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"React.js의 Suspense 기능을 이용하여 비동기 컴포넌트를 처리하는 방법을 다룹니다. 이 글에서 주요 개념과 함께 다양한 예제 코드를 통해 Suspense의 활용 방법을 익힐 수 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/Reactjs-Suspense-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%89%BD%EA%B2%8C-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-2ff8c3c9"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"React.js Suspense 사용법: 비동기 컴포넌트 쉽게 처리하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"React.js의 Suspense 기능을 이용하여 비동기 컴포넌트를 처리하는 방법을 다룹니다. 이 글에서 주요 개념과 함께 다양한 예제 코드를 통해 Suspense의 활용 방법을 익힐 수 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"React.js Suspense 사용법: 비동기 컴포넌트 쉽게 처리하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"React.js Suspense 사용법: 비동기 컴포넌트 쉽게 처리하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-18"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"fbbdeff2","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"React.js Suspense 사용법: 비동기 컴포넌트 쉽게 처리하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["React.js는 매우 유연하고 확장 가능한 프런트엔드 라이브러리로, 최근 몇 년 동안 많은 개발자들에게 인기를 끌고 있습니다. 그 중심에는 비동기 데이터를 효율적으로 처리하고, 사용자 경험을 개선하는 도구들이 존재합니다. 그 중에서 오늘은 React의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Suspense","position":{"start":{"line":4,"column":143,"offset":186},"end":{"line":4,"column":153,"offset":196}}}],"position":{"start":{"line":4,"column":143,"offset":186},"end":{"line":4,"column":153,"offset":196}}},"children":"Suspense"}}],"와 함께 비동기 컴포넌트를 어떻게 쉽게 처리할 수 있는지를 살펴보겠습니다."]}],"\n",["$","h2",null,{"id":"686c257e","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Suspense란 무엇인가?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Suspense","position":{"start":{"line":8,"column":1,"offset":259},"end":{"line":8,"column":11,"offset":269}}}],"position":{"start":{"line":8,"column":1,"offset":259},"end":{"line":8,"column":11,"offset":269}}},"children":"Suspense"}}],"는 React에서 비동기 컴포넌트를 다루기 위해 도입된 개념입니다. 비동기 데이터가 로드될 때까지 컴포넌트의 렌더링을 지연시키는 역할을 합니다. 이를 통해 비동기 데이터가 준비될 때까지 로딩 스피너를 보여주거나, 다른 대체 UI를 제공할 수 있습니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["기본 사용법은 간단합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Suspense","position":{"start":{"line":10,"column":16,"offset":426},"end":{"line":10,"column":26,"offset":436}}}],"position":{"start":{"line":10,"column":16,"offset":426},"end":{"line":10,"column":26,"offset":436}}},"children":"Suspense"}}]," 컴포넌트를 사용하여 비동기 컴포넌트를 감싸고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fallback","position":{"start":{"line":10,"column":53,"offset":463},"end":{"line":10,"column":63,"offset":473}}}],"position":{"start":{"line":10,"column":53,"offset":463},"end":{"line":10,"column":63,"offset":473}}},"children":"fallback"}}]," 속성에 로딩 상태를 나타낼 JSX를 전달하면 됩니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"import React, { Suspense } from 'react';\nconst MyLazyComponent = React.lazy(() => import('./MyLazyComponent'));\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <MyLazyComponent />\n    </Suspense>\n  );\n}\n"}],"position":{"start":{"line":12,"column":1,"offset":505},"end":{"line":23,"column":4,"offset":753}}},"children":"import React, { Suspense } from 'react';\nconst MyLazyComponent = React.lazy(() => import('./MyLazyComponent'));\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <MyLazyComponent />\n    </Suspense>\n  );\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제는 간단한 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Suspense","position":{"start":{"line":25,"column":11,"offset":765},"end":{"line":25,"column":21,"offset":775}}}],"position":{"start":{"line":25,"column":11,"offset":765},"end":{"line":25,"column":21,"offset":775}}},"children":"Suspense"}}],"의 사용 예입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React.lazy","position":{"start":{"line":25,"column":32,"offset":786},"end":{"line":25,"column":44,"offset":798}}}],"position":{"start":{"line":25,"column":32,"offset":786},"end":{"line":25,"column":44,"offset":798}}},"children":"React.lazy"}}],"를 사용하여 동적으로 컴포넌트를 로드하고, 로드하는 동안 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Loading...","position":{"start":{"line":25,"column":76,"offset":830},"end":{"line":25,"column":88,"offset":842}}}],"position":{"start":{"line":25,"column":76,"offset":830},"end":{"line":25,"column":88,"offset":842}}},"children":"Loading..."}}]," 텍스트를 보여줍니다."]}],"\n",["$","h2",null,{"id":"e5b9308d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"실전 예제: API 호출과 함께 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Suspense","position":{"start":{"line":29,"column":1,"offset":883},"end":{"line":29,"column":11,"offset":893}}}],"position":{"start":{"line":29,"column":1,"offset":883},"end":{"line":29,"column":11,"offset":893}}},"children":"Suspense"}}],"는 API 호출과 같은 경우에도 유용하게 사용될 수 있습니다. 예를 들어, 데이터 페칭을 해야 하는 컴포넌트를 생각해봅시다. 먼저 데이터 페칭을 하는 함수가 필요합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"function fetchData() {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({ data: 'Hello, World!' });\n    }, 2000);\n  });\n}\n"}],"position":{"start":{"line":31,"column":1,"offset":989},"end":{"line":39,"column":4,"offset":1143}}},"children":"function fetchData() {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({ data: 'Hello, World!' });\n    }, 2000);\n  });\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음은 이 함수를 사용하는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DataComponent","position":{"start":{"line":41,"column":16,"offset":1160},"end":{"line":41,"column":31,"offset":1175}}}],"position":{"start":{"line":41,"column":16,"offset":1160},"end":{"line":41,"column":31,"offset":1175}}},"children":"DataComponent"}}]," 컴포넌트를 만들어보겠습니다. 이 컴포넌트는 데이터가 로드될 때까지 대기하고, 데이터가 준비되면 표시합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"import React, { useState, useEffect } from 'react';\n\nfunction DataComponent() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetchData().then(result => {\n      setData(result.data);\n    });\n  }, []);\n\n  if (!data) {\n    return <div>Loading data...</div>;\n  }\n\n  return <div>Data: {data}</div>;\n}\n"}],"position":{"start":{"line":43,"column":1,"offset":1237},"end":{"line":61,"column":4,"offset":1565}}},"children":"import React, { useState, useEffect } from 'react';\n\nfunction DataComponent() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetchData().then(result => {\n      setData(result.data);\n    });\n  }, []);\n\n  if (!data) {\n    return <div>Loading data...</div>;\n  }\n\n  return <div>Data: {data}</div>;\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DataComponent","position":{"start":{"line":63,"column":6,"offset":1572},"end":{"line":63,"column":21,"offset":1587}}}],"position":{"start":{"line":63,"column":6,"offset":1572},"end":{"line":63,"column":21,"offset":1587}}},"children":"DataComponent"}}],"를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Suspense","position":{"start":{"line":63,"column":23,"offset":1589},"end":{"line":63,"column":33,"offset":1599}}}],"position":{"start":{"line":63,"column":23,"offset":1589},"end":{"line":63,"column":33,"offset":1599}}},"children":"Suspense"}}],"와 함께 사용해 보겠습니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"function App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <DataComponentWrapper />\n    </Suspense>\n  );\n}\n\nfunction DataComponentWrapper() {\n  const promise = fetchData();\n  throw promise;\n}\n"}],"position":{"start":{"line":65,"column":1,"offset":1616},"end":{"line":78,"column":4,"offset":1841}}},"children":"function App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <DataComponentWrapper />\n    </Suspense>\n  );\n}\n\nfunction DataComponentWrapper() {\n  const promise = fetchData();\n  throw promise;\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DataComponentWrapper","position":{"start":{"line":80,"column":1,"offset":1843},"end":{"line":80,"column":23,"offset":1865}}}],"position":{"start":{"line":80,"column":1,"offset":1843},"end":{"line":80,"column":23,"offset":1865}}},"children":"DataComponentWrapper"}}],"라는 별도의 컴포넌트를 사용하여 비동기 처리를 선언적으로 할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Suspense","position":{"start":{"line":80,"column":65,"offset":1907},"end":{"line":80,"column":75,"offset":1917}}}],"position":{"start":{"line":80,"column":65,"offset":1907},"end":{"line":80,"column":75,"offset":1917}}},"children":"Suspense"}}],"에 의해 자동으로 대기 상태가 관리되며, 비동기 작업이 완료되면 컴포넌트가 정상적으로 렌더링됩니다."]}],"\n",["$","h2",null,{"id":"715f5a74","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Suspense를 더 효과적으로 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["비동기 로딩이 여러 개일 경우 각 비동기 컴포넌트를 별도의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Suspense","position":{"start":{"line":84,"column":34,"offset":2034},"end":{"line":84,"column":44,"offset":2044}}}],"position":{"start":{"line":84,"column":34,"offset":2034},"end":{"line":84,"column":44,"offset":2044}}},"children":"Suspense"}}],"로 감싸는 대신, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Concurrent Mode","position":{"start":{"line":84,"column":54,"offset":2054},"end":{"line":84,"column":71,"offset":2071}}}],"position":{"start":{"line":84,"column":54,"offset":2054},"end":{"line":84,"column":71,"offset":2071}}},"children":"Concurrent Mode"}}],"에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SuspenseList","position":{"start":{"line":84,"column":74,"offset":2074},"end":{"line":84,"column":88,"offset":2088}}}],"position":{"start":{"line":84,"column":74,"offset":2074},"end":{"line":84,"column":88,"offset":2088}}},"children":"SuspenseList"}}],"를 사용할 수 있습니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"import React, { Suspense } from 'react';\nimport { SuspenseList } from 'react';\n\n<SuspenseList revealOrder=\"forwards\">\n  <Suspense fallback={<div>Loading first...</div>}>\n    <FirstComponent />\n  </Suspense>\n  <Suspense fallback={<div>Loading second...</div>}>\n    <SecondComponent />\n  </Suspense>\n</SuspenseList>\n"}],"position":{"start":{"line":86,"column":1,"offset":2103},"end":{"line":98,"column":4,"offset":2427}}},"children":"import React, { Suspense } from 'react';\nimport { SuspenseList } from 'react';\n\n<SuspenseList revealOrder=\"forwards\">\n  <Suspense fallback={<div>Loading first...</div>}>\n    <FirstComponent />\n  </Suspense>\n  <Suspense fallback={<div>Loading second...</div>}>\n    <SecondComponent />\n  </Suspense>\n</SuspenseList>\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SuspenseList","position":{"start":{"line":100,"column":8,"offset":2436},"end":{"line":100,"column":22,"offset":2450}}}],"position":{"start":{"line":100,"column":8,"offset":2436},"end":{"line":100,"column":22,"offset":2450}}},"children":"SuspenseList"}}],"는 여러 비동기 컴포넌트의 로딩 순서를 제어하며, 사용자 경험을 더욱 향상시킬 수 있습니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["React의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Suspense","position":{"start":{"line":104,"column":8,"offset":2517},"end":{"line":104,"column":18,"offset":2527}}}],"position":{"start":{"line":104,"column":8,"offset":2517},"end":{"line":104,"column":18,"offset":2527}}},"children":"Suspense"}}],"는 비동기 데이터를 처리할 때 매우 유용하게 사용될 수 있는 강력한 도구입니다. 이를 통해 비동기 컴포넌트 로딩 중의 사용자 경험을 개선할 수 있습니다. 비동기 처리를 선언적으로 할 수 있게 하여, 코드의 가독성과 유지보수성을 높일 수 있습니다. 다양한 상황에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Suspense","position":{"start":{"line":104,"column":165,"offset":2674},"end":{"line":104,"column":175,"offset":2684}}}],"position":{"start":{"line":104,"column":165,"offset":2674},"end":{"line":104,"column":175,"offset":2684}}},"children":"Suspense"}}],"를 적용해보며 그 진가를 경험해보시기 바랍니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"React.js Suspense 사용법: 비동기 컴포넌트 쉽게 처리하기","toc":[{"tagName":"h1","title":"React.js Suspense 사용법: 비동기 컴포넌트 쉽게 처리하기","id":"fbbdeff2"},{"tagName":"h2","title":"Suspense란 무엇인가?","id":"686c257e"},{"tagName":"h2","title":"실전 예제: API 호출과 함께 사용하기","id":"e5b9308d"},{"tagName":"h2","title":"Suspense를 더 효과적으로 사용하기","id":"715f5a74"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
