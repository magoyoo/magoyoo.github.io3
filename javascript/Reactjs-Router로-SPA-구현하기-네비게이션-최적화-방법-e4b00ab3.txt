1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","Reactjs-Router%EB%A1%9C-SPA-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-%EC%B5%9C%EC%A0%81%ED%99%94-%EB%B0%A9%EB%B2%95-e4b00ab3","d"],{"children":["__PAGE__?{\"slug\":\"Reactjs-Router로-SPA-구현하기-네비게이션-최적화-방법-e4b00ab3\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","Reactjs-Router%EB%A1%9C-SPA-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-%EC%B5%9C%EC%A0%81%ED%99%94-%EB%B0%A9%EB%B2%95-e4b00ab3","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Reactjs-Router로-SPA-구현하기-네비게이션-최적화-방법-e4b00ab3\"}"},"styles":[]}],"segment":["slug","Reactjs-Router%EB%A1%9C-SPA-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-%EC%B5%9C%EC%A0%81%ED%99%94-%EB%B0%A9%EB%B2%95-e4b00ab3","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"React.js Router로 SPA 구현하기: 네비게이션 최적화 방법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 React.js Router를 활용하여 단일 페이지 애플리케이션(SPA)을 구현하고 네비게이션을 최적화하는 방법에 대해 자세히 설명합니다. 각 단계별 설정 방법과 코드 예제를 통해 쉽게 이해할 수 있도록 구성되어 있습니다."}],["$","meta","3",{"name":"keywords","content":"React.js,Router,SPA,네비게이션"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/Reactjs-Router%EB%A1%9C-SPA-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-%EC%B5%9C%EC%A0%81%ED%99%94-%EB%B0%A9%EB%B2%95-e4b00ab3"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"React.js Router로 SPA 구현하기: 네비게이션 최적화 방법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"React.js Router로 SPA 구현하기: 네비게이션 최적화 방법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 React.js Router를 활용하여 단일 페이지 애플리케이션(SPA)을 구현하고 네비게이션을 최적화하는 방법에 대해 자세히 설명합니다. 각 단계별 설정 방법과 코드 예제를 통해 쉽게 이해할 수 있도록 구성되어 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/Reactjs-Router%EB%A1%9C-SPA-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-%EC%B5%9C%EC%A0%81%ED%99%94-%EB%B0%A9%EB%B2%95-e4b00ab3"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner5.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"React.js Router로 SPA 구현하기: 네비게이션 최적화 방법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 React.js Router를 활용하여 단일 페이지 애플리케이션(SPA)을 구현하고 네비게이션을 최적화하는 방법에 대해 자세히 설명합니다. 각 단계별 설정 방법과 코드 예제를 통해 쉽게 이해할 수 있도록 구성되어 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner5.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner5.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"React.js Router로 SPA 구현하기: 네비게이션 최적화 방법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"React.js Router로 SPA 구현하기: 네비게이션 최적화 방법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-20"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"b29fa4c7","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"React.js Router로 SPA 구현하기: 네비게이션 최적화 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["React.js를 사용하여 단일 페이지 애플리케이션(SPA)을 구현하는 것은 웹 개발에서 흔히 접하게 되는 과제 중 하나입니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React Router","position":{"start":{"line":4,"column":80,"offset":123},"end":{"line":4,"column":94,"offset":137}}}],"position":{"start":{"line":4,"column":80,"offset":123},"end":{"line":4,"column":94,"offset":137}}},"children":"React Router"}}],"를 활용하여 SPA를 어떻게 설정하고 최적화할 수 있는지 알아보겠습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SPA(Single Page Application)","position":{"start":{"line":4,"column":135,"offset":178},"end":{"line":4,"column":165,"offset":208}}}],"position":{"start":{"line":4,"column":135,"offset":178},"end":{"line":4,"column":165,"offset":208}}},"children":"SPA(Single Page Application)"}}],"는 모든 페이지가 단일 페이지 내에서 이루어지며, 사용자가 다른 페이지로 이동할 때마다 전체 페이지를 다시 로드하는 대신 필요한 부분만 업데이트합니다. 이를 통해 사용자 경험을 크게 향상시킬 수 있습니다."]}],"\n",["$","h2",null,{"id":"b8a6d4ee","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"1. React Router 기본 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React Router","position":{"start":{"line":8,"column":5,"offset":354},"end":{"line":8,"column":19,"offset":368}}}],"position":{"start":{"line":8,"column":5,"offset":354},"end":{"line":8,"column":19,"offset":368}}},"children":"React Router"}}],"를 설치해야 합니다. 이를 위해 터미널에서 다음 명령어를 실행하세요:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-sh","node":{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"npm install react-router-dom\n"}],"position":{"start":{"line":10,"column":1,"offset":408},"end":{"line":12,"column":4,"offset":446}}},"children":"npm install react-router-dom\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["설치가 완료되면, 애플리케이션의 루트 파일에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React Router","position":{"start":{"line":14,"column":27,"offset":474},"end":{"line":14,"column":41,"offset":488}}}],"position":{"start":{"line":14,"column":27,"offset":474},"end":{"line":14,"column":41,"offset":488}}},"children":"React Router"}}],"를 사용하여 기본 경로 설정을 합니다. 가장 간단한 형태의 설정은 다음과 같습니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport About from './About';\nimport Contact from './Contact';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/contact\" component={Contact} />\n      </Switch>\n    </Router>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"}],"position":{"start":{"line":16,"column":1,"offset":536},"end":{"line":37,"column":4,"offset":1090}}},"children":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport About from './About';\nimport Contact from './Contact';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/contact\" component={Contact} />\n      </Switch>\n    </Router>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Router","position":{"start":{"line":39,"column":8,"offset":1099},"end":{"line":39,"column":16,"offset":1107}}}],"position":{"start":{"line":39,"column":8,"offset":1099},"end":{"line":39,"column":16,"offset":1107}}},"children":"Router"}}]," 컴포넌트를 사용하여 기본 라우팅을 설정하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Switch","position":{"start":{"line":39,"column":42,"offset":1133},"end":{"line":39,"column":50,"offset":1141}}}],"position":{"start":{"line":39,"column":42,"offset":1133},"end":{"line":39,"column":50,"offset":1141}}},"children":"Switch"}}]," 컴포넌트로 라우팅 경로를 감싸서 정확한 매칭을 보장합니다. 각각의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Route","position":{"start":{"line":39,"column":88,"offset":1179},"end":{"line":39,"column":95,"offset":1186}}}],"position":{"start":{"line":39,"column":88,"offset":1179},"end":{"line":39,"column":95,"offset":1186}}},"children":"Route"}}],"는 특정 경로와 해당 경로에 해당하는 컴포넌트를 매핑합니다."]}],"\n",["$","h2",null,{"id":"78855809","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"2. 네비게이션 컴포넌트 생성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SPA에서 중요한 요소 중 하나는 네비게이션입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Link","position":{"start":{"line":43,"column":30,"offset":1271},"end":{"line":43,"column":36,"offset":1277}}}],"position":{"start":{"line":43,"column":30,"offset":1271},"end":{"line":43,"column":36,"offset":1277}}},"children":"Link"}}]," 컴포넌트를 사용하여 각 경로로의 네비게이션을 설정할 수 있습니다. 예를 들어, 간단한 네비게이션 바를 추가하려면 다음과 같이 할 수 있습니다:"]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <ul>\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/about\">About</Link></li>\n        <li><Link to=\"/contact\">Contact</Link></li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"}],"position":{"start":{"line":45,"column":1,"offset":1359},"end":{"line":62,"column":4,"offset":1697}}},"children":"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <ul>\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/about\">About</Link></li>\n        <li><Link to=\"/contact\">Contact</Link></li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["그리고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App","position":{"start":{"line":64,"column":5,"offset":1703},"end":{"line":64,"column":10,"offset":1708}}}],"position":{"start":{"line":64,"column":5,"offset":1703},"end":{"line":64,"column":10,"offset":1708}}},"children":"App"}}]," 컴포넌트 내에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Navbar","position":{"start":{"line":64,"column":20,"offset":1718},"end":{"line":64,"column":28,"offset":1726}}}],"position":{"start":{"line":64,"column":20,"offset":1718},"end":{"line":64,"column":28,"offset":1726}}},"children":"Navbar"}}],"를 포함합니다:"]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import Navbar from './Navbar';\n\nconst App = () => {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/contact\" component={Contact} />\n      </Switch>\n    </Router>\n  );\n};\n"}],"position":{"start":{"line":66,"column":1,"offset":1736},"end":{"line":81,"column":4,"offset":2053}}},"children":"import Navbar from './Navbar';\n\nconst App = () => {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/contact\" component={Contact} />\n      </Switch>\n    </Router>\n  );\n};\n"}}]}],"\n",["$","h2",null,{"id":"39eeea6b","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"3. 동적 라우팅과 URL 매개변수"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["때로는 동적 라우팅이 필요할 때도 있습니다. 예를 들어, 블로그 포스트의 개별 항목을 보여주기 위해 URL에 파라미터를 포함하고자 할 때입니다. 이를 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Route","position":{"start":{"line":85,"column":88,"offset":2166},"end":{"line":85,"column":95,"offset":2173}}}],"position":{"start":{"line":85,"column":88,"offset":2166},"end":{"line":85,"column":95,"offset":2173}}},"children":"Route"}}],"에서 콜론(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":":","position":{"start":{"line":85,"column":101,"offset":2179},"end":{"line":85,"column":104,"offset":2182}}}],"position":{"start":{"line":85,"column":101,"offset":2179},"end":{"line":85,"column":104,"offset":2182}}},"children":":"}}],")을 사용하여 파라미터를 정의할 수 있습니다:"]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Post = () => {\n  const { id } = useParams();\n  return <div>Post ID: {id}</div>;\n};\n"}],"position":{"start":{"line":87,"column":1,"offset":2209},"end":{"line":95,"column":4,"offset":2389}}},"children":"import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Post = () => {\n  const { id } = useParams();\n  return <div>Post ID: {id}</div>;\n};\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["그리고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App","position":{"start":{"line":97,"column":5,"offset":2395},"end":{"line":97,"column":10,"offset":2400}}}],"position":{"start":{"line":97,"column":5,"offset":2395},"end":{"line":97,"column":10,"offset":2400}}},"children":"App"}}]," 컴포넌트에서 다음과 같이 설정할 수 있습니다:"]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"<Route path=\"/post/:id\" component={Post} />\n"}],"position":{"start":{"line":99,"column":1,"offset":2428},"end":{"line":101,"column":4,"offset":2489}}},"children":"<Route path=\"/post/:id\" component={Post} />\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useParams","position":{"start":{"line":103,"column":1,"offset":2491},"end":{"line":103,"column":12,"offset":2502}}}],"position":{"start":{"line":103,"column":1,"offset":2491},"end":{"line":103,"column":12,"offset":2502}}},"children":"useParams"}}]," 훅을 사용하여 URL 매개변수를 쉽게 접근할 수 있습니다. 이를 통해 동적인 콘텐츠를 렌더링할 수 있습니다."]}],"\n",["$","h2",null,{"id":"fe5819ed","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"4. 코드 분할과 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SPA에서 중요한 또 다른 부분은 애플리케이션의 성능을 최적화하는 것입니다. 코드 분할을 통해 필요할 때만 해당 모듈을 로드하여 초기 로딩 시간을 줄일 수 있습니다. React에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React.lazy","position":{"start":{"line":107,"column":103,"offset":2685},"end":{"line":107,"column":115,"offset":2697}}}],"position":{"start":{"line":107,"column":103,"offset":2685},"end":{"line":107,"column":115,"offset":2697}}},"children":"React.lazy"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Suspense","position":{"start":{"line":107,"column":117,"offset":2699},"end":{"line":107,"column":127,"offset":2709}}}],"position":{"start":{"line":107,"column":117,"offset":2699},"end":{"line":107,"column":127,"offset":2709}}},"children":"Suspense"}}],"를 사용하여 이를 구현할 수 있습니다:"]}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { Suspense, lazy } from 'react';\n\nconst Home = lazy(() => import('./Home'));\nconst About = lazy(() => import('./About'));\nconst Contact = lazy(() => import('./Contact'));\n\nconst App = () => {\n  return (\n    <Router>\n      <Navbar />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/contact\" component={Contact} />\n        </Switch>\n      </Suspense>\n    </Router>\n  );\n};\n"}],"position":{"start":{"line":109,"column":1,"offset":2732},"end":{"line":130,"column":4,"offset":3281}}},"children":"import React, { Suspense, lazy } from 'react';\n\nconst Home = lazy(() => import('./Home'));\nconst About = lazy(() => import('./About'));\nconst Contact = lazy(() => import('./Contact'));\n\nconst App = () => {\n  return (\n    <Router>\n      <Navbar />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/contact\" component={Contact} />\n        </Switch>\n      </Suspense>\n    </Router>\n  );\n};\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서 각 컴포넌트는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"lazy","position":{"start":{"line":132,"column":13,"offset":3295},"end":{"line":132,"column":19,"offset":3301}}}],"position":{"start":{"line":132,"column":13,"offset":3295},"end":{"line":132,"column":19,"offset":3301}}},"children":"lazy"}}],"를 통해 동적으로 임포트되며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Suspense","position":{"start":{"line":132,"column":36,"offset":3318},"end":{"line":132,"column":46,"offset":3328}}}],"position":{"start":{"line":132,"column":36,"offset":3318},"end":{"line":132,"column":46,"offset":3328}}},"children":"Suspense"}}],"를 사용하여 로딩 중에 표시할 폴백 UI를 지정할 수 있습니다. 이를 통해 네트워크 트래픽을 줄이고 사용자 경험을 개선할 수 있습니다."]}],"\n",["$","h2",null,{"id":"de43526c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"5. 고급 라우팅 기법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"마지막으로, 복잡한 라우팅 시나리오에서 사용할 수 있는 몇 가지 고급 기법을 소개합니다. 먼저, 중첩 라우트(Nested Routes)를 통해 어플리케이션의 라우트를 관리하기 쉽게 할 수 있습니다:"}],"\n",["$","pre","pre-7",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const Dashboard = ({ match }) => (\n  <div>\n    <h2>Dashboard</h2>\n    <Switch>\n      <Route path={`${match.path}/profile`} component={Profile} />\n      <Route path={`${match.path}/settings`} component={Settings} />\n    </Switch>\n  </div>\n);\n"}],"position":{"start":{"line":138,"column":1,"offset":3534},"end":{"line":148,"column":4,"offset":3792}}},"children":"const Dashboard = ({ match }) => (\n  <div>\n    <h2>Dashboard</h2>\n    <Switch>\n      <Route path={`${match.path}/profile`} component={Profile} />\n      <Route path={`${match.path}/settings`} component={Settings} />\n    </Switch>\n  </div>\n);\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"match.path","position":{"start":{"line":150,"column":5,"offset":3798},"end":{"line":150,"column":17,"offset":3810}}}],"position":{"start":{"line":150,"column":5,"offset":3798},"end":{"line":150,"column":17,"offset":3810}}},"children":"match.path"}}],"를 사용하여 부모 경로와 상대적인 중첩된 경로를 정의할 수 있습니다. 또한, Redirect를 통해 사용자를 특정 페이지로 리디렉션 할 수 있습니다:"]}],"\n",["$","pre","pre-8",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import { Redirect } from 'react-router-dom';\n\n<Route exact path=\"/\">\n  <Redirect to=\"/home\" />\n</Route>\n"}],"position":{"start":{"line":152,"column":1,"offset":3895},"end":{"line":158,"column":4,"offset":4016}}},"children":"import { Redirect } from 'react-router-dom';\n\n<Route exact path=\"/\">\n  <Redirect to=\"/home\" />\n</Route>\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이러한 고급 기법들은 더 복잡한 네비게이션 시나리오에서도 유연하게 대처할 수 있게 해줍니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"React.js Router를 활용하여 SPA를 구현하면 애플리케이션의 사용자 경험을 크게 개선할 수 있습니다. 기본 라우팅 설정부터 코드 분할, 동적 라우팅, 고급 라우팅 기법까지 다양한 최적화 방법을 잘 활용하면 성능이 뛰어나며 사용하기 편리한 웹 애플리케이션을 만들 수 있습니다. 이번 글을 통해 React Router의 다양한 기능과 최적화 방법을 이해하고 실제 프로젝트에 적용해보세요!"}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"React.js Router로 SPA 구현하기: 네비게이션 최적화 방법","toc":[{"tagName":"h1","title":"React.js Router로 SPA 구현하기: 네비게이션 최적화 방법","id":"b29fa4c7"},{"tagName":"h2","title":"1. React Router 기본 설정","id":"b8a6d4ee"},{"tagName":"h2","title":"2. 네비게이션 컴포넌트 생성","id":"78855809"},{"tagName":"h2","title":"3. 동적 라우팅과 URL 매개변수","id":"39eeea6b"},{"tagName":"h2","title":"4. 코드 분할과 최적화","id":"fe5819ed"},{"tagName":"h2","title":"5. 고급 라우팅 기법","id":"de43526c"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
