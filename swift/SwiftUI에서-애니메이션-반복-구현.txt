1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EB%B0%98%EB%B3%B5-%EA%B5%AC%ED%98%84","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI에서-애니메이션-반복-구현\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EB%B0%98%EB%B3%B5-%EA%B5%AC%ED%98%84","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI에서-애니메이션-반복-구현\"}"},"styles":[]}],"segment":["slug","SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EB%B0%98%EB%B3%B5-%EA%B5%AC%ED%98%84","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI 반복 및 그룹 애니메이션: 애니메이션을 반복, 무한 루프, 애니메이션을 그룹 실행 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 SwiftUI에서 애니메이션을 반복하거나 무한 루프로 실행하는 방법과 여러 애니메이션을 그룹으로 묶어 동시에 실행하는 방법에 대해 설명합니다. .repeatCount()와 .repeatForever() modifier를 사용한 반복 애니메이션, 그리고 Animation 구조체를 활용한 그룹 애니메이션의 다양한 예제를 통해 동적이고 매력적인 사용자 인터페이스를 구현하는 방법을 다룹니다. SwiftUI의 강력한 애니메이션 기능을 활용하여 창의적이고 흥미로운 애플리케이션을 만드는 방법을 배워보세요."}],["$","meta","3",{"name":"keywords","content":"swift,swiftUI,animation"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EB%B0%98%EB%B3%B5-%EA%B5%AC%ED%98%84"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI 반복 및 그룹 애니메이션: 애니메이션을 반복, 무한 루프, 애니메이션을 그룹 실행 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI 반복 및 그룹 애니메이션: 애니메이션을 반복, 무한 루프, 애니메이션을 그룹 실행 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 SwiftUI에서 애니메이션을 반복하거나 무한 루프로 실행하는 방법과 여러 애니메이션을 그룹으로 묶어 동시에 실행하는 방법에 대해 설명합니다. .repeatCount()와 .repeatForever() modifier를 사용한 반복 애니메이션, 그리고 Animation 구조체를 활용한 그룹 애니메이션의 다양한 예제를 통해 동적이고 매력적인 사용자 인터페이스를 구현하는 방법을 다룹니다. SwiftUI의 강력한 애니메이션 기능을 활용하여 창의적이고 흥미로운 애플리케이션을 만드는 방법을 배워보세요."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EB%B0%98%EB%B3%B5-%EA%B5%AC%ED%98%84"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI 반복 및 그룹 애니메이션: 애니메이션을 반복, 무한 루프, 애니메이션을 그룹 실행 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 SwiftUI에서 애니메이션을 반복하거나 무한 루프로 실행하는 방법과 여러 애니메이션을 그룹으로 묶어 동시에 실행하는 방법에 대해 설명합니다. .repeatCount()와 .repeatForever() modifier를 사용한 반복 애니메이션, 그리고 Animation 구조체를 활용한 그룹 애니메이션의 다양한 예제를 통해 동적이고 매력적인 사용자 인터페이스를 구현하는 방법을 다룹니다. SwiftUI의 강력한 애니메이션 기능을 활용하여 창의적이고 흥미로운 애플리케이션을 만드는 방법을 배워보세요."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBasic.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI 반복 및 그룹 애니메이션: 애니메이션을 반복, 무한 루프, 애니메이션을 그룹 실행"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI 반복 및 그룹 애니메이션: 애니메이션을 반복, 무한 루프, 애니메이션을 그룹 실행"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-05-27"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h2",null,{"id":"58e7ad4f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"반복 및 그룹 애니메이션: 애니메이션을 반복하거나 무한 루프로 실행하는 방법과 여러 애니메이션을 그룹으로 묶어 동시에 실행하는 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 애플의 최신 UI 프레임워크로, 선언형 문법을 통해 간결하고 직관적으로 사용자 인터페이스를 구축할 수 있습니다. SwiftUI의 강력한 기능 중 하나는 애니메이션을 쉽게 적용하고 관리할 수 있다는 점입니다. 특히 애니메이션을 반복하거나 여러 애니메이션을 그룹으로 묶어 동시에 실행하는 기능은 사용자 경험을 더욱 향상시킬 수 있는 중요한 요소입니다. 이번 글에서는 애니메이션을 반복하거나 무한 루프로 실행하는 방법과 여러 애니메이션을 그룹으로 묶어 동시에 실행하는 방법에 대해 자세히 알아보겠습니다."}],"\n",["$","h2",null,{"id":"3c2386c3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"반복 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["애니메이션을 반복하면 특정 효과를 지속적으로 제공할 수 있어, 사용자에게 동적인 느낌을 줍니다. SwiftUI에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".repeatCount()","position":{"start":{"line":8,"column":66,"offset":446},"end":{"line":8,"column":82,"offset":462}}}],"position":{"start":{"line":8,"column":66,"offset":446},"end":{"line":8,"column":82,"offset":462}}},"children":".repeatCount()"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".repeatForever()","position":{"start":{"line":8,"column":84,"offset":464},"end":{"line":8,"column":102,"offset":482}}}],"position":{"start":{"line":8,"column":84,"offset":464},"end":{"line":8,"column":102,"offset":482}}},"children":".repeatForever()"}}]," modifier를 사용하여 애니메이션을 반복할 수 있습니다."]}],"\n",["$","h3",null,{"id":"d54cbcab","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":".repeatCount()를 사용한 반복 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".repeatCount()","position":{"start":{"line":12,"column":1,"offset":552},"end":{"line":12,"column":17,"offset":568}}}],"position":{"start":{"line":12,"column":1,"offset":552},"end":{"line":12,"column":17,"offset":568}}},"children":".repeatCount()"}}]," modifier는 애니메이션을 지정된 횟수만큼 반복합니다. 예제를 통해 사용 방법을 살펴보겠습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var scale: CGFloat = 1.0\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            Circle()\n                .fill(Color.blue)\n                .frame(width: 100, height: 100)\n                .scaleEffect(scale)\n                .onAppear {\n                    withAnimation(Animation.easeInOut(duration: 1.0).repeatCount(5, autoreverses: true)) {\n                        scale = 2.0\n                    }\n                }\n\n            Spacer()\n        }\n    }\n}\n"}],"position":{"start":{"line":14,"column":1,"offset":626},"end":{"line":38,"column":4,"offset":1181}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var scale: CGFloat = 1.0\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            Circle()\n                .fill(Color.blue)\n                .frame(width: 100, height: 100)\n                .scaleEffect(scale)\n                .onAppear {\n                    withAnimation(Animation.easeInOut(duration: 1.0).repeatCount(5, autoreverses: true)) {\n                        scale = 2.0\n                    }\n                }\n\n            Spacer()\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Circle","position":{"start":{"line":40,"column":8,"offset":1190},"end":{"line":40,"column":16,"offset":1198}}}],"position":{"start":{"line":40,"column":8,"offset":1190},"end":{"line":40,"column":16,"offset":1198}}},"children":"Circle"}}]," 뷰의 크기가 커졌다 작아지는 애니메이션을 5회 반복합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".repeatCount(5, autoreverses: true)","position":{"start":{"line":40,"column":50,"offset":1232},"end":{"line":40,"column":87,"offset":1269}}}],"position":{"start":{"line":40,"column":50,"offset":1232},"end":{"line":40,"column":87,"offset":1269}}},"children":".repeatCount(5, autoreverses: true)"}}]," modifier를 사용하여 애니메이션을 5회 반복하며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"autoreverses: true","position":{"start":{"line":40,"column":119,"offset":1301},"end":{"line":40,"column":139,"offset":1321}}}],"position":{"start":{"line":40,"column":119,"offset":1301},"end":{"line":40,"column":139,"offset":1321}}},"children":"autoreverses: true"}}]," 옵션을 통해 애니메이션이 역방향으로도 실행되도록 설정했습니다."]}],"\n",["$","h3",null,{"id":"581c83c8","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":".repeatForever()를 사용한 무한 루프 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".repeatForever()","position":{"start":{"line":44,"column":1,"offset":1397},"end":{"line":44,"column":19,"offset":1415}}}],"position":{"start":{"line":44,"column":1,"offset":1397},"end":{"line":44,"column":19,"offset":1415}}},"children":".repeatForever()"}}]," modifier는 애니메이션을 무한히 반복합니다. 무한 루프 애니메이션을 적용하면 특정 효과를 지속적으로 유지할 수 있습니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var rotation: Double = 0.0\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            Rectangle()\n                .fill(Color.green)\n                .frame(width: 100, height: 100)\n                .rotationEffect(.degrees(rotation))\n                .onAppear {\n                    withAnimation(Animation.linear(duration: 2.0).repeatForever(autoreverses: false)) {\n                        rotation = 360.0\n                    }\n                }\n\n            Spacer()\n        }\n    }\n}\n"}],"position":{"start":{"line":46,"column":1,"offset":1488},"end":{"line":70,"column":4,"offset":2067}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var rotation: Double = 0.0\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            Rectangle()\n                .fill(Color.green)\n                .frame(width: 100, height: 100)\n                .rotationEffect(.degrees(rotation))\n                .onAppear {\n                    withAnimation(Animation.linear(duration: 2.0).repeatForever(autoreverses: false)) {\n                        rotation = 360.0\n                    }\n                }\n\n            Spacer()\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Rectangle","position":{"start":{"line":72,"column":8,"offset":2076},"end":{"line":72,"column":19,"offset":2087}}}],"position":{"start":{"line":72,"column":8,"offset":2076},"end":{"line":72,"column":19,"offset":2087}}},"children":"Rectangle"}}]," 뷰가 360도 회전하는 애니메이션을 무한히 반복합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".repeatForever(autoreverses: false)","position":{"start":{"line":72,"column":51,"offset":2119},"end":{"line":72,"column":88,"offset":2156}}}],"position":{"start":{"line":72,"column":51,"offset":2119},"end":{"line":72,"column":88,"offset":2156}}},"children":".repeatForever(autoreverses: false)"}}]," modifier를 사용하여 애니메이션이 역방향으로 실행되지 않도록 설정했습니다."]}],"\n",["$","h2",null,{"id":"6db8d33c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"그룹 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여러 애니메이션을 그룹으로 묶어 동시에 실행하면, 다양한 효과를 조합하여 복잡한 애니메이션을 구현할 수 있습니다. SwiftUI에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Animation","position":{"start":{"line":76,"column":76,"offset":2291},"end":{"line":76,"column":87,"offset":2302}}}],"position":{"start":{"line":76,"column":76,"offset":2291},"end":{"line":76,"column":87,"offset":2302}}},"children":"Animation"}}]," 구조체를 사용하여 그룹 애니메이션을 설정할 수 있습니다."]}],"\n",["$","h3",null,{"id":"c398f8f9","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제: 위치와 투명도 변화의 그룹 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 위치와 투명도 변화를 동시에 적용하는 그룹 애니메이션 예제입니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var moveRight = false\n    @State private var opacity: Double = 1.0\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            Rectangle()\n                .fill(Color.red)\n                .frame(width: 100, height: 100)\n                .offset(x: moveRight ? 150 : -150)\n                .opacity(opacity)\n                .onAppear {\n                    let animation = Animation.easeInOut(duration: 2.0)\n                    withAnimation(animation) {\n                        moveRight.toggle()\n                        opacity = moveRight ? 0.0 : 1.0\n                    }\n                }\n\n            Spacer()\n        }\n    }\n}\n"}],"position":{"start":{"line":82,"column":1,"offset":2408},"end":{"line":110,"column":4,"offset":3130}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var moveRight = false\n    @State private var opacity: Double = 1.0\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            Rectangle()\n                .fill(Color.red)\n                .frame(width: 100, height: 100)\n                .offset(x: moveRight ? 150 : -150)\n                .opacity(opacity)\n                .onAppear {\n                    let animation = Animation.easeInOut(duration: 2.0)\n                    withAnimation(animation) {\n                        moveRight.toggle()\n                        opacity = moveRight ? 0.0 : 1.0\n                    }\n                }\n\n            Spacer()\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Rectangle","position":{"start":{"line":112,"column":8,"offset":3139},"end":{"line":112,"column":19,"offset":3150}}}],"position":{"start":{"line":112,"column":8,"offset":3139},"end":{"line":112,"column":19,"offset":3150}}},"children":"Rectangle"}}]," 뷰가 x축 방향으로 이동하면서 동시에 투명도가 변하는 애니메이션을 그룹으로 실행합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Animation.easeInOut(duration: 2.0)","position":{"start":{"line":112,"column":69,"offset":3200},"end":{"line":112,"column":105,"offset":3236}}}],"position":{"start":{"line":112,"column":69,"offset":3200},"end":{"line":112,"column":105,"offset":3236}}},"children":"Animation.easeInOut(duration: 2.0)"}}],"를 사용하여 애니메이션을 정의한 후, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"withAnimation","position":{"start":{"line":112,"column":126,"offset":3257},"end":{"line":112,"column":141,"offset":3272}}}],"position":{"start":{"line":112,"column":126,"offset":3257},"end":{"line":112,"column":141,"offset":3272}}},"children":"withAnimation"}}]," 블록 내에서 두 상태 변화를 동시에 적용했습니다."]}],"\n",["$","h3",null,{"id":"86d4988b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제: 크기, 색상, 회전 변화의 복합 그룹 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 크기, 색상, 회전 변화를 동시에 적용하는 복합 그룹 애니메이션 예제입니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var scale: CGFloat = 1.0\n    @State private var color: Color = .blue\n    @State private var rotation: Double = 0.0\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            Circle()\n                .fill(color)\n                .frame(width: 100, height: 100)\n                .scaleEffect(scale)\n                .rotationEffect(.degrees(rotation))\n                .onAppear {\n                    let animation = Animation.easeInOut(duration: 2.0)\n                    withAnimation(animation) {\n                        scale = 2.0\n                        color = .red\n                        rotation = 360.0\n                    }\n                }\n\n            Spacer()\n        }\n    }\n}\n"}],"position":{"start":{"line":118,"column":1,"offset":3386},"end":{"line":148,"column":4,"offset":4167}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var scale: CGFloat = 1.0\n    @State private var color: Color = .blue\n    @State private var rotation: Double = 0.0\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            Circle()\n                .fill(color)\n                .frame(width: 100, height: 100)\n                .scaleEffect(scale)\n                .rotationEffect(.degrees(rotation))\n                .onAppear {\n                    let animation = Animation.easeInOut(duration: 2.0)\n                    withAnimation(animation) {\n                        scale = 2.0\n                        color = .red\n                        rotation = 360.0\n                    }\n                }\n\n            Spacer()\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Circle","position":{"start":{"line":150,"column":8,"offset":4176},"end":{"line":150,"column":16,"offset":4184}}}],"position":{"start":{"line":150,"column":8,"offset":4176},"end":{"line":150,"column":16,"offset":4184}}},"children":"Circle"}}]," 뷰가 크기, 색상, 회전을 동시에 변화시키는 애니메이션을 그룹으로 실행합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Animation.easeInOut(duration: 2.0)","position":{"start":{"line":150,"column":61,"offset":4229},"end":{"line":150,"column":97,"offset":4265}}}],"position":{"start":{"line":150,"column":61,"offset":4229},"end":{"line":150,"column":97,"offset":4265}}},"children":"Animation.easeInOut(duration: 2.0)"}}],"를 사용하여 애니메이션을 정의한 후, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"withAnimation","position":{"start":{"line":150,"column":118,"offset":4286},"end":{"line":150,"column":133,"offset":4301}}}],"position":{"start":{"line":150,"column":118,"offset":4286},"end":{"line":150,"column":133,"offset":4301}}},"children":"withAnimation"}}]," 블록 내에서 세 가지 상태 변화를 동시에 적용했습니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI를 사용하면 애니메이션을 반복하거나 여러 애니메이션을 그룹으로 묶어 동시에 실행하는 기능을 손쉽게 구현할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".repeatCount()","position":{"start":{"line":154,"column":75,"offset":4415},"end":{"line":154,"column":91,"offset":4431}}}],"position":{"start":{"line":154,"column":75,"offset":4415},"end":{"line":154,"column":91,"offset":4431}}},"children":".repeatCount()"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".repeatForever()","position":{"start":{"line":154,"column":93,"offset":4433},"end":{"line":154,"column":111,"offset":4451}}}],"position":{"start":{"line":154,"column":93,"offset":4433},"end":{"line":154,"column":111,"offset":4451}}},"children":".repeatForever()"}}]," modifier를 사용하여 애니메이션을 반복하거나 무한 루프로 실행할 수 있으며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Animation","position":{"start":{"line":154,"column":158,"offset":4498},"end":{"line":154,"column":169,"offset":4509}}}],"position":{"start":{"line":154,"column":158,"offset":4498},"end":{"line":154,"column":169,"offset":4509}}},"children":"Animation"}}]," 구조체를 사용하여 다양한 애니메이션을 그룹으로 묶어 동시에 실행할 수 있습니다. 이러한 기능을 적절히 활용하면 사용자 경험을 더욱 향상시키고, 인터페이스를 동적이고 매력적으로 만들 수 있습니다. SwiftUI의 강력한 애니메이션 기능을 잘 이해하고 활용하여, 보다 창의적이고 흥미로운 애플리케이션을 만들어 보세요."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI 반복 및 그룹 애니메이션: 애니메이션을 반복, 무한 루프, 애니메이션을 그룹 실행","toc":[{"tagName":"h2","title":"반복 및 그룹 애니메이션: 애니메이션을 반복하거나 무한 루프로 실행하는 방법과 여러 애니메이션을 그룹으로 묶어 동시에 실행하는 방법","id":"58e7ad4f"},{"tagName":"h2","title":"반복 애니메이션","id":"3c2386c3"},{"tagName":"h3","title":".repeatCount()를 사용한 반복 애니메이션","id":"d54cbcab"},{"tagName":"h3","title":".repeatForever()를 사용한 무한 루프 애니메이션","id":"581c83c8"},{"tagName":"h2","title":"그룹 애니메이션","id":"6db8d33c"},{"tagName":"h3","title":"예제: 위치와 투명도 변화의 그룹 애니메이션","id":"c398f8f9"},{"tagName":"h3","title":"예제: 크기, 색상, 회전 변화의 복합 그룹 애니메이션","id":"86d4988b"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
