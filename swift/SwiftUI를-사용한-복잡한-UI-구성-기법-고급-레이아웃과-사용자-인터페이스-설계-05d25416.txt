1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-UI-%EA%B5%AC%EC%84%B1-%EA%B8%B0%EB%B2%95-%EA%B3%A0%EA%B8%89-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83%EA%B3%BC-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EC%84%A4%EA%B3%84-05d25416","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI를-사용한-복잡한-UI-구성-기법-고급-레이아웃과-사용자-인터페이스-설계-05d25416\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-UI-%EA%B5%AC%EC%84%B1-%EA%B8%B0%EB%B2%95-%EA%B3%A0%EA%B8%89-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83%EA%B3%BC-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EC%84%A4%EA%B3%84-05d25416","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI를-사용한-복잡한-UI-구성-기법-고급-레이아웃과-사용자-인터페이스-설계-05d25416\"}"},"styles":[]}],"segment":["slug","SwiftUI%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-UI-%EA%B5%AC%EC%84%B1-%EA%B8%B0%EB%B2%95-%EA%B3%A0%EA%B8%89-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83%EA%B3%BC-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EC%84%A4%EA%B3%84-05d25416","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI를 사용한 복잡한 UI 구성 기법: 고급 레이아웃과 사용자 인터페이스 설계. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"SwiftUI를 사용한 복잡한 UI 구성 기법에 대해 알아보겠습니다. 고급 레이아웃과 사용자 인터페이스 설계에 초점을 맞춘 본 가이드에서는 다양한 기법과 도구를 통해 복잡한 UI 요소들을 효과적으로 구현하는 방법을 설명합니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,사용자 인터페이스,레이아웃,설계"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-UI-%EA%B5%AC%EC%84%B1-%EA%B8%B0%EB%B2%95-%EA%B3%A0%EA%B8%89-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83%EA%B3%BC-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EC%84%A4%EA%B3%84-05d25416"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI를 사용한 복잡한 UI 구성 기법: 고급 레이아웃과 사용자 인터페이스 설계. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI를 사용한 복잡한 UI 구성 기법: 고급 레이아웃과 사용자 인터페이스 설계. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"SwiftUI를 사용한 복잡한 UI 구성 기법에 대해 알아보겠습니다. 고급 레이아웃과 사용자 인터페이스 설계에 초점을 맞춘 본 가이드에서는 다양한 기법과 도구를 통해 복잡한 UI 요소들을 효과적으로 구현하는 방법을 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-UI-%EA%B5%AC%EC%84%B1-%EA%B8%B0%EB%B2%95-%EA%B3%A0%EA%B8%89-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83%EA%B3%BC-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EC%84%A4%EA%B3%84-05d25416"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI를 사용한 복잡한 UI 구성 기법: 고급 레이아웃과 사용자 인터페이스 설계. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"SwiftUI를 사용한 복잡한 UI 구성 기법에 대해 알아보겠습니다. 고급 레이아웃과 사용자 인터페이스 설계에 초점을 맞춘 본 가이드에서는 다양한 기법과 도구를 통해 복잡한 UI 요소들을 효과적으로 구현하는 방법을 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI를 사용한 복잡한 UI 구성 기법: 고급 레이아웃과 사용자 인터페이스 설계."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI를 사용한 복잡한 UI 구성 기법: 고급 레이아웃과 사용자 인터페이스 설계."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-22"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"43a8ca7b","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI를 사용한 복잡한 UI 구성 기법: 고급 레이아웃과 사용자 인터페이스 설계"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 Apple에서 제공하는 차세대 UI 프레임워크로, 간결하고 직관적인 코드를 통해 다양한 사용자 인터페이스를 설계할 수 있습니다. 이번 글에서는 SwiftUI를 활용하여 복잡한 UI를 구성하는 고급 기법에 대해 다루겠습니다. 고급 레이아웃과 사용자 인터페이스 설계에 필요한 다양한 기술과 도구를 소개합니다."}],"\n",["$","h2",null,{"id":"d1fc248a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"뷰 컴포지션 (View Composition)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["복잡한 UI를 효과적으로 관리하기 위해 가장 중요한 요소 중 하나는 '뷰 컴포지션'입니다. SwiftUI에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"View","position":{"start":{"line":8,"column":63,"offset":326},"end":{"line":8,"column":69,"offset":332}}}],"position":{"start":{"line":8,"column":63,"offset":326},"end":{"line":8,"column":69,"offset":332}}},"children":"View"}}]," 프로토콜을 채택한 여러 개의 뷰를 조합하여 하나의 복잡한 화면을 구성할 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    var body: some View {\n        VStack {\n            HeaderView()\n            ContentAreaView()\n            FooterView()\n        }\n    }\n}\n\nstruct HeaderView: View {\n    var body: some View {\n        Text(\"Header\")\n            .font(.largeTitle)\n            .padding()\n    }\n}\n\nstruct ContentAreaView: View {\n    var body: some View {\n        Text(\"Content Area\")\n            .font(.body)\n    }\n}\n\nstruct FooterView: View {\n    var body: some View {\n        Text(\"Footer\")\n            .font(.footnote)\n            .padding()\n    }\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":382},"end":{"line":43,"column":4,"offset":956}}},"children":"struct ContentView: View {\n    var body: some View {\n        VStack {\n            HeaderView()\n            ContentAreaView()\n            FooterView()\n        }\n    }\n}\n\nstruct HeaderView: View {\n    var body: some View {\n        Text(\"Header\")\n            .font(.largeTitle)\n            .padding()\n    }\n}\n\nstruct ContentAreaView: View {\n    var body: some View {\n        Text(\"Content Area\")\n            .font(.body)\n    }\n}\n\nstruct FooterView: View {\n    var body: some View {\n        Text(\"Footer\")\n            .font(.footnote)\n            .padding()\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ContentView","position":{"start":{"line":45,"column":7,"offset":964},"end":{"line":45,"column":20,"offset":977}}}],"position":{"start":{"line":45,"column":7,"offset":964},"end":{"line":45,"column":20,"offset":977}}},"children":"ContentView"}}],"라는 메인 뷰를 생성하고, 이를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"VStack","position":{"start":{"line":45,"column":38,"offset":995},"end":{"line":45,"column":46,"offset":1003}}}],"position":{"start":{"line":45,"column":38,"offset":995},"end":{"line":45,"column":46,"offset":1003}}},"children":"VStack"}}],"으로 구성하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"HeaderView","position":{"start":{"line":45,"column":54,"offset":1011},"end":{"line":45,"column":66,"offset":1023}}}],"position":{"start":{"line":45,"column":54,"offset":1011},"end":{"line":45,"column":66,"offset":1023}}},"children":"HeaderView"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ContentAreaView","position":{"start":{"line":45,"column":68,"offset":1025},"end":{"line":45,"column":85,"offset":1042}}}],"position":{"start":{"line":45,"column":68,"offset":1025},"end":{"line":45,"column":85,"offset":1042}}},"children":"ContentAreaView"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FooterView","position":{"start":{"line":45,"column":87,"offset":1044},"end":{"line":45,"column":99,"offset":1056}}}],"position":{"start":{"line":45,"column":87,"offset":1044},"end":{"line":45,"column":99,"offset":1056}}},"children":"FooterView"}}],"를 각각 위치시켰습니다. 이처럼 각 부분을 독립적인 뷰로 분리함으로써 코드의 가독성과 재사용성을 높일 수 있습니다."]}],"\n",["$","h2",null,{"id":"2d601594","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"스택과 그리드 레이아웃"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"HStack","position":{"start":{"line":49,"column":12,"offset":1150},"end":{"line":49,"column":20,"offset":1158}}}],"position":{"start":{"line":49,"column":12,"offset":1150},"end":{"line":49,"column":20,"offset":1158}}},"children":"HStack"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"VStack","position":{"start":{"line":49,"column":22,"offset":1160},"end":{"line":49,"column":30,"offset":1168}}}],"position":{"start":{"line":49,"column":22,"offset":1160},"end":{"line":49,"column":30,"offset":1168}}},"children":"VStack"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ZStack","position":{"start":{"line":49,"column":32,"offset":1170},"end":{"line":49,"column":40,"offset":1178}}}],"position":{"start":{"line":49,"column":32,"offset":1170},"end":{"line":49,"column":40,"offset":1178}}},"children":"ZStack"}}],"과 같은 스택 뷰를 사용하여 수평, 수직 및 겹치는 레이아웃을 간단히 구현할 수 있습니다. 또한, iOS 14 이상에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyVGrid","position":{"start":{"line":49,"column":108,"offset":1246},"end":{"line":49,"column":119,"offset":1257}}}],"position":{"start":{"line":49,"column":108,"offset":1246},"end":{"line":49,"column":119,"offset":1257}}},"children":"LazyVGrid"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHGrid","position":{"start":{"line":49,"column":121,"offset":1259},"end":{"line":49,"column":132,"offset":1270}}}],"position":{"start":{"line":49,"column":121,"offset":1259},"end":{"line":49,"column":132,"offset":1270}}},"children":"LazyHGrid"}}],"를 사용하여 그리드 형태의 레이아웃을 쉽게 만들 수 있습니다."]}],"\n",["$","h3",null,{"id":"2c9fa7dd","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"VStack과 HStack"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"VStack","position":{"start":{"line":53,"column":1,"offset":1326},"end":{"line":53,"column":9,"offset":1334}}}],"position":{"start":{"line":53,"column":1,"offset":1326},"end":{"line":53,"column":9,"offset":1334}}},"children":"VStack"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"HStack","position":{"start":{"line":53,"column":11,"offset":1336},"end":{"line":53,"column":19,"offset":1344}}}],"position":{"start":{"line":53,"column":11,"offset":1336},"end":{"line":53,"column":19,"offset":1344}}},"children":"HStack"}}],"을 사용하면 수직 및 수평 레이아웃을 쉽게 구성할 수 있습니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct StacksExampleView: View {\n    var body: some View {\n        VStack {\n            HStack {\n                Text(\"Left\")\n                Spacer()\n                Text(\"Right\")\n            }\n            .padding()\n\n            Text(\"Center\")\n                .padding()\n        }\n    }\n}\n"}],"position":{"start":{"line":55,"column":1,"offset":1381},"end":{"line":71,"column":4,"offset":1684}}},"children":"struct StacksExampleView: View {\n    var body: some View {\n        VStack {\n            HStack {\n                Text(\"Left\")\n                Spacer()\n                Text(\"Right\")\n            }\n            .padding()\n\n            Text(\"Center\")\n                .padding()\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"VStack","position":{"start":{"line":73,"column":7,"offset":1692},"end":{"line":73,"column":15,"offset":1700}}}],"position":{"start":{"line":73,"column":7,"offset":1692},"end":{"line":73,"column":15,"offset":1700}}},"children":"VStack"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"HStack","position":{"start":{"line":73,"column":17,"offset":1702},"end":{"line":73,"column":25,"offset":1710}}}],"position":{"start":{"line":73,"column":17,"offset":1702},"end":{"line":73,"column":25,"offset":1710}}},"children":"HStack"}}],"을 혼용하여 복잡한 레이아웃을 구성하는 방법을 보여줍니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Spacer","position":{"start":{"line":73,"column":58,"offset":1743},"end":{"line":73,"column":66,"offset":1751}}}],"position":{"start":{"line":73,"column":58,"offset":1743},"end":{"line":73,"column":66,"offset":1751}}},"children":"Spacer"}}],"를 사용하여 두 텍스트 사이의 공간을 확보합니다."]}],"\n",["$","h3",null,{"id":"7542799a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"LazyVGrid와 LazyHGrid"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["복잡한 그리드 레이아웃은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyVGrid","position":{"start":{"line":77,"column":15,"offset":1820},"end":{"line":77,"column":26,"offset":1831}}}],"position":{"start":{"line":77,"column":15,"offset":1820},"end":{"line":77,"column":26,"offset":1831}}},"children":"LazyVGrid"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHGrid","position":{"start":{"line":77,"column":28,"offset":1833},"end":{"line":77,"column":39,"offset":1844}}}],"position":{"start":{"line":77,"column":28,"offset":1833},"end":{"line":77,"column":39,"offset":1844}}},"children":"LazyHGrid"}}],"를 사용하여 더 쉽게 구현할 수 있습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct GridExampleView: View {\n    let columns = [\n        GridItem(.flexible()),\n        GridItem(.flexible()),\n        GridItem(.flexible())\n    ]\n\n    var body: some View {\n        ScrollView {\n            LazyVGrid(columns: columns) {\n                ForEach(0..<50) { index in\n                    Text(\"Item \\(index)\")\n                        .padding()\n                        .background(Color.gray.opacity(0.2))\n                }\n            }\n            .padding()\n        }\n    }\n}\n"}],"position":{"start":{"line":79,"column":1,"offset":1869},"end":{"line":100,"column":4,"offset":2374}}},"children":"struct GridExampleView: View {\n    let columns = [\n        GridItem(.flexible()),\n        GridItem(.flexible()),\n        GridItem(.flexible())\n    ]\n\n    var body: some View {\n        ScrollView {\n            LazyVGrid(columns: columns) {\n                ForEach(0..<50) { index in\n                    Text(\"Item \\(index)\")\n                        .padding()\n                        .background(Color.gray.opacity(0.2))\n                }\n            }\n            .padding()\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyVGrid","position":{"start":{"line":102,"column":9,"offset":2384},"end":{"line":102,"column":20,"offset":2395}}}],"position":{"start":{"line":102,"column":9,"offset":2384},"end":{"line":102,"column":20,"offset":2395}}},"children":"LazyVGrid"}}],"를 사용하여 3열의 그리드를 만들었습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ForEach","position":{"start":{"line":102,"column":44,"offset":2419},"end":{"line":102,"column":53,"offset":2428}}}],"position":{"start":{"line":102,"column":44,"offset":2419},"end":{"line":102,"column":53,"offset":2428}}},"children":"ForEach"}}]," 문을 사용하여 반복적으로 아이템을 배치하였으며, 모든 아이템은 스크롤 가능한 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ScrollView","position":{"start":{"line":102,"column":97,"offset":2472},"end":{"line":102,"column":109,"offset":2484}}}],"position":{"start":{"line":102,"column":97,"offset":2472},"end":{"line":102,"column":109,"offset":2484}}},"children":"ScrollView"}}]," 내에 있습니다."]}],"\n",["$","h2",null,{"id":"929233c6","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"사용자 정의 뷰 모디파이어 (View Modifiers)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"뷰 모디파이어는 기본 제공되는 속성 외에도 커스터마이징할 수 있으며, 이를 통해 복잡한 스타일링을 간편하게 처리할 수 있습니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"extension View {\n    func customStyle() -> some View {\n        self\n            .font(.headline)\n            .padding()\n            .background(Color.blue)\n            .cornerRadius(10)\n    }\n}\n\nstruct CustomModifierView: View {\n    var body: some View {\n        Text(\"Custom Styled Text\")\n            .customStyle()\n    }\n}\n"}],"position":{"start":{"line":108,"column":1,"offset":2604},"end":{"line":125,"column":4,"offset":2941}}},"children":"extension View {\n    func customStyle() -> some View {\n        self\n            .font(.headline)\n            .padding()\n            .background(Color.blue)\n            .cornerRadius(10)\n    }\n}\n\nstruct CustomModifierView: View {\n    var body: some View {\n        Text(\"Custom Styled Text\")\n            .customStyle()\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"View","position":{"start":{"line":127,"column":6,"offset":2948},"end":{"line":127,"column":12,"offset":2954}}}],"position":{"start":{"line":127,"column":6,"offset":2948},"end":{"line":127,"column":12,"offset":2954}}},"children":"View"}}],"의 확장을 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"customStyle","position":{"start":{"line":127,"column":21,"offset":2963},"end":{"line":127,"column":34,"offset":2976}}}],"position":{"start":{"line":127,"column":21,"offset":2963},"end":{"line":127,"column":34,"offset":2976}}},"children":"customStyle"}}],"라는 사용자 정의 모디파이어를 생성하였습니다. 이 모디파이어는 텍스트의 스타일을 커스터마이징하여, 뷰의 재사용성을 높입니다."]}],"\n",["$","h2",null,{"id":"07ef23ce","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"애니메이션과 트랜지션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI에서는 애니메이션과 트랜지션을 쉽게 구현할 수 있어, 사용자 경험을 한층 더 향상시킬 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"withAnimation","position":{"start":{"line":131,"column":64,"offset":3126},"end":{"line":131,"column":79,"offset":3141}}}],"position":{"start":{"line":131,"column":64,"offset":3126},"end":{"line":131,"column":79,"offset":3141}}},"children":"withAnimation"}}]," 블록을 사용하여 상태 변경 시 애니메이션을 적용할 수 있습니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct AnimationExampleView: View {\n    @State private var isAnimating = false\n\n    var body: some View {\n        VStack {\n            Button(\"Animate\") {\n                withAnimation {\n                    self.isAnimating.toggle()\n                }\n            }\n\n            if isAnimating {\n                Text(\"Animation Active\")\n                    .transition(.slide)\n            } else {\n                Text(\"Not Animated\")\n                    .transition(.opacity)\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":133,"column":1,"offset":3179},"end":{"line":155,"column":4,"offset":3699}}},"children":"struct AnimationExampleView: View {\n    @State private var isAnimating = false\n\n    var body: some View {\n        VStack {\n            Button(\"Animate\") {\n                withAnimation {\n                    self.isAnimating.toggle()\n                }\n            }\n\n            if isAnimating {\n                Text(\"Animation Active\")\n                    .transition(.slide)\n            } else {\n                Text(\"Not Animated\")\n                    .transition(.opacity)\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제는 버튼 클릭 시 텍스트 뷰가 슬라이드하거나 페이드되는 트랜지션을 보여줍니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"withAnimation","position":{"start":{"line":157,"column":49,"offset":3749},"end":{"line":157,"column":64,"offset":3764}}}],"position":{"start":{"line":157,"column":49,"offset":3749},"end":{"line":157,"column":64,"offset":3764}}},"children":"withAnimation"}}]," 블록 내에서 상태 변경을 트리거함으로써 애니메이션을 적용하였습니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI를 사용하여 복잡한 UI를 구성하는 것은 처음에는 난해하게 보일 수 있지만, 다양한 레이아웃 도구와 기법을 활용하면 사용자에게 직관적이고 아름다운 인터페이스를 제공할 수 있습니다. 뷰 컴포지션, 스택과 그리드 레이아웃, 사용자 정의 뷰 모디파이어, 애니메이션과 트랜지션 등의 고급 기법을 적절히 활용하여 더욱 효율적이고 유연한 UI를 설계해 보세요."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI를 사용한 복잡한 UI 구성 기법: 고급 레이아웃과 사용자 인터페이스 설계.","toc":[{"tagName":"h1","title":"SwiftUI를 사용한 복잡한 UI 구성 기법: 고급 레이아웃과 사용자 인터페이스 설계","id":"43a8ca7b"},{"tagName":"h2","title":"뷰 컴포지션 (View Composition)","id":"d1fc248a"},{"tagName":"h2","title":"스택과 그리드 레이아웃","id":"2d601594"},{"tagName":"h3","title":"VStack과 HStack","id":"2c9fa7dd"},{"tagName":"h3","title":"LazyVGrid와 LazyHGrid","id":"7542799a"},{"tagName":"h2","title":"사용자 정의 뷰 모디파이어 (View Modifiers)","id":"929233c6"},{"tagName":"h2","title":"애니메이션과 트랜지션","id":"07ef23ce"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
