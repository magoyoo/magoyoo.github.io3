1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["algorithm",{"children":[["slug","%EC%B9%B4%EB%8D%B0%EC%9D%B8Kadanes-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EA%B3%BC-%EC%B5%9C%EB%8C%80-%EB%B6%80%EB%B6%84-%EB%B0%B0%EC%97%B4-%EB%AC%B8%EC%A0%9C-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95-5315e218","d"],{"children":["__PAGE__?{\"slug\":\"카데인Kadanes-알고리즘과-최대-부분-배열-문제-효율적인-해결-방법-5315e218\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children",["slug","%EC%B9%B4%EB%8D%B0%EC%9D%B8Kadanes-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EA%B3%BC-%EC%B5%9C%EB%8C%80-%EB%B6%80%EB%B6%84-%EB%B0%B0%EC%97%B4-%EB%AC%B8%EC%A0%9C-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95-5315e218","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"카데인Kadanes-알고리즘과-최대-부분-배열-문제-효율적인-해결-방법-5315e218\"}"},"styles":[]}],"segment":["slug","%EC%B9%B4%EB%8D%B0%EC%9D%B8Kadanes-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EA%B3%BC-%EC%B5%9C%EB%8C%80-%EB%B6%80%EB%B6%84-%EB%B0%B0%EC%97%B4-%EB%AC%B8%EC%A0%9C-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95-5315e218","d"]},"styles":[]}],"segment":"algorithm"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"카데인(Kadane's) 알고리즘과 최대 부분 배열 문제: 효율적인 해결 방법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"카데인(Kadane's) 알고리즘은 최대 부분 배열 문제를 해결하는 데 사용되는 알고리즘 중 하나입니다. 이 글에서는 카데인 알고리즘의 원리, 구현 방법 및 효율성에 대해 설명하고, 이를 통해 최대 부분 배열 문제를 어떻게 해결할 수 있는지 알아봅니다."}],["$","meta","3",{"name":"keywords","content":"Kadane's Algorithm,Maximum Subarray,Algorithm,Data Structures"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/algorithm/%EC%B9%B4%EB%8D%B0%EC%9D%B8Kadanes-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EA%B3%BC-%EC%B5%9C%EB%8C%80-%EB%B6%80%EB%B6%84-%EB%B0%B0%EC%97%B4-%EB%AC%B8%EC%A0%9C-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95-5315e218"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"카데인(Kadane's) 알고리즘과 최대 부분 배열 문제: 효율적인 해결 방법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"카데인(Kadane's) 알고리즘과 최대 부분 배열 문제: 효율적인 해결 방법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"카데인(Kadane's) 알고리즘은 최대 부분 배열 문제를 해결하는 데 사용되는 알고리즘 중 하나입니다. 이 글에서는 카데인 알고리즘의 원리, 구현 방법 및 효율성에 대해 설명하고, 이를 통해 최대 부분 배열 문제를 어떻게 해결할 수 있는지 알아봅니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/algorithm/%EC%B9%B4%EB%8D%B0%EC%9D%B8Kadanes-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EA%B3%BC-%EC%B5%9C%EB%8C%80-%EB%B6%80%EB%B6%84-%EB%B0%B0%EC%97%B4-%EB%AC%B8%EC%A0%9C-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95-5315e218"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/algorithmImg.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"카데인(Kadane's) 알고리즘과 최대 부분 배열 문제: 효율적인 해결 방법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"카데인(Kadane's) 알고리즘은 최대 부분 배열 문제를 해결하는 데 사용되는 알고리즘 중 하나입니다. 이 글에서는 카데인 알고리즘의 원리, 구현 방법 및 효율성에 대해 설명하고, 이를 통해 최대 부분 배열 문제를 어떻게 해결할 수 있는지 알아봅니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/algorithmImg.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/algorithmImg.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"카데인(Kadane's) 알고리즘과 최대 부분 배열 문제: 효율적인 해결 방법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"카데인(Kadane's) 알고리즘과 최대 부분 배열 문제: 효율적인 해결 방법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-05"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"b569198b","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"카데인(Kadane's) 알고리즘과 최대 부분 배열 문제: 효율적인 해결 방법"}],"\n",["$","h2",null,{"id":"fa255f0c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"소개"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"카데인(Kadane's) 알고리즘은 컴퓨터 과학에서 매우 유명한 알고리즘으로, 최대 부분 배열 문제를 효율적으로 해결하는 데 사용됩니다. 최대 부분 배열 문제는 주어진 배열에서 연속된 원소들의 합이 최대가 되는 부분 배열을 찾는 문제로, 다양한 분야에서 응용될 수 있습니다. 이번 글에서는 카데인 알고리즘이 무엇인지, 어떻게 작동하는지, 그리고 이를 구현하는 방법에 대해 자세히 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"fc7043c2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"최대 부분 배열 문제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["최대 부분 배열 문제(Maximum Subarray Problem)는 배열에서 연속된 부분 배열의 합이 최대가 되는 부분 배열을 찾는 문제입니다. 이 문제는 다음과 같이 정의될 수 있습니다. 주어진 배열 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"arr","position":{"start":{"line":8,"column":115,"offset":405},"end":{"line":8,"column":120,"offset":410}}}],"position":{"start":{"line":8,"column":115,"offset":405},"end":{"line":8,"column":120,"offset":410}}},"children":"arr"}}],"에서 부분 배열 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"arr[i:j]","position":{"start":{"line":8,"column":129,"offset":419},"end":{"line":8,"column":139,"offset":429}}}],"position":{"start":{"line":8,"column":129,"offset":419},"end":{"line":8,"column":139,"offset":429}}},"children":"arr[i:j]"}}]," (i ≤ j)의 합을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Sum(arr[i:j])","position":{"start":{"line":8,"column":152,"offset":442},"end":{"line":8,"column":167,"offset":457}}}],"position":{"start":{"line":8,"column":152,"offset":442},"end":{"line":8,"column":167,"offset":457}}},"children":"Sum(arr[i:j])"}}],"라고 할 때, 최대 부분 배열은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Sum(arr[k:l])","position":{"start":{"line":8,"column":185,"offset":475},"end":{"line":8,"column":200,"offset":490}}}],"position":{"start":{"line":8,"column":185,"offset":475},"end":{"line":8,"column":200,"offset":490}}},"children":"Sum(arr[k:l])"}}],"이 최대가 되는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"arr[k:l]","position":{"start":{"line":8,"column":209,"offset":499},"end":{"line":8,"column":219,"offset":509}}}],"position":{"start":{"line":8,"column":209,"offset":499},"end":{"line":8,"column":219,"offset":509}}},"children":"arr[k:l]"}}],"입니다."]}],"\n",["$","h2",null,{"id":"e501f046","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"카데인 알고리즘의 원리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"카데인 알고리즘은 동적 프로그래밍(dynamic programming) 기법을 사용하여 최대 부분 배열 문제를 해결합니다. 이 알고리즘의 핵심 아이디어는 현재 위치에서 종료되는 최대 부분 배열 합을 계산하는 것입니다. 이러한 계산을 통해 우리는 다음 위치를 고려할 때, 현재까지의 최대 부분 배열 합을 기반으로 새로운 부분 배열을 만들 수 있습니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"카데인 알고리즘의 주요 단계는 다음과 같습니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"현재 위치에서의 최대 부분 배열 합","position":{"start":{"line":14,"column":4,"offset":758},"end":{"line":14,"column":25,"offset":779}}}],"position":{"start":{"line":14,"column":4,"offset":758},"end":{"line":14,"column":25,"offset":779}}},"children":"현재 위치에서의 최대 부분 배열 합"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"전체 최대 부분 배열 합","position":{"start":{"line":14,"column":27,"offset":781},"end":{"line":14,"column":42,"offset":796}}}],"position":{"start":{"line":14,"column":27,"offset":781},"end":{"line":14,"column":42,"offset":796}}},"children":"전체 최대 부분 배열 합"}}],"을 저장할 변수를 초기화합니다."]}],"\n",["$","li","li-1",{"children":["배열을 한 번 순회하며 각 원소에 대해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"현재 위치에서의 최대 부분 배열 합","position":{"start":{"line":15,"column":26,"offset":839},"end":{"line":15,"column":47,"offset":860}}}],"position":{"start":{"line":15,"column":26,"offset":839},"end":{"line":15,"column":47,"offset":860}}},"children":"현재 위치에서의 최대 부분 배열 합"}}],"을 업데이트합니다."]}],"\n",["$","li","li-2",{"children":["새로 계산된 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"현재 위치에서의 최대 부분 배열 합","position":{"start":{"line":16,"column":11,"offset":881},"end":{"line":16,"column":32,"offset":902}}}],"position":{"start":{"line":16,"column":11,"offset":881},"end":{"line":16,"column":32,"offset":902}}},"children":"현재 위치에서의 최대 부분 배열 합"}}],"이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"전체 최대 부분 배열 합","position":{"start":{"line":16,"column":34,"offset":904},"end":{"line":16,"column":49,"offset":919}}}],"position":{"start":{"line":16,"column":34,"offset":904},"end":{"line":16,"column":49,"offset":919}}},"children":"전체 최대 부분 배열 합"}}],"보다 크다면 이를 업데이트합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"8efc7ec3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"카데인 알고리즘 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 카데인 알고리즘을 파이썬으로 구현해 보겠습니다. 다음 코드는 기본적인 구현 예제입니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"def kadane_algorithm(arr):\n    current_max = arr[0]\n    global_max = arr[0]\n    \n    for num in arr[1:]:\n        current_max = max(num, current_max + num)\n        global_max = max(global_max, current_max)\n    \n    return global_max\n\n# 예제 사용\narray = [-2, 1, -3, 4, -1, 2, 1, -5, 4]\nmax_sum = kadane_algorithm(array)\nprint(f\"최대 부분 배열 합은: {max_sum}\")\n"}],"position":{"start":{"line":21,"column":1,"offset":1007},"end":{"line":36,"column":4,"offset":1368}}},"children":"def kadane_algorithm(arr):\n    current_max = arr[0]\n    global_max = arr[0]\n    \n    for num in arr[1:]:\n        current_max = max(num, current_max + num)\n        global_max = max(global_max, current_max)\n    \n    return global_max\n\n# 예제 사용\narray = [-2, 1, -3, 4, -1, 2, 1, -5, 4]\nmax_sum = kadane_algorithm(array)\nprint(f\"최대 부분 배열 합은: {max_sum}\")\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 우리는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"current_max","position":{"start":{"line":38,"column":12,"offset":1381},"end":{"line":38,"column":25,"offset":1394}}}],"position":{"start":{"line":38,"column":12,"offset":1381},"end":{"line":38,"column":25,"offset":1394}}},"children":"current_max"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"global_max","position":{"start":{"line":38,"column":27,"offset":1396},"end":{"line":38,"column":39,"offset":1408}}}],"position":{"start":{"line":38,"column":27,"offset":1396},"end":{"line":38,"column":39,"offset":1408}}},"children":"global_max"}}],"를 초기화하고, 배열의 각 원소에 대해 반복문 내에서 값을 갱신합니다. 이렇게 하여 전체 배열을 한 번 순회할 때 최대 부분 배열 합을 구할 수 있습니다."]}],"\n",["$","h2",null,{"id":"b888f6f6","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"알고리즘의 시간 복잡도 분석"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"카데인 알고리즘은 배열을 한 번만 순회하므로, 시간 복잡도는 O(n)입니다. 이는 최대 부분 배열 문제를 해결하는 가장 효율적인 방법 중 하나입니다. 이전에는 분할 정복(divide and conquer) 방법을 사용한 O(n log n) 알고리즘도 있었으나, 카데인 알고리즘이 더욱 효율적입니다."}],"\n",["$","h2",null,{"id":"bd686787","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"응용 및 확장"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"카데인 알고리즘은 최대 부분 배열 문제 외에도 다양한 응용 분야가 있습니다. 예를 들어, 2차원 배열에서 최대 부분 합을 찾는 문제에서도 유사한 접근 방식을 사용할 수 있습니다. 또한, 금융 분야에서는 주가의 최대 상승 구간을 찾는 데 활용될 수 있습니다."}],"\n",["$","h3",null,{"id":"d5740426","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2차원 배열 확장"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"2차원 배열에서도 카데인 알고리즘을 확장하여 사용할 수 있습니다. 이 경우, 각 행에 대해 1차원 카데인 알고리즘을 적용하고, 행의 합을 계산하여 최대 부분 배열을 찾습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"def kadane_2d_algorithm(matrix):\n    def kadane(arr):\n        current_max = arr[0]\n        global_max = arr[0]\n        for num in arr[1:]:\n            current_max = max(num, current_max + num)\n            global_max = max(global_max, current_max)\n        return global_max\n\n    rows = len(matrix)\n    cols = len(matrix[0])\n    max_sum = float('-inf')\n\n    for left in range(cols):\n        temp = [0] * rows\n        for right in range(left, cols):\n            for i in range(rows):\n                temp[i] += matrix[right][i]\n            max_sum = max(max_sum, kadane(temp))\n    \n    return max_sum\n"}],"position":{"start":{"line":49,"column":1,"offset":1952},"end":{"line":71,"column":4,"offset":2563}}},"children":"def kadane_2d_algorithm(matrix):\n    def kadane(arr):\n        current_max = arr[0]\n        global_max = arr[0]\n        for num in arr[1:]:\n            current_max = max(num, current_max + num)\n            global_max = max(global_max, current_max)\n        return global_max\n\n    rows = len(matrix)\n    cols = len(matrix[0])\n    max_sum = float('-inf')\n\n    for left in range(cols):\n        temp = [0] * rows\n        for right in range(left, cols):\n            for i in range(rows):\n                temp[i] += matrix[right][i]\n            max_sum = max(max_sum, kadane(temp))\n    \n    return max_sum\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위 코드는 2차원 배열에서 최대 부분 합을 찾는 방법으로, 각 열의 합을 계산하고 이를 1차원 카데인 알고리즘에 적용합니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"카데인(Kadane's) 알고리즘은 최대 부분 배열 문제를 해결하는 강력하고 효율적인 방법입니다. 이 알고리즘은 O(n) 시간 복잡도로 문제를 해결할 수 있어 매우 효율적이며, 다양한 응용 가능성이 있습니다. 이를 통해 다양한 최적화 문제를 효율적으로 해결할 수 있습니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"카데인(Kadane's) 알고리즘과 최대 부분 배열 문제: 효율적인 해결 방법","toc":[{"tagName":"h1","title":"카데인(Kadane's) 알고리즘과 최대 부분 배열 문제: 효율적인 해결 방법","id":"b569198b"},{"tagName":"h2","title":"소개","id":"fa255f0c"},{"tagName":"h2","title":"최대 부분 배열 문제","id":"fc7043c2"},{"tagName":"h2","title":"카데인 알고리즘의 원리","id":"e501f046"},{"tagName":"h2","title":"카데인 알고리즘 구현","id":"8efc7ec3"},{"tagName":"h2","title":"알고리즘의 시간 복잡도 분석","id":"b888f6f6"},{"tagName":"h2","title":"응용 및 확장","id":"bd686787"},{"tagName":"h3","title":"2차원 배열 확장","id":"d5740426"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
