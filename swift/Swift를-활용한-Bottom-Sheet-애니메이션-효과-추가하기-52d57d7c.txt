1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-Bottom-Sheet-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%ED%9A%A8%EA%B3%BC-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0-52d57d7c","d"],{"children":["__PAGE__?{\"slug\":\"Swift를-활용한-Bottom-Sheet-애니메이션-효과-추가하기-52d57d7c\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-Bottom-Sheet-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%ED%9A%A8%EA%B3%BC-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0-52d57d7c","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift를-활용한-Bottom-Sheet-애니메이션-효과-추가하기-52d57d7c\"}"},"styles":[]}],"segment":["slug","Swift%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-Bottom-Sheet-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%ED%9A%A8%EA%B3%BC-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0-52d57d7c","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift를 활용한 Bottom Sheet 애니메이션 효과 추가하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 Swift를 활용하여 iOS 애플리케이션에서 Bottom Sheet 애니메이션 효과를 구현하는 방법을 설명합니다. 이 글에서 필요한 UIKit 요소와 Swift의 애니메이션 API를 사용하는 방법을 배우게 됩니다."}],["$","meta","3",{"name":"keywords","content":"Swift,iOS,애니메이션,UIKit"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-Bottom-Sheet-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%ED%9A%A8%EA%B3%BC-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0-52d57d7c"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift를 활용한 Bottom Sheet 애니메이션 효과 추가하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift를 활용한 Bottom Sheet 애니메이션 효과 추가하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 Swift를 활용하여 iOS 애플리케이션에서 Bottom Sheet 애니메이션 효과를 구현하는 방법을 설명합니다. 이 글에서 필요한 UIKit 요소와 Swift의 애니메이션 API를 사용하는 방법을 배우게 됩니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-Bottom-Sheet-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%ED%9A%A8%EA%B3%BC-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0-52d57d7c"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift를 활용한 Bottom Sheet 애니메이션 효과 추가하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 Swift를 활용하여 iOS 애플리케이션에서 Bottom Sheet 애니메이션 효과를 구현하는 방법을 설명합니다. 이 글에서 필요한 UIKit 요소와 Swift의 애니메이션 API를 사용하는 방법을 배우게 됩니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
12:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
13:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T7d1,class ViewController: UIViewController {
    var bottomSheetView: UIView!
    var bottomSheetHeight: CGFloat = 300
    var bottomSheetTopConstraint: NSLayoutConstraint!

    override func viewDidLoad() {
        super.viewDidLoad()
        setupBottomSheet()
        setupGesture() // 제스처 설정 함수 추가
    }

    func setupBottomSheet() {
        bottomSheetView = UIView()
        bottomSheetView.backgroundColor = .white
        bottomSheetView.layer.cornerRadius = 16
        bottomSheetView.translatesAutoresizingMaskIntoConstraints = false
        view.addSubview(bottomSheetView)

        NSLayoutConstraint.activate([
            bottomSheetView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            bottomSheetView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            bottomSheetView.heightAnchor.constraint(equalToConstant: bottomSheetHeight),
        ])
        bottomSheetTopConstraint = bottomSheetView.topAnchor.constraint(equalTo: view.bottomAnchor)
        bottomSheetTopConstraint.isActive = true
    }

    func setupGesture() {
        let panGesture = UIPanGestureRecognizer(target: self, action: #selector(handlePanGesture(_:)))
        bottomSheetView.addGestureRecognizer(panGesture)
    }

    @objc func handlePanGesture(_ recognizer: UIPanGestureRecognizer) {
        let translation = recognizer.translation(in: view)
        if recognizer.state == .changed {
            bottomSheetTopConstraint.constant = -translation.y
        } else if recognizer.state == .ended {
            if translation.y < bottomSheetHeight / 2 {
                animateBottomSheet(to: 0)
            } else {
                animateBottomSheet(to: bottomSheetHeight)
            }
        }
    }

    func animateBottomSheet(to constant: CGFloat) {
        UIViewPropertyAnimator(duration: 0.3, dampingRatio: 1.0) {
            self.bottomSheetTopConstraint.constant = constant
            self.view.layoutIfNeeded()
        }.startAnimation()
    }
}
f:T7d1,class ViewController: UIViewController {
    var bottomSheetView: UIView!
    var bottomSheetHeight: CGFloat = 300
    var bottomSheetTopConstraint: NSLayoutConstraint!

    override func viewDidLoad() {
        super.viewDidLoad()
        setupBottomSheet()
        setupGesture() // 제스처 설정 함수 추가
    }

    func setupBottomSheet() {
        bottomSheetView = UIView()
        bottomSheetView.backgroundColor = .white
        bottomSheetView.layer.cornerRadius = 16
        bottomSheetView.translatesAutoresizingMaskIntoConstraints = false
        view.addSubview(bottomSheetView)

        NSLayoutConstraint.activate([
            bottomSheetView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            bottomSheetView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            bottomSheetView.heightAnchor.constraint(equalToConstant: bottomSheetHeight),
        ])
        bottomSheetTopConstraint = bottomSheetView.topAnchor.constraint(equalTo: view.bottomAnchor)
        bottomSheetTopConstraint.isActive = true
    }

    func setupGesture() {
        let panGesture = UIPanGestureRecognizer(target: self, action: #selector(handlePanGesture(_:)))
        bottomSheetView.addGestureRecognizer(panGesture)
    }

    @objc func handlePanGesture(_ recognizer: UIPanGestureRecognizer) {
        let translation = recognizer.translation(in: view)
        if recognizer.state == .changed {
            bottomSheetTopConstraint.constant = -translation.y
        } else if recognizer.state == .ended {
            if translation.y < bottomSheetHeight / 2 {
                animateBottomSheet(to: 0)
            } else {
                animateBottomSheet(to: bottomSheetHeight)
            }
        }
    }

    func animateBottomSheet(to constant: CGFloat) {
        UIViewPropertyAnimator(duration: 0.3, dampingRatio: 1.0) {
            self.bottomSheetTopConstraint.constant = constant
            self.view.layoutIfNeeded()
        }.startAnimation()
    }
}
10:T753,class ViewController: UIViewController {
    var bottomSheetView: UIView!
    var bottomSheetHeight: CGFloat = 300
    var bottomSheetTopConstraint: NSLayoutConstraint!
    var dimmingView: UIView!

    override func viewDidLoad() {
        super.viewDidLoad()
        setupDimmingView()
        setupBottomSheet()
        setupGesture()
    }

    func setupDimmingView() {
        dimmingView = UIView()
        dimmingView.backgroundColor = UIColor.black.withAlphaComponent(0.5)
        dimmingView.alpha = 0
        dimmingView.translatesAutoresizingMaskIntoConstraints = false
        view.addSubview(dimmingView)

        NSLayoutConstraint.activate([
            dimmingView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            dimmingView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            dimmingView.topAnchor.constraint(equalTo: view.topAnchor),
            dimmingView.bottomAnchor.constraint(equalTo: view.bottomAnchor),
        ])
    }

    @objc func handlePanGesture(_ recognizer: UIPanGestureRecognizer) {
        let translation = recognizer.translation(in: view)
        if recognizer.state == .changed {
            bottomSheetTopConstraint.constant = -translation.y
            dimmingView.alpha = min(1, max(0, (-translation.y / bottomSheetHeight)))
        } else if recognizer.state == .ended {
            if translation.y < bottomSheetHeight / 2 {
                animateBottomSheet(to: 0)
            } else {
                animateBottomSheet(to: bottomSheetHeight)
            }
        }
    }

    func animateBottomSheet(to constant: CGFloat) {
        UIViewPropertyAnimator(duration: 0.3, dampingRatio: 1.0) {
            self.bottomSheetTopConstraint.constant = constant
            self.dimmingView.alpha = (constant == 0) ? 1 : 0
            self.view.layoutIfNeeded()
        }.startAnimation()
    }
}
11:T753,class ViewController: UIViewController {
    var bottomSheetView: UIView!
    var bottomSheetHeight: CGFloat = 300
    var bottomSheetTopConstraint: NSLayoutConstraint!
    var dimmingView: UIView!

    override func viewDidLoad() {
        super.viewDidLoad()
        setupDimmingView()
        setupBottomSheet()
        setupGesture()
    }

    func setupDimmingView() {
        dimmingView = UIView()
        dimmingView.backgroundColor = UIColor.black.withAlphaComponent(0.5)
        dimmingView.alpha = 0
        dimmingView.translatesAutoresizingMaskIntoConstraints = false
        view.addSubview(dimmingView)

        NSLayoutConstraint.activate([
            dimmingView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            dimmingView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            dimmingView.topAnchor.constraint(equalTo: view.topAnchor),
            dimmingView.bottomAnchor.constraint(equalTo: view.bottomAnchor),
        ])
    }

    @objc func handlePanGesture(_ recognizer: UIPanGestureRecognizer) {
        let translation = recognizer.translation(in: view)
        if recognizer.state == .changed {
            bottomSheetTopConstraint.constant = -translation.y
            dimmingView.alpha = min(1, max(0, (-translation.y / bottomSheetHeight)))
        } else if recognizer.state == .ended {
            if translation.y < bottomSheetHeight / 2 {
                animateBottomSheet(to: 0)
            } else {
                animateBottomSheet(to: bottomSheetHeight)
            }
        }
    }

    func animateBottomSheet(to constant: CGFloat) {
        UIViewPropertyAnimator(duration: 0.3, dampingRatio: 1.0) {
            self.bottomSheetTopConstraint.constant = constant
            self.dimmingView.alpha = (constant == 0) ? 1 : 0
            self.view.layoutIfNeeded()
        }.startAnimation()
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift를 활용한 Bottom Sheet 애니메이션 효과 추가하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift를 활용한 Bottom Sheet 애니메이션 효과 추가하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-14"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"bba652d4","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift를 활용한 Bottom Sheet 애니메이션 효과 추가하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"iOS 애플리케이션에서 자주 보게 되는 UI 요소 중 하나는 Bottom Sheet입니다. 이는 화면 하단에서 슬라이드하여 올라오는 형태로 다양한 인터랙션을 제공합니다. 이번 글에서는 Swift를 활용하여 Bottom Sheet를 구현하고, 원하는 대로 애니메이션 효과를 추가하는 방법을 자세히 설명하겠습니다."}],"\n",["$","h2",null,{"id":"3837c69e","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Bottom Sheet의 기본 개요"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Bottom Sheet는 화면의 하단에서 슬라이드하여 올라오고, 사용자 동작에 따라 닫히거나 열릴 수 있습니다. 주로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewController","position":{"start":{"line":8,"column":67,"offset":307},"end":{"line":8,"column":85,"offset":325}}}],"position":{"start":{"line":8,"column":67,"offset":307},"end":{"line":8,"column":85,"offset":325}}},"children":"UIViewController"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIView","position":{"start":{"line":8,"column":87,"offset":327},"end":{"line":8,"column":95,"offset":335}}}],"position":{"start":{"line":8,"column":87,"offset":327},"end":{"line":8,"column":95,"offset":335}}},"children":"UIView"}}],"를 사용하여 구성되오며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Auto Layout","position":{"start":{"line":8,"column":109,"offset":349},"end":{"line":8,"column":122,"offset":362}}}],"position":{"start":{"line":8,"column":109,"offset":349},"end":{"line":8,"column":122,"offset":362}}},"children":"Auto Layout"}}],"과 애니메이션을 활용해 사용자에게 매끄러운 경험을 제공합니다."]}],"\n",["$","h3",null,{"id":"4cd082b5","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"필요한 요소들"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"UIViewController"}]," - Bottom Sheet를 표시할 뷰 컨트롤러"]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"UIView"}]," - Bottom Sheet에 포함될 뷰"]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"Auto Layout Constraints"}]," - Bottom Sheet의 위치와 크기를 제어"]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"UIGestureRecognizer"}]," - 드래그 및 터치 동작을 감지"]}],"\n",["$","li","li-4",{"children":[["$","strong",null,{"className":"font-black","children":"UIViewPropertyAnimator"}]," - 애니메이션 적용"]}],"\n"]}],"\n",["$","h2",null,{"id":"afdade94","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"구현 단계"}],"\n",["$","h3",null,{"id":"80b6855c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 프로젝트 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift로 Bottom Sheet를 구현하기 위해 새로운 Xcode 프로젝트를 생성합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Single View App","position":{"start":{"line":22,"column":53,"offset":721},"end":{"line":22,"column":70,"offset":738}}}],"position":{"start":{"line":22,"column":53,"offset":721},"end":{"line":22,"column":70,"offset":738}}},"children":"Single View App"}}],"을 선택하고, 프로젝트 이름을 지정합니다. 이후 뷰 컨트롤러에서 작업을 진행합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass ViewController: UIViewController {\n    var bottomSheetView: UIView!\n    var bottomSheetHeight: CGFloat = 300\n    var bottomSheetTopConstraint: NSLayoutConstraint!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        setupBottomSheet()\n    }\n\n    func setupBottomSheet() {\n        bottomSheetView = UIView()\n        bottomSheetView.backgroundColor = .white\n        bottomSheetView.layer.cornerRadius = 16\n        bottomSheetView.translatesAutoresizingMaskIntoConstraints = false\n        view.addSubview(bottomSheetView)\n\n        NSLayoutConstraint.activate([\n            bottomSheetView.leadingAnchor.constraint(equalTo: view.leadingAnchor),\n            bottomSheetView.trailingAnchor.constraint(equalTo: view.trailingAnchor),\n            bottomSheetView.heightAnchor.constraint(equalToConstant: bottomSheetHeight),\n        ])\n        bottomSheetTopConstraint = bottomSheetView.topAnchor.constraint(equalTo: view.bottomAnchor)\n        bottomSheetTopConstraint.isActive = true\n    }\n}\n"}],"position":{"start":{"line":24,"column":1,"offset":786},"end":{"line":53,"column":4,"offset":1819}}},"children":"import UIKit\n\nclass ViewController: UIViewController {\n    var bottomSheetView: UIView!\n    var bottomSheetHeight: CGFloat = 300\n    var bottomSheetTopConstraint: NSLayoutConstraint!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        setupBottomSheet()\n    }\n\n    func setupBottomSheet() {\n        bottomSheetView = UIView()\n        bottomSheetView.backgroundColor = .white\n        bottomSheetView.layer.cornerRadius = 16\n        bottomSheetView.translatesAutoresizingMaskIntoConstraints = false\n        view.addSubview(bottomSheetView)\n\n        NSLayoutConstraint.activate([\n            bottomSheetView.leadingAnchor.constraint(equalTo: view.leadingAnchor),\n            bottomSheetView.trailingAnchor.constraint(equalTo: view.trailingAnchor),\n            bottomSheetView.heightAnchor.constraint(equalToConstant: bottomSheetHeight),\n        ])\n        bottomSheetTopConstraint = bottomSheetView.topAnchor.constraint(equalTo: view.bottomAnchor)\n        bottomSheetTopConstraint.isActive = true\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"1b4f98b2","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 애니메이션 적용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이번에는 Bottom Sheet를 화면 상단으로 슬라이드할 수 있도록 애니메이션을 추가합니다. 이를 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewPropertyAnimator","position":{"start":{"line":57,"column":60,"offset":1897},"end":{"line":57,"column":84,"offset":1921}}}],"position":{"start":{"line":57,"column":60,"offset":1897},"end":{"line":57,"column":84,"offset":1921}}},"children":"UIViewPropertyAnimator"}}],"를 사용하여 애니메이션을 추가합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":59,"column":1,"offset":1943},"end":{"line":112,"column":4,"offset":3938}}},"children":"$f"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 코드는 사용자가 Bottom Sheet를 드래그할 때 위치를 변경하고, 드래그가 끝나면 애니메이션을 통해 최종 위치로 이동합니다."}],"\n",["$","h3",null,{"id":"23b8cdd5","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 고급 애니메이션 효과 추가"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이번에는 더욱 매끄러운 경험을 위해 추가적인 애니메이션 효과를 적용합니다. 예를 들어, Bottom Sheet가 열리면서 배경 뷰의 알파 값을 조절하여 어두운 배경을 만들 수 있습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$10"}],"position":{"start":{"line":120,"column":1,"offset":4144},"end":{"line":171,"column":4,"offset":6031}}},"children":"$11"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 코드는 Bottom Sheet가 열리고 닫히는 동안 배경 뷰의 알파 값을 조절하여 어두운 배경을 생성합니다. 이를 통해 Bottom Sheet를 열 때 더 나은 사용자 경험을 제공할 수 있습니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift를 활용하여 iOS 애플리케이션에 Bottom Sheet를 구현하고 애니메이션 효과를 추가하는 방법에 대해 알아보았습니다. UIKit과 Swift의 애니메이션 API를 잘 활용하면, 사용자에게 매끄럽고 직관적인 인터페이스를 제공할 수 있습니다. 이 글을 통해 여러분의 프로젝트에 더욱 다채롭고 매력적인 UI를 구축하는데 도움이 되었기를 바랍니다."}]]}]}],["$","$L12",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L13",null,{"articleTitle":"Swift를 활용한 Bottom Sheet 애니메이션 효과 추가하기","toc":[{"tagName":"h1","title":"Swift를 활용한 Bottom Sheet 애니메이션 효과 추가하기","id":"bba652d4"},{"tagName":"h2","title":"Bottom Sheet의 기본 개요","id":"3837c69e"},{"tagName":"h3","title":"필요한 요소들","id":"4cd082b5"},{"tagName":"h2","title":"구현 단계","id":"afdade94"},{"tagName":"h3","title":"1. 프로젝트 설정","id":"80b6855c"},{"tagName":"h3","title":"2. 애니메이션 적용","id":"1b4f98b2"},{"tagName":"h3","title":"3. 고급 애니메이션 효과 추가","id":"23b8cdd5"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
