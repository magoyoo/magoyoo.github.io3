1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","JavaScript-Proxy-API-%EA%B0%9D%EC%B2%B4-%EB%8F%99%EC%9E%91-%EC%A0%9C%EC%96%B4%EC%99%80-%ED%99%9C%EC%9A%A9-%EC%82%AC%EB%A1%80-f3951833","d"],{"children":["__PAGE__?{\"slug\":\"JavaScript-Proxy-API-객체-동작-제어와-활용-사례-f3951833\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","JavaScript-Proxy-API-%EA%B0%9D%EC%B2%B4-%EB%8F%99%EC%9E%91-%EC%A0%9C%EC%96%B4%EC%99%80-%ED%99%9C%EC%9A%A9-%EC%82%AC%EB%A1%80-f3951833","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"JavaScript-Proxy-API-객체-동작-제어와-활용-사례-f3951833\"}"},"styles":[]}],"segment":["slug","JavaScript-Proxy-API-%EA%B0%9D%EC%B2%B4-%EB%8F%99%EC%9E%91-%EC%A0%9C%EC%96%B4%EC%99%80-%ED%99%9C%EC%9A%A9-%EC%82%AC%EB%A1%80-f3951833","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"JavaScript Proxy API: 객체 동작 제어와 활용 사례 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"JavaScript Proxy API는 객체 동작을 제어하고 확장할 수 있는 강력한 도구입니다. Proxy를 사용하면 객체의 속성 읽기, 쓰기, 삭제 등의 동작을 중간에서 가로채고, 이를 자유롭게 변형하거나 제어할 수 있습니다. 이 글에서는 Proxy API의 기본 개념부터 실용적인 활용 사례까지 살펴봅니다."}],["$","meta","3",{"name":"keywords","content":"JavaScript,Proxy,API,프로그래밍"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/JavaScript-Proxy-API-%EA%B0%9D%EC%B2%B4-%EB%8F%99%EC%9E%91-%EC%A0%9C%EC%96%B4%EC%99%80-%ED%99%9C%EC%9A%A9-%EC%82%AC%EB%A1%80-f3951833"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"JavaScript Proxy API: 객체 동작 제어와 활용 사례 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"JavaScript Proxy API: 객체 동작 제어와 활용 사례 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"JavaScript Proxy API는 객체 동작을 제어하고 확장할 수 있는 강력한 도구입니다. Proxy를 사용하면 객체의 속성 읽기, 쓰기, 삭제 등의 동작을 중간에서 가로채고, 이를 자유롭게 변형하거나 제어할 수 있습니다. 이 글에서는 Proxy API의 기본 개념부터 실용적인 활용 사례까지 살펴봅니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/JavaScript-Proxy-API-%EA%B0%9D%EC%B2%B4-%EB%8F%99%EC%9E%91-%EC%A0%9C%EC%96%B4%EC%99%80-%ED%99%9C%EC%9A%A9-%EC%82%AC%EB%A1%80-f3951833"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"JavaScript Proxy API: 객체 동작 제어와 활용 사례 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"JavaScript Proxy API는 객체 동작을 제어하고 확장할 수 있는 강력한 도구입니다. Proxy를 사용하면 객체의 속성 읽기, 쓰기, 삭제 등의 동작을 중간에서 가로채고, 이를 자유롭게 변형하거나 제어할 수 있습니다. 이 글에서는 Proxy API의 기본 개념부터 실용적인 활용 사례까지 살펴봅니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"JavaScript Proxy API: 객체 동작 제어와 활용 사례"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"JavaScript Proxy API: 객체 동작 제어와 활용 사례"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-24"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"81bf895d","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"JavaScript Proxy API: 객체 동작 제어와 활용 사례"}],"\n",["$","h2",null,{"id":"476966c5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"개요"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"JavaScript의 Proxy API는 객체의 기본 동작을 가로채고 조작할 수 있는 강력한 도구입니다. 이를 통해 객체의 속성 접근, 수정, 삭제 등의 동작을 제어하고 특정 로직을 추가할 수 있습니다. Proxy API는 고급 JavaScript 애플리케이션 개발에 유용하게 활용될 수 있습니다. 이 글에서는 Proxy API의 기본 개념, 주요 핸들러 메소드, 그리고 다양한 활용 사례를 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"9f41f9b8","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Proxy는 두 개의 인자를 받아 생성됩니다: 타겟 객체와 핸들러 객체입니다. 핸들러 객체에는 객체의 특정 작업을 가로채기 위한 트랩(trap) 메소드가 포함됩니다. 트랩 메소드는 함수로 정의되며, 타겟 객체에 수행될 연산이 이들 트랩 함수로 전달됩니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const target = {};\nconst handler = {};\nconst proxy = new Proxy(target, handler);\n"}],"position":{"start":{"line":10,"column":1,"offset":430},"end":{"line":14,"column":4,"offset":528}}},"children":"const target = {};\nconst handler = {};\nconst proxy = new Proxy(target, handler);\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위 예제에서는 아직 트랩 메소드가 정의되지 않았으므로 Proxy 객체는 타겟 객체와 동일하게 동작합니다. 이제 몇 가지 트랩 메소드를 추가하여 Proxy의 기능을 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"c789f144","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"주요 핸들러 메소드"}],"\n",["$","h3",null,{"id":"783923e5","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"get"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"get","position":{"start":{"line":21,"column":1,"offset":654},"end":{"line":21,"column":6,"offset":659}}}],"position":{"start":{"line":21,"column":1,"offset":654},"end":{"line":21,"column":6,"offset":659}}},"children":"get"}}]," 트랩은 객체의 속성이 읽힐 때 호출됩니다. 이를 통해 속성 접근을 가로채고 특정 로직을 추가할 수 있습니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const handler = {\n  get: (target, property, receiver) => {\n    console.log(`Property '${property}' has been read`);\n    return target[property];\n  }\n};\n\nconst obj = { a: 10 };\nconst proxy = new Proxy(obj, handler);\nconsole.log(proxy.a); // 콘솔에 'Property 'a' has been read'가 출력되고, 10이 반환됩니다.\n"}],"position":{"start":{"line":23,"column":1,"offset":722},"end":{"line":34,"column":4,"offset":1030}}},"children":"const handler = {\n  get: (target, property, receiver) => {\n    console.log(`Property '${property}' has been read`);\n    return target[property];\n  }\n};\n\nconst obj = { a: 10 };\nconst proxy = new Proxy(obj, handler);\nconsole.log(proxy.a); // 콘솔에 'Property 'a' has been read'가 출력되고, 10이 반환됩니다.\n"}}]}],"\n",["$","h3",null,{"id":"65c10dc3","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"set"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"set","position":{"start":{"line":37,"column":1,"offset":1040},"end":{"line":37,"column":6,"offset":1045}}}],"position":{"start":{"line":37,"column":1,"offset":1040},"end":{"line":37,"column":6,"offset":1045}}},"children":"set"}}]," 트랩은 객체의 속성이 설정될 때 호출됩니다. 이를 통해 속성 값을 설정하는 동작을 제어할 수 있습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const handler = {\n  set: (target, property, value, receiver) => {\n    console.log(`Setting value '${value}' to property '${property}'`);\n    target[property] = value;\n    return true; // 반환값은 설정 성공 여부를 나타냅니다.\n  }\n};\n\nconst obj = { a: 10 };\nconst proxy = new Proxy(obj, handler);\nproxy.a = 20; // 콘솔에 'Setting value '20' to property 'a''가 출력됩니다.\n"}],"position":{"start":{"line":39,"column":1,"offset":1105},"end":{"line":51,"column":4,"offset":1467}}},"children":"const handler = {\n  set: (target, property, value, receiver) => {\n    console.log(`Setting value '${value}' to property '${property}'`);\n    target[property] = value;\n    return true; // 반환값은 설정 성공 여부를 나타냅니다.\n  }\n};\n\nconst obj = { a: 10 };\nconst proxy = new Proxy(obj, handler);\nproxy.a = 20; // 콘솔에 'Setting value '20' to property 'a''가 출력됩니다.\n"}}]}],"\n",["$","h3",null,{"id":"e7d8e306","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"deleteProperty"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteProperty","position":{"start":{"line":54,"column":1,"offset":1488},"end":{"line":54,"column":17,"offset":1504}}}],"position":{"start":{"line":54,"column":1,"offset":1488},"end":{"line":54,"column":17,"offset":1504}}},"children":"deleteProperty"}}]," 트랩은 객체의 속성이 삭제될 때 호출됩니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const handler = {\n  deleteProperty: (target, property) => {\n    console.log(`Deleting property '${property}'`);\n    delete target[property];\n    return true; // 반환값은 삭제 성공 여부를 나타냅니다.\n  }\n};\n\nconst obj = { a: 10 };\nconst proxy = new Proxy(obj, handler);\ndelete proxy.a; // 콘솔에 'Deleting property 'a''가 출력됩니다.\n"}],"position":{"start":{"line":56,"column":1,"offset":1531},"end":{"line":68,"column":4,"offset":1856}}},"children":"const handler = {\n  deleteProperty: (target, property) => {\n    console.log(`Deleting property '${property}'`);\n    delete target[property];\n    return true; // 반환값은 삭제 성공 여부를 나타냅니다.\n  }\n};\n\nconst obj = { a: 10 };\nconst proxy = new Proxy(obj, handler);\ndelete proxy.a; // 콘솔에 'Deleting property 'a''가 출력됩니다.\n"}}]}],"\n",["$","h2",null,{"id":"a315b45f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"활용 사례"}],"\n",["$","h3",null,{"id":"7b370780","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"데이터 검증"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Proxy를 사용하면 객체의 속성 설정 시점에 데이터 검증 로직을 추가할 수 있습니다. 이는 잘못된 데이터 입력을 방지하는 데 유용합니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const handler = {\n  set: (target, property, value) => {\n    if (typeof value !== 'number') {\n      throw new TypeError('Value must be a number');\n    }\n    target[property] = value;\n    return true;\n  }\n};\n\nconst obj = {};\nconst proxy = new Proxy(obj, handler);\n\ntry {\n  proxy.a = 'string'; // TypeError: Value must be a number\n} catch (error) {\n  console.error(error.message);\n}\n"}],"position":{"start":{"line":75,"column":1,"offset":1958},"end":{"line":94,"column":4,"offset":2355}}},"children":"const handler = {\n  set: (target, property, value) => {\n    if (typeof value !== 'number') {\n      throw new TypeError('Value must be a number');\n    }\n    target[property] = value;\n    return true;\n  }\n};\n\nconst obj = {};\nconst proxy = new Proxy(obj, handler);\n\ntry {\n  proxy.a = 'string'; // TypeError: Value must be a number\n} catch (error) {\n  console.error(error.message);\n}\n"}}]}],"\n",["$","h3",null,{"id":"111bb5d4","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"기본값 제공"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Proxy를 사용하여 객체의 특정 속성이 존재하지 않을 경우 기본값을 제공할 수 있습니다."}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const handler = {\n  get: (target, property) => {\n    return property in target ? target[property] : 'default';\n  }\n};\n\nconst obj = { a: 10 };\nconst proxy = new Proxy(obj, handler);\nconsole.log(proxy.a); // 10\nconsole.log(proxy.b); // 'default'\n"}],"position":{"start":{"line":99,"column":1,"offset":2420},"end":{"line":110,"column":4,"offset":2681}}},"children":"const handler = {\n  get: (target, property) => {\n    return property in target ? target[property] : 'default';\n  }\n};\n\nconst obj = { a: 10 };\nconst proxy = new Proxy(obj, handler);\nconsole.log(proxy.a); // 10\nconsole.log(proxy.b); // 'default'\n"}}]}],"\n",["$","h3",null,{"id":"1d1897c4","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"로그 기록"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Proxy를 사용하여 객체의 속성 접근 및 변경을 로깅하는 기능을 구현할 수 있습니다."}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const handler = {\n  get: (target, property) => {\n    console.log(`Accessing property '${property}'`);\n    return target[property];\n  },\n  set: (target, property, value) => {\n    console.log(`Setting property '${property}' to '${value}'`);\n    target[property] = value;\n    return true;\n  }\n};\n\nconst obj = { a: 10 };\nconst proxy = new Proxy(obj, handler);\nproxy.a = 20; // 'Setting property 'a' to '20'' 출력\nconsole.log(proxy.a); // 'Accessing property 'a'' 출력, 20 반환\n"}],"position":{"start":{"line":115,"column":1,"offset":2743},"end":{"line":132,"column":4,"offset":3227}}},"children":"const handler = {\n  get: (target, property) => {\n    console.log(`Accessing property '${property}'`);\n    return target[property];\n  },\n  set: (target, property, value) => {\n    console.log(`Setting property '${property}' to '${value}'`);\n    target[property] = value;\n    return true;\n  }\n};\n\nconst obj = { a: 10 };\nconst proxy = new Proxy(obj, handler);\nproxy.a = 20; // 'Setting property 'a' to '20'' 출력\nconsole.log(proxy.a); // 'Accessing property 'a'' 출력, 20 반환\n"}}]}],"\n",["$","h2",null,{"id":"ed8464a3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"마무리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"JavaScript Proxy API는 객체의 동작을 세밀하게 제어할 수 있는 강력한 도구입니다. 신중하게 사용하면 객체의 기본 동작을 원하지 않는 방식으로 변경할 수 있다는 점을 유념해야 합니다. 그러나 올바르게 사용하면 데이터 검증, 기본값 제공, 로그 기록 등 다양한 유용한 기능을 구현할 수 있습니다. Proxy API를 활용하여 더 나은 JavaScript 애플리케이션을 개발해 보시기 바랍니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"JavaScript Proxy API: 객체 동작 제어와 활용 사례","toc":[{"tagName":"h1","title":"JavaScript Proxy API: 객체 동작 제어와 활용 사례","id":"81bf895d"},{"tagName":"h2","title":"개요","id":"476966c5"},{"tagName":"h2","title":"기본 개념","id":"9f41f9b8"},{"tagName":"h2","title":"주요 핸들러 메소드","id":"c789f144"},{"tagName":"h3","title":"get","id":"783923e5"},{"tagName":"h3","title":"set","id":"65c10dc3"},{"tagName":"h3","title":"deleteProperty","id":"e7d8e306"},{"tagName":"h2","title":"활용 사례","id":"a315b45f"},{"tagName":"h3","title":"데이터 검증","id":"7b370780"},{"tagName":"h3","title":"기본값 제공","id":"111bb5d4"},{"tagName":"h3","title":"로그 기록","id":"1d1897c4"},{"tagName":"h2","title":"마무리","id":"ed8464a3"}],"language":"kr"}]}]]}]]
8:null
