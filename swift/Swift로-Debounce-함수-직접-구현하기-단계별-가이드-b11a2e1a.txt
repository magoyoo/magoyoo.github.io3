1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift%EB%A1%9C-Debounce-%ED%95%A8%EC%88%98-%EC%A7%81%EC%A0%91-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%8B%A8%EA%B3%84%EB%B3%84-%EA%B0%80%EC%9D%B4%EB%93%9C-b11a2e1a","d"],{"children":["__PAGE__?{\"slug\":\"Swift로-Debounce-함수-직접-구현하기-단계별-가이드-b11a2e1a\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift%EB%A1%9C-Debounce-%ED%95%A8%EC%88%98-%EC%A7%81%EC%A0%91-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%8B%A8%EA%B3%84%EB%B3%84-%EA%B0%80%EC%9D%B4%EB%93%9C-b11a2e1a","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift로-Debounce-함수-직접-구현하기-단계별-가이드-b11a2e1a\"}"},"styles":[]}],"segment":["slug","Swift%EB%A1%9C-Debounce-%ED%95%A8%EC%88%98-%EC%A7%81%EC%A0%91-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%8B%A8%EA%B3%84%EB%B3%84-%EA%B0%80%EC%9D%B4%EB%93%9C-b11a2e1a","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift로 Debounce 함수 직접 구현하기: 단계별 가이드 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Swift로 `Debounce` 함수를 직접 구현하는 방법을 단계별로 안내합니다. `Debounce`는 빠르게 반복되는 이벤트를 제어하고 성능을 개선하는 유용한 기술입니다. 코드 예제와 함께 이해하기 쉽게 설명합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,Debounce,이벤트 처리,성능 최적화"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift%EB%A1%9C-Debounce-%ED%95%A8%EC%88%98-%EC%A7%81%EC%A0%91-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%8B%A8%EA%B3%84%EB%B3%84-%EA%B0%80%EC%9D%B4%EB%93%9C-b11a2e1a"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift로 Debounce 함수 직접 구현하기: 단계별 가이드 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift로 Debounce 함수 직접 구현하기: 단계별 가이드 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Swift로 `Debounce` 함수를 직접 구현하는 방법을 단계별로 안내합니다. `Debounce`는 빠르게 반복되는 이벤트를 제어하고 성능을 개선하는 유용한 기술입니다. 코드 예제와 함께 이해하기 쉽게 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift%EB%A1%9C-Debounce-%ED%95%A8%EC%88%98-%EC%A7%81%EC%A0%91-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%8B%A8%EA%B3%84%EB%B3%84-%EA%B0%80%EC%9D%B4%EB%93%9C-b11a2e1a"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift로 Debounce 함수 직접 구현하기: 단계별 가이드 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Swift로 `Debounce` 함수를 직접 구현하는 방법을 단계별로 안내합니다. `Debounce`는 빠르게 반복되는 이벤트를 제어하고 성능을 개선하는 유용한 기술입니다. 코드 예제와 함께 이해하기 쉽게 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift로 Debounce 함수 직접 구현하기: 단계별 가이드"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift로 Debounce 함수 직접 구현하기: 단계별 가이드"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-27"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"a14146c6","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift로 Debounce 함수 직접 구현하기: 단계별 가이드"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift 개발을 하다 보면 이벤트 핸들링을 효율적으로 처리해야 하는 경우가 빈번하게 발생합니다. 특히 사용자 입력이나 네트워크 요청과 같이 빠르게 반복되는 이벤트를 적절히 제어하는 것이 중요합니다. 여기서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Debounce","position":{"start":{"line":4,"column":117,"offset":156},"end":{"line":4,"column":127,"offset":166}}}],"position":{"start":{"line":4,"column":117,"offset":156},"end":{"line":4,"column":127,"offset":166}}},"children":"Debounce"}}]," 함수는 주기적으로 발생하는 이벤트를 그룹화하여 짧은 시간 내에 여러 번 발생하는 이벤트를 하나로 축소하는 역할을 합니다. 이번 글에서는 Swift로 직접 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Debounce","position":{"start":{"line":4,"column":214,"offset":253},"end":{"line":4,"column":224,"offset":263}}}],"position":{"start":{"line":4,"column":214,"offset":253},"end":{"line":4,"column":224,"offset":263}}},"children":"Debounce"}}]," 함수를 구현하는 방법을 단계별로 알아보도록 하겠습니다."]}],"\n",["$","h2",null,{"id":"86ffb876","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Debounce란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Debounce","position":{"start":{"line":8,"column":1,"offset":311},"end":{"line":8,"column":11,"offset":321}}}],"position":{"start":{"line":8,"column":1,"offset":311},"end":{"line":8,"column":11,"offset":321}}},"children":"Debounce"}}],"는 사용자가 지정한 시간 간격 내에 여러 번 호출된 동일한 함수가 마지막 호출만 실행되도록 하는 기술입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Debounce","position":{"start":{"line":8,"column":72,"offset":382},"end":{"line":8,"column":82,"offset":392}}}],"position":{"start":{"line":8,"column":72,"offset":382},"end":{"line":8,"column":82,"offset":392}}},"children":"Debounce"}}],"를 사용하면 빠르게 연달아 발생하는 이벤트를 제한하여, 성능을 최적화하고 불필요한 작업을 줄일 수 있습니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"예를 들어, 사용자가 입력란에 텍스트를 입력할 때마다 네트워크 요청을 보내는 대신, 입력이 멈춘 후 일정 시간 동안 추가 입력이 없으면 네트워크 요청을 보내도록 할 수 있습니다. 이를 통해 서버 부하를 줄이고 응답성을 개선할 수 있습니다."}],"\n",["$","h2",null,{"id":"27154d27","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Swift로 Debounce 구현하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 Swift로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Debounce","position":{"start":{"line":14,"column":11,"offset":624},"end":{"line":14,"column":21,"offset":634}}}],"position":{"start":{"line":14,"column":11,"offset":624},"end":{"line":14,"column":21,"offset":634}}},"children":"Debounce"}}]," 함수를 직접 구현해 보겠습니다. 이 예제에서는 GCD(Grand Central Dispatch)를 사용하여 간단하고 효율적인 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Debounce","position":{"start":{"line":14,"column":92,"offset":705},"end":{"line":14,"column":102,"offset":715}}}],"position":{"start":{"line":14,"column":92,"offset":705},"end":{"line":14,"column":102,"offset":715}}},"children":"Debounce"}}],"를 구현할 것입니다."]}],"\n",["$","h3",null,{"id":"0927ac12","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 기본 구조 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Debounce","position":{"start":{"line":18,"column":5,"offset":749},"end":{"line":18,"column":15,"offset":759}}}],"position":{"start":{"line":18,"column":5,"offset":749},"end":{"line":18,"column":15,"offset":759}}},"children":"Debounce"}}]," 함수를 정의하기 위한 클래스를 생성합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\n\nclass Debouncer {\n    private let queue: DispatchQueue\n    private var workItem: DispatchWorkItem?\n    private var interval: TimeInterval\n    \n    init(interval: TimeInterval, queue: DispatchQueue = .main) {\n        self.interval = interval\n        self.queue = queue\n    }\n    \n    func debounce(action: @escaping () -> Void) {\n        // 구현 부분은 나중에 채워집니다.\n    }\n}\n"}],"position":{"start":{"line":20,"column":1,"offset":785},"end":{"line":37,"column":4,"offset":1182}}},"children":"import Foundation\n\nclass Debouncer {\n    private let queue: DispatchQueue\n    private var workItem: DispatchWorkItem?\n    private var interval: TimeInterval\n    \n    init(interval: TimeInterval, queue: DispatchQueue = .main) {\n        self.interval = interval\n        self.queue = queue\n    }\n    \n    func debounce(action: @escaping () -> Void) {\n        // 구현 부분은 나중에 채워집니다.\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"2df786ba","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. debounce 메서드 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"debounce","position":{"start":{"line":41,"column":1,"offset":1208},"end":{"line":41,"column":11,"offset":1218}}}],"position":{"start":{"line":41,"column":1,"offset":1208},"end":{"line":41,"column":11,"offset":1218}}},"children":"debounce"}}]," 메서드는 주어진 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"action","position":{"start":{"line":41,"column":21,"offset":1228},"end":{"line":41,"column":29,"offset":1236}}}],"position":{"start":{"line":41,"column":21,"offset":1228},"end":{"line":41,"column":29,"offset":1236}}},"children":"action"}}],"을 일정 시간이 지난 후에 호출하도록 구현합니다. 이전의 작업이 있다면 취소하고, 새로운 작업을 예약합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class Debouncer {\n    // ... (기존 코드)\n\n    func debounce(action: @escaping () -> Void) {\n        workItem?.cancel()\n        workItem = DispatchWorkItem(block: action)\n        queue.asyncAfter(deadline: .now() + interval, execute: workItem!)\n    }\n}\n"}],"position":{"start":{"line":43,"column":1,"offset":1298},"end":{"line":53,"column":4,"offset":1558}}},"children":"class Debouncer {\n    // ... (기존 코드)\n\n    func debounce(action: @escaping () -> Void) {\n        workItem?.cancel()\n        workItem = DispatchWorkItem(block: action)\n        queue.asyncAfter(deadline: .now() + interval, execute: workItem!)\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"70d1096d","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 사용 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Debouncer","position":{"start":{"line":57,"column":4,"offset":1577},"end":{"line":57,"column":15,"offset":1588}}}],"position":{"start":{"line":57,"column":4,"offset":1577},"end":{"line":57,"column":15,"offset":1588}}},"children":"Debouncer"}}]," 클래스를 실제로 어떻게 사용하는지 살펴보겠습니다. 텍스트 필드의 입력을 디바운싱하여 네트워크 요청 횟수를 줄이는 간단한 예제를 작성합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let debouncer = Debouncer(interval: 0.5)\n\nfunc textFieldDidChange(_ textField: UITextField) {\n    debouncer.debounce {\n        sendNetworkRequest(with: textField.text)\n    }\n}\n\nfunc sendNetworkRequest(with text: String?) {\n    // 네트워크 요청 구현\n    print(\"Network request sent with text: \\(text ?? \"\")\")\n}\n"}],"position":{"start":{"line":59,"column":1,"offset":1668},"end":{"line":72,"column":4,"offset":1982}}},"children":"let debouncer = Debouncer(interval: 0.5)\n\nfunc textFieldDidChange(_ textField: UITextField) {\n    debouncer.debounce {\n        sendNetworkRequest(with: textField.text)\n    }\n}\n\nfunc sendNetworkRequest(with text: String?) {\n    // 네트워크 요청 구현\n    print(\"Network request sent with text: \\(text ?? \"\")\")\n}\n"}}]}],"\n",["$","h3",null,{"id":"4be2b035","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"4. 추가 기능: 파라미터 지원"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["때때로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Debounce","position":{"start":{"line":76,"column":5,"offset":2011},"end":{"line":76,"column":15,"offset":2021}}}],"position":{"start":{"line":76,"column":5,"offset":2011},"end":{"line":76,"column":15,"offset":2021}}},"children":"Debounce"}}]," 함수가 실행될 때 파라미터를 전달할 필요가 있습니다. 이를 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"debounce","position":{"start":{"line":76,"column":52,"offset":2058},"end":{"line":76,"column":62,"offset":2068}}}],"position":{"start":{"line":76,"column":52,"offset":2058},"end":{"line":76,"column":62,"offset":2068}}},"children":"debounce"}}]," 메서드를 제너릭으로 만들어 파라미터를 지원하도록 변경합니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class Debouncer {\n    // ... (기존 코드)\n    \n    func debounce<T>(parameter: T, action: @escaping (T) -> Void) {\n        workItem?.cancel()\n        workItem = DispatchWorkItem { action(parameter) }\n        queue.asyncAfter(deadline: .now() + interval, execute: workItem!)\n    }\n}\n"}],"position":{"start":{"line":78,"column":1,"offset":2104},"end":{"line":88,"column":4,"offset":2393}}},"children":"class Debouncer {\n    // ... (기존 코드)\n    \n    func debounce<T>(parameter: T, action: @escaping (T) -> Void) {\n        workItem?.cancel()\n        workItem = DispatchWorkItem { action(parameter) }\n        queue.asyncAfter(deadline: .now() + interval, execute: workItem!)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 파라미터를 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"debounce","position":{"start":{"line":90,"column":15,"offset":2409},"end":{"line":90,"column":25,"offset":2419}}}],"position":{"start":{"line":90,"column":15,"offset":2409},"end":{"line":90,"column":25,"offset":2419}}},"children":"debounce"}}]," 메서드를 호출할 수 있습니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func textFieldDidChange(_ textField: UITextField) {\n    debouncer.debounce(parameter: textField.text) { text in\n        sendNetworkRequest(with: text)\n    }\n}\n"}],"position":{"start":{"line":92,"column":1,"offset":2438},"end":{"line":98,"column":4,"offset":2609}}},"children":"func textFieldDidChange(_ textField: UITextField) {\n    debouncer.debounce(parameter: textField.text) { text in\n        sendNetworkRequest(with: text)\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이번 글에서는 Swift로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Debounce","position":{"start":{"line":102,"column":16,"offset":2633},"end":{"line":102,"column":26,"offset":2643}}}],"position":{"start":{"line":102,"column":16,"offset":2633},"end":{"line":102,"column":26,"offset":2643}}},"children":"Debounce"}}]," 함수를 직접 구현하는 방법을 알아보았습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Debouncer","position":{"start":{"line":102,"column":52,"offset":2669},"end":{"line":102,"column":63,"offset":2680}}}],"position":{"start":{"line":102,"column":52,"offset":2669},"end":{"line":102,"column":63,"offset":2680}}},"children":"Debouncer"}}]," 클래스를 사용하여 반복적인 이벤트를 제어하고 성능을 최적화하는 방법을 단계별로 설명하였습니다. 이 기술을 활용하면 앱의 성능을 크게 향상시킬 수 있습니다. 앞으로 다양한 상황에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Debounce","position":{"start":{"line":102,"column":164,"offset":2781},"end":{"line":102,"column":174,"offset":2791}}}],"position":{"start":{"line":102,"column":164,"offset":2781},"end":{"line":102,"column":174,"offset":2791}}},"children":"Debounce"}}],"를 적용해 보시기 바랍니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift로 Debounce 함수 직접 구현하기: 단계별 가이드","toc":[{"tagName":"h1","title":"Swift로 Debounce 함수 직접 구현하기: 단계별 가이드","id":"a14146c6"},{"tagName":"h2","title":"Debounce란?","id":"86ffb876"},{"tagName":"h2","title":"Swift로 Debounce 구현하기","id":"27154d27"},{"tagName":"h3","title":"1. 기본 구조 설정","id":"0927ac12"},{"tagName":"h3","title":"2. debounce 메서드 구현","id":"2df786ba"},{"tagName":"h3","title":"3. 사용 예제","id":"70d1096d"},{"tagName":"h3","title":"4. 추가 기능: 파라미터 지원","id":"4be2b035"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
