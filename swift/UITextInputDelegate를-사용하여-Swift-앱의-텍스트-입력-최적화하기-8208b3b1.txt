1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","UITextInputDelegate%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-Swift-%EC%95%B1%EC%9D%98-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%9E%85%EB%A0%A5-%EC%B5%9C%EC%A0%81%ED%99%94%ED%95%98%EA%B8%B0-8208b3b1","d"],{"children":["__PAGE__?{\"slug\":\"UITextInputDelegate를-사용하여-Swift-앱의-텍스트-입력-최적화하기-8208b3b1\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","UITextInputDelegate%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-Swift-%EC%95%B1%EC%9D%98-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%9E%85%EB%A0%A5-%EC%B5%9C%EC%A0%81%ED%99%94%ED%95%98%EA%B8%B0-8208b3b1","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"UITextInputDelegate를-사용하여-Swift-앱의-텍스트-입력-최적화하기-8208b3b1\"}"},"styles":[]}],"segment":["slug","UITextInputDelegate%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-Swift-%EC%95%B1%EC%9D%98-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%9E%85%EB%A0%A5-%EC%B5%9C%EC%A0%81%ED%99%94%ED%95%98%EA%B8%B0-8208b3b1","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"UITextInputDelegate를 사용하여 Swift 앱의 텍스트 입력 최적화하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift 앱에서 `UITextInputDelegate` 프로토콜을 사용하여 사용자의 텍스트 입력 경험을 최적화하는 방법을 설명합니다. 이 글은 `UITextInputDelegate`의 기본 개념과 사용법, 그리고 이를 통해 앱의 성능을 향상시키는 다양한 기술들을 다룹니다."}],["$","meta","3",{"name":"keywords","content":"Swift,UITextInputDelegate,텍스트 입력,최적화"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/UITextInputDelegate%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-Swift-%EC%95%B1%EC%9D%98-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%9E%85%EB%A0%A5-%EC%B5%9C%EC%A0%81%ED%99%94%ED%95%98%EA%B8%B0-8208b3b1"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"UITextInputDelegate를 사용하여 Swift 앱의 텍스트 입력 최적화하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"UITextInputDelegate를 사용하여 Swift 앱의 텍스트 입력 최적화하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift 앱에서 `UITextInputDelegate` 프로토콜을 사용하여 사용자의 텍스트 입력 경험을 최적화하는 방법을 설명합니다. 이 글은 `UITextInputDelegate`의 기본 개념과 사용법, 그리고 이를 통해 앱의 성능을 향상시키는 다양한 기술들을 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/UITextInputDelegate%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-Swift-%EC%95%B1%EC%9D%98-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%9E%85%EB%A0%A5-%EC%B5%9C%EC%A0%81%ED%99%94%ED%95%98%EA%B8%B0-8208b3b1"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"UITextInputDelegate를 사용하여 Swift 앱의 텍스트 입력 최적화하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift 앱에서 `UITextInputDelegate` 프로토콜을 사용하여 사용자의 텍스트 입력 경험을 최적화하는 방법을 설명합니다. 이 글은 `UITextInputDelegate`의 기본 개념과 사용법, 그리고 이를 통해 앱의 성능을 향상시키는 다양한 기술들을 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"UITextInputDelegate를 사용하여 Swift 앱의 텍스트 입력 최적화하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"UITextInputDelegate를 사용하여 Swift 앱의 텍스트 입력 최적화하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-08"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"2dd06c02","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"UITextInputDelegate를 사용하여 Swift 앱의 텍스트 입력 최적화하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["스마트폰의 보급이 보편화되면서 텍스트 입력은 모바일 애플리케이션에서 중요한 역할을 하게 되었습니다. 그러나 부적절한 텍스트 입력 처리는 사용자 경험을 심각하게 저하시킬 수 있습니다. Swift의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextInputDelegate","position":{"start":{"line":4,"column":110,"offset":161},"end":{"line":4,"column":131,"offset":182}}}],"position":{"start":{"line":4,"column":110,"offset":161},"end":{"line":4,"column":131,"offset":182}}},"children":"UITextInputDelegate"}}]," 프로토콜을 사용하면 사용자의 텍스트 입력을 더 효율적이고 직관적으로 처리할 수 있습니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextInputDelegate","position":{"start":{"line":4,"column":189,"offset":240},"end":{"line":4,"column":210,"offset":261}}}],"position":{"start":{"line":4,"column":189,"offset":240},"end":{"line":4,"column":210,"offset":261}}},"children":"UITextInputDelegate"}}],"의 기본 개념, 사용법, 그리고 이를 활용하여 앱의 성능을 최적화하는 방법을 알아보겠습니다."]}],"\n",["$","h2",null,{"id":"475ad5c9","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UITextInputDelegate란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextInputDelegate","position":{"start":{"line":8,"column":1,"offset":340},"end":{"line":8,"column":22,"offset":361}}}],"position":{"start":{"line":8,"column":1,"offset":340},"end":{"line":8,"column":22,"offset":361}}},"children":"UITextInputDelegate"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextInput","position":{"start":{"line":8,"column":24,"offset":363},"end":{"line":8,"column":37,"offset":376}}}],"position":{"start":{"line":8,"column":24,"offset":363},"end":{"line":8,"column":37,"offset":376}}},"children":"UITextInput"}}]," 프로토콜을 준수하는 객체에서 발생하는 다양한 텍스트 입력 이벤트를 처리할 수 있게 해주는 프로토콜입니다. 이 프로토콜을 구현하면 텍스트 입력 시 발생하는 여러 이벤트에 대해 커스텀한 처리를 추가할 수 있습니다. 주요 메소드로는 다음과 같은 것들이 있습니다:"]}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"textWillChange(_:)","position":{"start":{"line":10,"column":4,"offset":525},"end":{"line":10,"column":24,"offset":545}}}],"position":{"start":{"line":10,"column":4,"offset":525},"end":{"line":10,"column":24,"offset":545}}},"children":"textWillChange(_:)"}}],": 텍스트가 바뀌기 직전 호출됩니다."]}],"\n",["$","li","li-1",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"textDidChange(_:)","position":{"start":{"line":11,"column":4,"offset":569},"end":{"line":11,"column":23,"offset":588}}}],"position":{"start":{"line":11,"column":4,"offset":569},"end":{"line":11,"column":23,"offset":588}}},"children":"textDidChange(_:)"}}],": 텍스트가 바뀐 후 호출됩니다."]}],"\n",["$","li","li-2",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"selectionWillChange(_:)","position":{"start":{"line":12,"column":4,"offset":610},"end":{"line":12,"column":29,"offset":635}}}],"position":{"start":{"line":12,"column":4,"offset":610},"end":{"line":12,"column":29,"offset":635}}},"children":"selectionWillChange(_:)"}}],": 텍스트 선택이 바뀌기 직전 호출됩니다."]}],"\n",["$","li","li-3",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"selectionDidChange(_:)","position":{"start":{"line":13,"column":4,"offset":662},"end":{"line":13,"column":28,"offset":686}}}],"position":{"start":{"line":13,"column":4,"offset":662},"end":{"line":13,"column":28,"offset":686}}},"children":"selectionDidChange(_:)"}}],": 텍스트 선택이 바뀐 후 호출됩니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 메소드들을 적절하게 활용하면 다양한 사용자 입력 시나리오에 대응할 수 있습니다. 예를 들어, 텍스트 입력 전후로 특정 로직을 수행하거나, 선택된 텍스트에 대해 특수한 처리를 할 수 있습니다."}],"\n",["$","h2",null,{"id":"d70d58c5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UITextInputDelegate 설정 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextInputDelegate","position":{"start":{"line":19,"column":1,"offset":849},"end":{"line":19,"column":22,"offset":870}}}],"position":{"start":{"line":19,"column":1,"offset":849},"end":{"line":19,"column":22,"offset":870}}},"children":"UITextInputDelegate"}}],"를 설정하는 방법은 간단합니다. 아래 예제는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":19,"column":47,"offset":895},"end":{"line":19,"column":59,"offset":907}}}],"position":{"start":{"line":19,"column":47,"offset":895},"end":{"line":19,"column":59,"offset":907}}},"children":"UITextView"}}],"에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextInputDelegate","position":{"start":{"line":19,"column":61,"offset":909},"end":{"line":19,"column":82,"offset":930}}}],"position":{"start":{"line":19,"column":61,"offset":909},"end":{"line":19,"column":82,"offset":930}}},"children":"UITextInputDelegate"}}],"를 설정하는 기본 프로세스를 보여줍니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass ViewController: UIViewController, UITextInputDelegate {\n    let textView = UITextView()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        textView.frame = self.view.bounds\n        textView.delegate = self\n        self.view.addSubview(textView)\n    }\n\n    func textWillChange(_ textInput: UITextInput?) {\n        print(\"텍스트가 바뀌기 직전입니다.\")\n    }\n\n    func textDidChange(_ textInput: UITextInput?) {\n        print(\"텍스트가 바뀐 후입니다.\")\n    }\n\n    func selectionWillChange(_ textInput: UITextInput?) {\n        print(\"텍스트 선택이 바뀌기 직전입니다.\")\n    }\n\n    func selectionDidChange(_ textInput: UITextInput?) {\n        print(\"텍스트 선택이 바뀐 후입니다.\")\n    }\n}\n"}],"position":{"start":{"line":21,"column":1,"offset":954},"end":{"line":50,"column":4,"offset":1641}}},"children":"import UIKit\n\nclass ViewController: UIViewController, UITextInputDelegate {\n    let textView = UITextView()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        textView.frame = self.view.bounds\n        textView.delegate = self\n        self.view.addSubview(textView)\n    }\n\n    func textWillChange(_ textInput: UITextInput?) {\n        print(\"텍스트가 바뀌기 직전입니다.\")\n    }\n\n    func textDidChange(_ textInput: UITextInput?) {\n        print(\"텍스트가 바뀐 후입니다.\")\n    }\n\n    func selectionWillChange(_ textInput: UITextInput?) {\n        print(\"텍스트 선택이 바뀌기 직전입니다.\")\n    }\n\n    func selectionDidChange(_ textInput: UITextInput?) {\n        print(\"텍스트 선택이 바뀐 후입니다.\")\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"ca3f63e9","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"성능 최적화를 위한 팁"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextInputDelegate","position":{"start":{"line":54,"column":1,"offset":1660},"end":{"line":54,"column":22,"offset":1681}}}],"position":{"start":{"line":54,"column":1,"offset":1660},"end":{"line":54,"column":22,"offset":1681}}},"children":"UITextInputDelegate"}}],"를 활용하면 텍스트 입력 중 성능 문제를 최소화하면서 풍부한 사용자 인터랙션을 제공할 수 있습니다. 다음은 성능 최적화를 위한 몇 가지 팁입니다:"]}],"\n",["$","h3",null,{"id":"e2e9544e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 필요한 작업만 수행하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"텍스트 입력이 변경될 때마다 다양한 코드가 실행되면 성능에 부정적인 영향을 줄 수 있습니다. 이벤트 처리 메소드 내부에서는 꼭 필요한 작업만 수행하도록 코드를 작성하는 것이 좋습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func textDidChange(_ textInput: UITextInput?) {\n    guard let textView = textInput as? UITextView else { return }\n    // 최소한의 작업만 수행\n    updateCharacterCountLabel(textView.text)\n}\n"}],"position":{"start":{"line":60,"column":1,"offset":1889},"end":{"line":66,"column":4,"offset":2081}}},"children":"func textDidChange(_ textInput: UITextInput?) {\n    guard let textView = textInput as? UITextView else { return }\n    // 최소한의 작업만 수행\n    updateCharacterCountLabel(textView.text)\n}\n"}}]}],"\n",["$","h3",null,{"id":"c3447629","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 백그라운드 작업으로 처리하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"텍스트 입력 처리 과정에서 시간이 오래 걸리는 작업이 있다면, 해당 작업을 백그라운드 스레드로 이동시켜 메인 스레드의 부담을 줄일 수 있습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func textDidChange(_ textInput: UITextInput?) {\n    DispatchQueue.global(qos: .background).async {\n        performHeavyTask()\n        DispatchQueue.main.async {\n            // 필요한 경우 UI 업데이트\n        }\n    }\n}\n"}],"position":{"start":{"line":72,"column":1,"offset":2189},"end":{"line":81,"column":4,"offset":2410}}},"children":"func textDidChange(_ textInput: UITextInput?) {\n    DispatchQueue.global(qos: .background).async {\n        performHeavyTask()\n        DispatchQueue.main.async {\n            // 필요한 경우 UI 업데이트\n        }\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"1e64fb49","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 캐싱을 활용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"반복적으로 수행되는 작업에 대해 캐시를 사용하면 성능을 크게 향상시킬 수 있습니다. 예를 들어, 텍스트의 길이나 특정 패턴을 자주 검사한다면, 그 결과를 캐시해둘 수 있습니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"var characterCountCache: [String: Int] = [:]\n\nfunc textDidChange(_ textInput: UITextInput?) {\n    guard let textView = textInput as? UITextView else { return }\n    let text = textView.text\n\n    if let cachedCount = characterCountCache[text] {\n        updateCharacterCountLabel(cachedCount)\n    } else {\n        let characterCount = text.count\n        characterCountCache[text] = characterCount\n        updateCharacterCountLabel(characterCount)\n    }\n}\n"}],"position":{"start":{"line":87,"column":1,"offset":2529},"end":{"line":102,"column":4,"offset":2993}}},"children":"var characterCountCache: [String: Int] = [:]\n\nfunc textDidChange(_ textInput: UITextInput?) {\n    guard let textView = textInput as? UITextView else { return }\n    let text = textView.text\n\n    if let cachedCount = characterCountCache[text] {\n        updateCharacterCountLabel(cachedCount)\n    } else {\n        let characterCount = text.count\n        characterCountCache[text] = characterCount\n        updateCharacterCountLabel(characterCount)\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"e7f87acd","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"다양한 시나리오에 적용하기"}],"\n",["$","h3",null,{"id":"85dece57","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"입력 제한 기능 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["입력 가능한 텍스트의 최대 길이를 제한하는 것도 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextInputDelegate","position":{"start":{"line":108,"column":28,"offset":3058},"end":{"line":108,"column":49,"offset":3079}}}],"position":{"start":{"line":108,"column":28,"offset":3058},"end":{"line":108,"column":49,"offset":3079}}},"children":"UITextInputDelegate"}}],"를 통해 쉽게 구현할 수 있습니다. 예를 들어, 다음 코드는 텍스트 입력이 100자를 초과하지 않도록 제한합니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func textDidChange(_ textInput: UITextInput?) {\n    guard let textView = textInput as? UITextView else { return }\n    if textView.text.count > 100 {\n        textView.text = String(textView.text.prefix(100))\n    }\n}\n"}],"position":{"start":{"line":110,"column":1,"offset":3144},"end":{"line":117,"column":4,"offset":3371}}},"children":"func textDidChange(_ textInput: UITextInput?) {\n    guard let textView = textInput as? UITextView else { return }\n    if textView.text.count > 100 {\n        textView.text = String(textView.text.prefix(100))\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"f7313850","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"특수 기능 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["메시징 앱에서 흔히 볼 수 있는 '@'를 입력하면 특정 사용자 목록을 표시하는 기능도 구현할 수 있습니다. 이를 위해서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextInputDelegate","position":{"start":{"line":121,"column":69,"offset":3455},"end":{"line":121,"column":90,"offset":3476}}}],"position":{"start":{"line":121,"column":69,"offset":3455},"end":{"line":121,"column":90,"offset":3476}}},"children":"UITextInputDelegate"}}],"를 사용하여 '@'가 입력되는 시점을 포착하고, 해당 시점에 사용자 목록을 표시하면 됩니다."]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func textDidChange(_ textInput: UITextInput?) {\n    guard let textView = textInput as? UITextView else { return }\n    if textView.text.hasSuffix(\"@\") {\n        showUserList() // 특수 기능을 구현하는 메소드\n    }\n}\n"}],"position":{"start":{"line":123,"column":1,"offset":3529},"end":{"line":130,"column":4,"offset":3743}}},"children":"func textDidChange(_ textInput: UITextInput?) {\n    guard let textView = textInput as? UITextView else { return }\n    if textView.text.hasSuffix(\"@\") {\n        showUserList() // 특수 기능을 구현하는 메소드\n    }\n}\n"}}]}],"\n",["$","h1",null,{"id":"5b12bcf2","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextInputDelegate","position":{"start":{"line":134,"column":1,"offset":3751},"end":{"line":134,"column":22,"offset":3772}}}],"position":{"start":{"line":134,"column":1,"offset":3751},"end":{"line":134,"column":22,"offset":3772}}},"children":"UITextInputDelegate"}}],"는 Swift 앱에서 텍스트 입력을 최적화하는 강력한 도구입니다. 텍스트 변경 전후와 선택 변경 전후의 이벤트를 처리함으로써 다양한 사용자 인터랙션 시나리오에 대응할 수 있습니다. 또한 이러한 기능을 통해 사용자 경험을 향상시키고 앱의 성능을 최적화할 수 있습니다. 위의 팁과 예제를 활용하여 여러분의 앱에서도 효율적인 텍스트 입력 처리를 구현해보세요."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"UITextInputDelegate를 사용하여 Swift 앱의 텍스트 입력 최적화하기","toc":[{"tagName":"h1","title":"UITextInputDelegate를 사용하여 Swift 앱의 텍스트 입력 최적화하기","id":"2dd06c02"},{"tagName":"h2","title":"UITextInputDelegate란?","id":"475ad5c9"},{"tagName":"h2","title":"UITextInputDelegate 설정 방법","id":"d70d58c5"},{"tagName":"h2","title":"성능 최적화를 위한 팁","id":"ca3f63e9"},{"tagName":"h3","title":"1. 필요한 작업만 수행하기","id":"e2e9544e"},{"tagName":"h3","title":"2. 백그라운드 작업으로 처리하기","id":"c3447629"},{"tagName":"h3","title":"3. 캐싱을 활용하기","id":"1e64fb49"},{"tagName":"h2","title":"다양한 시나리오에 적용하기","id":"e7f87acd"},{"tagName":"h3","title":"입력 제한 기능 구현","id":"85dece57"},{"tagName":"h3","title":"특수 기능 구현","id":"f7313850"},{"tagName":"h1","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
