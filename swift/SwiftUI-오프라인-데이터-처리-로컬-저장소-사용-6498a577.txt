1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI-%EC%98%A4%ED%94%84%EB%9D%BC%EC%9D%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-%EB%A1%9C%EC%BB%AC-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%82%AC%EC%9A%A9-6498a577","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI-오프라인-데이터-처리-로컬-저장소-사용-6498a577\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI-%EC%98%A4%ED%94%84%EB%9D%BC%EC%9D%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-%EB%A1%9C%EC%BB%AC-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%82%AC%EC%9A%A9-6498a577","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI-오프라인-데이터-처리-로컬-저장소-사용-6498a577\"}"},"styles":[]}],"segment":["slug","SwiftUI-%EC%98%A4%ED%94%84%EB%9D%BC%EC%9D%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-%EB%A1%9C%EC%BB%AC-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%82%AC%EC%9A%A9-6498a577","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI 오프라인 데이터 처리: 로컬 저장소 사용 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 SwiftUI 애플리케이션에서 오프라인 상태에서도 원활하게 데이터를 처리하고 관리할 수 있도록 도와주는 로컬 저장소 사용 방법을 다룹니다. 로컬 데이터 저장소를 사용함으로써 사용자는 인터넷 연결 없이도 중요한 데이터를 접근하고 활용할 수 있습니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,로컬 저장소,오프라인 데이터,Swift"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI-%EC%98%A4%ED%94%84%EB%9D%BC%EC%9D%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-%EB%A1%9C%EC%BB%AC-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%82%AC%EC%9A%A9-6498a577"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI 오프라인 데이터 처리: 로컬 저장소 사용 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI 오프라인 데이터 처리: 로컬 저장소 사용 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 SwiftUI 애플리케이션에서 오프라인 상태에서도 원활하게 데이터를 처리하고 관리할 수 있도록 도와주는 로컬 저장소 사용 방법을 다룹니다. 로컬 데이터 저장소를 사용함으로써 사용자는 인터넷 연결 없이도 중요한 데이터를 접근하고 활용할 수 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI-%EC%98%A4%ED%94%84%EB%9D%BC%EC%9D%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC-%EB%A1%9C%EC%BB%AC-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%82%AC%EC%9A%A9-6498a577"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI 오프라인 데이터 처리: 로컬 저장소 사용 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 SwiftUI 애플리케이션에서 오프라인 상태에서도 원활하게 데이터를 처리하고 관리할 수 있도록 도와주는 로컬 저장소 사용 방법을 다룹니다. 로컬 데이터 저장소를 사용함으로써 사용자는 인터넷 연결 없이도 중요한 데이터를 접근하고 활용할 수 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
10:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
11:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T5a1,import SwiftUI
import CoreData

struct ContentView: View {
    @Environment(\.managedObjectContext) private var viewContext
    @FetchRequest(
        entity: Person.entity(),
        sortDescriptors: [NSSortDescriptor(keyPath: \Person.name, ascending: true)]
    ) var people: FetchedResults<Person>

    @State private var name: String = ""
    @State private var age: String = ""

    var body: some View {
        VStack {
            TextField("이름", text: $name).padding()

            TextField("나이", text: $age).keyboardType(.numberPad).padding()

            Button(action: addPerson) {
                Text("추가")
            }.padding()

            List {
                ForEach(people) { person in
                    VStack(alignment: .leading) {
                        Text(person.name ?? "이름 없음")
                        Text("나이: \(person.age)")
                    }
                }
            }
        }
        .padding()
    }

    private func addPerson() {
        withAnimation {
            let newPerson = Person(context: viewContext)
            newPerson.name = name
            newPerson.age = Int16(age) ?? 0

            do {
                try viewContext.save()
            } catch {
                let nsError = error as NSError
                fatalError("Unresolved error \(nsError), \(nsError.userInfo)")
            }
        }
    }
}

extension Person : Identifiable { }
f:T5a1,import SwiftUI
import CoreData

struct ContentView: View {
    @Environment(\.managedObjectContext) private var viewContext
    @FetchRequest(
        entity: Person.entity(),
        sortDescriptors: [NSSortDescriptor(keyPath: \Person.name, ascending: true)]
    ) var people: FetchedResults<Person>

    @State private var name: String = ""
    @State private var age: String = ""

    var body: some View {
        VStack {
            TextField("이름", text: $name).padding()

            TextField("나이", text: $age).keyboardType(.numberPad).padding()

            Button(action: addPerson) {
                Text("추가")
            }.padding()

            List {
                ForEach(people) { person in
                    VStack(alignment: .leading) {
                        Text(person.name ?? "이름 없음")
                        Text("나이: \(person.age)")
                    }
                }
            }
        }
        .padding()
    }

    private func addPerson() {
        withAnimation {
            let newPerson = Person(context: viewContext)
            newPerson.name = name
            newPerson.age = Int16(age) ?? 0

            do {
                try viewContext.save()
            } catch {
                let nsError = error as NSError
                fatalError("Unresolved error \(nsError), \(nsError.userInfo)")
            }
        }
    }
}

extension Person : Identifiable { }
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI 오프라인 데이터 처리: 로컬 저장소 사용"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI 오프라인 데이터 처리: 로컬 저장소 사용"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-21"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"20e30abe","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI 오프라인 데이터 처리: 로컬 저장소 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 Apple 생태계에서 가장 최신의 사용자 인터페이스 프레임워크로, iOS, macOS, tvOS 및 watchOS에서 일관된 사용자 경험을 제공합니다. 이런 강력한 도구를 사용하여 우리는 데이터를 온라인뿐만 아니라 오프라인에서도 효과적으로 관리할 수 있습니다. 여기서는 SwiftUI에서 로컬 저장소를 사용하여 데이터를 저장하고 처리하는 방법에 대해 설명하겠습니다."}],"\n",["$","h2",null,{"id":"f8d8ece7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"로컬 저장소의 필요성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"현대 모바일 애플리케이션은 대부분 네트워크 연결을 기반으로 합니다. 하지만 항상 안정적인 연결을 기대할 수 없으며, 데이터 종종 오프라인 환경에서도 접근해야 할 필요가 있습니다. 이를 위해 로컬 저장소를 사용합니다. 로컬 저장소의 도움이 되는 주요 시나리오는 다음과 같습니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"인터넷 연결이 없는 경우"}],": 사용자가 데이터를 여전히 접근 및 업데이트할 수 있어야 합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"데이터 캐싱"}],": 서버로부터 자주 요청되는 데이터를 캐싱하여 사용자 경험을 개선합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"데이터 백업"}],": 중요한 데이터를 로컬에 백업하여 데이터 손실을 방지합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"dad3eaa3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"SwiftUI에서 로컬 저장소 옵션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI에서 사용할 수 있는 로컬 저장소 옵션에는 여러 가지가 있습니다. 가장 널리 사용되는 방법은 다음과 같습니다:"}],"\n",["$","ol","ol-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"UserDefaults"}],": 간단하고 가벼운 데이터 저장에 적합합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"파일 시스템"}],": 파일을 직접 읽고 쓸 수 있습니다. 예를 들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".txt","position":{"start":{"line":19,"column":43,"offset":764},"end":{"line":19,"column":49,"offset":770}}}],"position":{"start":{"line":19,"column":43,"offset":764},"end":{"line":19,"column":49,"offset":770}}},"children":".txt"}}]," 파일이나 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".json","position":{"start":{"line":19,"column":55,"offset":776},"end":{"line":19,"column":62,"offset":783}}}],"position":{"start":{"line":19,"column":55,"offset":776},"end":{"line":19,"column":62,"offset":783}}},"children":".json"}}]," 파일 등을 사용할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"CoreData"}],": 더욱 복잡하고 구조화된 데이터를 관리하는 데 적합합니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"SQLite"}],": CoreData에 비해 더 직접적으로 데이터베이스를 관리합니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이렇게 많은 옵션이 있지만, 여기서는 UserDefaults와 CoreData를 중심으로 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"87f195de","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UserDefaults 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UserDefaults는 애플리케이션의 설정값을 저장하는 데 주로 사용되지만, 어느 정도의 단순한 데이터를 저장하는 데에도 사용할 수 있습니다. 다음은 UserDefaults를 통해 데이터를 저장하고 로드하는 방법입니다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var name: String = UserDefaults.standard.string(forKey: \"name\") ?? \"\"\n    @State private var age: Int = UserDefaults.standard.integer(forKey: \"age\")\n\n    var body: some View {\n        VStack {\n            TextField(\"이름\", text: $name)\n                .padding().onDisappear {\n                    UserDefaults.standard.set(self.name, forKey: \"name\")\n                }\n\n            TextField(\"나이\", value: $age, formatter: NumberFormatter())\n                .padding().onDisappear {\n                    UserDefaults.standard.set(self.age, forKey: \"age\")\n                }        \n        }\n        .padding().onAppear {\n            self.name = UserDefaults.standard.string(forKey: \"name\") ?? \"\"\n            self.age = UserDefaults.standard.integer(forKey: \"age\")\n        }\n    }\n}\n"}],"position":{"start":{"line":29,"column":1,"offset":1110},"end":{"line":54,"column":4,"offset":1961}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var name: String = UserDefaults.standard.string(forKey: \"name\") ?? \"\"\n    @State private var age: Int = UserDefaults.standard.integer(forKey: \"age\")\n\n    var body: some View {\n        VStack {\n            TextField(\"이름\", text: $name)\n                .padding().onDisappear {\n                    UserDefaults.standard.set(self.name, forKey: \"name\")\n                }\n\n            TextField(\"나이\", value: $age, formatter: NumberFormatter())\n                .padding().onDisappear {\n                    UserDefaults.standard.set(self.age, forKey: \"age\")\n                }        \n        }\n        .padding().onAppear {\n            self.name = UserDefaults.standard.string(forKey: \"name\") ?? \"\"\n            self.age = UserDefaults.standard.integer(forKey: \"age\")\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위 코드는 사용자 이름과 나이를 UserDefaults에 저장하고 애플리케이션이 실행될 때 해당 값을 불러오는 간단한 예제입니다."}],"\n",["$","h2",null,{"id":"1c9576b9","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"CoreData 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"CoreData는 더 복잡한 데이터 모델을 필요로 하는 경우에 유용합니다. SwiftUI에서 CoreData를 사용하는 방법은 다음과 같습니다."}],"\n",["$","h3",null,{"id":"44e71383","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"CoreData 설정"}],"\n",["$","ol","ol-2",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"프로젝트 설정"}],": Xcode에서 새로운 프로젝트를 생성할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Use Core Data","position":{"start":{"line":64,"column":41,"offset":2194},"end":{"line":64,"column":56,"offset":2209}}}],"position":{"start":{"line":64,"column":41,"offset":2194},"end":{"line":64,"column":56,"offset":2209}}},"children":"Use Core Data"}}]," 옵션을 선택합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"데이터 모델 작성"}],": .xcdatamodeld 파일을 열어 데이터 모델을 작성합니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"70bbc851","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"CoreData 엔티티와 속성 추가"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Person","position":{"start":{"line":69,"column":10,"offset":2310},"end":{"line":69,"column":18,"offset":2318}}}],"position":{"start":{"line":69,"column":10,"offset":2310},"end":{"line":69,"column":18,"offset":2318}}},"children":"Person"}}],"이라는 엔티티를 생성하고, 이 엔티티에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name","position":{"start":{"line":69,"column":40,"offset":2340},"end":{"line":69,"column":46,"offset":2346}}}],"position":{"start":{"line":69,"column":40,"offset":2340},"end":{"line":69,"column":46,"offset":2346}}},"children":"name"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"age","position":{"start":{"line":69,"column":48,"offset":2348},"end":{"line":69,"column":53,"offset":2353}}}],"position":{"start":{"line":69,"column":48,"offset":2348},"end":{"line":69,"column":53,"offset":2353}}},"children":"age"}}]," 속성을 추가해 보겠습니다."]}],"\n",["$","h3",null,{"id":"5fbaf44c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"SwiftUI와 CoreData 연동하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음으로, CoreData를 SwiftUI와 연동하여 데이터를 저장하고 불러오는 방법을 살펴보겠습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":75,"column":1,"offset":2457},"end":{"line":128,"column":4,"offset":3886}}},"children":"$f"}}]}],"\n",["$","h3",null,{"id":"157a5edc","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"주요 포인트"}],"\n",["$","ol","ol-3",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@Environment(\\.managedObjectContext)","position":{"start":{"line":131,"column":4,"offset":3902},"end":{"line":131,"column":42,"offset":3940}}}],"position":{"start":{"line":131,"column":4,"offset":3902},"end":{"line":131,"column":42,"offset":3940}}},"children":"@Environment(\\.managedObjectContext)"}}],"를 사용하여 CoreData의 관리 객체 컨텍스트를 가져옵니다."]}],"\n",["$","li","li-1",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@FetchRequest","position":{"start":{"line":132,"column":4,"offset":3979},"end":{"line":132,"column":19,"offset":3994}}}],"position":{"start":{"line":132,"column":4,"offset":3979},"end":{"line":132,"column":19,"offset":3994}}},"children":"@FetchRequest"}}]," 프로퍼티 랩퍼를 사용하여 특정 엔티티를 불러옵니다."]}],"\n",["$","li","li-2",{"children":["데이터를 추가하는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addPerson","position":{"start":{"line":133,"column":14,"offset":4037},"end":{"line":133,"column":25,"offset":4048}}}],"position":{"start":{"line":133,"column":14,"offset":4037},"end":{"line":133,"column":25,"offset":4048}}},"children":"addPerson"}}]," 함수를 정의하고, 이를 버튼에 연결하여 사용자가 데이터를 입력하고 추가하도록 합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI에서 오프라인 데이터 처리는 사용자의 경험을 크게 향상시킬 수 있으며, UserDefaults와 CoreData는 이를 위한 주요 도구입니다. UserDefaults는 간단한 데이터 저장에, CoreData는 복잡한 데이터 모델과 관계를 관리하는 데 유용합니다. 이를 활용하여 애플리케이션이 오프라인 상태에서도 원활히 작동하도록 할 수 있습니다."}]]}]}],["$","$L10",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L11",null,{"articleTitle":"SwiftUI 오프라인 데이터 처리: 로컬 저장소 사용","toc":[{"tagName":"h1","title":"SwiftUI 오프라인 데이터 처리: 로컬 저장소 사용","id":"20e30abe"},{"tagName":"h2","title":"로컬 저장소의 필요성","id":"f8d8ece7"},{"tagName":"h2","title":"SwiftUI에서 로컬 저장소 옵션","id":"dad3eaa3"},{"tagName":"h2","title":"UserDefaults 사용하기","id":"87f195de"},{"tagName":"h2","title":"CoreData 사용하기","id":"1c9576b9"},{"tagName":"h3","title":"CoreData 설정","id":"44e71383"},{"tagName":"h3","title":"CoreData 엔티티와 속성 추가","id":"70bbc851"},{"tagName":"h3","title":"SwiftUI와 CoreData 연동하기","id":"5fbaf44c"},{"tagName":"h3","title":"주요 포인트","id":"157a5edc"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
