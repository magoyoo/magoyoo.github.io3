1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","Nextjs-%EC%97%90%EB%9F%AC-%ED%95%B8%EB%93%A4%EB%A7%81-%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EB%A7%8C%EB%93%A4%EA%B8%B0-bd8480d4","d"],{"children":["__PAGE__?{\"slug\":\"Nextjs-에러-핸들링-안정적인-애플리케이션-만들기-bd8480d4\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","Nextjs-%EC%97%90%EB%9F%AC-%ED%95%B8%EB%93%A4%EB%A7%81-%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EB%A7%8C%EB%93%A4%EA%B8%B0-bd8480d4","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Nextjs-에러-핸들링-안정적인-애플리케이션-만들기-bd8480d4\"}"},"styles":[]}],"segment":["slug","Nextjs-%EC%97%90%EB%9F%AC-%ED%95%B8%EB%93%A4%EB%A7%81-%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EB%A7%8C%EB%93%A4%EA%B8%B0-bd8480d4","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Next.js 에러 핸들링: 안정적인 애플리케이션 만들기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 Next.js 애플리케이션에서 발생하는 다양한 에러를 효과적으로 처리하는 방법과 안정적인 애플리케이션을 만드는 방법에 대해 설명합니다. 에러 핸들링은 사용자 경험을 향상시키고 디버깅을 용이하게 만듭니다."}],["$","meta","3",{"name":"keywords","content":"Next.js,에러 핸들링,JavaScript,안정성"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/Nextjs-%EC%97%90%EB%9F%AC-%ED%95%B8%EB%93%A4%EB%A7%81-%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EB%A7%8C%EB%93%A4%EA%B8%B0-bd8480d4"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Next.js 에러 핸들링: 안정적인 애플리케이션 만들기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Next.js 에러 핸들링: 안정적인 애플리케이션 만들기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 Next.js 애플리케이션에서 발생하는 다양한 에러를 효과적으로 처리하는 방법과 안정적인 애플리케이션을 만드는 방법에 대해 설명합니다. 에러 핸들링은 사용자 경험을 향상시키고 디버깅을 용이하게 만듭니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/Nextjs-%EC%97%90%EB%9F%AC-%ED%95%B8%EB%93%A4%EB%A7%81-%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EB%A7%8C%EB%93%A4%EA%B8%B0-bd8480d4"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Next.js 에러 핸들링: 안정적인 애플리케이션 만들기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 Next.js 애플리케이션에서 발생하는 다양한 에러를 효과적으로 처리하는 방법과 안정적인 애플리케이션을 만드는 방법에 대해 설명합니다. 에러 핸들링은 사용자 경험을 향상시키고 디버깅을 용이하게 만듭니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Next.js 에러 핸들링: 안정적인 애플리케이션 만들기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Next.js 에러 핸들링: 안정적인 애플리케이션 만들기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-31"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"741535ae","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Next.js 에러 핸들링: 안정적인 애플리케이션 만들기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Next.js는 React 애플리케이션을 위한 강력한 프레임워크로, 서버 사이드 렌더링(SSR)과 정적 사이트 생성(SSG)을 안정적으로 지원합니다. 하지만 아무리 잘 짜여진 코드라고 할지라도 에러는 발생할 수 있기 때문에, 다양한 에러를 효과적으로 처리하는 것은 안정적이고 사용자 경험이 뛰어난 애플리케이션을 만드는 데 필수적입니다. 이번 글에서는 Next.js에서 에러를 효율적으로 핸들링하는 방법을 다루겠습니다."}],"\n",["$","h2",null,{"id":"e61603f8","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"1. 에러 타입 이해하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Next.js에서 발생할 수 있는 에러는 크게 세 가지로 분류할 수 있습니다: ",["$","strong",null,{"className":"font-black","children":"컴파일 에러"}],", ",["$","strong",null,{"className":"font-black","children":"런타임 에러"}],", ",["$","strong",null,{"className":"font-black","children":"서버 에러"}],"입니다."]}],"\n",["$","h3",null,{"id":"9d8cc15e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"컴파일 에러"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"컴파일 에러는 애플리케이션 코드 작성 중 문법적인 오류나 컴파일러가 감지한 오류입니다. 이러한 에러는 개발 단계에서 Visual Studio Code(VSCode)나 WebStorm 같은 코드 에디터와 연동된 Linter를 통해 즉시 확인할 수 있습니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// 컴파일 에러 예시\nconst sum = (a, b) => {\n  return a + b\n}\nconsole.log(sum(1, 2));\nconsole.log(sum(1)); // 두 번째 인자가 빠져 있어 오류 발생\n"}],"position":{"start":{"line":14,"column":1,"offset":528},"end":{"line":21,"column":4,"offset":668}}},"children":"// 컴파일 에러 예시\nconst sum = (a, b) => {\n  return a + b\n}\nconsole.log(sum(1, 2));\nconsole.log(sum(1)); // 두 번째 인자가 빠져 있어 오류 발생\n"}}]}],"\n",["$","h3",null,{"id":"460c48d1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"런타임 에러"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"런타임 에러는 애플리케이션이 실행 중에 발생하는 오류로, 함수 호출이나 API 결과 처리 등에서 발생할 수 있습니다. 이러한 에러는 try-catch 구문을 이용해 처리할 수 있습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// 런타임 에러 예시\ntry {\n  const response = await fetch('/api/data');\n  const data = await response.json();\n  console.log(data);\n} catch (error) {\n  console.error('Fetch error:', error);\n}\n"}],"position":{"start":{"line":27,"column":1,"offset":787},"end":{"line":36,"column":4,"offset":987}}},"children":"// 런타임 에러 예시\ntry {\n  const response = await fetch('/api/data');\n  const data = await response.json();\n  console.log(data);\n} catch (error) {\n  console.error('Fetch error:', error);\n}\n"}}]}],"\n",["$","h3",null,{"id":"68e27318","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"서버 에러"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"서버 에러는 서버 측에서 발생하는 오류로, 데이터베이스 연결 실패, 서버 과부하 등 다양한 원인에 의해 발생할 수 있습니다. 이러한 오류는 서버 로그를 활용해 감지하고 처리를 해야 합니다."}],"\n",["$","h2",null,{"id":"812dd4ac","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"2. 커스텀 에러 페이지 만들기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Next.js는 기본적으로 사용자에게 에러 페이지를 제공합니다. 하지만 커스텀 에러 페이지를 만들면 사용자 경험을 개선하고, 브랜드 일관성을 유지할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pages/_error.js","position":{"start":{"line":44,"column":92,"offset":1220},"end":{"line":44,"column":109,"offset":1237}}}],"position":{"start":{"line":44,"column":92,"offset":1220},"end":{"line":44,"column":109,"offset":1237}}},"children":"pages/_error.js"}}]," 파일을 생성해 커스텀 에러 페이지를 만들 수 있습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// pages/_error.js\nimport React from 'react';\n\nconst ErrorPage = ({ statusCode }) => {\n  return (\n    <p>\n      {statusCode\n        ? `An error ${statusCode} occurred on server`\n        : 'An error occurred on client'}\n    </p>\n  );\n}\n\nErrorPage.getInitialProps = ({ res, err }) => {\n  const statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n  return { statusCode };\n}\n\nexport default ErrorPage;\n"}],"position":{"start":{"line":46,"column":1,"offset":1270},"end":{"line":66,"column":4,"offset":1697}}},"children":"// pages/_error.js\nimport React from 'react';\n\nconst ErrorPage = ({ statusCode }) => {\n  return (\n    <p>\n      {statusCode\n        ? `An error ${statusCode} occurred on server`\n        : 'An error occurred on client'}\n    </p>\n  );\n}\n\nErrorPage.getInitialProps = ({ res, err }) => {\n  const statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n  return { statusCode };\n}\n\nexport default ErrorPage;\n"}}]}],"\n",["$","h2",null,{"id":"411eaaea","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"3. 전역 에러 핸들링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["서버 측 에러를 전역적으로 핸들링하기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getInitialProps","position":{"start":{"line":70,"column":25,"offset":1740},"end":{"line":70,"column":42,"offset":1757}}}],"position":{"start":{"line":70,"column":25,"offset":1740},"end":{"line":70,"column":42,"offset":1757}}},"children":"getInitialProps"}}],"를 활용할 수 있습니다. 이 메서드를 이용하여, 페이지가 요청될 때 에러를 감지하고 처리할 수 있습니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// _app.js\nimport App from 'next/app';\nimport React from 'react';\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n    return { pageProps };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('An error occurred:', error, errorInfo);\n    // logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n    return <Component {...pageProps} />;\n  }\n}\n\nexport default MyApp;\n"}],"position":{"start":{"line":72,"column":1,"offset":1817},"end":{"line":98,"column":4,"offset":2416}}},"children":"// _app.js\nimport App from 'next/app';\nimport React from 'react';\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n    return { pageProps };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('An error occurred:', error, errorInfo);\n    // logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n    return <Component {...pageProps} />;\n  }\n}\n\nexport default MyApp;\n"}}]}],"\n",["$","h2",null,{"id":"d8341800","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"4. API 경로 에러 핸들링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Next.js에서 API 경로를 정의할 때도 에러 핸들링이 중요합니다. API 요청 시 발생할 수 있는 다양한 오류를 처리하여 클라이언트에 적절한 응답을 제공해야 합니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// pages/api/data.js\nexport default async (req, res) => {\n  try {\n    const data = await fetchDataFromDatabase();\n    res.status(200).json({ data });\n  } catch (error) {\n    console.error('API error:', error);\n    res.status(500).json({ error: 'Internal Server Error' });\n  }\n};\n"}],"position":{"start":{"line":104,"column":1,"offset":2536},"end":{"line":115,"column":4,"offset":2832}}},"children":"// pages/api/data.js\nexport default async (req, res) => {\n  try {\n    const data = await fetchDataFromDatabase();\n    res.status(200).json({ data });\n  } catch (error) {\n    console.error('API error:', error);\n    res.status(500).json({ error: 'Internal Server Error' });\n  }\n};\n"}}]}],"\n",["$","h2",null,{"id":"f450c056","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"5. 사용자 정의 에러 클래스"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"특정 상황에서 발생하는 에러를 명시적으로 처리하기 위해 사용자 정의 에러 클래스를 활용할 수 있습니다. 이를 통해 에러 종류를 분류하고, 각 에러에 대해 다양한 처리 방식을 적용할 수 있습니다."}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// errors/CustomError.js\nclass CustomError extends Error {\n  constructor(message, statusCode) {\n    super(message);\n    this.statusCode = statusCode;\n  }\n}\n\nexport default CustomError;\n"}],"position":{"start":{"line":121,"column":1,"offset":2965},"end":{"line":131,"column":4,"offset":3167}}},"children":"// errors/CustomError.js\nclass CustomError extends Error {\n  constructor(message, statusCode) {\n    super(message);\n    this.statusCode = statusCode;\n  }\n}\n\nexport default CustomError;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CustomError","position":{"start":{"line":133,"column":4,"offset":3172},"end":{"line":133,"column":17,"offset":3185}}}],"position":{"start":{"line":133,"column":4,"offset":3172},"end":{"line":133,"column":17,"offset":3185}}},"children":"CustomError"}}]," 클래스를 이용해 특정 상황에서 발생하는 에러를 처리할 수 있습니다."]}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// pages/api/custom.js\nimport CustomError from '../../errors/CustomError';\n\nexport default async (req, res) => {\n  try {\n    const data = await fetchCriticalData();\n    if (!data) {\n      throw new CustomError('Critical data not found', 404);\n    }\n    res.status(200).json({ data });\n  } catch (error) {\n    if (error instanceof CustomError) {\n      res.status(error.statusCode).json({ error: error.message });\n    } else {\n      res.status(500).json({ error: 'Internal Server Error' });\n    }\n  }\n};\n"}],"position":{"start":{"line":135,"column":1,"offset":3225},"end":{"line":154,"column":4,"offset":3744}}},"children":"// pages/api/custom.js\nimport CustomError from '../../errors/CustomError';\n\nexport default async (req, res) => {\n  try {\n    const data = await fetchCriticalData();\n    if (!data) {\n      throw new CustomError('Critical data not found', 404);\n    }\n    res.status(200).json({ data });\n  } catch (error) {\n    if (error instanceof CustomError) {\n      res.status(error.statusCode).json({ error: error.message });\n    } else {\n      res.status(500).json({ error: 'Internal Server Error' });\n    }\n  }\n};\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Next.js 에러 핸들링은 우수한 사용자 경험을 제공하고, 안정적인 애플리케이션을 만들기 위해 필수적입니다. 여러 가지 에러 상황을 명시적으로 처리하고, 커스텀 에러 페이지 및 사용자 정의 에러 클래스를 활용함으로써 예기치 못한 오류를 효과적으로 대응할 수 있습니다. 이러한 방법들을 통해 Next.js 애플리케이션을 더욱 견고하게 만들어보세요."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Next.js 에러 핸들링: 안정적인 애플리케이션 만들기","toc":[{"tagName":"h1","title":"Next.js 에러 핸들링: 안정적인 애플리케이션 만들기","id":"741535ae"},{"tagName":"h2","title":"1. 에러 타입 이해하기","id":"e61603f8"},{"tagName":"h3","title":"컴파일 에러","id":"9d8cc15e"},{"tagName":"h3","title":"런타임 에러","id":"460c48d1"},{"tagName":"h3","title":"서버 에러","id":"68e27318"},{"tagName":"h2","title":"2. 커스텀 에러 페이지 만들기","id":"812dd4ac"},{"tagName":"h2","title":"3. 전역 에러 핸들링","id":"411eaaea"},{"tagName":"h2","title":"4. API 경로 에러 핸들링","id":"d8341800"},{"tagName":"h2","title":"5. 사용자 정의 에러 클래스","id":"f450c056"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
