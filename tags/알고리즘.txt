1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["tags",{"children":[["slug","%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98","d"],{"children":["__PAGE__?{\"slug\":\"알고리즘\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
9:I{"id":1247,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","396:static/chunks/396-5bd701a67a6189e9.js","355:static/chunks/app/tags/[slug]/page-4363d8d5fe95e0a7.js"],"name":"","async":false}
a:I{"id":41465,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","396:static/chunks/396-5bd701a67a6189e9.js","355:static/chunks/app/tags/[slug]/page-4363d8d5fe95e0a7.js"],"name":"","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children",["slug","%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8",["$","div",null,{"className":"pt-[80px]","children":[["$","$L9",null,{"language":"app","screenType":"TAGS"}],["$","main",null,{"className":"flex w-full justify-center","children":["$","div",null,{"className":"flex flex-row justify-start xl:w-[800px] w-full px-[20px] py-[40px] md:px-[40px] md:pb-[80px] md:pt-[60px] gap-[80px]","children":["$","section",null,{"className":"flex flex-1 flex-col gap-[80px]","children":[["$","h2",null,{"className":"md:flex hidden text-gray-900 font-semibold text-[22px]","children":"알고리즘 관련글"}],["$","ul",null,{"className":"flex flex-1 flex-col gap-[80px]","children":[["$","li","React.js 조정(Reconciliation) 알고리즘: 효율적인 UI 업데이트0",{"children":["$","$La",null,{"postMeta":{"id":"e9d41e33-822b-4cdb-b490-15af5d7b273c","path":"/javascript/Reactjs-조정Reconciliation-알고리즘-효율적인-UI-업데이트-e9d41e33","title":"React.js 조정(Reconciliation) 알고리즘: 효율적인 UI 업데이트","description":"React.js의 조정(Reconciliation) 알고리즘은 효율적으로 사용자 인터페이스(UI)를 업데이트하는 핵심 기술입니다. 이 알고리즘의 작동 방식과 성능 최적화를 위한 방법을 탐구합니다.","date":"2024-07-30T06:00:58.992Z","tags":[{"name":"React.js","path":"/tags/react.js","id":"react.js"},{"name":"Reconciliation","path":"/tags/reconciliation","id":"reconciliation"},{"name":"UI 업데이트","path":"/tags/ui-업데이트","id":"ui-업데이트"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"4.9","category":"javascript","banner":"/images/javascriptBanner2.jpg"},"index":0,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","다음 SEO(검색엔진 최적화)는 쉽다: 아무도 모르는 알고리즘의 비밀1",{"children":["$","$La",null,{"postMeta":{"id":"2e7369d0-9b47-4eee-9dc3-ebf47d49a5e7","path":"/seo/다음-SEO검색엔진-최적화는-쉽다-아무도-모르는-알고리즘의-비밀-2e7369d0","title":"다음 SEO(검색엔진 최적화)는 쉽다: 아무도 모르는 알고리즘의 비밀","description":"이 글은 검색엔진 최적화(SEO)에 대해 쉽게 이해할 수 있는 방법을 설명합니다. 특수 알고리즘의 비밀에 대해 잘 알려지지 않은 팁과 기법을 다룹니다.","date":"2024-07-16T06:02:33.266Z","tags":[{"name":"SEO","path":"/tags/seo","id":"seo"},{"name":"검색엔진","path":"/tags/검색엔진","id":"검색엔진"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"최적화","path":"/tags/최적화","id":"최적화"}],"readMin":"4.9","category":"seo","banner":"/images/seoBanner2.jpg"},"index":1,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","콘웨이의 생명 게임 알고리즘: 셀룰러 오토마타의 복잡성 탐구2",{"children":["$","$La",null,{"postMeta":{"id":"c3340329-394e-4538-9873-23295630fefa","path":"/algorithm/콘웨이의-생명-게임-알고리즘-셀룰러-오토마타의-복잡성-탐구-c3340329","title":"콘웨이의 생명 게임 알고리즘: 셀룰러 오토마타의 복잡성 탐구","description":"셀룰러 오토마타인 콘웨이의 생명 게임 알고리즘은 간단한 규칙을 통해 복잡한 행동을 생성하는 흥미로운 시스템입니다. 이 글에서는 생명 게임의 기본 규칙과 동작 방식을 설명하고, 이를 통해 나타나는 복잡성과 패턴을 살펴봅니다.","date":"2024-07-08T06:03:43.165Z","tags":[{"name":"셀룰러 오토마타","path":"/tags/셀룰러-오토마타","id":"셀룰러-오토마타"},{"name":"생명 게임","path":"/tags/생명-게임","id":"생명-게임"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"복잡성","path":"/tags/복잡성","id":"복잡성"}],"readMin":"4.8","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":2,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","퀵소트 대 병합정렬: 두 정렬 알고리즘의 효율성 비교3",{"children":["$","$La",null,{"postMeta":{"id":"1fd98692-7f17-4040-a783-4eae47c36985","path":"/algorithm/퀵소트-대-병합정렬-두-정렬-알고리즘의-효율성-비교-1fd98692","title":"퀵소트 대 병합정렬: 두 정렬 알고리즘의 효율성 비교","description":"퀵소트와 병합정렬은 둘 다 높은 효율성을 자랑하는 정렬 알고리즘입니다. 이 글에서는 두 알고리즘의 작동 방식, 시간 복잡도, 공간 복잡도 등을 비교하여 어떤 상황에서 더 나은 선택이 될 수 있는지 탐구합니다.","date":"2024-07-08T06:02:26.631Z","tags":[{"name":"퀵소트","path":"/tags/퀵소트","id":"퀵소트"},{"name":"병합정렬","path":"/tags/병합정렬","id":"병합정렬"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"정렬","path":"/tags/정렬","id":"정렬"}],"readMin":"5.9","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":3,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","엘감마르 알고리즘과 디지털 서명: 보안 강화를 위한 암호화 기술4",{"children":["$","$La",null,{"postMeta":{"id":"cd70496f-f257-4336-a0b4-c388f1b1ec03","path":"/algorithm/엘감마르-알고리즘과-디지털-서명-보안-강화를-위한-암호화-기술-cd70496f","title":"엘감마르 알고리즘과 디지털 서명: 보안 강화를 위한 암호화 기술","description":"엘감마르 알고리즘과 디지털 서명은 현대 보안 시스템에서 중요한 역할을 담당하고 있습니다. 이 글에서는 엘감마르 알고리즘의 작동 원리와 디지털 서명이 어떻게 데이터 무결성과 기밀성을 보장하는지에 대해 설명합니다. 이를 통해 다양한 애플리케이션에서 보안 강화를 위한 지식을 제공합니다.","date":"2024-07-07T06:02:42.600Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"보안","path":"/tags/보안","id":"보안"},{"name":"암호화","path":"/tags/암호화","id":"암호화"},{"name":"디지털 서명","path":"/tags/디지털-서명","id":"디지털-서명"}],"readMin":"4.8","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":4,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","헝가리안 알고리즘과 작업 할당 문제: 최적 자원 분배 전략5",{"children":["$","$La",null,{"postMeta":{"id":"7508e2c2-3d27-4e52-994a-b8c97cd964f1","path":"/algorithm/헝가리안-알고리즘과-작업-할당-문제-최적-자원-분배-전략-7508e2c2","title":"헝가리안 알고리즘과 작업 할당 문제: 최적 자원 분배 전략","description":"헝가리안 알고리즘은 작업 할당 문제를 효율적으로 해결하는 방법 중 하나입니다. 이 글에서는 헝가리안 알고리즘의 기본 개념과 적용 방법을 상세히 설명하며, 실제 문제 해결 사례를 통해 이해를 돕습니다.","date":"2024-07-06T06:02:58.246Z","tags":[{"name":"헝가리안 알고리즘","path":"/tags/헝가리안-알고리즘","id":"헝가리안-알고리즘"},{"name":"작업 할당 문제","path":"/tags/작업-할당-문제","id":"작업-할당-문제"},{"name":"최적 자원 분배","path":"/tags/최적-자원-분배","id":"최적-자원-분배"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"5.7","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":5,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","선택 정렬 알고리즘: 효율적인 정렬 방법으로 데이터 정리하기6",{"children":["$","$La",null,{"postMeta":{"id":"ac5e41de-e4f7-40e8-89d4-e5c3d3854f44","path":"/algorithm/선택-정렬-알고리즘-효율적인-정렬-방법으로-데이터-정리하기-ac5e41de","title":"선택 정렬 알고리즘: 효율적인 정렬 방법으로 데이터 정리하기","description":"이 글에서는 선택 정렬 알고리즘에 대해 설명하고, 이를 효율적으로 활용할 수 있는 방법에 대해 논의합니다. 선택 정렬 알고리즘은 간단하면서도 이해하기 쉬운 정렬 방법으로, 작은 데이터 세트에서 특히 유용합니다.","date":"2024-07-06T06:01:52.292Z","tags":[{"name":"선택 정렬","path":"/tags/선택-정렬","id":"선택-정렬"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"정렬","path":"/tags/정렬","id":"정렬"},{"name":"데이터 정리","path":"/tags/데이터-정리","id":"데이터-정리"}],"readMin":"6.0","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":6,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","협업 필터링 알고리즘과 맞춤형 추천: 사용자 경험 개선 방법7",{"children":["$","$La",null,{"postMeta":{"id":"48811940-bf69-48c3-bd11-50f2e3bedb79","path":"/algorithm/협업-필터링-알고리즘과-맞춤형-추천-사용자-경험-개선-방법-48811940","title":"협업 필터링 알고리즘과 맞춤형 추천: 사용자 경험 개선 방법","description":"협업 필터링 알고리즘은 사용자 경험을 개선하기 위한 강력한 도구입니다. 이 글에서는 협업 필터링의 기본 개념과 종류, 그리고 이를 활용한 맞춤형 추천 시스템 구축 방법에 대해 다룹니다.","date":"2024-07-06T06:00:48.045Z","tags":[{"name":"협업 필터링","path":"/tags/협업-필터링","id":"협업-필터링"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"맞춤형 추천","path":"/tags/맞춤형-추천","id":"맞춤형-추천"},{"name":"사용자 경험","path":"/tags/사용자-경험","id":"사용자-경험"}],"readMin":"5.5","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":7,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","레벤슈타인 거리(Levenshtein distance) 알고리즘: 텍스트 유사도 측정8",{"children":["$","$La",null,{"postMeta":{"id":"c440574c-b115-4492-a328-90044088d45e","path":"/algorithm/레벤슈타인-거리Levenshtein-distance-알고리즘-텍스트-유사도-측정-c440574c","title":"레벤슈타인 거리(Levenshtein distance) 알고리즘: 텍스트 유사도 측정","description":"레벤슈타인 거리 알고리즘은 두 문자열 사이의 편집 거리를 측정하여 텍스트 유사도를 계산하는 알고리즘입니다. 이 글에서는 레벤슈타인 거리의 원리, 적용 사례, 구현 방법 등을 마크다운 문법을 통해 상세히 설명합니다.","date":"2024-07-05T06:01:22.926Z","tags":[{"name":"레벤슈타인 거리","path":"/tags/레벤슈타인-거리","id":"레벤슈타인-거리"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"텍스트 유사도","path":"/tags/텍스트-유사도","id":"텍스트-유사도"},{"name":"편집 거리","path":"/tags/편집-거리","id":"편집-거리"}],"readMin":"5.0","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":8,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","알파-베타 가지치기와 게임 최적화: 더 빠른 의사결정 도구9",{"children":["$","$La",null,{"postMeta":{"id":"4e1d81ba-c351-4765-92fa-9d3eff133846","path":"/algorithm/알파베타-가지치기와-게임-최적화-더-빠른-의사결정-도구-4e1d81ba","title":"알파-베타 가지치기와 게임 최적화: 더 빠른 의사결정 도구","description":"알파-베타 가지치기는 게임 이론에서 사용하는 가지치기 기법으로, 의사결정 과정을 보다 효율적으로 만들고 탐색 트리의 크기를 줄이는 데 중요한 역할을 합니다. 이 글에서는 알파-베타 가지치기의 기본 개념과 이를 통해 게임 최적화를 이루는 방법에 대해 다룹니다.","date":"2024-07-01T06:03:18.362Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"게임 이론","path":"/tags/게임-이론","id":"게임-이론"},{"name":"최적화","path":"/tags/최적화","id":"최적화"},{"name":"알파-베타 가지치기","path":"/tags/알파-베타-가지치기","id":"알파-베타-가지치기"}],"readMin":"4.5","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":9,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","러프트(LZ78) 알고리즘과 데이터 압축: 효율적인 저장 공간 관리10",{"children":["$","$La",null,{"postMeta":{"id":"ffb6ae79-3d72-4ce2-aeaf-6efe4d46b035","path":"/algorithm/러프트LZ-알고리즘과-데이터-압축-효율적인-저장-공간-관리-ffb6ae79","title":"러프트(LZ78) 알고리즘과 데이터 압축: 효율적인 저장 공간 관리","description":"러프트(LZ78) 알고리즘과 데이터 압축의 중요성을 설명하고, 이를 통해 효율적인 저장 공간 관리를 실현하는 방법을 다룹니다. LZ78의 작동 원리와 예제를 포함하여 데이터 압축 기술의 기본 개념을 통해 실무에서 활용할 수 있는 방안을 제공합니다.","date":"2024-07-01T06:00:44.520Z","tags":[{"name":"LZ78","path":"/tags/lz78","id":"lz78"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"데이터 압축","path":"/tags/데이터-압축","id":"데이터-압축"},{"name":"저장 공간","path":"/tags/저장-공간","id":"저장-공간"}],"readMin":"5.1","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":10,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","포드-풀커슨 알고리즘과 최대 유량 문제: 네트워크 흐름 최적화11",{"children":["$","$La",null,{"postMeta":{"id":"a44000f1-48b0-4fc7-86b6-6992fd043577","path":"/algorithm/포드풀커슨-알고리즘과-최대-유량-문제-네트워크-흐름-최적화-a44000f1","title":"포드-풀커슨 알고리즘과 최대 유량 문제: 네트워크 흐름 최적화","description":"포드-풀커슨 알고리즘은 네트워크 흐름에서 최대 유량 문제를 해결하기 위한 기법 중 하나로, 가용 경로를 통해서 유량을 최대로 증가시키는 방법을 제시합니다. 이 글은 포드-풀커슨 알고리즘의 기본 개념과 그 응용에 대해 설명합니다.","date":"2024-06-30T06:01:52.599Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"네트워크 흐름","path":"/tags/네트워크-흐름","id":"네트워크-흐름"},{"name":"최대 유량","path":"/tags/최대-유량","id":"최대-유량"}],"readMin":"6.5","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":11,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","쿠커-태프트 알고리즘과 평행 처리: 병렬 컴퓨팅의 이해12",{"children":["$","$La",null,{"postMeta":{"id":"a661beba-c38d-45d1-8a9e-d3e69359eebc","path":"/algorithm/쿠커태프트-알고리즘과-평행-처리-병렬-컴퓨팅의-이해-a661beba","title":"쿠커-태프트 알고리즘과 평행 처리: 병렬 컴퓨팅의 이해","description":"쿠커-태프트 알고리즘은 고도의 병렬 컴퓨팅을 위한 알고리즘으로, 특히 다항 시간 내에서의 문제 해결에 큰 역할을 합니다. 본 글에서는 쿠커-태프트 알고리즘의 개요와 병렬 컴퓨팅에서의 활용을 다룹니다.","date":"2024-06-28T06:01:37.559Z","tags":[{"name":"쿠커-태프트 알고리즘","path":"/tags/쿠커-태프트-알고리즘","id":"쿠커-태프트-알고리즘"},{"name":"병렬 컴퓨팅","path":"/tags/병렬-컴퓨팅","id":"병렬-컴퓨팅"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"다항 시간","path":"/tags/다항-시간","id":"다항-시간"}],"readMin":"4.6","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":12,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","퍼셉트론 알고리즘과 기계학습: 인공 신경망의 기초 이해 해보기13",{"children":["$","$La",null,{"postMeta":{"id":"c3568c75-30ff-44d4-abd2-648068d6d199","path":"/algorithm/퍼셉트론-알고리즘과-기계학습-인공-신경망의-기초-이해-해보기-c3568c75","title":"퍼셉트론 알고리즘과 기계학습: 인공 신경망의 기초 이해 해보기","description":"퍼셉트론 알고리즘은 인공 신경망의 기본적인 구성 요소로, 기계학습에서 중요한 역할을 합니다. 이 글에서는 퍼셉트론 알고리즘의 작동 원리와 그 응용에 대해 상세히 탐구합니다.","date":"2024-06-26T06:02:40.356Z","tags":[{"name":"퍼셉트론","path":"/tags/퍼셉트론","id":"퍼셉트론"},{"name":"기계학습","path":"/tags/기계학습","id":"기계학습"},{"name":"인공 신경망","path":"/tags/인공-신경망","id":"인공-신경망"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"5.4","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":13,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","트라이(Trie) 알고리즘과 효율적인 단어 검색: 대규모 텍스트 데이터 처리14",{"children":["$","$La",null,{"postMeta":{"id":"655e1299-b7d3-4a7c-9eab-762f846cf6c3","path":"/algorithm/트라이Trie-알고리즘과-효율적인-단어-검색-대규모-텍스트-데이터-처리-655e1299","title":"트라이(Trie) 알고리즘과 효율적인 단어 검색: 대규모 텍스트 데이터 처리","description":"트라이(Trie) 알고리즘은 대규모 텍스트 데이터 처리에 있어 매우 효율적인 방법 중 하나입니다. 이 알고리즘의 구조와 동작 방식, 그리고 이를 활용한 효율적인 단어 검색 방법에 대해 알아봅니다.","date":"2024-06-25T06:03:15.460Z","tags":[{"name":"트라이","path":"/tags/트라이","id":"트라이"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"단어 검색","path":"/tags/단어-검색","id":"단어-검색"},{"name":"데이터 처리","path":"/tags/데이터-처리","id":"데이터-처리"}],"readMin":"5.6","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":14,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","역전파(Backpropagation) 알고리즘과 신경망 학습: AI 교육 기법15",{"children":["$","$La",null,{"postMeta":{"id":"76c9e613-00fb-4132-8275-e28394dd8b24","path":"/algorithm/역전파Backpropagation-알고리즘과-신경망-학습-AI-교육-기법-76c9e613","title":"역전파(Backpropagation) 알고리즘과 신경망 학습: AI 교육 기법","description":"이 글은 인공지능(AI) 분야에서 필수적인 '역전파(Backpropagation)' 알고리즘과 이를 활용한 신경망 학습 기법에 대해 다룹니다. 역전파는 신경망 학습의 핵심 요소로, 오류를 최소화하기 위해 가중치를 조정하는 방법입니다. 본 글에서는 역전파의 기본 개념과 작동 원리, 그리고 실제 학습 과정에서의 적용 방법을 자세히 설명합니다.","date":"2024-06-22T06:03:00.947Z","tags":[{"name":"AI","path":"/tags/ai","id":"ai"},{"name":"역전파","path":"/tags/역전파","id":"역전파"},{"name":"신경망 학습","path":"/tags/신경망-학습","id":"신경망-학습"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"4.6","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":15,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","버트란드(BERT) 알고리즘과 자연어 처리: 깊이 있는 텍스트 분석16",{"children":["$","$La",null,{"postMeta":{"id":"1d9e8f07-6db6-413f-bf8d-620a6eb8b429","path":"/algorithm/버트란드BERT-알고리즘과-자연어-처리-깊이-있는-텍스트-분석-1d9e8f07","title":"버트란드(BERT) 알고리즘과 자연어 처리: 깊이 있는 텍스트 분석","description":"이 문서는 버트란드(BERT) 알고리즘을 중심으로 자연어 처리(NLP) 기술의 발전과 그 응용 분야에 대해 다룹니다. 버트란드 알고리즘의 작동 원리, 주요 특징, 그리고 실제 적용 사례를 통해 NLP의 가능성에 대해 이해할 수 있습니다.","date":"2024-06-21T06:01:15.019Z","tags":[{"name":"BERT","path":"/tags/bert","id":"bert"},{"name":"자연어 처리","path":"/tags/자연어-처리","id":"자연어-처리"},{"name":"NLP","path":"/tags/nlp","id":"nlp"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"3.7","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":16,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","잔디크의 알고리즘과 그래프 컬러링 문제: 복잡한 색상 할당 문제 해결17",{"children":["$","$La",null,{"postMeta":{"id":"c6f90917-d0ff-48e2-a75b-5e942c055afd","path":"/algorithm/잔디크의-알고리즘과-그래프-컬러링-문제-복잡한-색상-할당-문제-해결-c6f90917","title":"잔디크의 알고리즘과 그래프 컬러링 문제: 복잡한 색상 할당 문제 해결","description":"이 글은 그래프 이론의 중요한 문제 중 하나인 그래프 컬러링 문제와 이를 해결하는 잔디크의 알고리즘에 대해 중점적으로 다룹니다. 잔디크의 알고리즘을 사용해 그래프의 각 노드에 어떻게 색상을 효율적으로 할당할 수 있는지에 대한 상세한 설명을 제공합니다.","date":"2024-06-20T06:02:40.152Z","tags":[{"name":"그래프 컬러링","path":"/tags/그래프-컬러링","id":"그래프-컬러링"},{"name":"잔디크의 알고리즘","path":"/tags/잔디크의-알고리즘","id":"잔디크의-알고리즘"},{"name":"데이터 구조","path":"/tags/데이터-구조","id":"데이터-구조"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"5.2","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":17,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","파티클 스웜 최적화(PSO) 알고리즘: 복잡한 최적화 문제 해결18",{"children":["$","$La",null,{"postMeta":{"id":"fc85ea80-d337-47b7-99de-52d701ab0f45","path":"/algorithm/파티클-스웜-최적화PSO-알고리즘-복잡한-최적화-문제-해결-fc85ea80","title":"파티클 스웜 최적화(PSO) 알고리즘: 복잡한 최적화 문제 해결","description":"이 글은 파티클 스웜 최적화(PSO) 알고리즘을 소개하고, 복잡한 최적화 문제에 어떻게 적용할 수 있는지 설명합니다. PSO는 군집 지능 기반의 최적화 알고리즘으로, 자연에서 영감을 받은 접근법으로 알려져 있습니다.","date":"2024-06-19T06:03:48.459Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"최적화","path":"/tags/최적화","id":"최적화"},{"name":"PSO","path":"/tags/pso","id":"pso"},{"name":"군집 지능","path":"/tags/군집-지능","id":"군집-지능"}],"readMin":"3.9","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":18,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","스트라센 알고리즘과 행렬 곱셈: 컴퓨터 과학에서의 빠른 연산19",{"children":["$","$La",null,{"postMeta":{"id":"12b44180-6741-45a4-ac47-6156ef10a43c","path":"/algorithm/스트라센-알고리즘과-행렬-곱셈-컴퓨터-과학에서의-빠른-연산-12b44180","title":"스트라센 알고리즘과 행렬 곱셈: 컴퓨터 과학에서의 빠른 연산","description":"스트라센 알고리즘은 전통적인 행렬 곱셈 방법을 대체할 수 있는 효율적인 알고리즘입니다. 이 글에서는 스트라센 알고리즘의 작동 원리와 이론적 배경, 그리고 실제 적용 시 고려해야 할 사항들을 다룹니다.","date":"2024-06-19T06:03:30.917Z","tags":[{"name":"스트라센 알고리즘","path":"/tags/스트라센-알고리즘","id":"스트라센-알고리즘"},{"name":"행렬 곱셈","path":"/tags/행렬-곱셈","id":"행렬-곱셈"},{"name":"컴퓨터 과학","path":"/tags/컴퓨터-과학","id":"컴퓨터-과학"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"5.3","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":19,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","블롬-블룸 필터(Bloom filter) 알고리즘: 공간 효율적인 데이터 구조20",{"children":["$","$La",null,{"postMeta":{"id":"233c014b-5fa6-4666-a61b-c7a12c952124","path":"/algorithm/블롬블룸-필터Bloom-filter-알고리즘-공간-효율적인-데이터-구조-233c014b","title":"블롬-블룸 필터(Bloom filter) 알고리즘: 공간 효율적인 데이터 구조","description":"이 글은 블룸 필터 알고리즘에 대한 소개와 그 작동 원리를 설명합니다. 블룸 필터는 데이터 저장 공간을 효율적으로 사용하며, 특히 대규모 데이터베이스에서의 활용성이 높습니다.","date":"2024-06-18T06:04:21.339Z","tags":[{"name":"블룸 필터","path":"/tags/블룸-필터","id":"블룸-필터"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"데이터 구조","path":"/tags/데이터-구조","id":"데이터-구조"},{"name":"공간 효율성","path":"/tags/공간-효율성","id":"공간-효율성"}],"readMin":"5.4","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":20,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","위상 정렬 이해하기: 그래프 알고리즘의 핵심21",{"children":["$","$La",null,{"postMeta":{"id":"59f7692e-9f56-48dc-a18c-b8fa72c7751a","path":"/algorithm/위상-정렬-이해하기-그래프-알고리즘의-핵심-59f7692e","title":"위상 정렬 이해하기: 그래프 알고리즘의 핵심","description":"위상 정렬은 그래프 알고리즘 중 하나로, 유향 그래프의 노드를 순서대로 정렬하는 방법입니다. 본문에서는 위상 정렬의 개념, 작동 원리, 구현 방법 및 실용 예제를 다룹니다. 이를 통해 그래프 알고리즘을 더 깊이 이해할 수 있습니다.","date":"2024-06-17T01:01:02.398Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"그래프","path":"/tags/그래프","id":"그래프"},{"name":"위상 정렬","path":"/tags/위상-정렬","id":"위상-정렬"},{"name":"데이터 구조","path":"/tags/데이터-구조","id":"데이터-구조"}],"readMin":"5.0","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":21,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","네트워크 플로우 문제 해결: 에드몬드-카프 알고리즘22",{"children":["$","$La",null,{"postMeta":{"id":"8d441b89-d09d-447c-9293-b2b1a068a038","path":"/algorithm/네트워크-플로우-문제-해결-에드몬드카프-알고리즘-8d441b89","title":"네트워크 플로우 문제 해결: 에드몬드-카프 알고리즘","description":"에드몬드-카프 알고리즘은 네트워크 플로우 문제를 효율적으로 해결하는 데 사용되는 기본적인 알고리즘입니다. 이 글에서는 에드몬드-카프 알고리즘의 개념, 구현 방법, 그리고 실제 네트워크 문제에서 이를 어떻게 활용할 수 있는지 자세히 설명합니다.","date":"2024-06-17T01:00:43.664Z","tags":[{"name":"네트워크 플로우","path":"/tags/네트워크-플로우","id":"네트워크-플로우"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"에드몬드-카프","path":"/tags/에드몬드-카프","id":"에드몬드-카프"},{"name":"최대 유량","path":"/tags/최대-유량","id":"최대-유량"}],"readMin":"4.8","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":22,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","네이버 알고리즘에 맞춘 SEO 전략: 상위 노출을 위한 가이드23",{"children":["$","$La",null,{"postMeta":{"id":"ea601490-edcb-4394-8891-8b3207c87ee0","path":"/seo/네이버-알고리즘에-맞춘-SEO-전략-상위-노출을-위한-가이드-ea601490","title":"네이버 알고리즘에 맞춘 SEO 전략: 상위 노출을 위한 가이드","description":"이 글에서는 네이버 검색 알고리즘에 최적화된 SEO 전략을 제공합니다. 최신 알고리즘 트렌드와 상위 노출을 위한 구체적인 방법들을 소개합니다.","date":"2024-06-16T13:13:31.951Z","tags":[{"name":"SEO","path":"/tags/seo","id":"seo"},{"name":"네이버","path":"/tags/네이버","id":"네이버"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"검색엔진최적화","path":"/tags/검색엔진최적화","id":"검색엔진최적화"}],"readMin":"4.3","category":"seo","banner":"/images/seoBanner2.jpg"},"index":23,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","최장 증가 부분 수열(LIS) 구하기: 다이나믹 프로그래밍 활용법24",{"children":["$","$La",null,{"postMeta":{"id":"fe62735b-7e92-4cbe-814f-fbe4dac26fb9","path":"/algorithm/최장-증가-부분-수열LIS-구하기-다이나믹-프로그래밍-활용법-fe62735b","title":"최장 증가 부분 수열(LIS) 구하기: 다이나믹 프로그래밍 활용법","description":"최장 증가 부분 수열(Longest Increasing Subsequence, LIS)을 다루는 다이나믹 프로그래밍 접근법에 대해 설명합니다. LIS 문제는 주어진 수열에서 부분 수열 중 증가하는 원소들로 이루어진 가장 긴 수열을 찾는 문제입니다. 이 글에서는 다이나믹 프로그래밍을 사용해 LIS를 효율적으로 구하는 방법을 자세히 설명합니다.","date":"2024-06-16T13:12:58.072Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"LIS","path":"/tags/lis","id":"lis"},{"name":"다이나믹 프로그래밍","path":"/tags/다이나믹-프로그래밍","id":"다이나믹-프로그래밍"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"10.6","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":24,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","데이터 구조 개선: 레드-블랙 트리로 검색 속도 10배 향상시키기25",{"children":["$","$La",null,{"postMeta":{"id":"fed774d8-fcf2-4336-8df2-cdc450b3f8e7","path":"/algorithm/데이터-구조-개선-레드블랙-트리로-검색-속도-배-향상시키기-fed774d8","title":"데이터 구조 개선: 레드-블랙 트리로 검색 속도 10배 향상시키기","description":"레드-블랙 트리는 자가 균형 이진 탐색 트리로, 삽입 및 삭제 시 자동으로 균형을 유지합니다. 이를 통해 검색, 삽입, 삭제 연산의 시간 복잡도를 O(log n)으로 보장하며, 일반적인 이진 탐색 트리보다 향상된 성능을 제공합니다.","date":"2024-06-16T13:12:24.726Z","tags":[{"name":"레드-블랙 트리","path":"/tags/레드-블랙-트리","id":"레드-블랙-트리"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"데이터 구조","path":"/tags/데이터-구조","id":"데이터-구조"},{"name":"검색 성능","path":"/tags/검색-성능","id":"검색-성능"}],"readMin":"4.7","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":25,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","그래프 색칠하기: 최소 색상으로 노드 색칠하기26",{"children":["$","$La",null,{"postMeta":{"id":"c93412ff-245b-49ea-9f92-ca1b27a3e378","path":"/algorithm/그래프-색칠하기-최소-색상으로-노드-색칠하기-c93412ff","title":"그래프 색칠하기: 최소 색상으로 노드 색칠하기","description":"그래프 이론에서 중요한 문제 중 하나인 그래프 색칠하기에 대해 다룹니다. 이 글은 최소 색상으로 노드를 색칠하는 방법과 그 구현을 설명합니다. 그래프 색칠 문제의 활용과 응용 분야에 대해서도 논의합니다.","date":"2024-06-15T13:17:33.926Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"그래프","path":"/tags/그래프","id":"그래프"},{"name":"색칠하기","path":"/tags/색칠하기","id":"색칠하기"},{"name":"자료구조","path":"/tags/자료구조","id":"자료구조"}],"readMin":"5.5","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":26,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","분할 정복의 마법: 복잡한 문제를 작은 조각으로 풀어내는 기술27",{"children":["$","$La",null,{"postMeta":{"id":"44039c79-3a32-46ce-acc0-1c55f41bf504","path":"/algorithm/분할-정복의-마법-복잡한-문제를-작은-조각으로-풀어내는-기술-44039c79","title":"분할 정복의 마법: 복잡한 문제를 작은 조각으로 풀어내는 기술","description":"분할 정복(디바이드 앤 컨커)은 복잡한 문제를 작은 부분으로 쪼개어 해결하는 프로그래밍 기법입니다. 이 글에서는 분할 정복의 기본 원리와 응용 방법을 실제 알고리즘 예시를 들어 자세히 설명합니다.","date":"2024-06-15T13:15:51.998Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"분할 정복","path":"/tags/분할-정복","id":"분할-정복"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"6.2","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":27,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","메모이제이션의 모든 것: 고급 프로그래밍 기술의 기초부터 응용28",{"children":["$","$La",null,{"postMeta":{"id":"f06aadbf-f215-41fe-983e-250d86d36f42","path":"/algorithm/메모이제이션의-모든-것-고급-프로그래밍-기술의-기초부터-응용-f06aadbf","title":"메모이제이션의 모든 것: 고급 프로그래밍 기술의 기초부터 응용","description":"메모이제이션에 대한 이해를 돕기 위한 이 글은 메모이제이션의 기본 개념부터 고급 프로그래밍 기법으로의 응용까지 다루고 있습니다. 다양한 예제와 함께 실제 문제 해결에 어떻게 적용되는지 탐구합니다.","date":"2024-06-14T12:56:47.941Z","tags":[{"name":"메모이제이션","path":"/tags/메모이제이션","id":"메모이제이션"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"최적화","path":"/tags/최적화","id":"최적화"}],"readMin":"4.6","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":28,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","해시 알고리즘 종류 소개: MD5, SHA, CRC 등29",{"children":["$","$La",null,{"postMeta":{"id":"4272c523-056c-4217-a05f-39ad393d5be9","path":"/algorithm/해시-알고리즘-종류-소개-MD-SHA-CRC-등-4272c523","title":"해시 알고리즘 종류 소개: MD5, SHA, CRC 등","description":"해시 알고리즘은 데이터를 고정된 크기의 해시 값으로 변환하는 중요한 역할을 합니다. 여기에서는 가장 널리 사용되는 해시 알고리즘인 MD5, SHA, CRC에 대해 설명합니다.","date":"2024-06-14T12:54:27.538Z","tags":[{"name":"해시","path":"/tags/해시","id":"해시"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"MD5","path":"/tags/md5","id":"md5"},{"name":"SHA","path":"/tags/sha","id":"sha"}],"readMin":"3.5","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":29,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","최단 경로 찾기: 다익스트라와 벨만-포드 알고리즘 비교30",{"children":["$","$La",null,{"postMeta":{"id":"88fc1778-85fb-4fdf-971c-36f3221faee6","path":"/algorithm/최단-경로-찾기-다익스트라와-벨만포드-알고리즘-비교-88fc1778","title":"최단 경로 찾기: 다익스트라와 벨만-포드 알고리즘 비교","description":"다익스트라와 벨만-포드 알고리즘을 비교하며 최단 경로 찾기의 기본 원리를 다룹니다. 이 글에서는 두 알고리즘의 차이점, 시간 복잡도, 사용 사례 등을 자세히 설명합니다.","date":"2024-06-14T11:46:00.182Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"다익스트라","path":"/tags/다익스트라","id":"다익스트라"},{"name":"벨만-포드","path":"/tags/벨만-포드","id":"벨만-포드"},{"name":"최단 경로","path":"/tags/최단-경로","id":"최단-경로"}],"readMin":"4.7","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":30,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","삽입 정렬 알고리즘: 빠르고 간단한 정렬 방법의 비밀31",{"children":["$","$La",null,{"postMeta":{"id":"6d9f3363-1b32-4a7a-a8d7-1bf2b7fa134b","path":"/algorithm/삽입-정렬-알고리즘-빠르고-간단한-정렬-방법의-비밀-6d9f3363","title":"삽입 정렬 알고리즘: 빠르고 간단한 정렬 방법의 비밀","description":"삽입 정렬은 비교적 단순하면서도 중간정도의 효율성을 가진 정렬 알고리즘입니다. 이 글에서는 삽입 정렬의 동작 원리, 구현 방법 및 그 효율성에 대해 심도 있게 탐구합니다.","date":"2024-06-13T15:19:28.715Z","tags":[{"name":"삽입 정렬","path":"/tags/삽입-정렬","id":"삽입-정렬"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"정렬","path":"/tags/정렬","id":"정렬"}],"readMin":"4.8","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":31,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","프림 알고리즘의 모든 것: 이론부터 실전까지32",{"children":["$","$La",null,{"postMeta":{"id":"a963c9d7-7419-4975-b638-31a7a498ad0c","path":"/algorithm/프림-알고리즘의-모든-것-이론부터-실전까지-a963c9d7","title":"프림 알고리즘의 모든 것: 이론부터 실전까지","description":"프림 알고리즘은 최소 신장 트리를 찾기 위해 사용하는 알고리즘으로, 네트워크 설계와 같은 분야에서 매우 유용하게 활용됩니다. 이번 글에서는 프림 알고리즘의 이론적 배경부터 실전 적용까지 깊이 있게 다뤄보겠습니다.","date":"2024-06-13T15:18:40.507Z","tags":[{"name":"프림 알고리즘","path":"/tags/프림-알고리즘","id":"프림-알고리즘"},{"name":"최소 신장 트리","path":"/tags/최소-신장-트리","id":"최소-신장-트리"},{"name":"네트워크 설계","path":"/tags/네트워크-설계","id":"네트워크-설계"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"6.9","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":32,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","카르츠 알고리즘의 모든 것: 이론부터 실전 구현까지33",{"children":["$","$La",null,{"postMeta":{"id":"2427631f-fd92-4dd5-b388-a4d1f7e8eddd","path":"/algorithm/카르츠-알고리즘의-모든-것-이론부터-실전-구현까지-2427631f","title":"카르츠 알고리즘의 모든 것: 이론부터 실전 구현까지","description":"이번 글에서는 카르츠 알고리즘의 기본 이론부터 실전 구현까지 상세히 설명합니다. 카르츠 알고리즘의 개념, 수학적 배경, 다양한 실전 응용 사례를 다룹니다.","date":"2024-06-11T15:19:30.973Z","tags":[{"name":"카르츠 알고리즘","path":"/tags/카르츠-알고리즘","id":"카르츠-알고리즘"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"이론","path":"/tags/이론","id":"이론"},{"name":"구현","path":"/tags/구현","id":"구현"}],"readMin":"4.2","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":33,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","피보나치 수열 최적화: 다이나믹 프로그래밍 적용법34",{"children":["$","$La",null,{"postMeta":{"id":"bfd17fdb-5d3e-4aeb-bfcd-c7efc24f38da","path":"/algorithm/피보나치-수열-최적화-다이나믹-프로그래밍-적용법-bfd17fdb","title":"피보나치 수열 최적화: 다이나믹 프로그래밍 적용법","description":"이 글은 피보나치 수열을 계산하는 효율적인 방법에 대해 설명하며, 특히 다이나믹 프로그래밍을 적용하여 계산 속도를 향상시키는 기법에 초점을 맞춘다. 피보나치 수열의 기본 개념부터 최적화된 구현 방법까지를 다룬다.","date":"2024-06-11T05:54:10.860Z","tags":[{"name":"피보나치","path":"/tags/피보나치","id":"피보나치"},{"name":"다이나믹 프로그래밍","path":"/tags/다이나믹-프로그래밍","id":"다이나믹-프로그래밍"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"최적화","path":"/tags/최적화","id":"최적화"}],"readMin":"4.0","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":34,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","다익스트라 알고리즘으로 최단 경로 찾기: 실전 예제35",{"children":["$","$La",null,{"postMeta":{"id":"778c2f41-1f85-4a29-832a-b8aed585fba4","path":"/algorithm/다익스트라-알고리즘으로-최단-경로-찾기-실전-예제-778c2f41","title":"다익스트라 알고리즘으로 최단 경로 찾기: 실전 예제","description":"다익스트라 알고리즘을 사용하여 그래프 이론에서 최단 경로를 찾는 방법을 실전 예제를 통해 설명합니다. 이를 통해 효율적인 경로 탐색 방법을 학습하고, 각 단계에서의 동작 원리를 상세히 알아봅니다.","date":"2024-06-11T05:53:38.703Z","tags":[{"name":"다익스트라 알고리즘","path":"/tags/다익스트라-알고리즘","id":"다익스트라-알고리즘"},{"name":"최단 경로","path":"/tags/최단-경로","id":"최단-경로"},{"name":"그래프 이론","path":"/tags/그래프-이론","id":"그래프-이론"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"4.9","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":35,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","점화식의 놀라운 힘: 데이터 처리와 알고리즘 최적화의 핵심36",{"children":["$","$La",null,{"postMeta":{"id":"fbe3c9eb-0aca-49f8-8cf2-f1c3ec34cc54","path":"/algorithm/점화식의-놀라운-힘-데이터-처리와-알고리즘-최적화의-핵심-fbe3c9eb","title":"점화식의 놀라운 힘: 데이터 처리와 알고리즘 최적화의 핵심","description":"점화식은 알고리즘과 데이터 처리에서 매우 중요한 역할을 합니다. 이 글에서는 점화식의 기본 개념부터 이를 활용한 알고리즘 최적화 및 데이터 처리 방법에 대해 상세히 설명합니다.","date":"2024-06-10T14:34:52.011Z","tags":[{"name":"점화식","path":"/tags/점화식","id":"점화식"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"데이터 처리","path":"/tags/데이터-처리","id":"데이터-처리"},{"name":"최적화","path":"/tags/최적화","id":"최적화"}],"readMin":"6.1","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":36,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","트라이로 문자열 검색의 신이 되라! 실전 예제와 구현 가이드37",{"children":["$","$La",null,{"postMeta":{"id":"7d74d7c9-10e2-4a27-896f-63aefda75712","path":"/algorithm/트라이로-문자열-검색의-신이-되라-실전-예제와-구현-가이드-7d74d7c9","title":"트라이로 문자열 검색의 신이 되라! 실전 예제와 구현 가이드","description":"트라이(Trie)를 활용하여 문자열 검색을 효율적으로 수행하는 방법에 대해 설명합니다. 실전 예제와 함께 구현 가이드를 제공하여 독자들이 트라이의 개념을 이해하고 응용할 수 있도록 돕습니다.","date":"2024-06-02T00:00:00.000Z","tags":[{"name":"트라이","path":"/tags/트라이","id":"트라이"},{"name":"문자열 검색","path":"/tags/문자열-검색","id":"문자열-검색"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"데이터 구조","path":"/tags/데이터-구조","id":"데이터-구조"}],"readMin":"6.8","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":37,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","쉽게 이해하는 플로이드 워셜 알고리즘: 그래프 이론의 강력한 도구38",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/iOS-개발자-코딩-테스트에서-유리한-언어는-무엇일까","title":"쉽게 이해하는 플로이드 워셜 알고리즘: 그래프 이론의 강력한 도구","description":"iOS 개발자 채용 면접을 진행하는 입장에서, 코딩 테스트에서 어떤 프로그래밍 언어가 가장 유리할지에 대한 질문은 자주 받습니다. Swift, Objective-C, Python, JavaScript 등 여러 언어가 고려될 수 있지만, 각 언어가 주는 이점과 한계를 잘 이해하는 것이 중요합니다. 이 글에서는 면접관의 시각에서, iOS 개발자 코딩 테스트에서 어떤 언어가 가장 적합한지 다양한 관점에서 분석해보겠습니다.","date":"2024-06-01T10:13:07.322Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"iOS개발","path":"/tags/ios개발","id":"ios개발"}],"readMin":"8.1","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":38,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","최적화의 신 다익스트라 알고리즘: 원리, 예시, 별로 안 어렵네?39",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/최적화의-신-다익스트라-알고리즘-별로어렵지-않네","title":"최적화의 신 다익스트라 알고리즘: 원리, 예시, 별로 안 어렵네?","description":"다익스트라 알고리즘의 원리와 구현 방법, 다양한 응용 사례, 최적화 기법을 상세히 소개합니다. 효율적인 경로 탐색 알고리즘을 이해하고 실무에 활용해 보세요.","date":"2024-05-31T23:40:07.322Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"다익스트라","path":"/tags/다익스트라","id":"다익스트라"},{"name":"면접질문","path":"/tags/면접질문","id":"면접질문"}],"readMin":"5.2","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":39,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","MinHeap이란? 최소힙을 쉽게 이해하고 힙하게 구현하자!40",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/MinHeap이란-최소힙-쉽게-이해하는-힙하게-구현하자","title":"MinHeap이란? 최소힙을 쉽게 이해하고 힙하게 구현하자!","description":"MinHeap은 부모 노드가 자식 노드보다 항상 작거나 같은 값을 가지는 완전 이진 트리입니다. 최소값을 빠르게 찾을 수 있어 우선순위 큐, 다익스트라 알고리즘, 힙 정렬 등 다양한 애플리케이션에서 사용됩니다. 이 글에서는 MinHeap의 개념, 작동 원리, 구현 방법 및 활용 사례를 다룹니다. 이를 통해 효율적인 데이터 관리를 위한 MinHeap의 활용법을 배울 수 있습니다.","date":"2024-05-30T10:13:07.322Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"5.1","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":40,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","깊이 우선 탐색(DFS)이란? DFS 알고리즘 생각보다 어렵지 않아요41",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/algorithm-깊이-우선-탐색-DFS-이란","title":"깊이 우선 탐색(DFS)이란? DFS 알고리즘 생각보다 어렵지 않아요","description":"깊이 우선 탐색(DFS)은 그래프의 모든 정점을 방문하는 알고리즘으로, 스택을 사용해 경로를 추적하며 최대한 깊이 탐색합니다. 이 글에서는 DFS의 기본 개념, 구현 방법, 응용 사례, 장단점을 설명합니다. DFS는 경로 찾기, 사이클 탐지 등 다양한 문제에 사용됩니다.","date":"2024-05-30T10:13:07.322Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"5.5","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":41,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","너비 우선 탐색(BFS)이란? 정점에서 정점으로! 그래 네가 정점이다42",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/algorithm-너비-우선-탐색-BFS-이란","title":"너비 우선 탐색(BFS)이란? 정점에서 정점으로! 그래 네가 정점이다","description":"너비 우선 탐색(Breadth-First Search, BFS)은 그래프 탐색 알고리즘으로, 시작 정점에서부터 모든 인접 정점을 먼저 탐색한 후, 그 다음 단계로 이동하는 방식입니다. BFS는 주로 큐를 사용하여 각 단계에서 탐색할 정점을 추적하며, 최단 경로 찾기, 웹 크롤링, 소셜 네트워크 분석, 망 연결 확인, 퍼즐 해결 등 다양한 문제 해결에 활용됩니다. 이 글에서는 BFS의 기본 개념, 구현 방법, 응용 사례, 장단점, 최적화 기법을 설명합니다.","date":"2024-05-30T10:13:07.322Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"5.0","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":42,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","너비 우선 탐색(BFS)과 깊이 우선 탐색(DFS) 차이 비교, 그말이 그말 같지만...43",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/algorithm-너비-우선-탐색-DFS-깊이-우선-탐색-차이-비교","title":"너비 우선 탐색(BFS)과 깊이 우선 탐색(DFS) 차이 비교, 그말이 그말 같지만...","description":"너비 우선 탐색(BFS)과 깊이 우선 탐색(DFS)은 그래프 탐색의 기본 알고리즘입니다. BFS는 최단 경로 탐색에 유리하며, DFS는 특정 경로 탐색에 효과적입니다. 이 글에서는 두 알고리즘의 기본 개념, 구현 방법, 응용 사례, 장단점 및 최적화 기법을 비교합니다.","date":"2024-05-30T10:13:07.322Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"7.8","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":43,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","그리드 알고리즘 이란? 암기하는게 아니다! 최적의 경로와 자원 할당을 위한 강력한 도구44",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/그리드-알고리즘-최적의-경로와-자원-할당을-위한-강력한-도구","title":"그리드 알고리즘 이란? 암기하는게 아니다! 최적의 경로와 자원 할당을 위한 강력한 도구","description":"그리드 알고리즘은 격자 구조에서 최단 경로를 찾고 자원을 효율적으로 할당하는 데 사용됩니다. 이 글에서는 그리드 알고리즘의 기본 개념, 구현 방법, 응용 사례를 다룹니다. 로봇 경로 계획, 게임 개발, 물류 최적화 등 다양한 분야에서 활용됩니다. 최적화 기법도 함께 소개합니다. 이 가이드를 통해 그리드 알고리즘의 효율적인 적용 방법을 배우고 실생활 문제 해결에 활용할 수 있습니다.","date":"2024-05-30T10:13:07.322Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"6.0","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":44,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","쉽게 이해하는 플로이드 워셜 알고리즘: 그래프 이론의 강력한 도구45",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/쉽게-이해하는-플로이드-워셜-알고리즘-그래프-이론의-강력한-도구","title":"쉽게 이해하는 플로이드 워셜 알고리즘: 그래프 이론의 강력한 도구","description":"플로이드 워셜 알고리즘은 그래프에서 모든 정점 쌍 간의 최단 경로를 찾는 데 사용되는 중요한 알고리즘입니다. 이 글에서는 플로이드 워셜 알고리즘의 기본 개념, 구현 방법, 응용 사례를 다룹니다. 교통 네트워크, 소셜 네트워크 분석 등 다양한 실제 문제 해결에 적용되며, 시간 복잡도와 최적화 기법도 논의합니다. 이 가이드는 알고리즘을 효과적으로 사용하여 네트워크 분석 문제를 해결하는 데 유용한 정보를 제공합니다.","date":"2024-05-30T10:13:07.322Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"}],"readMin":"5.0","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":45,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[Swift] 플로이드 워셜(Floyd-Warshall) 알고리즘 - 최단 경로 구하기46",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/플로이드워셜+floyd+warshall","title":"[Swift] 플로이드 워셜(Floyd-Warshall) 알고리즘 - 최단 경로 구하기","description":"최단 경로 구하기 문제를 풀기위한 플로이드 워셜 알고리즘에 대해 알아보고 다익스트라 알고리즘과의 차이를 탐구해 봅니다.","date":"2023-04-22T01:09:07.322Z","tags":[{"name":"coding test","path":"/tags/coding-test","id":"coding-test"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"코딩테스트","path":"/tags/코딩테스트","id":"코딩테스트"},{"name":"algorithm","path":"/tags/algorithm","id":"algorithm"}],"readMin":"4.8","category":"algorithm","banner":"/images/floydWarshall.jpg"},"index":46,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[Swift + Algorithm] 이진탐색이란?47",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/swift+이진탐색+소개","title":"[Swift + Algorithm] 이진탐색이란?","description":"이진탐색에 대해 알아보고 Swift로 이진탐색 코드를 구현해 봅니다.","date":"2023-04-07T22:53:07.322Z","tags":[{"name":"coding test","path":"/tags/coding-test","id":"coding-test"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"코딩테스트","path":"/tags/코딩테스트","id":"코딩테스트"},{"name":"algorithm","path":"/tags/algorithm","id":"algorithm"}],"readMin":"4.4","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":47,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[Swift + Algorithm] 인사고과 - 프로그래머스 Level3 문제풀이48",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/swift+인사고과+알고리즘+문제","title":"[Swift + Algorithm] 인사고과 - 프로그래머스 Level3 문제풀이","description":"프로그래머스 Level3 인사고과 문제 풀이입니다.","date":"2023-04-07T02:09:07.322Z","tags":[{"name":"coding test","path":"/tags/coding-test","id":"coding-test"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"코딩테스트","path":"/tags/코딩테스트","id":"코딩테스트"},{"name":"algorithm","path":"/tags/algorithm","id":"algorithm"}],"readMin":"2.5","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":48,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[Swift] DFS/BFS란 무엇인가? - 깊이우선탐색과 너비우선탐색 구현49",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/swift+dfs+bfs+소개","title":"[Swift] DFS/BFS란 무엇인가? - 깊이우선탐색과 너비우선탐색 구현","description":"DFS와 BFS를 SWIFT코드로 작성해보고 예제를 통해 어떤 문제에 어떤 알고리즘이 적합한지 알아봅니다.","date":"2023-04-06T21:30:07.322Z","tags":[{"name":"coding test","path":"/tags/coding-test","id":"coding-test"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"코딩테스트","path":"/tags/코딩테스트","id":"코딩테스트"},{"name":"algorithm","path":"/tags/algorithm","id":"algorithm"}],"readMin":"6.0","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":49,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[Algorithm] 연속 펄스 부분 수열의 합 풀이 - 프로그래머스 Level3 문제풀이50",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/swift+연속+펄스+부분수열의+합","title":"[Algorithm] 연속 펄스 부분 수열의 합 풀이 - 프로그래머스 Level3 문제풀이","description":"프로그래머스 Level3 연속 펄스 부분 수열의 합 문제를 Swift로 어떻게 푸는지 알아봅니다.","date":"2023-04-06T19:50:07.322Z","tags":[{"name":"coding test","path":"/tags/coding-test","id":"coding-test"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"코딩테스트","path":"/tags/코딩테스트","id":"코딩테스트"},{"name":"algorithm","path":"/tags/algorithm","id":"algorithm"}],"readMin":"1.9","category":"algorithm","banner":"/images/algorithmImg.jpg"},"index":50,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[Swift] 그리드 알고리즘(Greedy algorithm) 정리51",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/greedy+algoritm+학습","title":"[Swift] 그리드 알고리즘(Greedy algorithm) 정리","description":"그리드 알고리즘에 대해서 알아봅니다.","date":"2023-04-02T10:13:07.322Z","tags":[{"name":"coding test","path":"/tags/coding-test","id":"coding-test"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"코딩테스트","path":"/tags/코딩테스트","id":"코딩테스트"},{"name":"algorithm","path":"/tags/algorithm","id":"algorithm"},{"name":"greedy","path":"/tags/greedy","id":"greedy"}],"readMin":"6.5","category":"algorithm","banner":"/images/greedyAlgorithm.jpg"},"index":51,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift 코드에서 시간복잡도 공간복잡도 측정하기52",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/algorithm/swift로+시간복잡도+공간복잡도+측정하기","title":"Swift 코드에서 시간복잡도 공간복잡도 측정하기","description":"Swift로 코딩테스트 준비시 고려해야할 시간 복잡도, 공간 복잡도의 개념과 측정 방법에 대해 알아봅니다.","date":"2023-03-30T10:13:07.322Z","tags":[{"name":"coding test","path":"/tags/coding-test","id":"coding-test"},{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"공간복잡도","path":"/tags/공간복잡도","id":"공간복잡도"},{"name":"시간복잡도","path":"/tags/시간복잡도","id":"시간복잡도"},{"name":"코딩테스트","path":"/tags/코딩테스트","id":"코딩테스트"},{"name":"algorithm","path":"/tags/algorithm","id":"algorithm"}],"readMin":"4.8","category":"algorithm","banner":"/images/swiftBigO.png"},"index":52,"articleType":"최신글","screenType":"TAGS","language":"app"}]}]]}]]}]}]}]]}],null],"segment":"__PAGE__?{\"slug\":\"알고리즘\"}"},"styles":[]}],"segment":["slug","%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98","d"]},"styles":[]}],"segment":"tags"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"알고리즘 관련글 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","3",{"name":"keywords","content":"마고자비 블로그 블로그,Swift,Javascript,최적화,앱개발,1인 개발,개발자,개발,Developer"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com//tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"알고리즘 관련글 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"알고리즘 관련글 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com//tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/magomercy.png"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"알고리즘 관련글 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/magomercy.png"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
8:null
