1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","React-Native-Hooks-%EC%99%84%EB%B2%BD-%EA%B0%80%EC%9D%B4%EB%93%9C-useEffect-useState-%ED%99%9C%EC%9A%A9%EB%B2%95-4a7ee477","d"],{"children":["__PAGE__?{\"slug\":\"React-Native-Hooks-완벽-가이드-useEffect-useState-활용법-4a7ee477\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","React-Native-Hooks-%EC%99%84%EB%B2%BD-%EA%B0%80%EC%9D%B4%EB%93%9C-useEffect-useState-%ED%99%9C%EC%9A%A9%EB%B2%95-4a7ee477","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"React-Native-Hooks-완벽-가이드-useEffect-useState-활용법-4a7ee477\"}"},"styles":[]}],"segment":["slug","React-Native-Hooks-%EC%99%84%EB%B2%BD-%EA%B0%80%EC%9D%B4%EB%93%9C-useEffect-useState-%ED%99%9C%EC%9A%A9%EB%B2%95-4a7ee477","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"React Native Hooks 완벽 가이드: useEffect, useState 활용법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 React Native 애플리케이션 개발에서 자주 사용되는 `useEffect`와 `useState` Hooks의 활용법을 완벽하게 이해하기 위한 가이드입니다. 이 두 가지 Hook은 상태 관리와 사이드 이펙트를 처리하는 데 필수적입니다."}],["$","meta","3",{"name":"keywords","content":"React Native,Hooks,useEffect,useState"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/React-Native-Hooks-%EC%99%84%EB%B2%BD-%EA%B0%80%EC%9D%B4%EB%93%9C-useEffect-useState-%ED%99%9C%EC%9A%A9%EB%B2%95-4a7ee477"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"React Native Hooks 완벽 가이드: useEffect, useState 활용법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"React Native Hooks 완벽 가이드: useEffect, useState 활용법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 React Native 애플리케이션 개발에서 자주 사용되는 `useEffect`와 `useState` Hooks의 활용법을 완벽하게 이해하기 위한 가이드입니다. 이 두 가지 Hook은 상태 관리와 사이드 이펙트를 처리하는 데 필수적입니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/React-Native-Hooks-%EC%99%84%EB%B2%BD-%EA%B0%80%EC%9D%B4%EB%93%9C-useEffect-useState-%ED%99%9C%EC%9A%A9%EB%B2%95-4a7ee477"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner5.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"React Native Hooks 완벽 가이드: useEffect, useState 활용법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 React Native 애플리케이션 개발에서 자주 사용되는 `useEffect`와 `useState` Hooks의 활용법을 완벽하게 이해하기 위한 가이드입니다. 이 두 가지 Hook은 상태 관리와 사이드 이펙트를 처리하는 데 필수적입니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner5.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner5.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"React Native Hooks 완벽 가이드: useEffect, useState 활용법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"React Native Hooks 완벽 가이드: useEffect, useState 활용법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-22"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"b27870be","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"React Native Hooks 완벽 가이드: useEffect, useState 활용법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["React Native는 모바일 애플리케이션 개발을 위한 강력한 도구입니다. React와 마찬가지로 React Native도 여러 가지 Hook을 제공하며, 그중 가장 자주 사용되는 것이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":4,"column":106,"offset":160},"end":{"line":4,"column":117,"offset":171}}}],"position":{"start":{"line":4,"column":106,"offset":160},"end":{"line":4,"column":117,"offset":171}}},"children":"useEffect"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState","position":{"start":{"line":4,"column":119,"offset":173},"end":{"line":4,"column":129,"offset":183}}}],"position":{"start":{"line":4,"column":119,"offset":173},"end":{"line":4,"column":129,"offset":183}}},"children":"useState"}}],"입니다. 이 글에서는 이 두 가지 Hook에 대해 깊이 있게 살펴보고, 실제 코드를 통해 활용 방법을 설명합니다."]}],"\n",["$","h2",null,{"id":"7aa25205","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"useState"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["React Hooks의 개념은 리액트 컴포넌트에서 상태와 사이드 이펙트를 더 쉽게 관리하기 위해 도입되었습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState","position":{"start":{"line":8,"column":64,"offset":324},"end":{"line":8,"column":74,"offset":334}}}],"position":{"start":{"line":8,"column":64,"offset":324},"end":{"line":8,"column":74,"offset":334}}},"children":"useState"}}],"는 그 중에서도 가장 기본이 되는 Hook으로, 상태를 함수형 컴포넌트에 추가할 수 있게 해줍니다."]}],"\n",["$","h3",null,{"id":"e56f6c63","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제 코드"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { useState } from 'react';\nimport { View, Text, Button } from 'react-native';\n\nconst CounterApp = () => {\n  const [count, setCount] = useState(0);\n\n  return (\n    <View>\n      <Text>{`Count: ${count}`}</Text>\n      <Button title=\"Increment\" onPress={() => setCount(count + 1)} />\n    </View>\n  );\n};\n\nexport default CounterApp;\n"}],"position":{"start":{"line":11,"column":1,"offset":401},"end":{"line":27,"column":4,"offset":760}}},"children":"import React, { useState } from 'react';\nimport { View, Text, Button } from 'react-native';\n\nconst CounterApp = () => {\n  const [count, setCount] = useState(0);\n\n  return (\n    <View>\n      <Text>{`Count: ${count}`}</Text>\n      <Button title=\"Increment\" onPress={() => setCount(count + 1)} />\n    </View>\n  );\n};\n\nexport default CounterApp;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState","position":{"start":{"line":28,"column":7,"offset":767},"end":{"line":28,"column":17,"offset":777}}}],"position":{"start":{"line":28,"column":7,"offset":767},"end":{"line":28,"column":17,"offset":777}}},"children":"useState"}}],"를 사용하여 카운터 앱을 구현한 예제입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState","position":{"start":{"line":28,"column":42,"offset":802},"end":{"line":28,"column":52,"offset":812}}}],"position":{"start":{"line":28,"column":42,"offset":802},"end":{"line":28,"column":52,"offset":812}}},"children":"useState"}}],"는 상태 변수와 해당 변수를 갱신하는 함수를 반환합니다. 이 예제에서 상태 변수는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"count","position":{"start":{"line":28,"column":98,"offset":858},"end":{"line":28,"column":105,"offset":865}}}],"position":{"start":{"line":28,"column":98,"offset":858},"end":{"line":28,"column":105,"offset":865}}},"children":"count"}}],"이며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setCount","position":{"start":{"line":28,"column":109,"offset":869},"end":{"line":28,"column":119,"offset":879}}}],"position":{"start":{"line":28,"column":109,"offset":869},"end":{"line":28,"column":119,"offset":879}}},"children":"setCount"}}]," 함수는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"count","position":{"start":{"line":28,"column":124,"offset":884},"end":{"line":28,"column":131,"offset":891}}}],"position":{"start":{"line":28,"column":124,"offset":884},"end":{"line":28,"column":131,"offset":891}}},"children":"count"}}]," 값을 ",["$","strong",null,{"className":"font-black","children":"갱신"}],"하는 데 사용됩니다."]}],"\n",["$","h2",null,{"id":"26c55908","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"useEffect"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":32,"column":1,"offset":928},"end":{"line":32,"column":12,"offset":939}}}],"position":{"start":{"line":32,"column":1,"offset":928},"end":{"line":32,"column":12,"offset":939}}},"children":"useEffect"}}],"는 함수형 컴포넌트에서 사이드 이펙트를 처리할 때 사용하는 Hook입니다. 예를 들어, 데이터를 fetch하거나 DOM을 직접 조작해야 하는 경우를 들 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":32,"column":105,"offset":1032},"end":{"line":32,"column":116,"offset":1043}}}],"position":{"start":{"line":32,"column":105,"offset":1032},"end":{"line":32,"column":116,"offset":1043}}},"children":"useEffect"}}],"는 클래스형 컴포넌트의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentDidMount","position":{"start":{"line":32,"column":129,"offset":1056},"end":{"line":32,"column":148,"offset":1075}}}],"position":{"start":{"line":32,"column":129,"offset":1056},"end":{"line":32,"column":148,"offset":1075}}},"children":"componentDidMount"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentDidUpdate","position":{"start":{"line":32,"column":150,"offset":1077},"end":{"line":32,"column":170,"offset":1097}}}],"position":{"start":{"line":32,"column":150,"offset":1077},"end":{"line":32,"column":170,"offset":1097}}},"children":"componentDidUpdate"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentWillUnmount","position":{"start":{"line":32,"column":172,"offset":1099},"end":{"line":32,"column":194,"offset":1121}}}],"position":{"start":{"line":32,"column":172,"offset":1099},"end":{"line":32,"column":194,"offset":1121}}},"children":"componentWillUnmount"}}],"에 해당하는 기능을 제공합니다."]}],"\n",["$","h3",null,{"id":"e56f6c63","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제 코드"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { useState, useEffect } from 'react';\nimport { View, Text } from 'react-native';\n\nconst DataFetchingComponent = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch('https://api.example.com/data')\n      .then(response => response.json())\n      .then(data => setData(data));\n  }, []);\n\n  return (\n    <View>\n      <Text>{data ? JSON.stringify(data) : 'Loading...'}</Text>\n    </View>\n  );\n};\n\nexport default DataFetchingComponent;\n"}],"position":{"start":{"line":35,"column":1,"offset":1150},"end":{"line":56,"column":4,"offset":1639}}},"children":"import React, { useState, useEffect } from 'react';\nimport { View, Text } from 'react-native';\n\nconst DataFetchingComponent = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch('https://api.example.com/data')\n      .then(response => response.json())\n      .then(data => setData(data));\n  }, []);\n\n  return (\n    <View>\n      <Text>{data ? JSON.stringify(data) : 'Loading...'}</Text>\n    </View>\n  );\n};\n\nexport default DataFetchingComponent;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":57,"column":9,"offset":1648},"end":{"line":57,"column":20,"offset":1659}}}],"position":{"start":{"line":57,"column":9,"offset":1648},"end":{"line":57,"column":20,"offset":1659}}},"children":"useEffect"}}],"를 사용하여 컴포넌트가 마운트될 때 데이터를 fetch하도록 설정했습니다. 두 번째 인자로 빈 배열 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[]","position":{"start":{"line":57,"column":76,"offset":1715},"end":{"line":57,"column":80,"offset":1719}}}],"position":{"start":{"line":57,"column":76,"offset":1715},"end":{"line":57,"column":80,"offset":1719}}},"children":"[]"}}],"을 전달하면, 이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":57,"column":90,"offset":1729},"end":{"line":57,"column":101,"offset":1740}}}],"position":{"start":{"line":57,"column":90,"offset":1729},"end":{"line":57,"column":101,"offset":1740}}},"children":"useEffect"}}],"는 컴포넌트가 처음 렌더링될 때 한 번만 실행됩니다."]}],"\n",["$","h3",null,{"id":"013cc4de","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Cleanup 함수"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":61,"column":1,"offset":1787},"end":{"line":61,"column":12,"offset":1798}}}],"position":{"start":{"line":61,"column":1,"offset":1787},"end":{"line":61,"column":12,"offset":1798}}},"children":"useEffect"}}],"는 컴포넌트가 언마운트될 때나 다음 이펙트가 실행되기 전에 cleanup 함수도 실행할 수 있습니다. 이는 메모리 누수를 방지하기 위해 필요합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"useEffect(() => {\n  const interval = setInterval(() => {\n    console.log('This will run every second');\n  }, 1000);\n\n  return () => clearInterval(interval);\n}, []);\n"}],"position":{"start":{"line":63,"column":1,"offset":1882},"end":{"line":71,"column":4,"offset":2064}}},"children":"useEffect(() => {\n  const interval = setInterval(() => {\n    console.log('This will run every second');\n  }, 1000);\n\n  return () => clearInterval(interval);\n}, []);\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setInterval","position":{"start":{"line":72,"column":9,"offset":2073},"end":{"line":72,"column":22,"offset":2086}}}],"position":{"start":{"line":72,"column":9,"offset":2073},"end":{"line":72,"column":22,"offset":2086}}},"children":"setInterval"}}],"을 사용하여 1초마다 로그를 출력하는 타이머를 설정하고, cleanup 함수에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"clearInterval","position":{"start":{"line":72,"column":67,"offset":2131},"end":{"line":72,"column":82,"offset":2146}}}],"position":{"start":{"line":72,"column":67,"offset":2131},"end":{"line":72,"column":82,"offset":2146}}},"children":"clearInterval"}}],"을 호출하여 타이머를 해제합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["React Native Hooks는 함수형 컴포넌트에서 상태와 사이드 이펙트를 관리하는 강력한 도구입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState","position":{"start":{"line":76,"column":61,"offset":2233},"end":{"line":76,"column":71,"offset":2243}}}],"position":{"start":{"line":76,"column":61,"offset":2233},"end":{"line":76,"column":71,"offset":2243}}},"children":"useState"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":76,"column":73,"offset":2245},"end":{"line":76,"column":84,"offset":2256}}}],"position":{"start":{"line":76,"column":73,"offset":2245},"end":{"line":76,"column":84,"offset":2256}}},"children":"useEffect"}}],"는 이러한 기능을 제공하는 대표적인 Hook들입니다. 이 글에서는 간단한 예제를 통해 이 두 가지 Hook의 사용법을 설명했습니다. 실제 프로젝트에서 이 Hook들을 어떻게 활용할 수 있는지 더 깊이 있는 이해를 위해 다양한 시도를 해보는 것이 좋습니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"React Native Hooks 완벽 가이드: useEffect, useState 활용법","toc":[{"tagName":"h1","title":"React Native Hooks 완벽 가이드: useEffect, useState 활용법","id":"b27870be"},{"tagName":"h2","title":"useState","id":"7aa25205"},{"tagName":"h3","title":"예제 코드","id":"e56f6c63"},{"tagName":"h2","title":"useEffect","id":"26c55908"},{"tagName":"h3","title":"예제 코드","id":"e56f6c63"},{"tagName":"h3","title":"Cleanup 함수","id":"013cc4de"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
