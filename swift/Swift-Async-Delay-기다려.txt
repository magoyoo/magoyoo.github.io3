1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-Async-Delay-%EA%B8%B0%EB%8B%A4%EB%A0%A4","d"],{"children":["__PAGE__?{\"slug\":\"Swift-Async-Delay-기다려\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-Async-Delay-%EA%B8%B0%EB%8B%A4%EB%A0%A4","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-Async-Delay-기다려\"}"},"styles":[]}],"segment":["slug","Swift-Async-Delay-%EA%B8%B0%EB%8B%A4%EB%A0%A4","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift의 Async Delay 코드 실행중 잠시 멈춰! | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"async await에서 delay를 주는 방법! 개발자들은 항상 코드가 신속하게 실행되고 중단 없이 작동하기를 바랍니다. 그러나 때로는 지연이 불가피할 뿐만 아니라 필수적일 때가 있습니다. 여기서 Swift의 async delay 개념이 등장합니다."}],["$","meta","3",{"name":"keywords","content":"swift,concurrency"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-Async-Delay-%EA%B8%B0%EB%8B%A4%EB%A0%A4"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift의 Async Delay 코드 실행중 잠시 멈춰! | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift의 Async Delay 코드 실행중 잠시 멈춰! | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"async await에서 delay를 주는 방법! 개발자들은 항상 코드가 신속하게 실행되고 중단 없이 작동하기를 바랍니다. 그러나 때로는 지연이 불가피할 뿐만 아니라 필수적일 때가 있습니다. 여기서 Swift의 async delay 개념이 등장합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-Async-Delay-%EA%B8%B0%EB%8B%A4%EB%A0%A4"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift의 Async Delay 코드 실행중 잠시 멈춰! | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"async await에서 delay를 주는 방법! 개발자들은 항상 코드가 신속하게 실행되고 중단 없이 작동하기를 바랍니다. 그러나 때로는 지연이 불가피할 뿐만 아니라 필수적일 때가 있습니다. 여기서 Swift의 async delay 개념이 등장합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBasic.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift의 Async Delay 코드 실행중 잠시 멈춰!"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift의 Async Delay 코드 실행중 잠시 멈춰!"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-03"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h3",null,{"id":"8f8cdc2c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Swift의 Async Delay: 기다림의 미학을 활용한 코드 작성법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"현대 앱 개발의 세계는 효율성과 반응성이 무엇보다 중요합니다. 개발자들은 항상 코드가 신속하게 실행되고 중단 없이 작동하기를 바랍니다. 그러나 때로는 지연이 불가피할 뿐만 아니라 필수적일 때가 있습니다. 여기서 Swift의 \"async delay\" 개념이 등장합니다. 이 강력한 도구를 사용하면 코드가 우아하게 멈추게 할 수 있습니다. 이 글에서는 async delay의 개념을 살펴보고, Swift 애플리케이션에서 이 개념을 효과적으로 활용하는 방법에 대해 알아보겠습니다."}],"\n",["$","h4","h4-0",{"children":"Async Delay의 이해"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"기본적으로 Swift의 async delay는 메인 스레드를 차단하지 않고 코드의 일부를 지정된 기간 동안 대기시키는 것입니다. 이는 사용자가 앱을 사용하는 동안 부드러운 경험을 유지하는 데 중요합니다. 예를 들어, 네트워크 요청을 기다리거나 애니메이션의 자연스러운 흐름을 유지하기 위해 지연이 필요할 수 있습니다."}],"\n",["$","h4","h4-1",{"children":"Swift에서 Async Delay 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async","position":{"start":{"line":12,"column":10,"offset":553},"end":{"line":12,"column":17,"offset":560}}}],"position":{"start":{"line":12,"column":10,"offset":553},"end":{"line":12,"column":17,"offset":560}}},"children":"async"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":12,"column":19,"offset":562},"end":{"line":12,"column":26,"offset":569}}}],"position":{"start":{"line":12,"column":19,"offset":562},"end":{"line":12,"column":26,"offset":569}}},"children":"await"}}]," 키워드를 사용하여 비동기 작업을 쉽게 처리할 수 있습니다. 특히, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Task.sleep","position":{"start":{"line":12,"column":64,"offset":607},"end":{"line":12,"column":76,"offset":619}}}],"position":{"start":{"line":12,"column":64,"offset":607},"end":{"line":12,"column":76,"offset":619}}},"children":"Task.sleep"}}]," 함수를 사용하면 특정 시간 동안 대기할 수 있습니다. 다음은 이를 사용하는 간단한 예제입니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\n\nfunc fetchData() async {\n    print(\"Fetching data...\")\n    try await Task.sleep(nanoseconds: 2_000_000_000) // 2초 대기\n    print(\"Data fetched!\")\n}\n\nTask {\n    await fetchData()\n}\n"}],"position":{"start":{"line":14,"column":1,"offset":674},"end":{"line":26,"column":4,"offset":883}}},"children":"import Foundation\n\nfunc fetchData() async {\n    print(\"Fetching data...\")\n    try await Task.sleep(nanoseconds: 2_000_000_000) // 2초 대기\n    print(\"Data fetched!\")\n}\n\nTask {\n    await fetchData()\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetchData","position":{"start":{"line":28,"column":8,"offset":892},"end":{"line":28,"column":19,"offset":903}}}],"position":{"start":{"line":28,"column":8,"offset":892},"end":{"line":28,"column":19,"offset":903}}},"children":"fetchData"}}]," 함수는 데이터를 가져오는 비동기 작업을 시뮬레이션합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Task.sleep","position":{"start":{"line":28,"column":52,"offset":936},"end":{"line":28,"column":64,"offset":948}}}],"position":{"start":{"line":28,"column":52,"offset":936},"end":{"line":28,"column":64,"offset":948}}},"children":"Task.sleep"}}]," 함수를 사용하여 2초 동안 대기한 후에 데이터를 가져왔다고 출력합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Task","position":{"start":{"line":28,"column":105,"offset":989},"end":{"line":28,"column":111,"offset":995}}}],"position":{"start":{"line":28,"column":105,"offset":989},"end":{"line":28,"column":111,"offset":995}}},"children":"Task"}}]," 블록 내에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await fetchData()","position":{"start":{"line":28,"column":119,"offset":1003},"end":{"line":28,"column":138,"offset":1022}}}],"position":{"start":{"line":28,"column":119,"offset":1003},"end":{"line":28,"column":138,"offset":1022}}},"children":"await fetchData()"}}],"를 호출하여 비동기 작업을 실행합니다."]}],"\n",["$","h4","h4-2",{"children":"실용적인 예제: 네트워크 요청"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"실제 앱 개발에서는 네트워크 요청을 처리하는 동안 사용자 인터페이스가 응답성을 유지해야 합니다. 다음은 네트워크 요청과 함께 async delay를 사용하는 예제입니다:"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\n\nfunc performNetworkRequest() async {\n    print(\"Starting network request...\")\n    try await Task.sleep(nanoseconds: 1_000_000_000) // 1초 대기\n    print(\"Network request completed.\")\n}\n\nTask {\n    await performNetworkRequest()\n}\n"}],"position":{"start":{"line":34,"column":1,"offset":1164},"end":{"line":46,"column":4,"offset":1421}}},"children":"import Foundation\n\nfunc performNetworkRequest() async {\n    print(\"Starting network request...\")\n    try await Task.sleep(nanoseconds: 1_000_000_000) // 1초 대기\n    print(\"Network request completed.\")\n}\n\nTask {\n    await performNetworkRequest()\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 네트워크 요청을 시뮬레이션하기 위해 1초 동안 대기합니다. 실제 네트워크 요청 코드 대신 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Task.sleep","position":{"start":{"line":48,"column":59,"offset":1481},"end":{"line":48,"column":71,"offset":1493}}}],"position":{"start":{"line":48,"column":59,"offset":1481},"end":{"line":48,"column":71,"offset":1493}}},"children":"Task.sleep"}}],"을 사용하여 지연을 추가했습니다. 이렇게 하면 네트워크 요청이 완료될 때까지 사용자 인터페이스가 차단되지 않도록 할 수 있습니다."]}],"\n",["$","h4","h4-3",{"children":"Async Delay의 창의적인 활용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Async delay를 활용하면 다양한 창의적인 기능을 구현할 수 있습니다. 예를 들어, 게임 개발에서는 특정 이벤트가 발생하기 전에 일정 시간 동안 대기하는 것이 필요할 수 있습니다. 다음은 간단한 예제입니다:"}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\n\nfunc spawnEnemy() async {\n    print(\"Enemy will spawn in 3 seconds...\")\n    try await Task.sleep(nanoseconds: 3_000_000_000) // 3초 대기\n    print(\"Enemy spawned!\")\n}\n\nTask {\n    await spawnEnemy()\n}\n"}],"position":{"start":{"line":54,"column":1,"offset":1714},"end":{"line":66,"column":4,"offset":1942}}},"children":"import Foundation\n\nfunc spawnEnemy() async {\n    print(\"Enemy will spawn in 3 seconds...\")\n    try await Task.sleep(nanoseconds: 3_000_000_000) // 3초 대기\n    print(\"Enemy spawned!\")\n}\n\nTask {\n    await spawnEnemy()\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제에서는 적이 나타나기 전에 3초 동안 대기합니다. 이러한 지연은 게임의 긴장감을 높이고 플레이어에게 준비 시간을 제공합니다."}],"\n",["$","h4","h4-4",{"children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift의 async delay는 코드의 흐름을 제어하고 사용자 경험을 향상시키는 데 유용한 도구입니다. 네트워크 요청, 애니메이션, 게임 이벤트 등 다양한 상황에서 활용할 수 있습니다. 비동기 작업을 처리할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Task.sleep","position":{"start":{"line":72,"column":121,"offset":2148},"end":{"line":72,"column":133,"offset":2160}}}],"position":{"start":{"line":72,"column":121,"offset":2148},"end":{"line":72,"column":133,"offset":2160}}},"children":"Task.sleep"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async","position":{"start":{"line":72,"column":135,"offset":2162},"end":{"line":72,"column":142,"offset":2169}}}],"position":{"start":{"line":72,"column":135,"offset":2162},"end":{"line":72,"column":142,"offset":2169}}},"children":"async"}}],"/",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":72,"column":143,"offset":2170},"end":{"line":72,"column":150,"offset":2177}}}],"position":{"start":{"line":72,"column":143,"offset":2170},"end":{"line":72,"column":150,"offset":2177}}},"children":"await"}}]," 키워드를 사용하면 더욱 효율적이고 반응성 있는 애플리케이션을 개발할 수 있습니다. 이 강력한 기능을 마스터하여 Swift 개발의 새로운 가능성을 탐구해보세요!"]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift의 Async Delay 코드 실행중 잠시 멈춰!","toc":[{"tagName":"h3","title":"Swift의 Async Delay: 기다림의 미학을 활용한 코드 작성법","id":"8f8cdc2c"}],"language":"kr"}]}]]}]]
8:null
