1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI-%EA%B3%A0%EA%B8%89-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EA%B8%B0%EB%B2%95-%EA%B7%B8%EB%A6%AC%EB%93%9C%EC%99%80-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-0cf09e3b","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI-고급-레이아웃-기법-그리드와-커스텀-레이아웃-0cf09e3b\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI-%EA%B3%A0%EA%B8%89-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EA%B8%B0%EB%B2%95-%EA%B7%B8%EB%A6%AC%EB%93%9C%EC%99%80-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-0cf09e3b","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI-고급-레이아웃-기법-그리드와-커스텀-레이아웃-0cf09e3b\"}"},"styles":[]}],"segment":["slug","SwiftUI-%EA%B3%A0%EA%B8%89-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EA%B8%B0%EB%B2%95-%EA%B7%B8%EB%A6%AC%EB%93%9C%EC%99%80-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-0cf09e3b","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI 고급 레이아웃 기법: 그리드와 커스텀 레이아웃 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 문서는 Swift 프로그래밍 언어의 SwiftUI를 사용하여 고급 레이아웃 기법을 다룹니다. 특히 그리드와 커스텀 레이아웃을 활용하여 유연하고 효율적인 사용자 인터페이스를 구현하는 방법에 대해 설명합니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,그리드 레이아웃,커스텀 레이아웃,iOS 개발"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI-%EA%B3%A0%EA%B8%89-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EA%B8%B0%EB%B2%95-%EA%B7%B8%EB%A6%AC%EB%93%9C%EC%99%80-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-0cf09e3b"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI 고급 레이아웃 기법: 그리드와 커스텀 레이아웃 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI 고급 레이아웃 기법: 그리드와 커스텀 레이아웃 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 문서는 Swift 프로그래밍 언어의 SwiftUI를 사용하여 고급 레이아웃 기법을 다룹니다. 특히 그리드와 커스텀 레이아웃을 활용하여 유연하고 효율적인 사용자 인터페이스를 구현하는 방법에 대해 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI-%EA%B3%A0%EA%B8%89-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EA%B8%B0%EB%B2%95-%EA%B7%B8%EB%A6%AC%EB%93%9C%EC%99%80-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-0cf09e3b"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI 고급 레이아웃 기법: 그리드와 커스텀 레이아웃 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 문서는 Swift 프로그래밍 언어의 SwiftUI를 사용하여 고급 레이아웃 기법을 다룹니다. 특히 그리드와 커스텀 레이아웃을 활용하여 유연하고 효율적인 사용자 인터페이스를 구현하는 방법에 대해 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI 고급 레이아웃 기법: 그리드와 커스텀 레이아웃"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI 고급 레이아웃 기법: 그리드와 커스텀 레이아웃"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-15"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"94e7336f","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI 고급 레이아웃 기법: 그리드와 커스텀 레이아웃"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI는 iOS 앱 개발자를 위한 매우 강력한 UI 프레임워크입니다. 이 문서에서는 SwiftUI의 고급 레이아웃 기법에 대해 다루며, 주로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"그리드","position":{"start":{"line":4,"column":84,"offset":121},"end":{"line":4,"column":89,"offset":126}}}],"position":{"start":{"line":4,"column":84,"offset":121},"end":{"line":4,"column":89,"offset":126}}},"children":"그리드"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"커스텀 레이아웃","position":{"start":{"line":4,"column":91,"offset":128},"end":{"line":4,"column":101,"offset":138}}}],"position":{"start":{"line":4,"column":91,"offset":128},"end":{"line":4,"column":101,"offset":138}}},"children":"커스텀 레이아웃"}}],"을 중심으로 설명합니다."]}],"\n",["$","h2",null,{"id":"f132e0ae","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"그리드 레이아웃"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["그리드 레이아웃은 다양한 크기의 셀을 유동적으로 배치하는 데 유용한 방법입니다. SwiftUI에서 그리드 레이아웃을 구현하는 데에는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyVGrid","position":{"start":{"line":8,"column":75,"offset":240},"end":{"line":8,"column":86,"offset":251}}}],"position":{"start":{"line":8,"column":75,"offset":240},"end":{"line":8,"column":86,"offset":251}}},"children":"LazyVGrid"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHGrid","position":{"start":{"line":8,"column":88,"offset":253},"end":{"line":8,"column":99,"offset":264}}}],"position":{"start":{"line":8,"column":88,"offset":253},"end":{"line":8,"column":99,"offset":264}}},"children":"LazyHGrid"}}],"를 사용할 수 있습니다."]}],"\n",["$","h3",null,{"id":"42a19e3b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"LazyVGrid"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyVGrid","position":{"start":{"line":12,"column":1,"offset":294},"end":{"line":12,"column":12,"offset":305}}}],"position":{"start":{"line":12,"column":1,"offset":294},"end":{"line":12,"column":12,"offset":305}}},"children":"LazyVGrid"}}],"는 수직 방향으로 그리드를 구성합니다. 기본적인 사용 예제는 다음과 같습니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct GridExampleView: View {\n    let items = Array(1...100)\n    let columns = [\n        GridItem(.flexible()),\n        GridItem(.flexible()),\n        GridItem(.flexible())\n    ]\n\n    var body: some View {\n        ScrollView {\n            LazyVGrid(columns: columns) {\n                ForEach(items, id: \\.self) { item in\n                    Text(\"Item \\(item)\")\n                        .frame(width: 100, height: 100)\n                        .background(Color.blue)\n                        .cornerRadius(8)\n                }\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":14,"column":1,"offset":350},"end":{"line":38,"column":4,"offset":937}}},"children":"import SwiftUI\n\nstruct GridExampleView: View {\n    let items = Array(1...100)\n    let columns = [\n        GridItem(.flexible()),\n        GridItem(.flexible()),\n        GridItem(.flexible())\n    ]\n\n    var body: some View {\n        ScrollView {\n            LazyVGrid(columns: columns) {\n                ForEach(items, id: \\.self) { item in\n                    Text(\"Item \\(item)\")\n                        .frame(width: 100, height: 100)\n                        .background(Color.blue)\n                        .cornerRadius(8)\n                }\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제는 수직 그리드로 100개의 아이템을 3열로 배열합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"GridItem","position":{"start":{"line":40,"column":37,"offset":975},"end":{"line":40,"column":47,"offset":985}}}],"position":{"start":{"line":40,"column":37,"offset":975},"end":{"line":40,"column":47,"offset":985}}},"children":"GridItem"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".flexible()","position":{"start":{"line":40,"column":49,"offset":987},"end":{"line":40,"column":62,"offset":1000}}}],"position":{"start":{"line":40,"column":49,"offset":987},"end":{"line":40,"column":62,"offset":1000}}},"children":".flexible()"}}],"로 설정하면 각 셀의 너비가 유동적으로 조정됩니다."]}],"\n",["$","h3",null,{"id":"1e9718da","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"LazyHGrid"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LazyHGrid","position":{"start":{"line":44,"column":1,"offset":1045},"end":{"line":44,"column":12,"offset":1056}}}],"position":{"start":{"line":44,"column":1,"offset":1045},"end":{"line":44,"column":12,"offset":1056}}},"children":"LazyHGrid"}}],"는 수평 방향으로 그리드를 구성합니다. 아래는 기본적인 사용 예제입니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct HorizontalGridExampleView: View {\n    let items = Array(1...100)\n    let rows = [\n        GridItem(.flexible()),\n        GridItem(.flexible()),\n        GridItem(.flexible())\n    ]\n\n    var body: some View {\n        ScrollView(.horizontal) {\n            LazyHGrid(rows: rows) {\n                ForEach(items, id: \\.self) { item in\n                    Text(\"Item \\(item)\")\n                        .frame(width: 100, height: 100)\n                        .background(Color.green)\n                        .cornerRadius(8)\n                }\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":46,"column":1,"offset":1098},"end":{"line":70,"column":4,"offset":1700}}},"children":"import SwiftUI\n\nstruct HorizontalGridExampleView: View {\n    let items = Array(1...100)\n    let rows = [\n        GridItem(.flexible()),\n        GridItem(.flexible()),\n        GridItem(.flexible())\n    ]\n\n    var body: some View {\n        ScrollView(.horizontal) {\n            LazyHGrid(rows: rows) {\n                ForEach(items, id: \\.self) { item in\n                    Text(\"Item \\(item)\")\n                        .frame(width: 100, height: 100)\n                        .background(Color.green)\n                        .cornerRadius(8)\n                }\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제는 수평 그리드로 100개의 아이템을 3행으로 배열합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ScrollView","position":{"start":{"line":72,"column":38,"offset":1739},"end":{"line":72,"column":50,"offset":1751}}}],"position":{"start":{"line":72,"column":38,"offset":1739},"end":{"line":72,"column":50,"offset":1751}}},"children":"ScrollView"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".horizontal","position":{"start":{"line":72,"column":52,"offset":1753},"end":{"line":72,"column":65,"offset":1766}}}],"position":{"start":{"line":72,"column":52,"offset":1753},"end":{"line":72,"column":65,"offset":1766}}},"children":".horizontal"}}]," 파라미터를 통해 수평 스크롤이 가능하게 합니다."]}],"\n",["$","h2",null,{"id":"e901e769","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"커스텀 레이아웃"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI에서 제공하지 않는 특별한 레이아웃을 구현해야 하는 경우에는 커스텀 레이아웃을 작성할 수 있습니다. 이를 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CustomLayout","position":{"start":{"line":76,"column":70,"offset":1877},"end":{"line":76,"column":84,"offset":1891}}}],"position":{"start":{"line":76,"column":70,"offset":1877},"end":{"line":76,"column":84,"offset":1891}}},"children":"CustomLayout"}}]," 프로토콜을 사용할 수 있습니다."]}],"\n",["$","h3",null,{"id":"9e7189cb","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"CustomLayout 프로토콜"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 프로토콜은 자체 레이아웃 방식을 정의할 때 사용됩니다. 다음은 간단한 예제입니다:"}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct CustomLayoutExample: View {\n    var body: some View {\n        CustomStack {\n            Text(\"First\")\n            Text(\"Second\")\n            Text(\"Third\")\n        }\n    }\n}\n\nstruct CustomStack<Content: View>: View {\n    let content: Content\n\n    init(@ViewBuilder content: () -> Content) {\n        self.content = content()\n    }\n\n    var body: some View {\n        VStack {\n            content\n        }\n    }\n}\n"}],"position":{"start":{"line":82,"column":1,"offset":1983},"end":{"line":108,"column":4,"offset":2429}}},"children":"import SwiftUI\n\nstruct CustomLayoutExample: View {\n    var body: some View {\n        CustomStack {\n            Text(\"First\")\n            Text(\"Second\")\n            Text(\"Third\")\n        }\n    }\n}\n\nstruct CustomStack<Content: View>: View {\n    let content: Content\n\n    init(@ViewBuilder content: () -> Content) {\n        self.content = content()\n    }\n\n    var body: some View {\n        VStack {\n            content\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 커스텀 스택은 전달된 뷰들을 세로로 렌더링합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@ViewBuilder","position":{"start":{"line":110,"column":31,"offset":2461},"end":{"line":110,"column":45,"offset":2475}}}],"position":{"start":{"line":110,"column":31,"offset":2461},"end":{"line":110,"column":45,"offset":2475}}},"children":"@ViewBuilder"}}],"는 뷰를 클로저로 받아서 제공합니다."]}],"\n",["$","h3",null,{"id":"954e8be1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"커스텀 레이아웃 만들기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["좀 더 복잡한 커스텀 레이아웃을 만들려면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Layout","position":{"start":{"line":114,"column":24,"offset":2538},"end":{"line":114,"column":32,"offset":2546}}}],"position":{"start":{"line":114,"column":24,"offset":2538},"end":{"line":114,"column":32,"offset":2546}}},"children":"Layout"}}]," 프로토콜을 구현해야 합니다. 아래는 예제입니다:"]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct CustomGridLayout: Layout {\n    func sizeThatFits(proposal: ProposedViewSize, subviews: Subviews, cache: inout ()) -> CGSize {\n        return CGSize(width: 200, height: 200)\n    }\n\n    func placeSubviews(in bounds: CGRect, proposal: ProposedViewSize, subviews: Subviews, cache: inout ()) {\n        for (index, subview) in subviews.enumerated() {\n            let x = (index % 3) * 75\n            let y = (index / 3) * 75\n            subview.place(at: CGPoint(x: x, y: y), anchor: .topLeading)\n        }\n    }\n}\n\nstruct CustomGridExample: View {\n    var body: some View {\n        CustomGridLayout {\n            ForEach(0..<9) { index in\n                Color.red.frame(width: 70, height: 70)\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":116,"column":1,"offset":2575},"end":{"line":142,"column":4,"offset":3331}}},"children":"import SwiftUI\n\nstruct CustomGridLayout: Layout {\n    func sizeThatFits(proposal: ProposedViewSize, subviews: Subviews, cache: inout ()) -> CGSize {\n        return CGSize(width: 200, height: 200)\n    }\n\n    func placeSubviews(in bounds: CGRect, proposal: ProposedViewSize, subviews: Subviews, cache: inout ()) {\n        for (index, subview) in subviews.enumerated() {\n            let x = (index % 3) * 75\n            let y = (index / 3) * 75\n            subview.place(at: CGPoint(x: x, y: y), anchor: .topLeading)\n        }\n    }\n}\n\nstruct CustomGridExample: View {\n    var body: some View {\n        CustomGridLayout {\n            ForEach(0..<9) { index in\n                Color.red.frame(width: 70, height: 70)\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CustomGridLayout","position":{"start":{"line":144,"column":8,"offset":3340},"end":{"line":144,"column":26,"offset":3358}}}],"position":{"start":{"line":144,"column":8,"offset":3340},"end":{"line":144,"column":26,"offset":3358}}},"children":"CustomGridLayout"}}],"은 뷰를 3열의 그리드로 배치합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sizeThatFits","position":{"start":{"line":144,"column":47,"offset":3379},"end":{"line":144,"column":61,"offset":3393}}}],"position":{"start":{"line":144,"column":47,"offset":3379},"end":{"line":144,"column":61,"offset":3393}}},"children":"sizeThatFits"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"placeSubviews","position":{"start":{"line":144,"column":63,"offset":3395},"end":{"line":144,"column":78,"offset":3410}}}],"position":{"start":{"line":144,"column":63,"offset":3395},"end":{"line":144,"column":78,"offset":3410}}},"children":"placeSubviews"}}]," 메서드를 통해 레이아웃의 크기와 뷰의 위치를 지정합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 문서에서 설명한 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"그리드 레이아웃","position":{"start":{"line":146,"column":12,"offset":3455},"end":{"line":146,"column":22,"offset":3465}}}],"position":{"start":{"line":146,"column":12,"offset":3455},"end":{"line":146,"column":22,"offset":3465}}},"children":"그리드 레이아웃"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"커스텀 레이아웃","position":{"start":{"line":146,"column":24,"offset":3467},"end":{"line":146,"column":34,"offset":3477}}}],"position":{"start":{"line":146,"column":24,"offset":3467},"end":{"line":146,"column":34,"offset":3477}}},"children":"커스텀 레이아웃"}}]," 기법을 활용하여, SwiftUI에서 더욱 유연하고 강력한 사용자 인터페이스를 구현할 수 있을 것입니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI 고급 레이아웃 기법: 그리드와 커스텀 레이아웃","toc":[{"tagName":"h1","title":"SwiftUI 고급 레이아웃 기법: 그리드와 커스텀 레이아웃","id":"94e7336f"},{"tagName":"h2","title":"그리드 레이아웃","id":"f132e0ae"},{"tagName":"h3","title":"LazyVGrid","id":"42a19e3b"},{"tagName":"h3","title":"LazyHGrid","id":"1e9718da"},{"tagName":"h2","title":"커스텀 레이아웃","id":"e901e769"},{"tagName":"h3","title":"CustomLayout 프로토콜","id":"9e7189cb"},{"tagName":"h3","title":"커스텀 레이아웃 만들기","id":"954e8be1"}],"language":"kr"}]}]]}]]
8:null
