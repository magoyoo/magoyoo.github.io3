1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-DispatchQueue%EC%97%90%EC%84%9C-weak-self%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EC%95%84%EB%8F%84-%EB%90%98%EB%8A%94-%EC%9D%B4%EC%9C%A0-29280158","d"],{"children":["__PAGE__?{\"slug\":\"Swift-DispatchQueue에서-weak-self를-사용하지-않아도-되는-이유-29280158\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-DispatchQueue%EC%97%90%EC%84%9C-weak-self%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EC%95%84%EB%8F%84-%EB%90%98%EB%8A%94-%EC%9D%B4%EC%9C%A0-29280158","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-DispatchQueue에서-weak-self를-사용하지-않아도-되는-이유-29280158\"}"},"styles":[]}],"segment":["slug","Swift-DispatchQueue%EC%97%90%EC%84%9C-weak-self%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EC%95%84%EB%8F%84-%EB%90%98%EB%8A%94-%EC%9D%B4%EC%9C%A0-29280158","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift DispatchQueue에서 [weak self]를 사용하지 않아도 되는 이유 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Swift의 `DispatchQueue` 사용 시 `[weak self]` 지정자가 필요하지 않은 이유와 이를 안전하게 사용하는 방법에 대해 설명합니다. 메모리 관리와 관련된 개념, 클로저에서의 사용 패턴, 그리고 구체적인 코드 예제를 포함합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,DispatchQueue,weak self,메모리 관리"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-DispatchQueue%EC%97%90%EC%84%9C-weak-self%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EC%95%84%EB%8F%84-%EB%90%98%EB%8A%94-%EC%9D%B4%EC%9C%A0-29280158"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift DispatchQueue에서 [weak self]를 사용하지 않아도 되는 이유 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift DispatchQueue에서 [weak self]를 사용하지 않아도 되는 이유 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Swift의 `DispatchQueue` 사용 시 `[weak self]` 지정자가 필요하지 않은 이유와 이를 안전하게 사용하는 방법에 대해 설명합니다. 메모리 관리와 관련된 개념, 클로저에서의 사용 패턴, 그리고 구체적인 코드 예제를 포함합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-DispatchQueue%EC%97%90%EC%84%9C-weak-self%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EC%95%84%EB%8F%84-%EB%90%98%EB%8A%94-%EC%9D%B4%EC%9C%A0-29280158"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift DispatchQueue에서 [weak self]를 사용하지 않아도 되는 이유 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Swift의 `DispatchQueue` 사용 시 `[weak self]` 지정자가 필요하지 않은 이유와 이를 안전하게 사용하는 방법에 대해 설명합니다. 메모리 관리와 관련된 개념, 클로저에서의 사용 패턴, 그리고 구체적인 코드 예제를 포함합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift DispatchQueue에서 [weak self]를 사용하지 않아도 되는 이유"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift DispatchQueue에서 [weak self]를 사용하지 않아도 되는 이유"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-31"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"80172f4b","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift DispatchQueue에서 [weak self]를 사용하지 않아도 되는 이유"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서 코드의 비동기 실행을 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":4,"column":24,"offset":77},"end":{"line":4,"column":39,"offset":92}}}],"position":{"start":{"line":4,"column":24,"offset":77},"end":{"line":4,"column":39,"offset":92}}},"children":"DispatchQueue"}}],"를 자주 사용하게 됩니다. 많은 개발자가 클로저를 사용할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":4,"column":73,"offset":126},"end":{"line":4,"column":86,"offset":139}}}],"position":{"start":{"line":4,"column":73,"offset":126},"end":{"line":4,"column":86,"offset":139}}},"children":"[weak self]"}}],"를 사용하는 습관이 있으며, 이는 메모리 누수를 방지하는 데 도움이 됩니다. 하지만 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":4,"column":133,"offset":186},"end":{"line":4,"column":148,"offset":201}}}],"position":{"start":{"line":4,"column":133,"offset":186},"end":{"line":4,"column":148,"offset":201}}},"children":"DispatchQueue"}}],"를 사용할 때는 이 지정자가 항상 필요하지 않을 수 있습니다. 이 글에서는 그 이유와 안전하게 이를 사용하는 방법에 대해 설명합니다."]}],"\n",["$","h2",null,{"id":"af2aa96e","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"메모리 관리와 클로저"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서는 객체가 메모리에서 해제되지 않는 메모리 누수를 방지하기 위해 ARC(Automatic Reference Counting)를 사용합니다. 클로저는 캡쳐 리스트를 통해 외부 변수에 대한 참조를 가질 수 있으며, 이로 인해 강한 참조 순환(strong reference cycle)이 발생할 수 있습니다. 이것이 바로 클로저 내에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":8,"column":193,"offset":485},"end":{"line":8,"column":206,"offset":498}}}],"position":{"start":{"line":8,"column":193,"offset":485},"end":{"line":8,"column":206,"offset":498}}},"children":"[weak self]"}}],"를 사용해야 하는 주된 이유입니다."]}],"\n",["$","h3",null,{"id":"6d6148a0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"강한 참조와 약한 참조"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak","position":{"start":{"line":12,"column":8,"offset":544},"end":{"line":12,"column":14,"offset":550}}}],"position":{"start":{"line":12,"column":8,"offset":544},"end":{"line":12,"column":14,"offset":550}}},"children":"weak"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unowned","position":{"start":{"line":12,"column":16,"offset":552},"end":{"line":12,"column":25,"offset":561}}}],"position":{"start":{"line":12,"column":16,"offset":552},"end":{"line":12,"column":25,"offset":561}}},"children":"unowned"}}],"는 클로저 내부에서 외부 객체를 참조할 때 다양한 방식으로 객체를 참조할 수 있게 합니다. 강한 참조(strong reference)는 참조되는 동안 객체가 메모리에 유지되도록 합니다. 반면, 약한 참조(weak reference)는 객체가 해제되더라도 참조를 유지하지 않습니다."]}],"\n",["$","h2",null,{"id":"2023192b","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"DispatchQueue와 메모리 관리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":16,"column":1,"offset":745},"end":{"line":16,"column":16,"offset":760}}}],"position":{"start":{"line":16,"column":1,"offset":745},"end":{"line":16,"column":16,"offset":760}}},"children":"DispatchQueue"}}],"를 사용한 비동기 작업이 완료된 후에도 객체가 해제되기를 원할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":16,"column":53,"offset":797},"end":{"line":16,"column":66,"offset":810}}}],"position":{"start":{"line":16,"column":53,"offset":797},"end":{"line":16,"column":66,"offset":810}}},"children":"[weak self]"}}],"를 사용하는 것이 이상적으로 보일 수 있습니다. 그러나 대부분의 경우 이는 불필요하거나 오히려 코드의 가독성을 떨어뜨릴 수 있습니다."]}],"\n",["$","h3",null,{"id":"c7da9758","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"주 큐 vs 비동기 큐"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"가장 일반적으로 사용하는 주 큐(Main Queue)에서는 클로저가 실행될 때 해당 객체가 이미 메모리에 남아있을 가능성이 높습니다. 예를 들어, 네트워크 요청 후 UI 업데이트를 메인 큐에서 실행하는 경우입니다. 또한, 비동기 큐에서는 클로저의 실행 시점에 객체가 해제되는 것이 흔하지 않습니다."}],"\n",["$","h3",null,{"id":"1aa891f9","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제 코드 분석"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":24,"column":5,"offset":1090},"end":{"line":24,"column":18,"offset":1103}}}],"position":{"start":{"line":24,"column":5,"offset":1090},"end":{"line":24,"column":18,"offset":1103}}},"children":"[weak self]"}}],"를 사용하는 경우와 사용하지 않는 경우의 비교입니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class MyViewController: UIViewController {\n    var data: [String] = []\n\n    func fetchData() {\n        DispatchQueue.global().async { [weak self] in\n            guard let self = self else { return }\n            // 네트워크 요청 또는 긴 작업 수행\n            let fetchedData = [\"Apple\", \"Banana\", \"Cherry\"]\n\n            DispatchQueue.main.async {\n                self.data = fetchedData\n                self.tableView.reloadData()\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":26,"column":1,"offset":1134},"end":{"line":43,"column":4,"offset":1595}}},"children":"class MyViewController: UIViewController {\n    var data: [String] = []\n\n    func fetchData() {\n        DispatchQueue.global().async { [weak self] in\n            guard let self = self else { return }\n            // 네트워크 요청 또는 긴 작업 수행\n            let fetchedData = [\"Apple\", \"Banana\", \"Cherry\"]\n\n            DispatchQueue.main.async {\n                self.data = fetchedData\n                self.tableView.reloadData()\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":45,"column":8,"offset":1604},"end":{"line":45,"column":23,"offset":1619}}}],"position":{"start":{"line":45,"column":8,"offset":1604},"end":{"line":45,"column":23,"offset":1619}}},"children":"DispatchQueue"}}],"에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":45,"column":26,"offset":1622},"end":{"line":45,"column":39,"offset":1635}}}],"position":{"start":{"line":45,"column":26,"offset":1622},"end":{"line":45,"column":39,"offset":1635}}},"children":"[weak self]"}}],"를 사용한 예제입니다. 반면, 다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":45,"column":60,"offset":1656},"end":{"line":45,"column":73,"offset":1669}}}],"position":{"start":{"line":45,"column":60,"offset":1656},"end":{"line":45,"column":73,"offset":1669}}},"children":"[weak self]"}}],"를 사용하지 않은 경우입니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class MyViewController: UIViewController {\n    var data: [String] = []\n\n    func fetchData() {\n        DispatchQueue.global().async {\n            // 네트워크 요청 또는 긴 작업 수행\n            let fetchedData = [\"Apple\", \"Banana\", \"Cherry\"]\n\n            DispatchQueue.main.async {\n                self.data = fetchedData\n                self.tableView.reloadData()\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":47,"column":1,"offset":1687},"end":{"line":63,"column":4,"offset":2083}}},"children":"class MyViewController: UIViewController {\n    var data: [String] = []\n\n    func fetchData() {\n        DispatchQueue.global().async {\n            // 네트워크 요청 또는 긴 작업 수행\n            let fetchedData = [\"Apple\", \"Banana\", \"Cherry\"]\n\n            DispatchQueue.main.async {\n                self.data = fetchedData\n                self.tableView.reloadData()\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 코드는 두 예제의 동작이 거의 유사함을 보입니다. 중요한 차이점은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":65,"column":41,"offset":2125},"end":{"line":65,"column":54,"offset":2138}}}],"position":{"start":{"line":65,"column":41,"offset":2125},"end":{"line":65,"column":54,"offset":2138}}},"children":"[weak self]"}}],"가 불필요하게 코드의 복잡성을 더할 수 있다는 것입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue.global().async","position":{"start":{"line":65,"column":86,"offset":2170},"end":{"line":65,"column":116,"offset":2200}}}],"position":{"start":{"line":65,"column":86,"offset":2170},"end":{"line":65,"column":116,"offset":2200}}},"children":"DispatchQueue.global().async"}}]," 클로저가 실행될 때 객체가 메모리에서 해제되는 상황은 흔하지 않기 때문입니다."]}],"\n",["$","h2",null,{"id":"63675a43","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"안전한 사용을 위한 팁"}],"\n",["$","h3",null,{"id":"efb077b5","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"애플의 가이드라인"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["애플의 공식 문서에서도 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":71,"column":14,"offset":2291},"end":{"line":71,"column":27,"offset":2304}}}],"position":{"start":{"line":71,"column":14,"offset":2291},"end":{"line":71,"column":27,"offset":2304}}},"children":"[weak self]"}}],"의 사용이 항상 필요하지 않음을 언급하고 있으며, 필요할 때만 사용하는 것이 좋다고 조언합니다. 예를 들어, 주 큐에서 실행되는 클로저의 경우 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":71,"column":107,"offset":2384},"end":{"line":71,"column":120,"offset":2397}}}],"position":{"start":{"line":71,"column":107,"offset":2384},"end":{"line":71,"column":120,"offset":2397}}},"children":"[weak self]"}}],"가 거의 필요하지 않습니다."]}],"\n",["$","h3",null,{"id":"49921735","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"상황에 맞는 판단"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["코드의 컨텍스트를 잘 이해하고 상황에 맞게 판단하는 것이 중요합니다. 예를 들어, 장시간 실행되는 작업이 있고, 이 작업이 완료된 후 객체가 해제되더라도 문제가 없다면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":75,"column":95,"offset":2523},"end":{"line":75,"column":108,"offset":2536}}}],"position":{"start":{"line":75,"column":95,"offset":2523},"end":{"line":75,"column":108,"offset":2536}}},"children":"[weak self]"}}],"를 사용하여 강한 참조 순환을 방지할 수 있습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"DispatchQueue.global().async { [weak self] in\n    guard let self = self else { return }\n    // 장시간 작업 수행\n\n    DispatchQueue.main.async {\n        self?.updateUI()\n    }\n}\n"}],"position":{"start":{"line":77,"column":1,"offset":2566},"end":{"line":86,"column":4,"offset":2748}}},"children":"DispatchQueue.global().async { [weak self] in\n    guard let self = self else { return }\n    // 장시간 작업 수행\n\n    DispatchQueue.main.async {\n        self?.updateUI()\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이처럼 긴 작업이 있는 경우에는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":88,"column":19,"offset":2768},"end":{"line":88,"column":32,"offset":2781}}}],"position":{"start":{"line":88,"column":19,"offset":2768},"end":{"line":88,"column":32,"offset":2781}}},"children":"[weak self]"}}],"가 더 안전할 수 있습니다. 그러나 대부분의 간단한 작업에서는 이를 생략해도 무방합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":92,"column":8,"offset":2846},"end":{"line":92,"column":23,"offset":2861}}}],"position":{"start":{"line":92,"column":8,"offset":2846},"end":{"line":92,"column":23,"offset":2861}}},"children":"DispatchQueue"}}],"를 사용할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":92,"column":31,"offset":2869},"end":{"line":92,"column":44,"offset":2882}}}],"position":{"start":{"line":92,"column":31,"offset":2869},"end":{"line":92,"column":44,"offset":2882}}},"children":"[weak self]"}}],"를 사용하는 것이 항상 필요한 것은 아닙니다. 코드를 작성할 때는 작업의 복잡성과 지속 시간을 고려하고, 필요할 때만 지정자를 사용하는 것이 좋습니다. 이를 통해 코드의 가독성을 유지하면서도 메모리 누수를 방지할 수 있습니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift DispatchQueue에서 [weak self]를 사용하지 않아도 되는 이유","toc":[{"tagName":"h1","title":"Swift DispatchQueue에서 [weak self]를 사용하지 않아도 되는 이유","id":"80172f4b"},{"tagName":"h2","title":"메모리 관리와 클로저","id":"af2aa96e"},{"tagName":"h3","title":"강한 참조와 약한 참조","id":"6d6148a0"},{"tagName":"h2","title":"DispatchQueue와 메모리 관리","id":"2023192b"},{"tagName":"h3","title":"주 큐 vs 비동기 큐","id":"c7da9758"},{"tagName":"h3","title":"예제 코드 분석","id":"1aa891f9"},{"tagName":"h2","title":"안전한 사용을 위한 팁","id":"63675a43"},{"tagName":"h3","title":"애플의 가이드라인","id":"efb077b5"},{"tagName":"h3","title":"상황에 맞는 판단","id":"49921735"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
