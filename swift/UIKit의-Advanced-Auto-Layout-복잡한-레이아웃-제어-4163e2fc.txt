1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","UIKit%EC%9D%98-Advanced-Auto-Layout-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%A0%9C%EC%96%B4-4163e2fc","d"],{"children":["__PAGE__?{\"slug\":\"UIKit의-Advanced-Auto-Layout-복잡한-레이아웃-제어-4163e2fc\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","UIKit%EC%9D%98-Advanced-Auto-Layout-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%A0%9C%EC%96%B4-4163e2fc","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"UIKit의-Advanced-Auto-Layout-복잡한-레이아웃-제어-4163e2fc\"}"},"styles":[]}],"segment":["slug","UIKit%EC%9D%98-Advanced-Auto-Layout-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%A0%9C%EC%96%B4-4163e2fc","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"UIKit의 Advanced Auto Layout: 복잡한 레이아웃 제어 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 iOS 개발을 위한 UIKit의 고급 자동 레이아웃 기능을 다룹니다. 복잡한 사용자 인터페이스를 효과적으로 구성하고 제어하는 방법을 설명합니다."}],["$","meta","3",{"name":"keywords","content":"UIKit,Auto Layout,iOS 개발,고급"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/UIKit%EC%9D%98-Advanced-Auto-Layout-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%A0%9C%EC%96%B4-4163e2fc"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"UIKit의 Advanced Auto Layout: 복잡한 레이아웃 제어 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"UIKit의 Advanced Auto Layout: 복잡한 레이아웃 제어 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 iOS 개발을 위한 UIKit의 고급 자동 레이아웃 기능을 다룹니다. 복잡한 사용자 인터페이스를 효과적으로 구성하고 제어하는 방법을 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/UIKit%EC%9D%98-Advanced-Auto-Layout-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%A0%9C%EC%96%B4-4163e2fc"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"UIKit의 Advanced Auto Layout: 복잡한 레이아웃 제어 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 iOS 개발을 위한 UIKit의 고급 자동 레이아웃 기능을 다룹니다. 복잡한 사용자 인터페이스를 효과적으로 구성하고 제어하는 방법을 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"UIKit의 Advanced Auto Layout: 복잡한 레이아웃 제어"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"UIKit의 Advanced Auto Layout: 복잡한 레이아웃 제어"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-22"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"83b9c938","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"UIKit의 Advanced Auto Layout: 복잡한 레이아웃 제어"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["자동 레이아웃(Auto Layout)은 iOS 앱에서 사용자 인터페이스(UI)를 설계할 때 매우 강력한 도구입니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIKit","position":{"start":{"line":4,"column":73,"offset":117},"end":{"line":4,"column":80,"offset":124}}}],"position":{"start":{"line":4,"column":73,"offset":117},"end":{"line":4,"column":80,"offset":124}}},"children":"UIKit"}}],"에서 제공하는 고급 자동 레이아웃 기술을 사용하여 복잡한 레이아웃을 제어하고 효과적으로 구성하는 방법을 다룹니다."]}],"\n",["$","h2",null,{"id":"fc4e9901","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Auto Layout의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Auto Layout은 뷰(view) 간의 상대적 위치와 크기를 제어하는 데 사용되는 제약 조건(constraints) 기반의 레이아웃 시스템입니다. 기본적인 제약 조건들은 다음과 같습니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"고정 위치와 크기"}],": 뷰의 위치와 크기를 고정합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"비율 제약"}],": 뷰의 크기를 다른 뷰 또는 슈퍼뷰(superview)에 대한 비율로 정의합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"고정 간격"}],": 뷰 간의 고정 간격을 설정합니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"기본 개념을 이해한 이후, 더 복잡한 레이아웃 상황에서는 추가적인 기술이 필요합니다."}],"\n",["$","h2",null,{"id":"eaf87608","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"복잡한 레이아웃을 위한 고급 기술"}],"\n",["$","h3",null,{"id":"7680f6ff","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 우선 순위와 제한된 제약"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"제약 조건의 우선 순위(priority)를 사용하면 어떤 제약 조건이 더 중요한지 결정할 수 있습니다. 각 제약 조건에는 1부터 1000까지의 우선 순위 값이 있습니다. 숫자가 높을수록 중요한 제약 조건입니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let highPriorityConstraint = NSLayoutConstraint(item: view1, attribute: .width, relatedBy: .equal, toItem: view2, attribute: .width, multiplier: 1, constant: 0)\nhighPriorityConstraint.priority = UILayoutPriority(750) // 750의 우선 순위를 설정\n"}],"position":{"start":{"line":22,"column":1,"offset":662},"end":{"line":25,"column":4,"offset":909}}},"children":"let highPriorityConstraint = NSLayoutConstraint(item: view1, attribute: .width, relatedBy: .equal, toItem: view2, attribute: .width, multiplier: 1, constant: 0)\nhighPriorityConstraint.priority = UILayoutPriority(750) // 750의 우선 순위를 설정\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"또한, 제약 조건을 제한적으로 설정할 수도 있습니다. 예를 들어, 특정 조건에서만 제약 조건을 활성화하려는 경우에 유용합니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"if someCondition {\n    NSLayoutConstraint.activate([constraint1, constraint2])\n} else {\n    NSLayoutConstraint.deactivate([constraint1, constraint2])\n}\n"}],"position":{"start":{"line":29,"column":1,"offset":983},"end":{"line":35,"column":4,"offset":1147}}},"children":"if someCondition {\n    NSLayoutConstraint.activate([constraint1, constraint2])\n} else {\n    NSLayoutConstraint.deactivate([constraint1, constraint2])\n}\n"}}]}],"\n",["$","h3",null,{"id":"ec0bfebc","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 스택 뷰를 활용한 레이아웃"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIStackView","position":{"start":{"line":39,"column":1,"offset":1172},"end":{"line":39,"column":14,"offset":1185}}}],"position":{"start":{"line":39,"column":1,"offset":1172},"end":{"line":39,"column":14,"offset":1185}}},"children":"UIStackView"}}],"는 복잡한 레이아웃을 간단하게 구성하는 데 유용한 컨테이너입니다. 스택 뷰는 내부의 뷰들을 자동으로 정렬하며, 다양한 축(axis)과 정렬(alignment) 옵션을 제공합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let stackView = UIStackView(arrangedSubviews: [view1, view2, view3])\nstackView.axis = .vertical\nstackView.alignment = .fill\nstackView.distribution = .equalSpacing\n"}],"position":{"start":{"line":41,"column":1,"offset":1286},"end":{"line":46,"column":4,"offset":1461}}},"children":"let stackView = UIStackView(arrangedSubviews: [view1, view2, view3])\nstackView.axis = .vertical\nstackView.alignment = .fill\nstackView.distribution = .equalSpacing\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIStackView","position":{"start":{"line":48,"column":1,"offset":1463},"end":{"line":48,"column":14,"offset":1476}}}],"position":{"start":{"line":48,"column":1,"offset":1463},"end":{"line":48,"column":14,"offset":1476}}},"children":"UIStackView"}}],"를 사용하면 여러 개의 뷰를 일관성 있게 배치할 수 있습니다."]}],"\n",["$","h3",null,{"id":"0b04f764","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 프로그래밍 방식으로 제약 조건 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"스토리보드를 사용하지 않고 코드로 제약 조건을 설정할 수 있습니다. 이렇게 하면 더 많은 유연성과 제어를 제공받게 됩니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"view1.translatesAutoresizingMaskIntoConstraints = false\nNSLayoutConstraint.activate([\n    view1.leadingAnchor.constraint(equalTo: superview.leadingAnchor, constant: 20),\n    view1.trailingAnchor.constraint(equalTo: superview.trailingAnchor, constant: -20),\n    view1.topAnchor.constraint(equalTo: superview.topAnchor, constant: 20),\n    view1.heightAnchor.constraint(equalToConstant: 100)\n])\n"}],"position":{"start":{"line":54,"column":1,"offset":1610},"end":{"line":62,"column":4,"offset":2014}}},"children":"view1.translatesAutoresizingMaskIntoConstraints = false\nNSLayoutConstraint.activate([\n    view1.leadingAnchor.constraint(equalTo: superview.leadingAnchor, constant: 20),\n    view1.trailingAnchor.constraint(equalTo: superview.trailingAnchor, constant: -20),\n    view1.topAnchor.constraint(equalTo: superview.topAnchor, constant: 20),\n    view1.heightAnchor.constraint(equalToConstant: 100)\n])\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"view1","position":{"start":{"line":64,"column":9,"offset":2024},"end":{"line":64,"column":16,"offset":2031}}}],"position":{"start":{"line":64,"column":9,"offset":2024},"end":{"line":64,"column":16,"offset":2031}}},"children":"view1"}}],"의 위치와 크기를 프로그래밍 방식으로 설정합니다."]}],"\n",["$","h3",null,{"id":"d440d9f6","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"4. 애니메이션과 함께 제약 조건 변경"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["제약 조건을 애니메이션과 함께 변경하여 사용자 인터페이스를 더 동적으로 만들 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIView.animate","position":{"start":{"line":68,"column":52,"offset":2138},"end":{"line":68,"column":68,"offset":2154}}}],"position":{"start":{"line":68,"column":52,"offset":2138},"end":{"line":68,"column":68,"offset":2154}}},"children":"UIView.animate"}}]," 블록 안에서 제약 조건을 변형하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"layoutIfNeeded","position":{"start":{"line":68,"column":89,"offset":2175},"end":{"line":68,"column":105,"offset":2191}}}],"position":{"start":{"line":68,"column":89,"offset":2175},"end":{"line":68,"column":105,"offset":2191}}},"children":"layoutIfNeeded"}}],"를 호출하여 애니메이션 효과를 적용합니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"UIView.animate(withDuration: 1.0) {\n    view1.widthAnchor.constraint(equalToConstant: 200).isActive = true\n    self.view.layoutIfNeeded()\n}\n"}],"position":{"start":{"line":70,"column":1,"offset":2216},"end":{"line":75,"column":4,"offset":2368}}},"children":"UIView.animate(withDuration: 1.0) {\n    view1.widthAnchor.constraint(equalToConstant: 200).isActive = true\n    self.view.layoutIfNeeded()\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 메서드는 애니메이션 블록 내에서 제약 조건의 변경을 부드럽게 처리합니다."}],"\n",["$","h2",null,{"id":"f7a13569","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"다양한 화면 크기에 대응하는 레이아웃 조정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"iOS 앱의 경우 다양한 디바이스와 화면 크기에 맞춰 레이아웃을 조정하는 것이 중요합니다. 다음은 이를 위한 몇 가지 팁입니다:"}],"\n",["$","h3",null,{"id":"7d9d1fd4","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 슈퍼뷰 기준 제약 조건 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"뷰를 슈퍼뷰(superview)에 상대적으로 배치하는 제약 조건을 설정하면, 화면 크기 변화에 대응하는 레이아웃을 쉽게 조정할 수 있습니다."}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"view1.topAnchor.constraint(equalTo: superview.safeAreaLayoutGuide.topAnchor, constant: 20).isActive = true\nview1.leadingAnchor.constraint(equalTo: superview.leadingAnchor, constant: 20).isActive = true\n"}],"position":{"start":{"line":87,"column":1,"offset":2619},"end":{"line":90,"column":4,"offset":2833}}},"children":"view1.topAnchor.constraint(equalTo: superview.safeAreaLayoutGuide.topAnchor, constant: 20).isActive = true\nview1.leadingAnchor.constraint(equalTo: superview.leadingAnchor, constant: 20).isActive = true\n"}}]}],"\n",["$","h3",null,{"id":"245d16b6","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 크기 클래스와 특성별 레이아웃"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"크기 클래스(Size Class)를 사용하면 특정 조건에 맞춰 다른 레이아웃을 설정할 수 있습니다. 이를 통해 아이폰과 아이패드에서 다른 레이아웃을 적용할 수 있습니다."}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"if traitCollection.horizontalSizeClass == .compact {\n    // Compact Width 레이아웃 설정\n} else {\n    // Regular Width 레이아웃 설정\n}\n"}],"position":{"start":{"line":96,"column":1,"offset":2956},"end":{"line":102,"column":4,"offset":3090}}},"children":"if traitCollection.horizontalSizeClass == .compact {\n    // Compact Width 레이아웃 설정\n} else {\n    // Regular Width 레이아웃 설정\n}\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UIKit의 고급 Auto Layout 기능을 사용하면 다양한 복잡한 레이아웃 요구 사항을 만족시킬 수 있습니다. 우선 순위, 스택 뷰, 프로그래밍 방식의 제약 조건 설정, 애니메이션과 결합된 제약 조건 변경 등을 효과적으로 활용하여 사용자 인터페이스를 효율적으로 설계하고 조정할 수 있습니다. 다양한 디바이스와 화면 크기에 대응하는 방법도 고민해 봐야 합니다. 이러한 기술을 통해 더 유연하고 유지보수하기 쉬운 사용자 인터페이스를 만들 수 있습니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"UIKit의 Advanced Auto Layout: 복잡한 레이아웃 제어","toc":[{"tagName":"h1","title":"UIKit의 Advanced Auto Layout: 복잡한 레이아웃 제어","id":"83b9c938"},{"tagName":"h2","title":"Auto Layout의 기본 개념","id":"fc4e9901"},{"tagName":"h2","title":"복잡한 레이아웃을 위한 고급 기술","id":"eaf87608"},{"tagName":"h3","title":"1. 우선 순위와 제한된 제약","id":"7680f6ff"},{"tagName":"h3","title":"2. 스택 뷰를 활용한 레이아웃","id":"ec0bfebc"},{"tagName":"h3","title":"3. 프로그래밍 방식으로 제약 조건 설정","id":"0b04f764"},{"tagName":"h3","title":"4. 애니메이션과 함께 제약 조건 변경","id":"d440d9f6"},{"tagName":"h2","title":"다양한 화면 크기에 대응하는 레이아웃 조정","id":"f7a13569"},{"tagName":"h3","title":"1. 슈퍼뷰 기준 제약 조건 사용","id":"7d9d1fd4"},{"tagName":"h3","title":"2. 크기 클래스와 특성별 레이아웃","id":"245d16b6"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
