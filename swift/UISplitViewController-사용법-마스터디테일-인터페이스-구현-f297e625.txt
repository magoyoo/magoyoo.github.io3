1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","UISplitViewController-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%A7%88%EC%8A%A4%ED%84%B0%EB%94%94%ED%85%8C%EC%9D%BC-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EA%B5%AC%ED%98%84-f297e625","d"],{"children":["__PAGE__?{\"slug\":\"UISplitViewController-사용법-마스터디테일-인터페이스-구현-f297e625\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","UISplitViewController-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%A7%88%EC%8A%A4%ED%84%B0%EB%94%94%ED%85%8C%EC%9D%BC-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EA%B5%AC%ED%98%84-f297e625","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"UISplitViewController-사용법-마스터디테일-인터페이스-구현-f297e625\"}"},"styles":[]}],"segment":["slug","UISplitViewController-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%A7%88%EC%8A%A4%ED%84%B0%EB%94%94%ED%85%8C%EC%9D%BC-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EA%B5%AC%ED%98%84-f297e625","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"UISplitViewController 사용법: 마스터-디테일 인터페이스 구현 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Swift를 사용하여 iOS 애플리케이션에서 자주 사용되는 마스터-디테일 인터페이스를 구현하기 위한 UISplitViewController의 사용법을 다룹니다."}],["$","meta","3",{"name":"keywords","content":"Swift,iOS,UISplitViewController,UX"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/UISplitViewController-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%A7%88%EC%8A%A4%ED%84%B0%EB%94%94%ED%85%8C%EC%9D%BC-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EA%B5%AC%ED%98%84-f297e625"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"UISplitViewController 사용법: 마스터-디테일 인터페이스 구현 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"UISplitViewController 사용법: 마스터-디테일 인터페이스 구현 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Swift를 사용하여 iOS 애플리케이션에서 자주 사용되는 마스터-디테일 인터페이스를 구현하기 위한 UISplitViewController의 사용법을 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/UISplitViewController-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%A7%88%EC%8A%A4%ED%84%B0%EB%94%94%ED%85%8C%EC%9D%BC-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EA%B5%AC%ED%98%84-f297e625"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"UISplitViewController 사용법: 마스터-디테일 인터페이스 구현 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Swift를 사용하여 iOS 애플리케이션에서 자주 사용되는 마스터-디테일 인터페이스를 구현하기 위한 UISplitViewController의 사용법을 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"UISplitViewController 사용법: 마스터-디테일 인터페이스 구현"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"UISplitViewController 사용법: 마스터-디테일 인터페이스 구현"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-24"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"9cb1bafc","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"UISplitViewController 사용법: 마스터-디테일 인터페이스 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["마스터-디테일 인터페이스는 iOS 애플리케이션에서 데이터를 관리하고 사용자 경험을 최적화하는 데 자주 사용되는 디자인 패턴입니다. 이 패턴은 리스트 형태의 '마스터' 뷰와, 특정 아이템의 세부 정보를 보여주는 '디테일' 뷰로 구성됩니다. Swift에서 이 구조를 쉽게 구현할 수 있는 도구가 바로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UISplitViewController","position":{"start":{"line":4,"column":167,"offset":214},"end":{"line":4,"column":190,"offset":237}}}],"position":{"start":{"line":4,"column":167,"offset":214},"end":{"line":4,"column":190,"offset":237}}},"children":"UISplitViewController"}}],"입니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UISplitViewController","position":{"start":{"line":4,"column":202,"offset":249},"end":{"line":4,"column":225,"offset":272}}}],"position":{"start":{"line":4,"column":202,"offset":249},"end":{"line":4,"column":225,"offset":272}}},"children":"UISplitViewController"}}],"를 사용하여 마스터-디테일 인터페이스를 구현하는 방법을 단계별로 설명하겠습니다."]}],"\n",["$","h2",null,{"id":"68532d16","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UISplitViewController 기본 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UISplitViewController","position":{"start":{"line":8,"column":1,"offset":350},"end":{"line":8,"column":24,"offset":373}}}],"position":{"start":{"line":8,"column":1,"offset":350},"end":{"line":8,"column":24,"offset":373}}},"children":"UISplitViewController"}}],"는 기본적으로 두 개의 뷰 컨트롤러를 포함합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"primary","position":{"start":{"line":8,"column":52,"offset":401},"end":{"line":8,"column":61,"offset":410}}}],"position":{"start":{"line":8,"column":52,"offset":401},"end":{"line":8,"column":61,"offset":410}}},"children":"primary"}}]," 뷰 컨트롤러와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"secondary","position":{"start":{"line":8,"column":70,"offset":419},"end":{"line":8,"column":81,"offset":430}}}],"position":{"start":{"line":8,"column":70,"offset":419},"end":{"line":8,"column":81,"offset":430}}},"children":"secondary"}}]," 뷰 컨트롤러입니다. 각각의 뷰 컨트롤러는 아래와 같은 형태로 Swift 코드에서 설정할 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class SplitViewController: UISplitViewController, UISplitViewControllerDelegate {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        self.delegate = self\n        let masterViewController = UINavigationController(rootViewController: MasterViewController())\n        let detailViewController = UINavigationController(rootViewController: DetailViewController())\n        self.viewControllers = [masterViewController, detailViewController]\n    }\n\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":489},"end":{"line":22,"column":4,"offset":964}}},"children":"class SplitViewController: UISplitViewController, UISplitViewControllerDelegate {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        self.delegate = self\n        let masterViewController = UINavigationController(rootViewController: MasterViewController())\n        let detailViewController = UINavigationController(rootViewController: DetailViewController())\n        self.viewControllers = [masterViewController, detailViewController]\n    }\n\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UISplitViewControllerDelegate","position":{"start":{"line":24,"column":9,"offset":974},"end":{"line":24,"column":40,"offset":1005}}}],"position":{"start":{"line":24,"column":9,"offset":974},"end":{"line":24,"column":40,"offset":1005}}},"children":"UISplitViewControllerDelegate"}}],"를 사용하여 분할 뷰 컨트롤러의 행동을 제어하고 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"viewDidLoad","position":{"start":{"line":24,"column":73,"offset":1038},"end":{"line":24,"column":86,"offset":1051}}}],"position":{"start":{"line":24,"column":73,"offset":1038},"end":{"line":24,"column":86,"offset":1051}}},"children":"viewDidLoad"}}]," 메서드 내부에서는 마스터와 디테일 뷰 컨트롤러를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UINavigationController","position":{"start":{"line":24,"column":114,"offset":1079},"end":{"line":24,"column":138,"offset":1103}}}],"position":{"start":{"line":24,"column":114,"offset":1079},"end":{"line":24,"column":138,"offset":1103}}},"children":"UINavigationController"}}],"로 래핑한 후 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"viewControllers","position":{"start":{"line":24,"column":146,"offset":1111},"end":{"line":24,"column":163,"offset":1128}}}],"position":{"start":{"line":24,"column":146,"offset":1111},"end":{"line":24,"column":163,"offset":1128}}},"children":"viewControllers"}}]," 배열에 추가합니다."]}],"\n",["$","h2",null,{"id":"92c675f7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"마스터 뷰 컨트롤러 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["마스터 뷰 컨트롤러는 주로 데이터를 리스트(예: ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableView","position":{"start":{"line":28,"column":28,"offset":1186},"end":{"line":28,"column":41,"offset":1199}}}],"position":{"start":{"line":28,"column":28,"offset":1186},"end":{"line":28,"column":41,"offset":1199}}},"children":"UITableView"}}],") 형식으로 표현합니다. 아래는 기본적인 마스터 뷰 컨트롤러의 예제입니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass MasterViewController: UITableViewController {\n\n    let items = [\"Item 1\", \"Item 2\", \"Item 3\"]\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        self.title = \"Master\"\n        tableView.register(UITableViewCell.self, forCellReuseIdentifier: \"cell\")\n    }\n\n    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        return items.count\n    }\n\n    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n        let cell = tableView.dequeueReusableCell(withIdentifier: \"cell\", for: indexPath)\n        cell.textLabel?.text = items[indexPath.row]\n        return cell\n    }\n\n    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n        let detailVC = DetailViewController()\n        detailVC.item = items[indexPath.row]\n        showDetailViewController(UINavigationController(rootViewController: detailVC), sender: self)\n    }\n}\n"}],"position":{"start":{"line":30,"column":1,"offset":1242},"end":{"line":59,"column":4,"offset":2253}}},"children":"import UIKit\n\nclass MasterViewController: UITableViewController {\n\n    let items = [\"Item 1\", \"Item 2\", \"Item 3\"]\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        self.title = \"Master\"\n        tableView.register(UITableViewCell.self, forCellReuseIdentifier: \"cell\")\n    }\n\n    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        return items.count\n    }\n\n    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n        let cell = tableView.dequeueReusableCell(withIdentifier: \"cell\", for: indexPath)\n        cell.textLabel?.text = items[indexPath.row]\n        return cell\n    }\n\n    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n        let detailVC = DetailViewController()\n        detailVC.item = items[indexPath.row]\n        showDetailViewController(UINavigationController(rootViewController: detailVC), sender: self)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITableViewController","position":{"start":{"line":61,"column":9,"offset":2263},"end":{"line":61,"column":32,"offset":2286}}}],"position":{"start":{"line":61,"column":9,"offset":2263},"end":{"line":61,"column":32,"offset":2286}}},"children":"UITableViewController"}}],"를 상속받아 마스터 뷰 컨트롤러를 구현하고 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"items","position":{"start":{"line":61,"column":62,"offset":2316},"end":{"line":61,"column":69,"offset":2323}}}],"position":{"start":{"line":61,"column":62,"offset":2316},"end":{"line":61,"column":69,"offset":2323}}},"children":"items"}}]," 배열에 데이터를 저장하고, 이를 테이블 뷰에 표시합니다. 특정 셀이 선택되면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"didSelectRowAt","position":{"start":{"line":61,"column":113,"offset":2367},"end":{"line":61,"column":129,"offset":2383}}}],"position":{"start":{"line":61,"column":113,"offset":2367},"end":{"line":61,"column":129,"offset":2383}}},"children":"didSelectRowAt"}}]," 메서드가 호출되며, 디테일 뷰 컨트롤러에 해당 데이터를 전달합니다."]}],"\n",["$","h2",null,{"id":"a04c478a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"디테일 뷰 컨트롤러 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"디테일 뷰 컨트롤러는 마스터 뷰에서 선택된 아이템의 상세 정보를 표시합니다. 아래는 기본적인 디테일 뷰 컨트롤러의 예제입니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass DetailViewController: UIViewController {\n\n    var item: String? {\n        didSet {\n            configureView()\n        }\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        self.view.backgroundColor = .white\n        configureView()\n    }\n\n    func configureView() {\n        if let item = item {\n            self.title = item\n            let label = UILabel()\n            label.text = \"Detail for \\(item)\"\n            label.textAlignment = .center\n            label.frame = self.view.bounds\n            self.view.addSubview(label)\n        }\n    }\n}\n"}],"position":{"start":{"line":67,"column":1,"offset":2513},"end":{"line":95,"column":4,"offset":3118}}},"children":"import UIKit\n\nclass DetailViewController: UIViewController {\n\n    var item: String? {\n        didSet {\n            configureView()\n        }\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        self.view.backgroundColor = .white\n        configureView()\n    }\n\n    func configureView() {\n        if let item = item {\n            self.title = item\n            let label = UILabel()\n            label.text = \"Detail for \\(item)\"\n            label.textAlignment = .center\n            label.frame = self.view.bounds\n            self.view.addSubview(label)\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewController","position":{"start":{"line":97,"column":9,"offset":3128},"end":{"line":97,"column":27,"offset":3146}}}],"position":{"start":{"line":97,"column":9,"offset":3128},"end":{"line":97,"column":27,"offset":3146}}},"children":"UIViewController"}}],"를 상속받아 디테일 뷰 컨트롤러를 구현하고 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"item","position":{"start":{"line":97,"column":57,"offset":3176},"end":{"line":97,"column":63,"offset":3182}}}],"position":{"start":{"line":97,"column":57,"offset":3176},"end":{"line":97,"column":63,"offset":3182}}},"children":"item"}}]," 변수를 사용하여 마스터 뷰 컨트롤러에서 전달된 데이터를 설정하고, 이를 UI에 반영합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"configureView","position":{"start":{"line":97,"column":115,"offset":3234},"end":{"line":97,"column":130,"offset":3249}}}],"position":{"start":{"line":97,"column":115,"offset":3234},"end":{"line":97,"column":130,"offset":3249}}},"children":"configureView"}}]," 메서드에서 레이블을 생성하고 해당 아이템의 상세 정보를 표시합니다."]}],"\n",["$","h2",null,{"id":"f064d7fb","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UISplitViewController 동작 제어"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UISplitViewController","position":{"start":{"line":101,"column":1,"offset":3321},"end":{"line":101,"column":24,"offset":3344}}}],"position":{"start":{"line":101,"column":1,"offset":3321},"end":{"line":101,"column":24,"offset":3344}}},"children":"UISplitViewController"}}],"는 다양한 설정 옵션을 제공하여 원하는 동작을 제어할 수 있습니다. 가장 흔하게 사용되는 설정 중 하나는 iPhone처럼 작은 화면에서는 디테일 뷰 컨트롤러만 표시하고, iPad처럼 큰 화면에서는 마스터와 디테일 뷰 컨트롤러를 나란히 표시하는 것입니다. 이를 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"preferredDisplayMode","position":{"start":{"line":101,"column":172,"offset":3492},"end":{"line":101,"column":194,"offset":3514}}}],"position":{"start":{"line":101,"column":172,"offset":3492},"end":{"line":101,"column":194,"offset":3514}}},"children":"preferredDisplayMode"}}]," 속성을 사용할 수 있습니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"splitViewController.preferredDisplayMode = .allVisible\n"}],"position":{"start":{"line":103,"column":1,"offset":3532},"end":{"line":105,"column":4,"offset":3599}}},"children":"splitViewController.preferredDisplayMode = .allVisible\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 설정은 두 개의 뷰 컨트롤러가 항상 화면에 표시되도록 합니다. 또 다른 유용한 설정으로는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"isCollapsed","position":{"start":{"line":107,"column":53,"offset":3653},"end":{"line":107,"column":66,"offset":3666}}}],"position":{"start":{"line":107,"column":53,"offset":3653},"end":{"line":107,"column":66,"offset":3666}}},"children":"isCollapsed"}}]," 속성을 통해 현재 뷰 컨트롤러가 축소 모드인지 확인하는 것입니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func splitViewController(_ svc: UISplitViewController, collapseSecondary secondaryViewController: UIViewController, onto primaryViewController: UIViewController) -> Bool {\n    return true\n}\n"}],"position":{"start":{"line":109,"column":1,"offset":3705},"end":{"line":113,"column":4,"offset":3907}}},"children":"func splitViewController(_ svc: UISplitViewController, collapseSecondary secondaryViewController: UIViewController, onto primaryViewController: UIViewController) -> Bool {\n    return true\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 메서드는 작은 화면 크기에서 디테일 뷰 컨트롤러가 별도의 네비게이션 스택에서 표시되는 대신 마스터 뷰 컨트롤러의 네비게이션 스택에 병합되도록 합니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UISplitViewController","position":{"start":{"line":119,"column":1,"offset":4003},"end":{"line":119,"column":24,"offset":4026}}}],"position":{"start":{"line":119,"column":1,"offset":4003},"end":{"line":119,"column":24,"offset":4026}}},"children":"UISplitViewController"}}],"를 사용하면 iOS 애플리케이션에서 마스터-디테일 인터페이스를 손쉽게 구현할 수 있습니다. 이 글에서 설명한 예제를 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UISplitViewController","position":{"start":{"line":119,"column":92,"offset":4094},"end":{"line":119,"column":115,"offset":4117}}}],"position":{"start":{"line":119,"column":92,"offset":4094},"end":{"line":119,"column":115,"offset":4117}}},"children":"UISplitViewController"}}],"의 기본 사용법을 이해할 수 있었을 것입니다. 더 나아가 다양한 설정 옵션과 사용자 경험을 개선할 수 있는 방법들을 추가로 탐구해 보세요. 이렇게 하면 더욱 직관적이고 사용하기 편리한 애플리케이션을 만들 수 있을 것입니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"UISplitViewController 사용법: 마스터-디테일 인터페이스 구현","toc":[{"tagName":"h1","title":"UISplitViewController 사용법: 마스터-디테일 인터페이스 구현","id":"9cb1bafc"},{"tagName":"h2","title":"UISplitViewController 기본 설정","id":"68532d16"},{"tagName":"h2","title":"마스터 뷰 컨트롤러 구현","id":"92c675f7"},{"tagName":"h2","title":"디테일 뷰 컨트롤러 구현","id":"a04c478a"},{"tagName":"h2","title":"UISplitViewController 동작 제어","id":"f064d7fb"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
