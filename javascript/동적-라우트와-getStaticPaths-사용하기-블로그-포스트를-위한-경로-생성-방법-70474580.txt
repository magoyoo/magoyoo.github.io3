1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","%EB%8F%99%EC%A0%81-%EB%9D%BC%EC%9A%B0%ED%8A%B8%EC%99%80-getStaticPaths-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9C%84%ED%95%9C-%EA%B2%BD%EB%A1%9C-%EC%83%9D%EC%84%B1-%EB%B0%A9%EB%B2%95-70474580","d"],{"children":["__PAGE__?{\"slug\":\"동적-라우트와-getStaticPaths-사용하기-블로그-포스트를-위한-경로-생성-방법-70474580\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","%EB%8F%99%EC%A0%81-%EB%9D%BC%EC%9A%B0%ED%8A%B8%EC%99%80-getStaticPaths-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9C%84%ED%95%9C-%EA%B2%BD%EB%A1%9C-%EC%83%9D%EC%84%B1-%EB%B0%A9%EB%B2%95-70474580","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"동적-라우트와-getStaticPaths-사용하기-블로그-포스트를-위한-경로-생성-방법-70474580\"}"},"styles":[]}],"segment":["slug","%EB%8F%99%EC%A0%81-%EB%9D%BC%EC%9A%B0%ED%8A%B8%EC%99%80-getStaticPaths-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9C%84%ED%95%9C-%EA%B2%BD%EB%A1%9C-%EC%83%9D%EC%84%B1-%EB%B0%A9%EB%B2%95-70474580","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"동적 라우트와 getStaticPaths 사용하기: 블로그 포스트를 위한 경로 생성 방법. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 JavaScript로 웹사이트에서 동적 라우트를 생성하고, 이를 위해 getStaticPaths를 사용하는 방법에 대해 다룹니다. 특히 블로그 포스트와 같은 동적인 콘텐츠에 적용 가능한 실용적인 예제를 제공합니다."}],["$","meta","3",{"name":"keywords","content":"JavaScript,Next.js,동적 라우팅,getStaticPaths"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/%EB%8F%99%EC%A0%81-%EB%9D%BC%EC%9A%B0%ED%8A%B8%EC%99%80-getStaticPaths-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9C%84%ED%95%9C-%EA%B2%BD%EB%A1%9C-%EC%83%9D%EC%84%B1-%EB%B0%A9%EB%B2%95-70474580"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"동적 라우트와 getStaticPaths 사용하기: 블로그 포스트를 위한 경로 생성 방법. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"동적 라우트와 getStaticPaths 사용하기: 블로그 포스트를 위한 경로 생성 방법. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 JavaScript로 웹사이트에서 동적 라우트를 생성하고, 이를 위해 getStaticPaths를 사용하는 방법에 대해 다룹니다. 특히 블로그 포스트와 같은 동적인 콘텐츠에 적용 가능한 실용적인 예제를 제공합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/%EB%8F%99%EC%A0%81-%EB%9D%BC%EC%9A%B0%ED%8A%B8%EC%99%80-getStaticPaths-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9C%84%ED%95%9C-%EA%B2%BD%EB%A1%9C-%EC%83%9D%EC%84%B1-%EB%B0%A9%EB%B2%95-70474580"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"동적 라우트와 getStaticPaths 사용하기: 블로그 포스트를 위한 경로 생성 방법. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 JavaScript로 웹사이트에서 동적 라우트를 생성하고, 이를 위해 getStaticPaths를 사용하는 방법에 대해 다룹니다. 특히 블로그 포스트와 같은 동적인 콘텐츠에 적용 가능한 실용적인 예제를 제공합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"동적 라우트와 getStaticPaths 사용하기: 블로그 포스트를 위한 경로 생성 방법."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"동적 라우트와 getStaticPaths 사용하기: 블로그 포스트를 위한 경로 생성 방법."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-08"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"6bd07c11","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"동적 라우트와 getStaticPaths 사용하기: 블로그 포스트를 위한 경로 생성 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["동적인 웹 페이지는 모든 현대적인 웹 애플리케이션의 핵심 요소입니다. 특히 블로그 포스트와 같이 유연하고 변경이 잦은 콘텐츠를 관리할 때 동적 라우트는 꼭 필요한 기능입니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Next.js","position":{"start":{"line":4,"column":106,"offset":159},"end":{"line":4,"column":115,"offset":168}}}],"position":{"start":{"line":4,"column":106,"offset":159},"end":{"line":4,"column":115,"offset":168}}},"children":"Next.js"}}],"에서 동적 라우트와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":4,"column":126,"offset":179},"end":{"line":4,"column":142,"offset":195}}}],"position":{"start":{"line":4,"column":126,"offset":179},"end":{"line":4,"column":142,"offset":195}}},"children":"getStaticPaths"}}],"를 사용하는 방법을 집중적으로 다루겠습니다. 이 과정을 통해 동적인 블로그 포스트를 생성하고, 이를 최적화된 방식으로 사용자에게 제공하는 방법을 알아보겠습니다."]}],"\n",["$","h2",null,{"id":"86555a98","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"동적 라우트란 무엇인가?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["동적 라우트는 URL 경로가 고정되지 않고, 변경 가능한 경로를 지칭합니다. 예를 들어, 블로그 애플리케이션에는 여러 개의 포스트가 존재하며, 각각의 포스트는 고유한 ID나 슬러그(slug)를 가집니다. 이를 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/posts/[slug]","position":{"start":{"line":8,"column":121,"offset":424},"end":{"line":8,"column":136,"offset":439}}}],"position":{"start":{"line":8,"column":121,"offset":424},"end":{"line":8,"column":136,"offset":439}}},"children":"/posts/[slug]"}}],"와 같은 형태의 동적 경로를 생성할 수 있습니다. 동적 라우트를 사용하면 각 포스트마다 개별적인 페이지를 만들어낼 필요 없이 하나의 라우트에서 다양한 콘텐츠를 처리할 수 있습니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 기본적인 동적 라우트 예제입니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"// pages/posts/[slug].js\nimport { useRouter } from 'next/router'\n\nconst Post = () => {\n  const router = useRouter()\n  const { slug } = router.query\n\n  return (\n    <div>\n      <h1>{slug} 페이지입니다</h1>\n    </div>\n  )\n}\n\nexport default Post\n"}],"position":{"start":{"line":12,"column":1,"offset":565},"end":{"line":28,"column":4,"offset":812}}},"children":"// pages/posts/[slug].js\nimport { useRouter } from 'next/router'\n\nconst Post = () => {\n  const router = useRouter()\n  const { slug } = router.query\n\n  return (\n    <div>\n      <h1>{slug} 페이지입니다</h1>\n    </div>\n  )\n}\n\nexport default Post\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useRouter","position":{"start":{"line":30,"column":10,"offset":823},"end":{"line":30,"column":21,"offset":834}}}],"position":{"start":{"line":30,"column":10,"offset":823},"end":{"line":30,"column":21,"offset":834}}},"children":"useRouter"}}]," 훅을 사용해 URL에서 슬러그를 추출하고 있습니다. 이 슬러그를 통해 각 포스트 페이지를 동적으로 렌더링할 수 있습니다."]}],"\n",["$","h2",null,{"id":"2faaf50a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"getStaticPaths의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":34,"column":1,"offset":930},"end":{"line":34,"column":17,"offset":946}}}],"position":{"start":{"line":34,"column":1,"offset":930},"end":{"line":34,"column":17,"offset":946}}},"children":"getStaticPaths"}}],"는 빌드 타임에 미리 렌더링할 동적 경로를 정의하는 함수입니다. 이것은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Next.js","position":{"start":{"line":34,"column":57,"offset":986},"end":{"line":34,"column":66,"offset":995}}}],"position":{"start":{"line":34,"column":57,"offset":986},"end":{"line":34,"column":66,"offset":995}}},"children":"Next.js"}}],"에서 정적 사이트 생성(Static Site Generation, SSG)을 수행할 때 중요한 역할을 합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":34,"column":128,"offset":1057},"end":{"line":34,"column":144,"offset":1073}}}],"position":{"start":{"line":34,"column":128,"offset":1057},"end":{"line":34,"column":144,"offset":1073}}},"children":"getStaticPaths"}}],"를 구현하면 Next.js는 제공된 경로 목록을 기반으로 정적 페이지를 생성합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":36,"column":5,"offset":1125},"end":{"line":36,"column":21,"offset":1141}}}],"position":{"start":{"line":36,"column":5,"offset":1125},"end":{"line":36,"column":21,"offset":1141}}},"children":"getStaticPaths"}}],"의 기본 예제입니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"// pages/posts/[slug].js\nexport async function getStaticPaths() {\n  const paths = [\n    { params: { slug: 'post-1' } },\n    { params: { slug: 'post-2' } },\n  ]\n\n  return { paths, fallback: false }\n}\n\nexport async function getStaticProps({ params }) {\n  // 이 부분에서 데이터를 가져옵니다\n  const post = await fetch(`https://api.example.com/posts/${params.slug}`).then(res => res.json())\n\n  return { props: { post } }\n}\n"}],"position":{"start":{"line":38,"column":1,"offset":1154},"end":{"line":55,"column":4,"offset":1569}}},"children":"// pages/posts/[slug].js\nexport async function getStaticPaths() {\n  const paths = [\n    { params: { slug: 'post-1' } },\n    { params: { slug: 'post-2' } },\n  ]\n\n  return { paths, fallback: false }\n}\n\nexport async function getStaticProps({ params }) {\n  // 이 부분에서 데이터를 가져옵니다\n  const post = await fetch(`https://api.example.com/posts/${params.slug}`).then(res => res.json())\n\n  return { props: { post } }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":57,"column":8,"offset":1578},"end":{"line":57,"column":24,"offset":1594}}}],"position":{"start":{"line":57,"column":8,"offset":1578},"end":{"line":57,"column":24,"offset":1594}}},"children":"getStaticPaths"}}],"가 돌려주는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"paths","position":{"start":{"line":57,"column":31,"offset":1601},"end":{"line":57,"column":38,"offset":1608}}}],"position":{"start":{"line":57,"column":31,"offset":1601},"end":{"line":57,"column":38,"offset":1608}}},"children":"paths"}}]," 배열이 있습니다. 이 배열에는 슬러그에 해당하는 여러 경로가 정의되어 있으며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Next.js","position":{"start":{"line":57,"column":83,"offset":1653},"end":{"line":57,"column":92,"offset":1662}}}],"position":{"start":{"line":57,"column":83,"offset":1653},"end":{"line":57,"column":92,"offset":1662}}},"children":"Next.js"}}],"는 이를 바탕으로 정적 페이지를 사전 생성합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fallback","position":{"start":{"line":57,"column":120,"offset":1690},"end":{"line":57,"column":130,"offset":1700}}}],"position":{"start":{"line":57,"column":120,"offset":1690},"end":{"line":57,"column":130,"offset":1700}}},"children":"fallback"}}]," 속성을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false","position":{"start":{"line":57,"column":135,"offset":1705},"end":{"line":57,"column":142,"offset":1712}}}],"position":{"start":{"line":57,"column":135,"offset":1705},"end":{"line":57,"column":142,"offset":1712}}},"children":"false"}}],"로 설정하면, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":57,"column":150,"offset":1720},"end":{"line":57,"column":166,"offset":1736}}}],"position":{"start":{"line":57,"column":150,"offset":1720},"end":{"line":57,"column":166,"offset":1736}}},"children":"getStaticPaths"}}],"에서 반환되지 않은 경로는 404 페이지로 렌더링됩니다."]}],"\n",["$","h2",null,{"id":"3514d526","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"블로그 포스트 예제: getStaticPaths 및 getStaticProps 통합하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 구체적인 예제를 통해 동적 라우트와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":61,"column":24,"offset":1845},"end":{"line":61,"column":40,"offset":1861}}}],"position":{"start":{"line":61,"column":24,"offset":1845},"end":{"line":61,"column":40,"offset":1861}}},"children":"getStaticPaths"}}],"를 통합해 보겠습니다. 예를 들어, 블로그 포스트 데이터를 가져와서 이를 동적으로 렌더링하는 과정을 살펴보겠습니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저, 블로그 포스트 데이터가 저장된 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"posts","position":{"start":{"line":63,"column":22,"offset":1948},"end":{"line":63,"column":29,"offset":1955}}}],"position":{"start":{"line":63,"column":22,"offset":1948},"end":{"line":63,"column":29,"offset":1955}}},"children":"posts"}}]," 디렉토리가 있다고 가정해 보겠습니다. 각 포스트는 JSON 파일로 저장되어 있습니다. 이를 가져와서 동적 라우트와 통합해 보겠습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"// lib/posts.js\nimport fs from 'fs'\nimport path from 'path'\n\nconst postsDirectory = path.join(process.cwd(), 'posts')\n\nexport function getAllPostSlugs() {\n  const filenames = fs.readdirSync(postsDirectory)\n  return filenames.map(filename => {\n    return {\n      params: {\n        slug: filename.replace(/\\.json$/, '')\n      }\n    }\n  })\n}\n\nexport function getPostData(slug) {\n  const filePath = path.join(postsDirectory, `${slug}.json`)\n  const fileContents = fs.readFileSync(filePath, 'utf8')\n  return JSON.parse(fileContents)\n}\n"}],"position":{"start":{"line":65,"column":1,"offset":2032},"end":{"line":88,"column":4,"offset":2572}}},"children":"// lib/posts.js\nimport fs from 'fs'\nimport path from 'path'\n\nconst postsDirectory = path.join(process.cwd(), 'posts')\n\nexport function getAllPostSlugs() {\n  const filenames = fs.readdirSync(postsDirectory)\n  return filenames.map(filename => {\n    return {\n      params: {\n        slug: filename.replace(/\\.json$/, '')\n      }\n    }\n  })\n}\n\nexport function getPostData(slug) {\n  const filePath = path.join(postsDirectory, `${slug}.json`)\n  const fileContents = fs.readFileSync(filePath, 'utf8')\n  return JSON.parse(fileContents)\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"posts","position":{"start":{"line":90,"column":7,"offset":2580},"end":{"line":90,"column":14,"offset":2587}}}],"position":{"start":{"line":90,"column":7,"offset":2580},"end":{"line":90,"column":14,"offset":2587}}},"children":"posts"}}]," 디렉토리에 있는 모든 JSON 파일을 읽어서 슬러그 목록을 반환하는 함수와, 특정 슬러그에 해당하는 포스트 데이터를 반환하는 함수를 정의합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음으로, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":92,"column":7,"offset":2676},"end":{"line":92,"column":23,"offset":2692}}}],"position":{"start":{"line":92,"column":7,"offset":2676},"end":{"line":92,"column":23,"offset":2692}}},"children":"getStaticPaths"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticProps","position":{"start":{"line":92,"column":25,"offset":2694},"end":{"line":92,"column":41,"offset":2710}}}],"position":{"start":{"line":92,"column":25,"offset":2694},"end":{"line":92,"column":41,"offset":2710}}},"children":"getStaticProps"}}],"를 활용한 동적 페이지를 구현해 보겠습니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-jsx","node":{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"// pages/posts/[slug].js\nimport { getAllPostSlugs, getPostData } from '../../lib/posts'\n\nexport async function getStaticPaths() {\n  const paths = getAllPostSlugs()\n  return { paths, fallback: false }\n}\n\nexport async function getStaticProps({ params }) {\n  const postData = getPostData(params.slug)\n  return { props: { postData } }\n}\n\nconst Post = ({ postData }) => {\n  return (\n    <div>\n      <h1>{postData.title}</h1>\n      <div>{postData.content}</div>\n    </div>\n  )\n}\n\nexport default Post\n"}],"position":{"start":{"line":94,"column":1,"offset":2736},"end":{"line":118,"column":4,"offset":3240}}},"children":"// pages/posts/[slug].js\nimport { getAllPostSlugs, getPostData } from '../../lib/posts'\n\nexport async function getStaticPaths() {\n  const paths = getAllPostSlugs()\n  return { paths, fallback: false }\n}\n\nexport async function getStaticProps({ params }) {\n  const postData = getPostData(params.slug)\n  return { props: { postData } }\n}\n\nconst Post = ({ postData }) => {\n  return (\n    <div>\n      <h1>{postData.title}</h1>\n      <div>{postData.content}</div>\n    </div>\n  )\n}\n\nexport default Post\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"lib/posts.js","position":{"start":{"line":120,"column":9,"offset":3250},"end":{"line":120,"column":23,"offset":3264}}}],"position":{"start":{"line":120,"column":9,"offset":3250},"end":{"line":120,"column":23,"offset":3264}}},"children":"lib/posts.js"}}],"에서 정의한 함수들을 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":120,"column":40,"offset":3281},"end":{"line":120,"column":56,"offset":3297}}}],"position":{"start":{"line":120,"column":40,"offset":3281},"end":{"line":120,"column":56,"offset":3297}}},"children":"getStaticPaths"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticProps","position":{"start":{"line":120,"column":58,"offset":3299},"end":{"line":120,"column":74,"offset":3315}}}],"position":{"start":{"line":120,"column":58,"offset":3299},"end":{"line":120,"column":74,"offset":3315}}},"children":"getStaticProps"}}],"를 구현했습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":120,"column":84,"offset":3325},"end":{"line":120,"column":100,"offset":3341}}}],"position":{"start":{"line":120,"column":84,"offset":3325},"end":{"line":120,"column":100,"offset":3341}}},"children":"getStaticPaths"}}],"는 모든 슬러그를 기반으로 경로 목록을 생성하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticProps","position":{"start":{"line":120,"column":128,"offset":3369},"end":{"line":120,"column":144,"offset":3385}}}],"position":{"start":{"line":120,"column":128,"offset":3369},"end":{"line":120,"column":144,"offset":3385}}},"children":"getStaticProps"}}],"는 각 경로에 대해 관련 데이터를 가져옵니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위와 같이 하면, 빌드 시에 블로그 포스트 페이지가 정적으로 생성되며, 각 포스트마다 동적인 경로를 가집니다. 또한, 이렇게 생성된 페이지는 매우 빠르게 로드되며, SEO 최적화에도 유리합니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이번 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Next.js","position":{"start":{"line":126,"column":9,"offset":3537},"end":{"line":126,"column":18,"offset":3546}}}],"position":{"start":{"line":126,"column":9,"offset":3537},"end":{"line":126,"column":18,"offset":3546}}},"children":"Next.js"}}],"에서 동적 라우트를 생성하고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticPaths","position":{"start":{"line":126,"column":34,"offset":3562},"end":{"line":126,"column":50,"offset":3578}}}],"position":{"start":{"line":126,"column":34,"offset":3562},"end":{"line":126,"column":50,"offset":3578}}},"children":"getStaticPaths"}}],"를 사용하여 정적 페이지를 만드는 방법에 대해 알아보았습니다. 이러한 방법을 사용하면, 동적인 콘텐츠를 효과적으로 관리하면서도 성능과 SEO 측면에서 최적화된 웹 사이트를 구축할 수 있습니다. 특히 블로그와 같은 콘텐츠 중심의 웹 애플리케이션에서는 이러한 기법들이 매우 유용합니다. Next.js의 기능을 잘 활용하여 효율적이고 빠른 웹 페이지를 만들어 보세요."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"동적 라우트와 getStaticPaths 사용하기: 블로그 포스트를 위한 경로 생성 방법.","toc":[{"tagName":"h1","title":"동적 라우트와 getStaticPaths 사용하기: 블로그 포스트를 위한 경로 생성 방법","id":"6bd07c11"},{"tagName":"h2","title":"동적 라우트란 무엇인가?","id":"86555a98"},{"tagName":"h2","title":"getStaticPaths의 기본 개념","id":"2faaf50a"},{"tagName":"h2","title":"블로그 포스트 예제: getStaticPaths 및 getStaticProps 통합하기","id":"3514d526"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
