1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift%EC%97%90%EC%84%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-Assign-%EA%B0%9C%EB%85%90-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-Reference-Type%EA%B3%BC-ARC-ff8a82d9","d"],{"children":["__PAGE__?{\"slug\":\"Swift에서-프로퍼티-Assign-개념-이해하기-Reference-Type과-ARC-ff8a82d9\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift%EC%97%90%EC%84%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-Assign-%EA%B0%9C%EB%85%90-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-Reference-Type%EA%B3%BC-ARC-ff8a82d9","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift에서-프로퍼티-Assign-개념-이해하기-Reference-Type과-ARC-ff8a82d9\"}"},"styles":[]}],"segment":["slug","Swift%EC%97%90%EC%84%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-Assign-%EA%B0%9C%EB%85%90-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-Reference-Type%EA%B3%BC-ARC-ff8a82d9","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift에서 프로퍼티 Assign 개념 이해하기: Reference Type과 ARC | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift에서 프로퍼티의 Assign 개념과 관련하여 Reference Type 및 Automatic Reference Counting(ARC)에 대해 설명합니다. 이를 통해 메모리 관리와 성능 향상 방법을 이해할 수 있습니다."}],["$","meta","3",{"name":"keywords","content":"Swift,Property,Reference Type,ARC"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift%EC%97%90%EC%84%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-Assign-%EA%B0%9C%EB%85%90-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-Reference-Type%EA%B3%BC-ARC-ff8a82d9"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift에서 프로퍼티 Assign 개념 이해하기: Reference Type과 ARC | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift에서 프로퍼티 Assign 개념 이해하기: Reference Type과 ARC | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift에서 프로퍼티의 Assign 개념과 관련하여 Reference Type 및 Automatic Reference Counting(ARC)에 대해 설명합니다. 이를 통해 메모리 관리와 성능 향상 방법을 이해할 수 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift%EC%97%90%EC%84%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-Assign-%EA%B0%9C%EB%85%90-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-Reference-Type%EA%B3%BC-ARC-ff8a82d9"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift에서 프로퍼티 Assign 개념 이해하기: Reference Type과 ARC | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift에서 프로퍼티의 Assign 개념과 관련하여 Reference Type 및 Automatic Reference Counting(ARC)에 대해 설명합니다. 이를 통해 메모리 관리와 성능 향상 방법을 이해할 수 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift에서 프로퍼티 Assign 개념 이해하기: Reference Type과 ARC"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift에서 프로퍼티 Assign 개념 이해하기: Reference Type과 ARC"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-19"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"c9ec1330","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift에서 프로퍼티 Assign 개념 이해하기: Reference Type과 ARC"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서 프로퍼티를 이해하고 적절히 사용하는 것은 매우 중요합니다. 특히, Reference Type과 Automatic Reference Counting(ARC)을 제대로 이해하면 메모리 관리 및 성능 최적화에 큰 도움이 됩니다. 이번 글에서는 Swift의 프로퍼티 Assign 개념을 중심으로 Reference Type과 ARC에 대해 자세히 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"a7596dcd","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프로퍼티의 Assign 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서 프로퍼티는 클래스, 구조체, 열거형 내부에서 값을 저장하는 변수나 상수를 의미합니다. 프로퍼티에는 크게 두 가지 유형이 있습니다: ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Stored Property","position":{"start":{"line":8,"column":82,"offset":361},"end":{"line":8,"column":99,"offset":378}}}],"position":{"start":{"line":8,"column":82,"offset":361},"end":{"line":8,"column":99,"offset":378}}},"children":"Stored Property"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Computed Property","position":{"start":{"line":8,"column":101,"offset":380},"end":{"line":8,"column":120,"offset":399}}}],"position":{"start":{"line":8,"column":101,"offset":380},"end":{"line":8,"column":120,"offset":399}}},"children":"Computed Property"}}],"입니다."]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"Stored Property"}],": 이는 값을 저장하는 프로퍼티로, 변수(var)나 상수(let)로 선언할 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"Computed Property"}],": 이는 실질적인 값이 저장되지 않고, getter와 setter를 통해 값을 연산하는 프로퍼티입니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"프로퍼티를 선언하고 나면, 다양한 방식으로 해당 프로퍼티에 값을 할당(assign)할 수 있습니다. 구조체와 열거형은 값 타입(Value Type)이고, 클래스는 참조 타입(Reference Type)입니다."}],"\n",["$","h2",null,{"id":"ad240775","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Reference Type과 값 타입"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서는 변수나 상수에 값을 할당할 때, 값 타입과 참조 타입 두 가지 방식이 있습니다. 이는 프로퍼티의 동작 방식을 결정하는 중요한 요소입니다."}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"값 타입(Value Type)"}],": 변수나 상수가 직접 값을 저장합니다. 구조체와 열거형이 값 타입입니다. 값을 할당하거나 함수에 전달할 때, 복사본이 전달됩니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"참조 타입(Reference Type)"}],": 변수나 상수가 값이 저장된 메모리 주소를 참조합니다. 클래스가 참조 타입입니다. 값을 할당하거나 함수에 전달할 때, 같은 메모리 주소를 참조하므로 원본 값이 변경될 수 있습니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"예를 들어, 구조체와 클래스를 이용한 간단한 예제를 살펴보겠습니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ValueTypeExample {\n    var value: Int\n}\n\nclass ReferenceTypeExample {\n    var value: Int\n    init(value: Int) {\n        self.value = value\n    }\n}\n\nvar aStruct = ValueTypeExample(value: 10)\nvar anotherStruct = aStruct\nanotherStruct.value = 20\nprint(aStruct.value) // 10\nprint(anotherStruct.value) // 20\n\nvar aClass = ReferenceTypeExample(value: 10)\nvar anotherClass = aClass\nanotherClass.value = 20\nprint(aClass.value) // 20\nprint(anotherClass.value) // 20\n"}],"position":{"start":{"line":24,"column":1,"offset":1053},"end":{"line":47,"column":4,"offset":1529}}},"children":"struct ValueTypeExample {\n    var value: Int\n}\n\nclass ReferenceTypeExample {\n    var value: Int\n    init(value: Int) {\n        self.value = value\n    }\n}\n\nvar aStruct = ValueTypeExample(value: 10)\nvar anotherStruct = aStruct\nanotherStruct.value = 20\nprint(aStruct.value) // 10\nprint(anotherStruct.value) // 20\n\nvar aClass = ReferenceTypeExample(value: 10)\nvar anotherClass = aClass\nanotherClass.value = 20\nprint(aClass.value) // 20\nprint(anotherClass.value) // 20\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서 구조체인 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ValueTypeExample","position":{"start":{"line":49,"column":13,"offset":1543},"end":{"line":49,"column":31,"offset":1561}}}],"position":{"start":{"line":49,"column":13,"offset":1543},"end":{"line":49,"column":31,"offset":1561}}},"children":"ValueTypeExample"}}],"은 값 타입이므로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"anotherStruct","position":{"start":{"line":49,"column":41,"offset":1571},"end":{"line":49,"column":56,"offset":1586}}}],"position":{"start":{"line":49,"column":41,"offset":1571},"end":{"line":49,"column":56,"offset":1586}}},"children":"anotherStruct"}}],"에 할당될 때 값이 복사됩니다. 반면, 클래스인 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ReferenceTypeExample","position":{"start":{"line":49,"column":83,"offset":1613},"end":{"line":49,"column":105,"offset":1635}}}],"position":{"start":{"line":49,"column":83,"offset":1613},"end":{"line":49,"column":105,"offset":1635}}},"children":"ReferenceTypeExample"}}],"은 참조 타입이므로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"anotherClass","position":{"start":{"line":49,"column":116,"offset":1646},"end":{"line":49,"column":130,"offset":1660}}}],"position":{"start":{"line":49,"column":116,"offset":1646},"end":{"line":49,"column":130,"offset":1660}}},"children":"anotherClass"}}],"에 할당될 때 동일한 값(메모리 주소)을 참조하게 됩니다. 따라서 하나의 변수에서 값을 변경하면 다른 변수에서도 그 변경이 반영됩니다."]}],"\n",["$","h2",null,{"id":"a18093ba","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Automatic Reference Counting (ARC)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["참조 타입을 사용할 때 중요한 개념 중 하나가 ARC입니다. ARC는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Automatic Reference Counting","position":{"start":{"line":53,"column":40,"offset":1815},"end":{"line":53,"column":70,"offset":1845}}}],"position":{"start":{"line":53,"column":40,"offset":1815},"end":{"line":53,"column":70,"offset":1845}}},"children":"Automatic Reference Counting"}}],"의 줄임말로, Swift에서 메모리 관리를 자동으로 처리해주는 기능입니다. ARC는 클래스 인스턴스를 생성하고 더 이상 필요하지 않게 될 때 메모리를 자동으로 해제합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"ARC는 각 클래스 인스턴스의 참조 횟수(reference count)를 추적하여, 더 이상 참조되지 않는 인스턴스를 메모리에서 자동으로 제거합니다. 이를 통해 프로그래머가 직접 메모리 관리를 하지 않아도 됩니다. 그러나 ARC를 제대로 이해하고 사용하지 않으면 강한 참조 순환(strong reference cycle) 문제가 발생할 수 있습니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["강한 참조 순환 문제는 서로 간에 강한 참조를 하여 참조 횟수가 0이 되지 않아 메모리에서 해제되지 않는 문제입니다. 이 문제를 해결하기 위해서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak","position":{"start":{"line":57,"column":83,"offset":2221},"end":{"line":57,"column":89,"offset":2227}}}],"position":{"start":{"line":57,"column":83,"offset":2221},"end":{"line":57,"column":89,"offset":2227}}},"children":"weak"}}]," 또는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unowned","position":{"start":{"line":57,"column":93,"offset":2231},"end":{"line":57,"column":102,"offset":2240}}}],"position":{"start":{"line":57,"column":93,"offset":2231},"end":{"line":57,"column":102,"offset":2240}}},"children":"unowned"}}]," 키워드를 사용할 수 있습니다."]}],"\n",["$","h3",null,{"id":"13f6f800","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"강한 참조 순환 해결 방법"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"weak"}],": 참조가 약한 참조임을 나타내며, 참조된 인스턴스가 메모리에서 해제되면 참조는 자동으로 nil로 설정됩니다. 주로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"optional","position":{"start":{"line":61,"column":77,"offset":2355},"end":{"line":61,"column":87,"offset":2365}}}],"position":{"start":{"line":61,"column":77,"offset":2355},"end":{"line":61,"column":87,"offset":2365}}},"children":"optional"}}]," 타입과 함께 사용합니다."]}],"\n"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class Person {\n    var name: String\n    weak var friend: Person?\n    init(name: String) {\n        self.name = name\n    }\n}\n"}],"position":{"start":{"line":63,"column":1,"offset":2381},"end":{"line":71,"column":4,"offset":2516}}},"children":"class Person {\n    var name: String\n    weak var friend: Person?\n    init(name: String) {\n        self.name = name\n    }\n}\n"}}]}],"\n",["$","ol","ol-1",{"start":2,"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"unowned"}],": 참조가 강한 참조가 아니며, 참조된 인스턴스가 메모리에서 해제되면 접근할 수 없습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"non-optional","position":{"start":{"line":73,"column":66,"offset":2583},"end":{"line":73,"column":80,"offset":2597}}}],"position":{"start":{"line":73,"column":66,"offset":2583},"end":{"line":73,"column":80,"offset":2597}}},"children":"non-optional"}}]," 필드에서 사용해야 하며, 참조된 인스턴스가 해제되었는지 가정합니다."]}],"\n"]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class Person {\n    var name: String\n    unowned var friend: Person\n    init(name: String, friend: Person) {\n        self.name = name\n        self.friend = friend\n    }\n}\n"}],"position":{"start":{"line":75,"column":1,"offset":2637},"end":{"line":84,"column":4,"offset":2819}}},"children":"class Person {\n    var name: String\n    unowned var friend: Person\n    init(name: String, friend: Person) {\n        self.name = name\n        self.friend = friend\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"e56f6c63","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제 코드"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음은 강한 참조 순환을 해결하기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak","position":{"start":{"line":88,"column":23,"offset":2854},"end":{"line":88,"column":29,"offset":2860}}}],"position":{"start":{"line":88,"column":23,"offset":2854},"end":{"line":88,"column":29,"offset":2860}}},"children":"weak"}}]," 키워드를 사용한 예제 코드입니다:"]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class Owner {\n    var name: String\n    var gadget: Gadget?\n    init(name: String) {\n        self.name = name\n    }\n    deinit {\n        print(\"\\\n"}],"position":{"start":{"line":90,"column":1,"offset":2881},"end":{"line":99,"column":1,"offset":3035}}},"children":"class Owner {\n    var name: String\n    var gadget: Gadget?\n    init(name: String) {\n        self.name = name\n    }\n    deinit {\n        print(\"\\\n"}}]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift에서 프로퍼티 Assign 개념 이해하기: Reference Type과 ARC","toc":[{"tagName":"h1","title":"Swift에서 프로퍼티 Assign 개념 이해하기: Reference Type과 ARC","id":"c9ec1330"},{"tagName":"h2","title":"프로퍼티의 Assign 개념","id":"a7596dcd"},{"tagName":"h2","title":"Reference Type과 값 타입","id":"ad240775"},{"tagName":"h2","title":"Automatic Reference Counting (ARC)","id":"a18093ba"},{"tagName":"h3","title":"강한 참조 순환 해결 방법","id":"13f6f800"},{"tagName":"h3","title":"예제 코드","id":"e56f6c63"}],"language":"kr"}]}]]}]]
8:null
