1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI%EC%97%90%EC%84%9C-%EC%A7%80%EB%8F%84-%EB%B7%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%9C%84%EC%B9%98-%EA%B8%B0%EB%B0%98-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%ED%98%84-d8acff51","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI에서-지도-뷰-사용하기-위치-기반-서비스-구현-d8acff51\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI%EC%97%90%EC%84%9C-%EC%A7%80%EB%8F%84-%EB%B7%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%9C%84%EC%B9%98-%EA%B8%B0%EB%B0%98-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%ED%98%84-d8acff51","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI에서-지도-뷰-사용하기-위치-기반-서비스-구현-d8acff51\"}"},"styles":[]}],"segment":["slug","SwiftUI%EC%97%90%EC%84%9C-%EC%A7%80%EB%8F%84-%EB%B7%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%9C%84%EC%B9%98-%EA%B8%B0%EB%B0%98-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%ED%98%84-d8acff51","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI에서 지도 뷰 사용하기: 위치 기반 서비스 구현 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"SwiftUI에서 지도 뷰를 사용해 위치 기반 서비스를 구현하는 방법을 다룹니다. 이 글에서는 기본적인 지도 뷰 추가, 사용자 위치 요청 및 방향 기능 등을 단계별로 설명합니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,지도 뷰,위치 기반 서비스,iOS 개발"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI%EC%97%90%EC%84%9C-%EC%A7%80%EB%8F%84-%EB%B7%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%9C%84%EC%B9%98-%EA%B8%B0%EB%B0%98-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%ED%98%84-d8acff51"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI에서 지도 뷰 사용하기: 위치 기반 서비스 구현 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI에서 지도 뷰 사용하기: 위치 기반 서비스 구현 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"SwiftUI에서 지도 뷰를 사용해 위치 기반 서비스를 구현하는 방법을 다룹니다. 이 글에서는 기본적인 지도 뷰 추가, 사용자 위치 요청 및 방향 기능 등을 단계별로 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI%EC%97%90%EC%84%9C-%EC%A7%80%EB%8F%84-%EB%B7%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%9C%84%EC%B9%98-%EA%B8%B0%EB%B0%98-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%ED%98%84-d8acff51"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI에서 지도 뷰 사용하기: 위치 기반 서비스 구현 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"SwiftUI에서 지도 뷰를 사용해 위치 기반 서비스를 구현하는 방법을 다룹니다. 이 글에서는 기본적인 지도 뷰 추가, 사용자 위치 요청 및 방향 기능 등을 단계별로 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI에서 지도 뷰 사용하기: 위치 기반 서비스 구현"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI에서 지도 뷰 사용하기: 위치 기반 서비스 구현"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-26"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"d9280ca7","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI에서 지도 뷰 사용하기: 위치 기반 서비스 구현하기"}],"\n",["$","h2",null,{"id":"476966c5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"개요"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 애플의 새로운 UI 프레임워크로, iOS 개발을 더욱 간편하게 만들어주는 도구입니다. 이 글에서는 SwiftUI를 사용해 위치 기반 서비스를 구현하는 방법에 대해 설명합니다. 구체적으로는 지도 뷰를 추가하고, 사용자 위치 정보를 요청하며, 실시간으로 방향을 제공하는 방법을 다룹니다. 여러 단계로 나누어 자세히 설명하므로, 초심자도 쉽게 따라할 수 있습니다."}],"\n",["$","h2",null,{"id":"5df6564f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"초기 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["프로젝트를 생성한 뒤, 위치 기반 서비스를 사용하기 위해 먼저 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CoreLocation","position":{"start":{"line":8,"column":36,"offset":301},"end":{"line":8,"column":50,"offset":315}}}],"position":{"start":{"line":8,"column":36,"offset":301},"end":{"line":8,"column":50,"offset":315}}},"children":"CoreLocation"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"MapKit","position":{"start":{"line":8,"column":52,"offset":317},"end":{"line":8,"column":60,"offset":325}}}],"position":{"start":{"line":8,"column":52,"offset":317},"end":{"line":8,"column":60,"offset":325}}},"children":"MapKit"}}]," 프레임워크를 임포트해야 합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\nimport MapKit\nimport CoreLocation\n"}],"position":{"start":{"line":10,"column":1,"offset":345},"end":{"line":14,"column":4,"offset":406}}},"children":"import SwiftUI\nimport MapKit\nimport CoreLocation\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["또한 위치 기반 서비스를 사용하려면 애플리케이션의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Info.plist","position":{"start":{"line":16,"column":29,"offset":436},"end":{"line":16,"column":41,"offset":448}}}],"position":{"start":{"line":16,"column":29,"offset":436},"end":{"line":16,"column":41,"offset":448}}},"children":"Info.plist"}}]," 파일에 위치 서비스 사용 권한 요청을 추가해야 합니다. 다음 키를 추가하세요:"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLocationWhenInUseUsageDescription","position":{"start":{"line":18,"column":3,"offset":496},"end":{"line":18,"column":40,"offset":533}}}],"position":{"start":{"line":18,"column":3,"offset":496},"end":{"line":18,"column":40,"offset":533}}},"children":"NSLocationWhenInUseUsageDescription"}}],": 앱이 사용 중일 때 위치 정보 접근 권한을 요청합니다."]}],"\n"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-xml","node":{"type":"element","tagName":"code","properties":{"className":["language-xml"]},"children":[{"type":"text","value":"<key>NSLocationWhenInUseUsageDescription</key>\n<string>사용자 위치 정보를 사용하여 지도를 표시합니다.</string>\n"}],"position":{"start":{"line":20,"column":1,"offset":567},"end":{"line":23,"column":4,"offset":668}}},"children":"<key>NSLocationWhenInUseUsageDescription</key>\n<string>사용자 위치 정보를 사용하여 지도를 표시합니다.</string>\n"}}]}],"\n",["$","h2",null,{"id":"fa70ca56","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"기본 지도 뷰 추가하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["가장 먼저, 기본적인 지도 뷰를 SwiftUI에서 어떻게 추가하는지 알아보겠습니다. SwiftUI는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Map","position":{"start":{"line":26,"column":57,"offset":742},"end":{"line":26,"column":62,"offset":747}}}],"position":{"start":{"line":26,"column":57,"offset":742},"end":{"line":26,"column":62,"offset":747}}},"children":"Map"}}],"이라는 뷰를 제공합니다. 이 뷰를 사용해 기본 지도를 띄울 수 있습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    @State private var region = MKCoordinateRegion(\n        center: CLLocationCoordinate2D(latitude: 37.7749, longitude: -122.4194),\n        span: MKCoordinateSpan(latitudeDelta: 0.05, longitudeDelta: 0.05)\n    )\n\n    var body: some View {\n        Map(coordinateRegion: $region)\n            .edgesIgnoringSafeArea(.all)\n    }\n}\n"}],"position":{"start":{"line":28,"column":1,"offset":789},"end":{"line":40,"column":4,"offset":1156}}},"children":"struct ContentView: View {\n    @State private var region = MKCoordinateRegion(\n        center: CLLocationCoordinate2D(latitude: 37.7749, longitude: -122.4194),\n        span: MKCoordinateSpan(latitudeDelta: 0.05, longitudeDelta: 0.05)\n    )\n\n    var body: some View {\n        Map(coordinateRegion: $region)\n            .edgesIgnoringSafeArea(.all)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"region","position":{"start":{"line":42,"column":8,"offset":1165},"end":{"line":42,"column":16,"offset":1173}}}],"position":{"start":{"line":42,"column":8,"offset":1165},"end":{"line":42,"column":16,"offset":1173}}},"children":"region"}}],"은 지도의 중앙 위치와 확대 수준을 정의합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Map","position":{"start":{"line":42,"column":43,"offset":1200},"end":{"line":42,"column":48,"offset":1205}}}],"position":{"start":{"line":42,"column":43,"offset":1200},"end":{"line":42,"column":48,"offset":1205}}},"children":"Map"}}]," 뷰는 이 지역(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"region","position":{"start":{"line":42,"column":57,"offset":1214},"end":{"line":42,"column":65,"offset":1222}}}],"position":{"start":{"line":42,"column":57,"offset":1214},"end":{"line":42,"column":65,"offset":1222}}},"children":"region"}}],")을 중심으로 지도를 표시하게 됩니다."]}],"\n",["$","h2",null,{"id":"53503451","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"사용자 위치 요청하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["사용자의 현재 위치를 지도에 표시하려면, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CoreLocation","position":{"start":{"line":45,"column":24,"offset":1283},"end":{"line":45,"column":38,"offset":1297}}}],"position":{"start":{"line":45,"column":24,"offset":1283},"end":{"line":45,"column":38,"offset":1297}}},"children":"CoreLocation"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CLLocationManager","position":{"start":{"line":45,"column":40,"offset":1299},"end":{"line":45,"column":59,"offset":1318}}}],"position":{"start":{"line":45,"column":40,"offset":1299},"end":{"line":45,"column":59,"offset":1318}}},"children":"CLLocationManager"}}],"를 사용해야 합니다. 이를 위해 먼저 위치 매니저를 설정하여 사용자의 위치를 받는 방법을 구현해야 합니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class LocationManager: NSObject, ObservableObject, CLLocationManagerDelegate {\n    private var locationManager = CLLocationManager()\n    @Published var location: CLLocation? = nil\n\n    override init() {\n        super.init()\n        self.locationManager.delegate = self\n        self.locationManager.requestWhenInUseAuthorization()\n        self.locationManager.startUpdatingLocation()\n    }\n\n    func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {\n        if let location = locations.last {\n            self.location = location\n        }\n    }\n\n    func locationManager(_ manager: CLLocationManager, didFailWithError error: Error) {\n        print(\"Failed to find user's location: \\(error.localizedDescription)\")\n    }\n}\n"}],"position":{"start":{"line":47,"column":1,"offset":1379},"end":{"line":69,"column":4,"offset":2154}}},"children":"class LocationManager: NSObject, ObservableObject, CLLocationManagerDelegate {\n    private var locationManager = CLLocationManager()\n    @Published var location: CLLocation? = nil\n\n    override init() {\n        super.init()\n        self.locationManager.delegate = self\n        self.locationManager.requestWhenInUseAuthorization()\n        self.locationManager.startUpdatingLocation()\n    }\n\n    func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {\n        if let location = locations.last {\n            self.location = location\n        }\n    }\n\n    func locationManager(_ manager: CLLocationManager, didFailWithError error: Error) {\n        print(\"Failed to find user's location: \\(error.localizedDescription)\")\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LocationManager","position":{"start":{"line":71,"column":8,"offset":2163},"end":{"line":71,"column":25,"offset":2180}}}],"position":{"start":{"line":71,"column":8,"offset":2163},"end":{"line":71,"column":25,"offset":2180}}},"children":"LocationManager"}}]," 클래스는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CLLocationManagerDelegate","position":{"start":{"line":71,"column":31,"offset":2186},"end":{"line":71,"column":58,"offset":2213}}}],"position":{"start":{"line":71,"column":31,"offset":2186},"end":{"line":71,"column":58,"offset":2213}}},"children":"CLLocationManagerDelegate"}}]," 프로토콜을 준수하여 위치 업데이트 및 오류를 처리합니다. 이제 이 위치 매니저를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SwiftUI","position":{"start":{"line":71,"column":104,"offset":2259},"end":{"line":71,"column":113,"offset":2268}}}],"position":{"start":{"line":71,"column":104,"offset":2259},"end":{"line":71,"column":113,"offset":2268}}},"children":"SwiftUI"}}]," 뷰와 결합할 차례입니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    @ObservedObject var locationManager = LocationManager()\n    @State private var region = MKCoordinateRegion(\n        center: CLLocationCoordinate2D(latitude: 37.7749, longitude: -122.4194),\n        span: MKCoordinateSpan(latitudeDelta: 0.05, longitudeDelta: 0.05)\n    )\n\n    var body: some View {\n        VStack {\n            if let userLocation = locationManager.location {\n                let userCoordinate = userLocation.coordinate\n                Map(coordinateRegion: $region, showsUserLocation: true)\n                    .onAppear {\n                        region = MKCoordinateRegion(\n                            center: userCoordinate,\n                            span: MKCoordinateSpan(latitudeDelta: 0.05, longitudeDelta: 0.05)\n                        )\n                    }\n            } else {\n                Text(\"사용자 위치를 찾고 있습니다...\")\n            }\n        }\n        .edgesIgnoringSafeArea(.all)\n    }\n}\n"}],"position":{"start":{"line":73,"column":1,"offset":2284},"end":{"line":99,"column":4,"offset":3246}}},"children":"struct ContentView: View {\n    @ObservedObject var locationManager = LocationManager()\n    @State private var region = MKCoordinateRegion(\n        center: CLLocationCoordinate2D(latitude: 37.7749, longitude: -122.4194),\n        span: MKCoordinateSpan(latitudeDelta: 0.05, longitudeDelta: 0.05)\n    )\n\n    var body: some View {\n        VStack {\n            if let userLocation = locationManager.location {\n                let userCoordinate = userLocation.coordinate\n                Map(coordinateRegion: $region, showsUserLocation: true)\n                    .onAppear {\n                        region = MKCoordinateRegion(\n                            center: userCoordinate,\n                            span: MKCoordinateSpan(latitudeDelta: 0.05, longitudeDelta: 0.05)\n                        )\n                    }\n            } else {\n                Text(\"사용자 위치를 찾고 있습니다...\")\n            }\n        }\n        .edgesIgnoringSafeArea(.all)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"locationManager","position":{"start":{"line":101,"column":4,"offset":3251},"end":{"line":101,"column":21,"offset":3268}}}],"position":{"start":{"line":101,"column":4,"offset":3251},"end":{"line":101,"column":21,"offset":3268}}},"children":"locationManager"}}]," 객체는 사용자 위치를 추적하고, 위치가 업데이트될 때마다 사용자 위치를 중앙으로 하는 지도를 재설정합니다."]}],"\n",["$","h2",null,{"id":"16e6a3e8","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"실시간 방향 제공하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["실시간으로 방향을 제공하려면 사용자의 움직임에 따라 지도의 중심을 업데이트해야 합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CLLocationManager","position":{"start":{"line":104,"column":50,"offset":3394},"end":{"line":104,"column":69,"offset":3413}}}],"position":{"start":{"line":104,"column":50,"offset":3394},"end":{"line":104,"column":69,"offset":3413}}},"children":"CLLocationManager"}}],"에서 위치 업데이트가 발생할 때마다 지도의 중심을 변경하면 됩니다."]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    @ObservedObject var locationManager = LocationManager()\n    @State private var region = MKCoordinateRegion(\n        center: CLLocationCoordinate2D(latitude: 37.7749, longitude: -122.4194),\n        span: MKCoordinateSpan(latitudeDelta: 0.05, longitudeDelta: 0.05)\n    )\n\n    var body: some View {\n        Map(coordinateRegion: $region, showsUserLocation: true)\n            .onReceive(locationManager.$location) { location in\n                if let location = location {\n                    region.center = location.coordinate\n                }\n            }\n            .edgesIgnoringSafeArea(.all)\n    }\n}\n"}],"position":{"start":{"line":106,"column":1,"offset":3452},"end":{"line":124,"column":4,"offset":4101}}},"children":"struct ContentView: View {\n    @ObservedObject var locationManager = LocationManager()\n    @State private var region = MKCoordinateRegion(\n        center: CLLocationCoordinate2D(latitude: 37.7749, longitude: -122.4194),\n        span: MKCoordinateSpan(latitudeDelta: 0.05, longitudeDelta: 0.05)\n    )\n\n    var body: some View {\n        Map(coordinateRegion: $region, showsUserLocation: true)\n            .onReceive(locationManager.$location) { location in\n                if let location = location {\n                    region.center = location.coordinate\n                }\n            }\n            .edgesIgnoringSafeArea(.all)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"locationManager","position":{"start":{"line":126,"column":9,"offset":4111},"end":{"line":126,"column":26,"offset":4128}}}],"position":{"start":{"line":126,"column":9,"offset":4111},"end":{"line":126,"column":26,"offset":4128}}},"children":"locationManager"}}],"가 새로운 위치를 받을 때마다 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"region.center","position":{"start":{"line":126,"column":43,"offset":4145},"end":{"line":126,"column":58,"offset":4160}}}],"position":{"start":{"line":126,"column":43,"offset":4145},"end":{"line":126,"column":58,"offset":4160}}},"children":"region.center"}}],"를 업데이트하여 사용자의 변경된 위치를 반영합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI를 사용해 지도 뷰를 추가하고 위치 기반 서비스를 구현하는 방법에 대해 알아보았습니다. 기본적인 지도 뷰 추가부터 실시간으로 사용자 위치를 추적하는 방법까지 다뤘습니다. 이 글을 통해 위치 기반 서비스의 기본 개념을 이해하고, SwiftUI에서 이를 구현하는 방법을 익히길 바랍니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI에서 지도 뷰 사용하기: 위치 기반 서비스 구현","toc":[{"tagName":"h1","title":"SwiftUI에서 지도 뷰 사용하기: 위치 기반 서비스 구현하기","id":"d9280ca7"},{"tagName":"h2","title":"개요","id":"476966c5"},{"tagName":"h2","title":"초기 설정","id":"5df6564f"},{"tagName":"h2","title":"기본 지도 뷰 추가하기","id":"fa70ca56"},{"tagName":"h2","title":"사용자 위치 요청하기","id":"53503451"},{"tagName":"h2","title":"실시간 방향 제공하기","id":"16e6a3e8"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
