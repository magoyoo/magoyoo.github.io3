1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","JavaScript-ES-%EC%8A%A4%ED%94%84%EB%A0%88%EB%93%9C-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A1%9C-%EB%B0%B0%EC%97%B4-%EC%9A%94%EC%86%8C-%ED%95%84%ED%84%B0%EB%A7%81%ED%95%98%EA%B8%B0-c03bd2d8","d"],{"children":["__PAGE__?{\"slug\":\"JavaScript-ES-스프레드-연산자로-배열-요소-필터링하기-c03bd2d8\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","JavaScript-ES-%EC%8A%A4%ED%94%84%EB%A0%88%EB%93%9C-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A1%9C-%EB%B0%B0%EC%97%B4-%EC%9A%94%EC%86%8C-%ED%95%84%ED%84%B0%EB%A7%81%ED%95%98%EA%B8%B0-c03bd2d8","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"JavaScript-ES-스프레드-연산자로-배열-요소-필터링하기-c03bd2d8\"}"},"styles":[]}],"segment":["slug","JavaScript-ES-%EC%8A%A4%ED%94%84%EB%A0%88%EB%93%9C-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A1%9C-%EB%B0%B0%EC%97%B4-%EC%9A%94%EC%86%8C-%ED%95%84%ED%84%B0%EB%A7%81%ED%95%98%EA%B8%B0-c03bd2d8","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"JavaScript ES6 스프레드 연산자로 배열 요소 필터링하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"JavaScript ES6에서는 다양한 새로운 기능들이 도입되었으며, 그 중 하나가 스프레드 연산자입니다. 이 글에서는 스프레드 연산자를 사용하여 배열 요소를 필터링하는 방법에 대해 다룹니다."}],["$","meta","3",{"name":"keywords","content":"JavaScript,ES6,스프레드 연산자,배열 필터링"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/JavaScript-ES-%EC%8A%A4%ED%94%84%EB%A0%88%EB%93%9C-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A1%9C-%EB%B0%B0%EC%97%B4-%EC%9A%94%EC%86%8C-%ED%95%84%ED%84%B0%EB%A7%81%ED%95%98%EA%B8%B0-c03bd2d8"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"JavaScript ES6 스프레드 연산자로 배열 요소 필터링하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"JavaScript ES6 스프레드 연산자로 배열 요소 필터링하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"JavaScript ES6에서는 다양한 새로운 기능들이 도입되었으며, 그 중 하나가 스프레드 연산자입니다. 이 글에서는 스프레드 연산자를 사용하여 배열 요소를 필터링하는 방법에 대해 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/JavaScript-ES-%EC%8A%A4%ED%94%84%EB%A0%88%EB%93%9C-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A1%9C-%EB%B0%B0%EC%97%B4-%EC%9A%94%EC%86%8C-%ED%95%84%ED%84%B0%EB%A7%81%ED%95%98%EA%B8%B0-c03bd2d8"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner5.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"JavaScript ES6 스프레드 연산자로 배열 요소 필터링하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"JavaScript ES6에서는 다양한 새로운 기능들이 도입되었으며, 그 중 하나가 스프레드 연산자입니다. 이 글에서는 스프레드 연산자를 사용하여 배열 요소를 필터링하는 방법에 대해 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner5.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner5.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"JavaScript ES6 스프레드 연산자로 배열 요소 필터링하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"JavaScript ES6 스프레드 연산자로 배열 요소 필터링하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-16"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"11215d61","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"JavaScript ES6 스프레드 연산자로 배열 요소 필터링하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["JavaScript ES6는 개발자들이 코드 작성을 더 간결하고 효율적으로 할 수 있도록 다양한 새로운 기능들을 도입했습니다. 그 중 하나가 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"스프레드 연산자","position":{"start":{"line":4,"column":80,"offset":120},"end":{"line":4,"column":90,"offset":130}}}],"position":{"start":{"line":4,"column":80,"offset":120},"end":{"line":4,"column":90,"offset":130}}},"children":"스프레드 연산자"}}],"입니다. 이 강력한 기능은 배열과 객체를 확장하고, 복사하고, 결합하는 데 아주 유용하게 쓰입니다. 이번 글에서는 스프레드 연산자를 사용하여 배열 요소를 필터링하는 다양한 방법에 대해 살펴보겠습니다."]}],"\n",["$","h2",null,{"id":"6a268405","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"스프레드 연산자 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["스프레드 연산자는 배열이나 객체와 같은 이터러블(iterable) 객체의 각 요소를 분리하여 함수 인수 또는 다른 배열이나 객체로 확장할 수 있는 문법입니다. 스프레드 연산자는 세 개의 점(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...","position":{"start":{"line":8,"column":107,"offset":368},"end":{"line":8,"column":112,"offset":373}}}],"position":{"start":{"line":8,"column":107,"offset":368},"end":{"line":8,"column":112,"offset":373}}},"children":"..."}}],")으로 표현됩니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const numbers = [1, 2, 3, 4, 5];\nconst newNumbers = [...numbers];\nconsole.log(newNumbers); // [1, 2, 3, 4, 5]\n"}],"position":{"start":{"line":10,"column":1,"offset":385},"end":{"line":14,"column":4,"offset":512}}},"children":"const numbers = [1, 2, 3, 4, 5];\nconst newNumbers = [...numbers];\nconsole.log(newNumbers); // [1, 2, 3, 4, 5]\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 예제에서는 배열 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"numbers","position":{"start":{"line":16,"column":13,"offset":526},"end":{"line":16,"column":22,"offset":535}}}],"position":{"start":{"line":16,"column":13,"offset":526},"end":{"line":16,"column":22,"offset":535}}},"children":"numbers"}}],"의 모든 요소를 스프레드 연산자를 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"newNumbers","position":{"start":{"line":16,"column":46,"offset":559},"end":{"line":16,"column":58,"offset":571}}}],"position":{"start":{"line":16,"column":46,"offset":559},"end":{"line":16,"column":58,"offset":571}}},"children":"newNumbers"}}]," 배열로 복사했습니다. 이처럼 스프레드 연산자는 기존 배열이나 객체를 변경하지 않고 새로운 배열이나 객체를 만들 때 유용합니다."]}],"\n",["$","h2",null,{"id":"093dd330","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"배열 요소를 필터링하는 기본 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["JavaScript에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"filter","position":{"start":{"line":20,"column":15,"offset":681},"end":{"line":20,"column":23,"offset":689}}}],"position":{"start":{"line":20,"column":15,"offset":681},"end":{"line":20,"column":23,"offset":689}}},"children":"filter"}}]," 메서드를 사용하여 배열에서 특정 조건을 만족하는 요소들만 추출할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"filter","position":{"start":{"line":20,"column":68,"offset":734},"end":{"line":20,"column":76,"offset":742}}}],"position":{"start":{"line":20,"column":68,"offset":734},"end":{"line":20,"column":76,"offset":742}}},"children":"filter"}}]," 메서드는 주어진 함수의 조건을 통과하는 모든 요소를 모아 새로운 배열로 반환합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const numbers = [1, 2, 3, 4, 5];\nconst evenNumbers = numbers.filter(number => number % 2 === 0);\nconsole.log(evenNumbers); // [2, 4]\n"}],"position":{"start":{"line":22,"column":1,"offset":791},"end":{"line":26,"column":4,"offset":941}}},"children":"const numbers = [1, 2, 3, 4, 5];\nconst evenNumbers = numbers.filter(number => number % 2 === 0);\nconsole.log(evenNumbers); // [2, 4]\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 예제에서는 짝수인 요소들만 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"evenNumbers","position":{"start":{"line":28,"column":19,"offset":961},"end":{"line":28,"column":32,"offset":974}}}],"position":{"start":{"line":28,"column":19,"offset":961},"end":{"line":28,"column":32,"offset":974}}},"children":"evenNumbers"}}]," 배열에 저장되었습니다. 그러나 스프레드 연산자를 사용하면 배열 요소를 필터링하는 보다 다양한 방법을 구현할 수 있습니다."]}],"\n",["$","h2",null,{"id":"07857a6b","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"스프레드 연산자를 사용한 배열 요소 필터링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"스프레드 연산자는 배열 요소를 선택적으로 필터링하면서 새로운 배열을 쉽게 생성할 수 있게 합니다. 다양한 예제를 통해 구체적으로 알아보겠습니다."}],"\n",["$","h3",null,{"id":"ba751b9e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"주어진 인덱스의 요소를 제외한 배열 생성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"배열에서 특정 인덱스에 위치한 요소를 제외한 새로운 배열을 만들고 싶다면 다음과 같이 스프레드 연산자를 사용할 수 있습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const numbers = [1, 2, 3, 4, 5];\nconst indexToRemove = 2; // 3을 제거\nconst filteredNumbers = [\n  ...numbers.slice(0, indexToRemove),\n  ...numbers.slice(indexToRemove + 1)\n];\nconsole.log(filteredNumbers); // [1, 2, 4, 5]\n"}],"position":{"start":{"line":38,"column":1,"offset":1253},"end":{"line":46,"column":4,"offset":1488}}},"children":"const numbers = [1, 2, 3, 4, 5];\nconst indexToRemove = 2; // 3을 제거\nconst filteredNumbers = [\n  ...numbers.slice(0, indexToRemove),\n  ...numbers.slice(indexToRemove + 1)\n];\nconsole.log(filteredNumbers); // [1, 2, 4, 5]\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"numbers","position":{"start":{"line":48,"column":9,"offset":1498},"end":{"line":48,"column":18,"offset":1507}}}],"position":{"start":{"line":48,"column":9,"offset":1498},"end":{"line":48,"column":18,"offset":1507}}},"children":"numbers"}}]," 배열에서 인덱스 2에 위치한 요소(값 3)를 제외한 새로운 배열 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"filteredNumbers","position":{"start":{"line":48,"column":55,"offset":1544},"end":{"line":48,"column":72,"offset":1561}}}],"position":{"start":{"line":48,"column":55,"offset":1544},"end":{"line":48,"column":72,"offset":1561}}},"children":"filteredNumbers"}}],"를 생성했습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"slice","position":{"start":{"line":48,"column":82,"offset":1571},"end":{"line":48,"column":89,"offset":1578}}}],"position":{"start":{"line":48,"column":82,"offset":1571},"end":{"line":48,"column":89,"offset":1578}}},"children":"slice"}}]," 메서드를 사용하여 인덱스 이전과 이후의 요소들을 각각 잘라서 결합했습니다."]}],"\n",["$","h3",null,{"id":"d1a9282a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"중복된 요소 제거"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음 예제에서는 배열에서 중복된 요소를 제거하고 고유한 값들만 남기는 방법을 살펴보겠습니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const numbers = [1, 2, 2, 3, 4, 4, 5];\nconst uniqueNumbers = [...new Set(numbers)];\nconsole.log(uniqueNumbers); // [1, 2, 3, 4, 5]\n"}],"position":{"start":{"line":54,"column":1,"offset":1690},"end":{"line":58,"column":4,"offset":1838}}},"children":"const numbers = [1, 2, 2, 3, 4, 4, 5];\nconst uniqueNumbers = [...new Set(numbers)];\nconsole.log(uniqueNumbers); // [1, 2, 3, 4, 5]\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Set","position":{"start":{"line":60,"column":9,"offset":1848},"end":{"line":60,"column":14,"offset":1853}}}],"position":{"start":{"line":60,"column":9,"offset":1848},"end":{"line":60,"column":14,"offset":1853}}},"children":"Set"}}]," 객체를 사용하여 중복된 요소를 자동으로 제거한 뒤, 스프레드 연산자를 사용하여 다시 배열로 변환했습니다. 이렇게 하면 배열의 고유한 값들을 쉽고 빠르게 구할 수 있습니다."]}],"\n",["$","h3",null,{"id":"0fe7bb8a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"특정 조건을 만족하는 요소만 포함된 객체 배열 생성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"배열 내부에 있는 객체들의 특정 조건을 만족하는 요소들만 필터링하여 새로운 배열을 만들 수도 있습니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const people = [\n  { name: 'Alice', age: 25 },\n  { name: 'Bob', age: 20 },\n  { name: 'Charlie', age: 30 }\n];\nconst adults = people.filter(person => person.age >= 21);\nconsole.log(adults);\n// [ { name: 'Alice', age: 25 }, { name: 'Charlie', age: 30 } ]\n\nconst adultsNewFormat = [...adults.map(person => ({ ...person, adult: true }))];\nconsole.log(adultsNewFormat);\n// [ { name: 'Alice', age: 25, adult: true }, { name: 'Charlie', age: 30, adult: true } ]\n"}],"position":{"start":{"line":66,"column":1,"offset":2044},"end":{"line":79,"column":4,"offset":2515}}},"children":"const people = [\n  { name: 'Alice', age: 25 },\n  { name: 'Bob', age: 20 },\n  { name: 'Charlie', age: 30 }\n];\nconst adults = people.filter(person => person.age >= 21);\nconsole.log(adults);\n// [ { name: 'Alice', age: 25 }, { name: 'Charlie', age: 30 } ]\n\nconst adultsNewFormat = [...adults.map(person => ({ ...person, adult: true }))];\nconsole.log(adultsNewFormat);\n// [ { name: 'Alice', age: 25, adult: true }, { name: 'Charlie', age: 30, adult: true } ]\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 성인인 사람들만 필터링한 배열 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"adults","position":{"start":{"line":81,"column":26,"offset":2542},"end":{"line":81,"column":34,"offset":2550}}}],"position":{"start":{"line":81,"column":26,"offset":2542},"end":{"line":81,"column":34,"offset":2550}}},"children":"adults"}}],"를 생성한 뒤, 이 배열의 각 객체에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"adult","position":{"start":{"line":81,"column":55,"offset":2571},"end":{"line":81,"column":62,"offset":2578}}}],"position":{"start":{"line":81,"column":55,"offset":2571},"end":{"line":81,"column":62,"offset":2578}}},"children":"adult"}}]," 속성을 추가한 배열 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"adultsNewFormat","position":{"start":{"line":81,"column":74,"offset":2590},"end":{"line":81,"column":91,"offset":2607}}}],"position":{"start":{"line":81,"column":74,"offset":2590},"end":{"line":81,"column":91,"offset":2607}}},"children":"adultsNewFormat"}}],"을 만들었습니다. 이렇게 스프레드 연산자와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"map","position":{"start":{"line":81,"column":115,"offset":2631},"end":{"line":81,"column":120,"offset":2636}}}],"position":{"start":{"line":81,"column":115,"offset":2631},"end":{"line":81,"column":120,"offset":2636}}},"children":"map"}}],"을 결합하여 새로운 포맷으로 배열을 재생성할 수 있습니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"JavaScript ES6의 스프레드 연산자는 배열과 객체를 다루는 작업을 훨씬 더 쉽고 간결하게 만들어 줍니다. 스프레드 연산자를 사용하면 배열 요소를 선택적으로 필터링하거나, 배열에서 특정 요소를 제거하며, 객체 배열의 포맷을 변경하는 등의 다양한 작업을 효율적으로 수행할 수 있습니다. 이 글이 스프레드 연산자를 활용하는 데 있어 도움이 되었기를 바랍니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"JavaScript ES6 스프레드 연산자로 배열 요소 필터링하기","toc":[{"tagName":"h1","title":"JavaScript ES6 스프레드 연산자로 배열 요소 필터링하기","id":"11215d61"},{"tagName":"h2","title":"스프레드 연산자 기본 개념","id":"6a268405"},{"tagName":"h2","title":"배열 요소를 필터링하는 기본 방법","id":"093dd330"},{"tagName":"h2","title":"스프레드 연산자를 사용한 배열 요소 필터링","id":"07857a6b"},{"tagName":"h3","title":"주어진 인덱스의 요소를 제외한 배열 생성","id":"ba751b9e"},{"tagName":"h3","title":"중복된 요소 제거","id":"d1a9282a"},{"tagName":"h3","title":"특정 조건을 만족하는 요소만 포함된 객체 배열 생성","id":"0fe7bb8a"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
