1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","React-Native-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%B6%80%EB%93%9C%EB%9F%AC%EC%9A%B4-%EC%82%AC%EC%9A%A9%EC%9E%90-%EA%B2%BD%ED%97%98-%EC%A0%9C%EA%B3%B5-1acb3b20","d"],{"children":["__PAGE__?{\"slug\":\"React-Native-애니메이션-구현하기-부드러운-사용자-경험-제공-1acb3b20\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","React-Native-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%B6%80%EB%93%9C%EB%9F%AC%EC%9A%B4-%EC%82%AC%EC%9A%A9%EC%9E%90-%EA%B2%BD%ED%97%98-%EC%A0%9C%EA%B3%B5-1acb3b20","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"React-Native-애니메이션-구현하기-부드러운-사용자-경험-제공-1acb3b20\"}"},"styles":[]}],"segment":["slug","React-Native-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%B6%80%EB%93%9C%EB%9F%AC%EC%9A%B4-%EC%82%AC%EC%9A%A9%EC%9E%90-%EA%B2%BD%ED%97%98-%EC%A0%9C%EA%B3%B5-1acb3b20","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"React Native 애니메이션 구현하기: 부드러운 사용자 경험 제공 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"React Native에서 애니메이션을 구현하는 방법을 소개합니다. 애니메이션은 사용자 경험을 향상시키고 인터페이스를 더욱 직관적으로 만드는 중요한 요소입니다. 이 글에서는 기본적인 애니메이션 기법부터 고급 기법까지 다룹니다."}],["$","meta","3",{"name":"keywords","content":"React Native,애니메이션,모바일 개발,UI/UX"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/React-Native-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%B6%80%EB%93%9C%EB%9F%AC%EC%9A%B4-%EC%82%AC%EC%9A%A9%EC%9E%90-%EA%B2%BD%ED%97%98-%EC%A0%9C%EA%B3%B5-1acb3b20"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"React Native 애니메이션 구현하기: 부드러운 사용자 경험 제공 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"React Native 애니메이션 구현하기: 부드러운 사용자 경험 제공 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"React Native에서 애니메이션을 구현하는 방법을 소개합니다. 애니메이션은 사용자 경험을 향상시키고 인터페이스를 더욱 직관적으로 만드는 중요한 요소입니다. 이 글에서는 기본적인 애니메이션 기법부터 고급 기법까지 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/React-Native-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EB%B6%80%EB%93%9C%EB%9F%AC%EC%9A%B4-%EC%82%AC%EC%9A%A9%EC%9E%90-%EA%B2%BD%ED%97%98-%EC%A0%9C%EA%B3%B5-1acb3b20"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"React Native 애니메이션 구현하기: 부드러운 사용자 경험 제공 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"React Native에서 애니메이션을 구현하는 방법을 소개합니다. 애니메이션은 사용자 경험을 향상시키고 인터페이스를 더욱 직관적으로 만드는 중요한 요소입니다. 이 글에서는 기본적인 애니메이션 기법부터 고급 기법까지 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"React Native 애니메이션 구현하기: 부드러운 사용자 경험 제공"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"React Native 애니메이션 구현하기: 부드러운 사용자 경험 제공"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-08-07"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"eff02c34","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"React Native 애니메이션 구현하기: 부드러운 사용자 경험 제공"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"애니메이션은 모바일 앱에서 중요한 요소 중 하나입니다. 올바르게 사용되면 애니메이션은 사용자 경험을 개선하고 인터페이스를 더욱 직관적으로 만들 수 있습니다. 이 글에서는 React Native를 사용하여 애니메이션을 구현하는 방법을 소개합니다."}],"\n",["$","h2",null,{"id":"772dfce7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"1. 애니메이션의 중요성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"애니메이션은 사용자 인터페이스(UI)를 더 매력적이고 사용하기 쉽게 만듭니다. 예를 들어, 버튼을 클릭할 때의 시각적 피드백, 화면 전환 효과, 로딩 스피너 등은 모두 애니메이션의 일종입니다. 이러한 시각적 요소는 사용자에게 중요한 정보를 제공하고, 앱을 더 즐겁게 사용할 수 있게 도와줍니다."}],"\n",["$","h2",null,{"id":"ec9dfb35","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"2. React Native의 애니메이션 라이브러리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["React Native에서 애니메이션을 구현하려면 기본적으로 두 가지 주요 라이브러리를 사용할 수 있습니다: ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Animated","position":{"start":{"line":12,"column":62,"offset":460},"end":{"line":12,"column":72,"offset":470}}}],"position":{"start":{"line":12,"column":62,"offset":460},"end":{"line":12,"column":72,"offset":470}}},"children":"Animated"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LayoutAnimation","position":{"start":{"line":12,"column":74,"offset":472},"end":{"line":12,"column":91,"offset":489}}}],"position":{"start":{"line":12,"column":74,"offset":472},"end":{"line":12,"column":91,"offset":489}}},"children":"LayoutAnimation"}}],". 이 두 라이브러리는 React Native 팀에서 공식적으로 제공하며, 여러 가지 애니메이션 효과를 간단하게 구현할 수 있도록 돕습니다."]}],"\n",["$","h3",null,{"id":"45dbdd70","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Animated"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Animated","position":{"start":{"line":16,"column":1,"offset":583},"end":{"line":16,"column":11,"offset":593}}}],"position":{"start":{"line":16,"column":1,"offset":583},"end":{"line":16,"column":11,"offset":593}}},"children":"Animated"}}],"는 더욱 다양하고 정교한 애니메이션을 구현할 때 사용됩니다. 이 라이브러리는 여러 종류의 애니메이션 타입(예, timing, spring, decay)을 제공하며, 여러 애니메이션을 동시에 혹은 순차적으로 실행할 수 있는 기능을 갖추고 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { useRef, useEffect } from 'react';\nimport { Animated, View, Button } from 'react-native';\n\nconst FadeInView = (props) => {\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    Animated.timing(\n      fadeAnim,\n      {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true,\n      }\n    ).start();\n  }, [fadeAnim]);\n\n  return (\n    <Animated.View\n      style={{\n        ...props.style,\n        opacity: fadeAnim,\n      }}\n    >\n      {props.children}\n    </Animated.View>\n  );\n}\n\nconst App = () => {\n  return (\n    <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n      <FadeInView style={{width: 250, height: 50, backgroundColor: 'powderblue'}}>\n        <Text>Fade In View</Text>\n      </FadeInView>\n    </View>\n  );\n}\n\nexport default App;\n"}],"position":{"start":{"line":18,"column":1,"offset":732},"end":{"line":59,"column":4,"offset":1576}}},"children":"import React, { useRef, useEffect } from 'react';\nimport { Animated, View, Button } from 'react-native';\n\nconst FadeInView = (props) => {\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    Animated.timing(\n      fadeAnim,\n      {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true,\n      }\n    ).start();\n  }, [fadeAnim]);\n\n  return (\n    <Animated.View\n      style={{\n        ...props.style,\n        opacity: fadeAnim,\n      }}\n    >\n      {props.children}\n    </Animated.View>\n  );\n}\n\nconst App = () => {\n  return (\n    <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n      <FadeInView style={{width: 250, height: 50, backgroundColor: 'powderblue'}}>\n        <Text>Fade In View</Text>\n      </FadeInView>\n    </View>\n  );\n}\n\nexport default App;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useRef","position":{"start":{"line":61,"column":10,"offset":1587},"end":{"line":61,"column":18,"offset":1595}}}],"position":{"start":{"line":61,"column":10,"offset":1587},"end":{"line":61,"column":18,"offset":1595}}},"children":"useRef"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":61,"column":20,"offset":1597},"end":{"line":61,"column":31,"offset":1608}}}],"position":{"start":{"line":61,"column":20,"offset":1597},"end":{"line":61,"column":31,"offset":1608}}},"children":"useEffect"}}],"를 사용하여 컴포넌트의 마운트 시점에 나타나는 페이드 인 애니메이션을 구현했습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Animated.Value","position":{"start":{"line":61,"column":78,"offset":1655},"end":{"line":61,"column":94,"offset":1671}}}],"position":{"start":{"line":61,"column":78,"offset":1655},"end":{"line":61,"column":94,"offset":1671}}},"children":"Animated.Value"}}],"는 애니메이션 값을 관리하는 중심 역할을 합니다."]}],"\n",["$","h3",null,{"id":"bef3b046","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"LayoutAnimation"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LayoutAnimation","position":{"start":{"line":65,"column":1,"offset":1721},"end":{"line":65,"column":18,"offset":1738}}}],"position":{"start":{"line":65,"column":1,"offset":1721},"end":{"line":65,"column":18,"offset":1738}}},"children":"LayoutAnimation"}}],"은 레이아웃 변경 시 자동으로 애니메이션을 추가하는데 유용합니다. 이는 사용자가 UI 요소를 추가하거나 제거할 때 자연스러운 애니메이션을 제공합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React from 'react';\nimport { View, Button, LayoutAnimation } from 'react-native';\n\nconst App = () => {\n  const [active, setActive] = React.useState(false);\n\n  const toggleBox = () => {\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n    setActive(!active);\n  }\n\n  return (\n    <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n      <Button title=\"Toggle Box\" onPress={toggleBox} />\n      {active && <View style={{width: 100, height: 100, backgroundColor: 'powderblue'}} />}\n    </View>\n  );\n}\n\nexport default App;\n"}],"position":{"start":{"line":67,"column":1,"offset":1823},"end":{"line":88,"column":4,"offset":2404}}},"children":"import React from 'react';\nimport { View, Button, LayoutAnimation } from 'react-native';\n\nconst App = () => {\n  const [active, setActive] = React.useState(false);\n\n  const toggleBox = () => {\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n    setActive(!active);\n  }\n\n  return (\n    <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n      <Button title=\"Toggle Box\" onPress={toggleBox} />\n      {active && <View style={{width: 100, height: 100, backgroundColor: 'powderblue'}} />}\n    </View>\n  );\n}\n\nexport default App;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 예제에서는 버튼을 클릭할 때마다 박스가 나타나고 사라지는 애니메이션을 제공합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LayoutAnimation.configureNext","position":{"start":{"line":90,"column":50,"offset":2455},"end":{"line":90,"column":81,"offset":2486}}}],"position":{"start":{"line":90,"column":50,"offset":2455},"end":{"line":90,"column":81,"offset":2486}}},"children":"LayoutAnimation.configureNext"}}],"를 사용하여 다음 레이아웃 변경 시 애니메이션을 정의할 수 있습니다."]}],"\n",["$","h2",null,{"id":"04c0f324","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"3. 고급 애니메이션 기법"}],"\n",["$","h3",null,{"id":"9d7dbee7","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"복합 애니메이션(Composite Animations)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["복합 애니메이션이란 여러 애니메이션을 순차적 또는 병렬로 실행하는 기법입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Animated.sequence","position":{"start":{"line":96,"column":45,"offset":2625},"end":{"line":96,"column":64,"offset":2644}}}],"position":{"start":{"line":96,"column":45,"offset":2625},"end":{"line":96,"column":64,"offset":2644}}},"children":"Animated.sequence"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Animated.parallel","position":{"start":{"line":96,"column":66,"offset":2646},"end":{"line":96,"column":85,"offset":2665}}}],"position":{"start":{"line":96,"column":66,"offset":2646},"end":{"line":96,"column":85,"offset":2665}}},"children":"Animated.parallel"}}],"을 사용하여 복합 애니메이션을 쉽게 구현할 수 있습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"Animated.sequence([\n  Animated.timing(fadeAnim, { toValue: 1, duration: 500 }),\n  Animated.timing(moveAnim, { toValue: 100, duration: 500 }),\n]).start();\n"}],"position":{"start":{"line":98,"column":1,"offset":2698},"end":{"line":103,"column":4,"offset":2869}}},"children":"Animated.sequence([\n  Animated.timing(fadeAnim, { toValue: 1, duration: 500 }),\n  Animated.timing(moveAnim, { toValue: 100, duration: 500 }),\n]).start();\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위 코드에서는 순차적으로 페이드 인과 이동 애니메이션을 실행합니다."}],"\n",["$","h3",null,{"id":"05421fcb","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"사용자 제스처와 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["사용자 제스처와 애니메이션을 결합하면 보다 인터랙티브한 사용자 경험을 제공할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"PanResponder","position":{"start":{"line":109,"column":52,"offset":2981},"end":{"line":109,"column":66,"offset":2995}}}],"position":{"start":{"line":109,"column":52,"offset":2981},"end":{"line":109,"column":66,"offset":2995}}},"children":"PanResponder"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Animated","position":{"start":{"line":109,"column":68,"offset":2997},"end":{"line":109,"column":78,"offset":3007}}}],"position":{"start":{"line":109,"column":68,"offset":2997},"end":{"line":109,"column":78,"offset":3007}}},"children":"Animated"}}],"를 결합하여 드래그 앤 드롭 기능을 구현할 수 있습니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { useRef } from 'react';\nimport { View, Animated, PanResponder } from 'react-native';\n\nconst DraggableBox = () => {\n  const pan = useRef(new Animated.ValueXY()).current;\n\n  const panResponder = useRef(\n    PanResponder.create({\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderMove: Animated.event(\n        [null, { dx: pan.x, dy: pan.y }],\n        { useNativeDriver: false }\n      ),\n      onPanResponderRelease: () => {\n        Animated.spring(pan, { toValue: { x: 0, y: 0 }, useNativeDriver: false }).start();\n      }\n    })\n  ).current;\n\n  return (\n    <Animated.View\n      {...panResponder.panHandlers}\n      style={[pan.getLayout(), styles.box]}\n    />\n  );\n};\n\nconst styles = {\n  box: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'powderblue',\n  }\n};\n\nexport default DraggableBox;\n"}],"position":{"start":{"line":111,"column":1,"offset":3040},"end":{"line":148,"column":4,"offset":3888}}},"children":"import React, { useRef } from 'react';\nimport { View, Animated, PanResponder } from 'react-native';\n\nconst DraggableBox = () => {\n  const pan = useRef(new Animated.ValueXY()).current;\n\n  const panResponder = useRef(\n    PanResponder.create({\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderMove: Animated.event(\n        [null, { dx: pan.x, dy: pan.y }],\n        { useNativeDriver: false }\n      ),\n      onPanResponderRelease: () => {\n        Animated.spring(pan, { toValue: { x: 0, y: 0 }, useNativeDriver: false }).start();\n      }\n    })\n  ).current;\n\n  return (\n    <Animated.View\n      {...panResponder.panHandlers}\n      style={[pan.getLayout(), styles.box]}\n    />\n  );\n};\n\nconst styles = {\n  box: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'powderblue',\n  }\n};\n\nexport default DraggableBox;\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 예제에서는 사용자가 박스를 드래그할 수 있으며, 드래그가 끝나면 박스가 원래 위치로 되돌아갑니다."}],"\n",["$","h2",null,{"id":"872f0cc8","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"4. 결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["React Native에서 애니메이션을 구현하는 것은 사용자 경험을 극대화하는 방법 중 하나입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Animated","position":{"start":{"line":154,"column":57,"offset":4014},"end":{"line":154,"column":67,"offset":4024}}}],"position":{"start":{"line":154,"column":57,"offset":4014},"end":{"line":154,"column":67,"offset":4024}}},"children":"Animated"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LayoutAnimation","position":{"start":{"line":154,"column":69,"offset":4026},"end":{"line":154,"column":86,"offset":4043}}}],"position":{"start":{"line":154,"column":69,"offset":4026},"end":{"line":154,"column":86,"offset":4043}}},"children":"LayoutAnimation"}}]," 라이브러리를 사용하여 간단한 애니메이션부터 복잡한 애니메이션까지 다양한 효과를 구현할 수 있습니다. 애니메이션을 적극적으로 활용하여 더 나은 사용자 경험을 제공해 보세요."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"React Native 애니메이션 구현하기: 부드러운 사용자 경험 제공","toc":[{"tagName":"h1","title":"React Native 애니메이션 구현하기: 부드러운 사용자 경험 제공","id":"eff02c34"},{"tagName":"h2","title":"1. 애니메이션의 중요성","id":"772dfce7"},{"tagName":"h2","title":"2. React Native의 애니메이션 라이브러리","id":"ec9dfb35"},{"tagName":"h3","title":"Animated","id":"45dbdd70"},{"tagName":"h3","title":"LayoutAnimation","id":"bef3b046"},{"tagName":"h2","title":"3. 고급 애니메이션 기법","id":"04c0f324"},{"tagName":"h3","title":"복합 애니메이션(Composite Animations)","id":"9d7dbee7"},{"tagName":"h3","title":"사용자 제스처와 애니메이션","id":"05421fcb"},{"tagName":"h2","title":"4. 결론","id":"872f0cc8"}],"language":"kr"}]}]]}]]
8:null
