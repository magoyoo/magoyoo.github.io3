1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift%EB%A1%9C-Autolayout%EA%B3%BC-translatesAutoresizingMaskIntoConstraints-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-e0c88905","d"],{"children":["__PAGE__?{\"slug\":\"Swift로-Autolayout과-translatesAutoresizingMaskIntoConstraints-이해하기-e0c88905\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift%EB%A1%9C-Autolayout%EA%B3%BC-translatesAutoresizingMaskIntoConstraints-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-e0c88905","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift로-Autolayout과-translatesAutoresizingMaskIntoConstraints-이해하기-e0c88905\"}"},"styles":[]}],"segment":["slug","Swift%EB%A1%9C-Autolayout%EA%B3%BC-translatesAutoresizingMaskIntoConstraints-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-e0c88905","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 이해하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Swift에서 Autolayout과 translatesAutoresizingMaskIntoConstraints를 이해하고 사용하는 방법을 다룹니다. 다양한 코드 예제와 함께 UI 요소를 유연하게 제어하는 방법을 학습해보세요."}],["$","meta","3",{"name":"keywords","content":"Swift,Autolayout,translatesAutoresizingMaskIntoConstraints,iOS 개발"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift%EB%A1%9C-Autolayout%EA%B3%BC-translatesAutoresizingMaskIntoConstraints-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-e0c88905"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 이해하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 이해하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Swift에서 Autolayout과 translatesAutoresizingMaskIntoConstraints를 이해하고 사용하는 방법을 다룹니다. 다양한 코드 예제와 함께 UI 요소를 유연하게 제어하는 방법을 학습해보세요."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift%EB%A1%9C-Autolayout%EA%B3%BC-translatesAutoresizingMaskIntoConstraints-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-e0c88905"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 이해하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Swift에서 Autolayout과 translatesAutoresizingMaskIntoConstraints를 이해하고 사용하는 방법을 다룹니다. 다양한 코드 예제와 함께 UI 요소를 유연하게 제어하는 방법을 학습해보세요."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
10:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
11:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T486,import UIKit

class ViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

        let button1 = UIButton()
        button1.backgroundColor = .red
        button1.translatesAutoresizingMaskIntoConstraints = false
        self.view.addSubview(button1)

        let button2 = UIButton()
        button2.backgroundColor = .blue
        button2.translatesAutoresizingMaskIntoConstraints = false
        self.view.addSubview(button2)

        NSLayoutConstraint.activate([
            button1.leadingAnchor.constraint(equalTo: self.view.leadingAnchor),
            button1.topAnchor.constraint(equalTo: self.view.topAnchor),
            button1.bottomAnchor.constraint(equalTo: self.view.bottomAnchor),
            button1.trailingAnchor.constraint(equalTo: button2.leadingAnchor),
            button1.widthAnchor.constraint(equalTo: button2.widthAnchor),
            
            button2.trailingAnchor.constraint(equalTo: self.view.trailingAnchor),
            button2.topAnchor.constraint(equalTo: self.view.topAnchor),
            button2.bottomAnchor.constraint(equalTo: self.view.bottomAnchor)
        ])
    }
}
f:T486,import UIKit

class ViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

        let button1 = UIButton()
        button1.backgroundColor = .red
        button1.translatesAutoresizingMaskIntoConstraints = false
        self.view.addSubview(button1)

        let button2 = UIButton()
        button2.backgroundColor = .blue
        button2.translatesAutoresizingMaskIntoConstraints = false
        self.view.addSubview(button2)

        NSLayoutConstraint.activate([
            button1.leadingAnchor.constraint(equalTo: self.view.leadingAnchor),
            button1.topAnchor.constraint(equalTo: self.view.topAnchor),
            button1.bottomAnchor.constraint(equalTo: self.view.bottomAnchor),
            button1.trailingAnchor.constraint(equalTo: button2.leadingAnchor),
            button1.widthAnchor.constraint(equalTo: button2.widthAnchor),
            
            button2.trailingAnchor.constraint(equalTo: self.view.trailingAnchor),
            button2.topAnchor.constraint(equalTo: self.view.topAnchor),
            button2.bottomAnchor.constraint(equalTo: self.view.bottomAnchor)
        ])
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 이해하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 이해하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-26"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"97ab5b43","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 이해하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["iOS 앱 개발에서 UI 요소를 효율적으로 배치하고 동적으로 레이아웃을 구성할 때, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AutoLayout","position":{"start":{"line":4,"column":48,"offset":117},"end":{"line":4,"column":60,"offset":129}}}],"position":{"start":{"line":4,"column":48,"offset":117},"end":{"line":4,"column":60,"offset":129}}},"children":"AutoLayout"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"translatesAutoresizingMaskIntoConstraints","position":{"start":{"line":4,"column":62,"offset":131},"end":{"line":4,"column":105,"offset":174}}}],"position":{"start":{"line":4,"column":62,"offset":131},"end":{"line":4,"column":105,"offset":174}}},"children":"translatesAutoresizingMaskIntoConstraints"}}],"는 매우 중요한 역할을 합니다. 이 글에서는 이 두 가지 개념을 자세히 이해하고, 이를 사용하여 UI 요소를 다루는 방법에 대해 설명하겠습니다."]}],"\n",["$","h2",null,{"id":"a1e9652f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"AutoLayout 개요"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AutoLayout","position":{"start":{"line":8,"column":1,"offset":274},"end":{"line":8,"column":13,"offset":286}}}],"position":{"start":{"line":8,"column":1,"offset":274},"end":{"line":8,"column":13,"offset":286}}},"children":"AutoLayout"}}],"은 iOS 개발에서 UI 요소를 레이아웃하는 강력한 도구입니다. 이를 통해 화면 크기나 방향이 변경되더라도 UI가 적절하게 배치되며, 다양한 화면 크기와 해상도를 지원할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AutoLayout","position":{"start":{"line":8,"column":116,"offset":389},"end":{"line":8,"column":128,"offset":401}}}],"position":{"start":{"line":8,"column":116,"offset":389},"end":{"line":8,"column":128,"offset":401}}},"children":"AutoLayout"}}],"을 사용하면 제약 조건(Constraints)을 설정하여 뷰의 위치와 크기를 정의할 수 있습니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"예를 들어, 다음과 같은 제약 조건을 사용해볼 수 있습니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let button = UIButton()\nbutton.translatesAutoresizingMaskIntoConstraints = false\nself.view.addSubview(button)\n\nNSLayoutConstraint.activate([\n    button.centerXAnchor.constraint(equalTo: self.view.centerXAnchor),\n    button.centerYAnchor.constraint(equalTo: self.view.centerYAnchor),\n    button.widthAnchor.constraint(equalToConstant: 100),\n    button.heightAnchor.constraint(equalToConstant: 50)\n])\n"}],"position":{"start":{"line":12,"column":1,"offset":492},"end":{"line":23,"column":4,"offset":903}}},"children":"let button = UIButton()\nbutton.translatesAutoresizingMaskIntoConstraints = false\nself.view.addSubview(button)\n\nNSLayoutConstraint.activate([\n    button.centerXAnchor.constraint(equalTo: self.view.centerXAnchor),\n    button.centerYAnchor.constraint(equalTo: self.view.centerYAnchor),\n    button.widthAnchor.constraint(equalToConstant: 100),\n    button.heightAnchor.constraint(equalToConstant: 50)\n])\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위의 코드에서는 버튼의 중심을 부모 뷰의 중심에 맞추고, 너비와 높이를 각각 100과 50으로 설정했습니다. 이렇게 하면 화면 크기가 변경되더라도 버튼은 항상 화면의 중앙에 위치하게 됩니다."}],"\n",["$","h2",null,{"id":"567f1097","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"translatesAutoresizingMaskIntoConstraints 이해하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"translatesAutoresizingMaskIntoConstraints","position":{"start":{"line":29,"column":1,"offset":1064},"end":{"line":29,"column":44,"offset":1107}}}],"position":{"start":{"line":29,"column":1,"offset":1064},"end":{"line":29,"column":44,"offset":1107}}},"children":"translatesAutoresizingMaskIntoConstraints"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIView","position":{"start":{"line":29,"column":46,"offset":1109},"end":{"line":29,"column":54,"offset":1117}}}],"position":{"start":{"line":29,"column":46,"offset":1109},"end":{"line":29,"column":54,"offset":1117}}},"children":"UIView"}}],"의 프로퍼티로, 뷰가 자동적으로 생성하는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Autoresizing Mask","position":{"start":{"line":29,"column":77,"offset":1140},"end":{"line":29,"column":96,"offset":1159}}}],"position":{"start":{"line":29,"column":77,"offset":1140},"end":{"line":29,"column":96,"offset":1159}}},"children":"Autoresizing Mask"}}]," 제약 조건을 활성화할지 여부를 결정합니다. 기본값은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true","position":{"start":{"line":29,"column":126,"offset":1189},"end":{"line":29,"column":132,"offset":1195}}}],"position":{"start":{"line":29,"column":126,"offset":1189},"end":{"line":29,"column":132,"offset":1195}}},"children":"true"}}],"이지만, 우리가 직접 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AutoLayout","position":{"start":{"line":29,"column":144,"offset":1207},"end":{"line":29,"column":156,"offset":1219}}}],"position":{"start":{"line":29,"column":144,"offset":1207},"end":{"line":29,"column":156,"offset":1219}}},"children":"AutoLayout"}}]," 제약 조건을 설정하려면 이를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false","position":{"start":{"line":29,"column":173,"offset":1236},"end":{"line":29,"column":180,"offset":1243}}}],"position":{"start":{"line":29,"column":173,"offset":1236},"end":{"line":29,"column":180,"offset":1243}}},"children":"false"}}],"로 설정해야 합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 프로퍼티를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false","position":{"start":{"line":31,"column":9,"offset":1264},"end":{"line":31,"column":16,"offset":1271}}}],"position":{"start":{"line":31,"column":9,"offset":1264},"end":{"line":31,"column":16,"offset":1271}}},"children":"false"}}],"로 설정하지 않으면 우리가 추가한 제약 조건과 충돌을 일으킬 수 있습니다. 따라서 다음과 같은 작업이 필요합니다."]}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIView","position":{"start":{"line":33,"column":4,"offset":1339},"end":{"line":33,"column":12,"offset":1347}}}],"position":{"start":{"line":33,"column":4,"offset":1339},"end":{"line":33,"column":12,"offset":1347}}},"children":"UIView"}}]," 또는 서브뷰를 생성합니다."]}],"\n",["$","li","li-1",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"translatesAutoresizingMaskIntoConstraints","position":{"start":{"line":34,"column":4,"offset":1366},"end":{"line":34,"column":47,"offset":1409}}}],"position":{"start":{"line":34,"column":4,"offset":1366},"end":{"line":34,"column":47,"offset":1409}}},"children":"translatesAutoresizingMaskIntoConstraints"}}],"를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false","position":{"start":{"line":34,"column":49,"offset":1411},"end":{"line":34,"column":56,"offset":1418}}}],"position":{"start":{"line":34,"column":49,"offset":1411},"end":{"line":34,"column":56,"offset":1418}}},"children":"false"}}],"로 설정합니다."]}],"\n",["$","li","li-2",{"children":"제약 조건을 코드로 추가하거나 인터페이스 빌더에서 설정합니다."}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"예를 들어, 다음과 같이 사용할 수 있습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let label = UILabel()\nlabel.translatesAutoresizingMaskIntoConstraints = false\nself.view.addSubview(label)\n\nNSLayoutConstraint.activate([\n    label.leadingAnchor.constraint(equalTo: self.view.leadingAnchor, constant: 20),\n    label.trailingAnchor.constraint(equalTo: self.view.trailingAnchor, constant: -20),\n    label.topAnchor.constraint(equalTo: self.view.topAnchor, constant: 50),\n    label.heightAnchor.constraint(equalToConstant: 30)\n])\n"}],"position":{"start":{"line":39,"column":1,"offset":1493},"end":{"line":50,"column":4,"offset":1947}}},"children":"let label = UILabel()\nlabel.translatesAutoresizingMaskIntoConstraints = false\nself.view.addSubview(label)\n\nNSLayoutConstraint.activate([\n    label.leadingAnchor.constraint(equalTo: self.view.leadingAnchor, constant: 20),\n    label.trailingAnchor.constraint(equalTo: self.view.trailingAnchor, constant: -20),\n    label.topAnchor.constraint(equalTo: self.view.topAnchor, constant: 50),\n    label.heightAnchor.constraint(equalToConstant: 30)\n])\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"label","position":{"start":{"line":52,"column":9,"offset":1957},"end":{"line":52,"column":16,"offset":1964}}}],"position":{"start":{"line":52,"column":9,"offset":1957},"end":{"line":52,"column":16,"offset":1964}}},"children":"label"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"translatesAutoresizingMaskIntoConstraints","position":{"start":{"line":52,"column":18,"offset":1966},"end":{"line":52,"column":61,"offset":2009}}}],"position":{"start":{"line":52,"column":18,"offset":1966},"end":{"line":52,"column":61,"offset":2009}}},"children":"translatesAutoresizingMaskIntoConstraints"}}],"를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false","position":{"start":{"line":52,"column":63,"offset":2011},"end":{"line":52,"column":70,"offset":2018}}}],"position":{"start":{"line":52,"column":63,"offset":2011},"end":{"line":52,"column":70,"offset":2018}}},"children":"false"}}],"로 설정하고, 네 가지 제약 조건을 추가하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"label","position":{"start":{"line":52,"column":95,"offset":2043},"end":{"line":52,"column":102,"offset":2050}}}],"position":{"start":{"line":52,"column":95,"offset":2043},"end":{"line":52,"column":102,"offset":2050}}},"children":"label"}}],"의 위치와 크기를 정의했습니다."]}],"\n",["$","h2",null,{"id":"5718d89a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"실습 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 좀 더 복잡한 실습을 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AutoLayout","position":{"start":{"line":56,"column":19,"offset":2097},"end":{"line":56,"column":31,"offset":2109}}}],"position":{"start":{"line":56,"column":19,"offset":2097},"end":{"line":56,"column":31,"offset":2109}}},"children":"AutoLayout"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"translatesAutoresizingMaskIntoConstraints","position":{"start":{"line":56,"column":33,"offset":2111},"end":{"line":56,"column":76,"offset":2154}}}],"position":{"start":{"line":56,"column":33,"offset":2111},"end":{"line":56,"column":76,"offset":2154}}},"children":"translatesAutoresizingMaskIntoConstraints"}}],"를 활용해보겠습니다. 두 개의 버튼을 화면에 배치하고, 각 버튼이 화면의 절반을 차지하도록 설정해보겠습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":58,"column":1,"offset":2216},"end":{"line":89,"column":4,"offset":3386}}},"children":"$f"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위의 코드에서는 두 개의 버튼을 생성하고, 각 버튼이 화면의 절반을 차지하도록 제약 조건을 설정했습니다. 이로 인해 화면 크기가 변경되더라도 두 버튼은 항상 균등하게 배치될 것입니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 글에서는 Swift에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AutoLayout","position":{"start":{"line":95,"column":16,"offset":3514},"end":{"line":95,"column":28,"offset":3526}}}],"position":{"start":{"line":95,"column":16,"offset":3514},"end":{"line":95,"column":28,"offset":3526}}},"children":"AutoLayout"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"translatesAutoresizingMaskIntoConstraints","position":{"start":{"line":95,"column":30,"offset":3528},"end":{"line":95,"column":73,"offset":3571}}}],"position":{"start":{"line":95,"column":30,"offset":3528},"end":{"line":95,"column":73,"offset":3571}}},"children":"translatesAutoresizingMaskIntoConstraints"}}],"를 사용하여 화면을 구성하는 방법을 자세히 알아보았습니다. 두 가지 개념을 잘 이해하고 활용하면 다양한 화면 크기와 해상도를 지원하는 앱을 쉽게 개발할 수 있습니다. 이를 통해 iOS 개발 시 보다 유연하고 견고한 UI 구현이 가능해질 것입니다."]}]]}]}],["$","$L10",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L11",null,{"articleTitle":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 이해하기","toc":[{"tagName":"h1","title":"Swift로 Autolayout과 translatesAutoresizingMaskIntoConstraints 이해하기","id":"97ab5b43"},{"tagName":"h2","title":"AutoLayout 개요","id":"a1e9652f"},{"tagName":"h2","title":"translatesAutoresizingMaskIntoConstraints 이해하기","id":"567f1097"},{"tagName":"h2","title":"실습 예제","id":"5718d89a"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
