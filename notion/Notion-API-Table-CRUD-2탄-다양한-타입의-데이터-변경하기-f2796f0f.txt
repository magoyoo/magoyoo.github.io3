1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["notion",{"children":[["slug","Notion-API-Table-CRUD-2%ED%83%84-%EB%8B%A4%EC%96%91%ED%95%9C-%ED%83%80%EC%9E%85%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0-f2796f0f","d"],{"children":["__PAGE__?{\"slug\":\"Notion-API-Table-CRUD-2탄-다양한-타입의-데이터-변경하기-f2796f0f\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","notion","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","notion","children",["slug","Notion-API-Table-CRUD-2%ED%83%84-%EB%8B%A4%EC%96%91%ED%95%9C-%ED%83%80%EC%9E%85%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0-f2796f0f","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Notion-API-Table-CRUD-2탄-다양한-타입의-데이터-변경하기-f2796f0f\"}"},"styles":[]}],"segment":["slug","Notion-API-Table-CRUD-2%ED%83%84-%EB%8B%A4%EC%96%91%ED%95%9C-%ED%83%80%EC%9E%85%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0-f2796f0f","d"]},"styles":[]}],"segment":"notion"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Notion API: Table CRUD: 2탄 다양한 타입의 데이터 변경하기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Notion API는 데이터베이스의 항목을 생성, 읽기, 수정, 삭제할 수 있는 강력한 도구입니다. 이번 글에서는 Notion API를 사용하여 다양한 타입의 데이터를 변경하는 방법을 다루겠습니다. 지난 글에서는 기본적인 CRUD(Create, Read, Update, Delete) 작업을 설명했지만, 이번에는 각기 다른 데이터 타입을 다루는 방법에 집중할 것입니다. 텍스트, 숫자, 날짜, 선택 목록 등의 다양한 데이터 타입을 수정하는 방법을 자세히 알아보겠습니다."}],["$","meta","3",{"name":"keywords","content":"notion,업무능률,업무관리"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/notion/Notion-API-Table-CRUD-2%ED%83%84-%EB%8B%A4%EC%96%91%ED%95%9C-%ED%83%80%EC%9E%85%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0-f2796f0f"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Notion API: Table CRUD: 2탄 다양한 타입의 데이터 변경하기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Notion API: Table CRUD: 2탄 다양한 타입의 데이터 변경하기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Notion API는 데이터베이스의 항목을 생성, 읽기, 수정, 삭제할 수 있는 강력한 도구입니다. 이번 글에서는 Notion API를 사용하여 다양한 타입의 데이터를 변경하는 방법을 다루겠습니다. 지난 글에서는 기본적인 CRUD(Create, Read, Update, Delete) 작업을 설명했지만, 이번에는 각기 다른 데이터 타입을 다루는 방법에 집중할 것입니다. 텍스트, 숫자, 날짜, 선택 목록 등의 다양한 데이터 타입을 수정하는 방법을 자세히 알아보겠습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/notion/Notion-API-Table-CRUD-2%ED%83%84-%EB%8B%A4%EC%96%91%ED%95%9C-%ED%83%80%EC%9E%85%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0-f2796f0f"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/notionBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Notion API: Table CRUD: 2탄 다양한 타입의 데이터 변경하기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Notion API는 데이터베이스의 항목을 생성, 읽기, 수정, 삭제할 수 있는 강력한 도구입니다. 이번 글에서는 Notion API를 사용하여 다양한 타입의 데이터를 변경하는 방법을 다루겠습니다. 지난 글에서는 기본적인 CRUD(Create, Read, Update, Delete) 작업을 설명했지만, 이번에는 각기 다른 데이터 타입을 다루는 방법에 집중할 것입니다. 텍스트, 숫자, 날짜, 선택 목록 등의 다양한 데이터 타입을 수정하는 방법을 자세히 알아보겠습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/notionBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","998:static/chunks/app/notion/[slug]/page-74f48671b9a5e2c0.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","998:static/chunks/app/notion/[slug]/page-74f48671b9a5e2c0.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","998:static/chunks/app/notion/[slug]/page-74f48671b9a5e2c0.js"],"name":"","async":false}
d:I{"id":62313,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","998:static/chunks/app/notion/[slug]/page-74f48671b9a5e2c0.js"],"name":"","async":false}
f:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","998:static/chunks/app/notion/[slug]/page-74f48671b9a5e2c0.js"],"name":"MarkDownCode","async":false}
10:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","998:static/chunks/app/notion/[slug]/page-74f48671b9a5e2c0.js"],"name":"","async":false}
11:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","998:static/chunks/app/notion/[slug]/page-74f48671b9a5e2c0.js"],"name":"","async":false}
e:T1b37,
# Notion API: Table CRUD: 2탄 다양한 타입의 데이터 변경하기

Notion API는 데이터베이스의 항목을 생성, 읽기, 수정, 삭제할 수 있는 강력한 도구입니다. 이번 글에서는 Notion API를 사용하여 다양한 타입의 데이터를 변경하는 방법을 다루겠습니다. 지난 글에서는 기본적인 CRUD(Create, Read, Update, Delete) 작업을 설명했지만, 이번에는 각기 다른 데이터 타입을 다루는 방법에 집중할 것입니다. 텍스트, 숫자, 날짜, 선택 목록 등의 다양한 데이터 타입을 수정하는 방법을 자세히 알아보겠습니다.

## 1. Notion API 설정

### 1.1 API 키 생성

먼저 Notion API를 사용하기 위해 API 키를 생성해야 합니다. Notion 웹사이트에 로그인 후 [My Integrations](https://www.notion.so/my-integrations) 페이지에서 새로운 통합을 생성하고 API 키를 복사합니다.

### 1.2 접근 권한 설정

데이터베이스나 페이지에 대한 접근 권한을 설정해야 합니다. 이를 위해 Notion에서 해당 페이지를 열고, 오른쪽 상단의 "공유" 버튼을 클릭하여 생성한 통합을 페이지에 초대합니다.

## 2. 데이터 타입 이해하기

Notion 데이터베이스는 다양한 데이터 타입을 지원합니다. 여기에는 텍스트, 숫자, 날짜, 체크박스, 선택 목록 등이 포함됩니다. 각 데이터 타입은 고유한 형식으로 저장되며, 이를 올바르게 다루기 위해 해당 형식을 이해하는 것이 중요합니다.

### 2.1 텍스트 (Text)

텍스트 필드는 문자열 데이터를 저장합니다. Notion에서는 두 가지 주요 텍스트 필드를 지원합니다: 단일 줄 텍스트와 다중 줄 텍스트(리치 텍스트).

### 2.2 숫자 (Number)

숫자 필드는 정수나 소수 같은 숫자 데이터를 저장합니다.

### 2.3 날짜 (Date)

날짜 필드는 특정 날짜 또는 시간 범위를 저장합니다.

### 2.4 체크박스 (Checkbox)

체크박스 필드는 Boolean 값을 저장합니다.

### 2.5 선택 목록 (Select)

선택 목록 필드는 미리 정의된 옵션 중 하나를 선택할 수 있습니다.

## 3. 다양한 타입의 데이터 변경하기

### 3.1 텍스트 필드 수정

텍스트 필드를 수정하려면 `title`이나 `rich_text` 타입을 사용해야 합니다. 다음은 제목 필드를 수정하는 예제입니다.

```python
import requests
import json

NOTION_API_KEY = 'your_notion_api_key'
PAGE_ID = 'your_page_id'

url = f"<https://api.notion.com/v1/pages/{PAGE_ID}>"

headers = {
    "Authorization": f"Bearer {NOTION_API_KEY}",
    "Content-Type": "application/json",
    "Notion-Version": "2022-06-28"
}

data = {
    "properties": {
        "Name": {
            "title": [
                {
                    "text": {
                        "content": "새로운 제목"
                    }
                }
            ]
        }
    }
}

response = requests.patch(url, headers=headers, data=json.dumps(data))

if response.status_code == 200:
    print("텍스트 필드가 성공적으로 수정되었습니다.")
else:
    print(f"텍스트 필드 수정에 실패했습니다. 응답 코드: {response.status_code}")
    print(response.json())

```

### 3.2 숫자 필드 수정

숫자 필드를 수정하려면 `number` 타입을 사용해야 합니다. 다음은 숫자 필드를 수정하는 예제입니다.

```python
data = {
    "properties": {
        "Amount": {
            "number": 42
        }
    }
}

response = requests.patch(url, headers=headers, data=json.dumps(data))

if response.status_code == 200:
    print("숫자 필드가 성공적으로 수정되었습니다.")
else:
    print(f"숫자 필드 수정에 실패했습니다. 응답 코드: {response.status_code}")
    print(response.json())

```

### 3.3 날짜 필드 수정

날짜 필드를 수정하려면 `date` 타입을 사용해야 합니다. 다음은 날짜 필드를 수정하는 예제입니다.

```python
data = {
    "properties": {
        "Due Date": {
            "date": {
                "start": "2024-06-30"
            }
        }
    }
}

response = requests.patch(url, headers=headers, data=json.dumps(data))

if response.status_code == 200:
    print("날짜 필드가 성공적으로 수정되었습니다.")
else:
    print(f"날짜 필드 수정에 실패했습니다. 응답 코드: {response.status_code}")
    print(response.json())

```

### 3.4 체크박스 필드 수정

체크박스 필드를 수정하려면 `checkbox` 타입을 사용해야 합니다. 다음은 체크박스 필드를 수정하는 예제입니다.

```python
data = {
    "properties": {
        "Completed": {
            "checkbox": True
        }
    }
}

response = requests.patch(url, headers=headers, data=json.dumps(data))

if response.status_code == 200:
    print("체크박스 필드가 성공적으로 수정되었습니다.")
else:
    print(f"체크박스 필드 수정에 실패했습니다. 응답 코드: {response.status_code}")
    print(response.json())

```

### 3.5 선택 목록 필드 수정

선택 목록 필드를 수정하려면 `select` 타입을 사용해야 합니다. 다음은 선택 목록 필드를 수정하는 예제입니다.

```python
data = {
    "properties": {
        "Status": {
            "select": {
                "name": "In Progress"
            }
        }
    }
}

response = requests.patch(url, headers=headers, data=json.dumps(data))

if response.status_code == 200:
    print("선택 목록 필드가 성공적으로 수정되었습니다.")
else:
    print(f"선택 목록 필드 수정에 실패했습니다. 응답 코드: {response.status_code}")
    print(response.json())

```

## 4. 데이터 삭제 (Delete)

Notion에서 데이터를 삭제하는 것은 해당 항목을 아카이브하는 것입니다. 이를 위해 PATCH 요청을 사용하여 `archived` 속성을 `True`로 설정합니다.

```python
data = {
    "archived": True
}

response = requests.patch(url, headers=headers, data=json.dumps(data))

if response.status_code == 200:
    print("데이터가 성공적으로 삭제(아카이브)되었습니다.")
else:
    print(f"데이터 삭제(아카이브)에 실패했습니다. 응답 코드: {response.status_code}")
    print(response.json())

```

## 결론

이번 글에서는 Notion API를 사용하여 다양한 타입의 데이터를 수정하는 방법을 다루었습니다. 텍스트, 숫자, 날짜, 체크박스, 선택 목록 등 각기 다른 데이터 타입을 올바르게 다루는 방법을 살펴보았습니다. Notion API는 매우 강력한 도구이며, 이를 통해 다양한 작업을 자동화하고 통합할 수 있습니다. Notion API를 사용하여 데이터를 효율적으로 관리하고, 생산성을 높이는 데 활용해 보세요. 이 글이 여러분이 Notion API를 활용하는 데 도움이 되길 바랍니다.
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/notionBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Notion API: Table CRUD: 2탄 다양한 타입의 데이터 변경하기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Notion API: Table CRUD: 2탄 다양한 타입의 데이터 변경하기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-12"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"7f40df83","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Notion API: Table CRUD: 2탄 다양한 타입의 데이터 변경하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Notion API는 데이터베이스의 항목을 생성, 읽기, 수정, 삭제할 수 있는 강력한 도구입니다. 이번 글에서는 Notion API를 사용하여 다양한 타입의 데이터를 변경하는 방법을 다루겠습니다. 지난 글에서는 기본적인 CRUD(Create, Read, Update, Delete) 작업을 설명했지만, 이번에는 각기 다른 데이터 타입을 다루는 방법에 집중할 것입니다. 텍스트, 숫자, 날짜, 선택 목록 등의 다양한 데이터 타입을 수정하는 방법을 자세히 알아보겠습니다."}],"\n",["$","h2",null,{"id":"0783122b","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"1. Notion API 설정"}],"\n",["$","h3",null,{"id":"4d9c77e5","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1.1 API 키 생성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저 Notion API를 사용하기 위해 API 키를 생성해야 합니다. Notion 웹사이트에 로그인 후 ",["$","$Ld",null,{"props":{"href":"https://www.notion.so/my-integrations","node":{"type":"element","tagName":"a","properties":{"href":"https://www.notion.so/my-integrations"},"children":[{"type":"text","value":"My Integrations","position":{"start":{"line":10,"column":61,"offset":411},"end":{"line":10,"column":76,"offset":426}}}],"position":{"start":{"line":10,"column":60,"offset":410},"end":{"line":10,"column":116,"offset":466}}},"children":"My Integrations"},"post":{"id":"f2796f0f-7812-4d56-af09","title":"Notion API: Table CRUD: 2탄 다양한 타입의 데이터 변경하기","fileName":"Notion-API-Table-CRUD-2탄-다양한-타입의-데이터-변경하기-f2796f0f","description":"Notion API는 데이터베이스의 항목을 생성, 읽기, 수정, 삭제할 수 있는 강력한 도구입니다. 이번 글에서는 Notion API를 사용하여 다양한 타입의 데이터를 변경하는 방법을 다루겠습니다. 지난 글에서는 기본적인 CRUD(Create, Read, Update, Delete) 작업을 설명했지만, 이번에는 각기 다른 데이터 타입을 다루는 방법에 집중할 것입니다. 텍스트, 숫자, 날짜, 선택 목록 등의 다양한 데이터 타입을 수정하는 방법을 자세히 알아보겠습니다.","date":"2024-06-12T06:13:40.115Z","tags":[{"name":"notion","path":"/tags/notion","id":"notion"},{"name":"업무능률","path":"/tags/업무능률","id":"업무능률"},{"name":"업무관리","path":"/tags/업무관리","id":"업무관리"}],"banner":"/images/notionBanner1.jpg","author":"마고유","project":null,"totalCnt":0,"monthlyCnt":0,"weeklyCnt":0,"slug":"Notion-API-Table-CRUD-2탄-다양한-타입의-데이터-변경하기-f2796f0f","content":"$e","category":"notion","readMin":"6.4"},"language":"kr"}]," 페이지에서 새로운 통합을 생성하고 API 키를 복사합니다."]}],"\n",["$","h3",null,{"id":"eeffcb94","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1.2 접근 권한 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"데이터베이스나 페이지에 대한 접근 권한을 설정해야 합니다. 이를 위해 Notion에서 해당 페이지를 열고, 오른쪽 상단의 \"공유\" 버튼을 클릭하여 생성한 통합을 페이지에 초대합니다."}],"\n",["$","h2",null,{"id":"8447698c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"2. 데이터 타입 이해하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Notion 데이터베이스는 다양한 데이터 타입을 지원합니다. 여기에는 텍스트, 숫자, 날짜, 체크박스, 선택 목록 등이 포함됩니다. 각 데이터 타입은 고유한 형식으로 저장되며, 이를 올바르게 다루기 위해 해당 형식을 이해하는 것이 중요합니다."}],"\n",["$","h3",null,{"id":"c44bc53a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2.1 텍스트 (Text)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"텍스트 필드는 문자열 데이터를 저장합니다. Notion에서는 두 가지 주요 텍스트 필드를 지원합니다: 단일 줄 텍스트와 다중 줄 텍스트(리치 텍스트)."}],"\n",["$","h3",null,{"id":"f9b8ea7e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2.2 숫자 (Number)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"숫자 필드는 정수나 소수 같은 숫자 데이터를 저장합니다."}],"\n",["$","h3",null,{"id":"654045c0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2.3 날짜 (Date)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"날짜 필드는 특정 날짜 또는 시간 범위를 저장합니다."}],"\n",["$","h3",null,{"id":"cf577a44","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2.4 체크박스 (Checkbox)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"체크박스 필드는 Boolean 값을 저장합니다."}],"\n",["$","h3",null,{"id":"966613fc","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2.5 선택 목록 (Select)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"선택 목록 필드는 미리 정의된 옵션 중 하나를 선택할 수 있습니다."}],"\n",["$","h2",null,{"id":"98bb7fd3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"3. 다양한 타입의 데이터 변경하기"}],"\n",["$","h3",null,{"id":"9c5915e6","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3.1 텍스트 필드 수정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["텍스트 필드를 수정하려면 ",["$","$Lf",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"title","position":{"start":{"line":44,"column":15,"offset":1161},"end":{"line":44,"column":22,"offset":1168}}}],"position":{"start":{"line":44,"column":15,"offset":1161},"end":{"line":44,"column":22,"offset":1168}}},"children":"title"}}],"이나 ",["$","$Lf",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"rich_text","position":{"start":{"line":44,"column":25,"offset":1171},"end":{"line":44,"column":36,"offset":1182}}}],"position":{"start":{"line":44,"column":25,"offset":1171},"end":{"line":44,"column":36,"offset":1182}}},"children":"rich_text"}}]," 타입을 사용해야 합니다. 다음은 제목 필드를 수정하는 예제입니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Lf",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"import requests\nimport json\n\nNOTION_API_KEY = 'your_notion_api_key'\nPAGE_ID = 'your_page_id'\n\nurl = f\"<https://api.notion.com/v1/pages/{PAGE_ID}>\"\n\nheaders = {\n    \"Authorization\": f\"Bearer {NOTION_API_KEY}\",\n    \"Content-Type\": \"application/json\",\n    \"Notion-Version\": \"2022-06-28\"\n}\n\ndata = {\n    \"properties\": {\n        \"Name\": {\n            \"title\": [\n                {\n                    \"text\": {\n                        \"content\": \"새로운 제목\"\n                    }\n                }\n            ]\n        }\n    }\n}\n\nresponse = requests.patch(url, headers=headers, data=json.dumps(data))\n\nif response.status_code == 200:\n    print(\"텍스트 필드가 성공적으로 수정되었습니다.\")\nelse:\n    print(f\"텍스트 필드 수정에 실패했습니다. 응답 코드: {response.status_code}\")\n    print(response.json())\n\n"}],"position":{"start":{"line":46,"column":1,"offset":1221},"end":{"line":83,"column":4,"offset":1993}}},"children":"import requests\nimport json\n\nNOTION_API_KEY = 'your_notion_api_key'\nPAGE_ID = 'your_page_id'\n\nurl = f\"<https://api.notion.com/v1/pages/{PAGE_ID}>\"\n\nheaders = {\n    \"Authorization\": f\"Bearer {NOTION_API_KEY}\",\n    \"Content-Type\": \"application/json\",\n    \"Notion-Version\": \"2022-06-28\"\n}\n\ndata = {\n    \"properties\": {\n        \"Name\": {\n            \"title\": [\n                {\n                    \"text\": {\n                        \"content\": \"새로운 제목\"\n                    }\n                }\n            ]\n        }\n    }\n}\n\nresponse = requests.patch(url, headers=headers, data=json.dumps(data))\n\nif response.status_code == 200:\n    print(\"텍스트 필드가 성공적으로 수정되었습니다.\")\nelse:\n    print(f\"텍스트 필드 수정에 실패했습니다. 응답 코드: {response.status_code}\")\n    print(response.json())\n\n"}}]}],"\n",["$","h3",null,{"id":"f53946c9","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3.2 숫자 필드 수정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["숫자 필드를 수정하려면 ",["$","$Lf",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"number","position":{"start":{"line":87,"column":14,"offset":2026},"end":{"line":87,"column":22,"offset":2034}}}],"position":{"start":{"line":87,"column":14,"offset":2026},"end":{"line":87,"column":22,"offset":2034}}},"children":"number"}}]," 타입을 사용해야 합니다. 다음은 숫자 필드를 수정하는 예제입니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Lf",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"data = {\n    \"properties\": {\n        \"Amount\": {\n            \"number\": 42\n        }\n    }\n}\n\nresponse = requests.patch(url, headers=headers, data=json.dumps(data))\n\nif response.status_code == 200:\n    print(\"숫자 필드가 성공적으로 수정되었습니다.\")\nelse:\n    print(f\"숫자 필드 수정에 실패했습니다. 응답 코드: {response.status_code}\")\n    print(response.json())\n\n"}],"position":{"start":{"line":89,"column":1,"offset":2073},"end":{"line":106,"column":4,"offset":2414}}},"children":"data = {\n    \"properties\": {\n        \"Amount\": {\n            \"number\": 42\n        }\n    }\n}\n\nresponse = requests.patch(url, headers=headers, data=json.dumps(data))\n\nif response.status_code == 200:\n    print(\"숫자 필드가 성공적으로 수정되었습니다.\")\nelse:\n    print(f\"숫자 필드 수정에 실패했습니다. 응답 코드: {response.status_code}\")\n    print(response.json())\n\n"}}]}],"\n",["$","h3",null,{"id":"a54eb376","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3.3 날짜 필드 수정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["날짜 필드를 수정하려면 ",["$","$Lf",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"date","position":{"start":{"line":110,"column":14,"offset":2447},"end":{"line":110,"column":20,"offset":2453}}}],"position":{"start":{"line":110,"column":14,"offset":2447},"end":{"line":110,"column":20,"offset":2453}}},"children":"date"}}]," 타입을 사용해야 합니다. 다음은 날짜 필드를 수정하는 예제입니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Lf",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"data = {\n    \"properties\": {\n        \"Due Date\": {\n            \"date\": {\n                \"start\": \"2024-06-30\"\n            }\n        }\n    }\n}\n\nresponse = requests.patch(url, headers=headers, data=json.dumps(data))\n\nif response.status_code == 200:\n    print(\"날짜 필드가 성공적으로 수정되었습니다.\")\nelse:\n    print(f\"날짜 필드 수정에 실패했습니다. 응답 코드: {response.status_code}\")\n    print(response.json())\n\n"}],"position":{"start":{"line":112,"column":1,"offset":2492},"end":{"line":131,"column":4,"offset":2884}}},"children":"data = {\n    \"properties\": {\n        \"Due Date\": {\n            \"date\": {\n                \"start\": \"2024-06-30\"\n            }\n        }\n    }\n}\n\nresponse = requests.patch(url, headers=headers, data=json.dumps(data))\n\nif response.status_code == 200:\n    print(\"날짜 필드가 성공적으로 수정되었습니다.\")\nelse:\n    print(f\"날짜 필드 수정에 실패했습니다. 응답 코드: {response.status_code}\")\n    print(response.json())\n\n"}}]}],"\n",["$","h3",null,{"id":"9f52c3a9","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3.4 체크박스 필드 수정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["체크박스 필드를 수정하려면 ",["$","$Lf",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"checkbox","position":{"start":{"line":135,"column":16,"offset":2921},"end":{"line":135,"column":26,"offset":2931}}}],"position":{"start":{"line":135,"column":16,"offset":2921},"end":{"line":135,"column":26,"offset":2931}}},"children":"checkbox"}}]," 타입을 사용해야 합니다. 다음은 체크박스 필드를 수정하는 예제입니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Lf",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"data = {\n    \"properties\": {\n        \"Completed\": {\n            \"checkbox\": True\n        }\n    }\n}\n\nresponse = requests.patch(url, headers=headers, data=json.dumps(data))\n\nif response.status_code == 200:\n    print(\"체크박스 필드가 성공적으로 수정되었습니다.\")\nelse:\n    print(f\"체크박스 필드 수정에 실패했습니다. 응답 코드: {response.status_code}\")\n    print(response.json())\n\n"}],"position":{"start":{"line":137,"column":1,"offset":2972},"end":{"line":154,"column":4,"offset":3324}}},"children":"data = {\n    \"properties\": {\n        \"Completed\": {\n            \"checkbox\": True\n        }\n    }\n}\n\nresponse = requests.patch(url, headers=headers, data=json.dumps(data))\n\nif response.status_code == 200:\n    print(\"체크박스 필드가 성공적으로 수정되었습니다.\")\nelse:\n    print(f\"체크박스 필드 수정에 실패했습니다. 응답 코드: {response.status_code}\")\n    print(response.json())\n\n"}}]}],"\n",["$","h3",null,{"id":"550fc47b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3.5 선택 목록 필드 수정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["선택 목록 필드를 수정하려면 ",["$","$Lf",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"select","position":{"start":{"line":158,"column":17,"offset":3363},"end":{"line":158,"column":25,"offset":3371}}}],"position":{"start":{"line":158,"column":17,"offset":3363},"end":{"line":158,"column":25,"offset":3371}}},"children":"select"}}]," 타입을 사용해야 합니다. 다음은 선택 목록 필드를 수정하는 예제입니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Lf",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"data = {\n    \"properties\": {\n        \"Status\": {\n            \"select\": {\n                \"name\": \"In Progress\"\n            }\n        }\n    }\n}\n\nresponse = requests.patch(url, headers=headers, data=json.dumps(data))\n\nif response.status_code == 200:\n    print(\"선택 목록 필드가 성공적으로 수정되었습니다.\")\nelse:\n    print(f\"선택 목록 필드 수정에 실패했습니다. 응답 코드: {response.status_code}\")\n    print(response.json())\n\n"}],"position":{"start":{"line":160,"column":1,"offset":3413},"end":{"line":179,"column":4,"offset":3811}}},"children":"data = {\n    \"properties\": {\n        \"Status\": {\n            \"select\": {\n                \"name\": \"In Progress\"\n            }\n        }\n    }\n}\n\nresponse = requests.patch(url, headers=headers, data=json.dumps(data))\n\nif response.status_code == 200:\n    print(\"선택 목록 필드가 성공적으로 수정되었습니다.\")\nelse:\n    print(f\"선택 목록 필드 수정에 실패했습니다. 응답 코드: {response.status_code}\")\n    print(response.json())\n\n"}}]}],"\n",["$","h2",null,{"id":"9d17aaa5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"4. 데이터 삭제 (Delete)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Notion에서 데이터를 삭제하는 것은 해당 항목을 아카이브하는 것입니다. 이를 위해 PATCH 요청을 사용하여 ",["$","$Lf",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"archived","position":{"start":{"line":183,"column":64,"offset":3899},"end":{"line":183,"column":74,"offset":3909}}}],"position":{"start":{"line":183,"column":64,"offset":3899},"end":{"line":183,"column":74,"offset":3909}}},"children":"archived"}}]," 속성을 ",["$","$Lf",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"True","position":{"start":{"line":183,"column":79,"offset":3914},"end":{"line":183,"column":85,"offset":3920}}}],"position":{"start":{"line":183,"column":79,"offset":3914},"end":{"line":183,"column":85,"offset":3920}}},"children":"True"}}],"로 설정합니다."]}],"\n",["$","pre","pre-5",{"children":["$","$Lf",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"data = {\n    \"archived\": True\n}\n\nresponse = requests.patch(url, headers=headers, data=json.dumps(data))\n\nif response.status_code == 200:\n    print(\"데이터가 성공적으로 삭제(아카이브)되었습니다.\")\nelse:\n    print(f\"데이터 삭제(아카이브)에 실패했습니다. 응답 코드: {response.status_code}\")\n    print(response.json())\n\n"}],"position":{"start":{"line":185,"column":1,"offset":3930},"end":{"line":198,"column":4,"offset":4219}}},"children":"data = {\n    \"archived\": True\n}\n\nresponse = requests.patch(url, headers=headers, data=json.dumps(data))\n\nif response.status_code == 200:\n    print(\"데이터가 성공적으로 삭제(아카이브)되었습니다.\")\nelse:\n    print(f\"데이터 삭제(아카이브)에 실패했습니다. 응답 코드: {response.status_code}\")\n    print(response.json())\n\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이번 글에서는 Notion API를 사용하여 다양한 타입의 데이터를 수정하는 방법을 다루었습니다. 텍스트, 숫자, 날짜, 체크박스, 선택 목록 등 각기 다른 데이터 타입을 올바르게 다루는 방법을 살펴보았습니다. Notion API는 매우 강력한 도구이며, 이를 통해 다양한 작업을 자동화하고 통합할 수 있습니다. Notion API를 사용하여 데이터를 효율적으로 관리하고, 생산성을 높이는 데 활용해 보세요. 이 글이 여러분이 Notion API를 활용하는 데 도움이 되길 바랍니다."}]]}]}],["$","$L10",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L11",null,{"articleTitle":"Notion API: Table CRUD: 2탄 다양한 타입의 데이터 변경하기","toc":[{"tagName":"h1","title":"Notion API: Table CRUD: 2탄 다양한 타입의 데이터 변경하기","id":"7f40df83"},{"tagName":"h2","title":"1. Notion API 설정","id":"0783122b"},{"tagName":"h3","title":"1.1 API 키 생성","id":"4d9c77e5"},{"tagName":"h3","title":"1.2 접근 권한 설정","id":"eeffcb94"},{"tagName":"h2","title":"2. 데이터 타입 이해하기","id":"8447698c"},{"tagName":"h3","title":"2.1 텍스트 (Text)","id":"c44bc53a"},{"tagName":"h3","title":"2.2 숫자 (Number)","id":"f9b8ea7e"},{"tagName":"h3","title":"2.3 날짜 (Date)","id":"654045c0"},{"tagName":"h3","title":"2.4 체크박스 (Checkbox)","id":"cf577a44"},{"tagName":"h3","title":"2.5 선택 목록 (Select)","id":"966613fc"},{"tagName":"h2","title":"3. 다양한 타입의 데이터 변경하기","id":"98bb7fd3"},{"tagName":"h3","title":"3.1 텍스트 필드 수정","id":"9c5915e6"},{"tagName":"h3","title":"3.2 숫자 필드 수정","id":"f53946c9"},{"tagName":"h3","title":"3.3 날짜 필드 수정","id":"a54eb376"},{"tagName":"h3","title":"3.4 체크박스 필드 수정","id":"9f52c3a9"},{"tagName":"h3","title":"3.5 선택 목록 필드 수정","id":"550fc47b"},{"tagName":"h2","title":"4. 데이터 삭제 (Delete)","id":"9d17aaa5"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
