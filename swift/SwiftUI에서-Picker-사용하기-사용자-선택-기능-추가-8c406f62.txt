1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI%EC%97%90%EC%84%9C-Picker-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%84%A0%ED%83%9D-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80-8c406f62","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI에서-Picker-사용하기-사용자-선택-기능-추가-8c406f62\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI%EC%97%90%EC%84%9C-Picker-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%84%A0%ED%83%9D-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80-8c406f62","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI에서-Picker-사용하기-사용자-선택-기능-추가-8c406f62\"}"},"styles":[]}],"segment":["slug","SwiftUI%EC%97%90%EC%84%9C-Picker-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%84%A0%ED%83%9D-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80-8c406f62","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI에서 Picker 사용하기: 사용자 선택 기능 추가 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"SwiftUI에서 Picker를 사용하여 사용자 선택 기능을 추가하는 방법에 대해 설명합니다. Picker의 기본 사용법부터 다양한 형식의 구성 요소, 활용 방법, 그리고 예제 코드를 통해 실습을 진행합니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,Picker,사용자 선택,iOS 개발"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI%EC%97%90%EC%84%9C-Picker-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%84%A0%ED%83%9D-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80-8c406f62"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI에서 Picker 사용하기: 사용자 선택 기능 추가 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI에서 Picker 사용하기: 사용자 선택 기능 추가 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"SwiftUI에서 Picker를 사용하여 사용자 선택 기능을 추가하는 방법에 대해 설명합니다. Picker의 기본 사용법부터 다양한 형식의 구성 요소, 활용 방법, 그리고 예제 코드를 통해 실습을 진행합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI%EC%97%90%EC%84%9C-Picker-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%84%A0%ED%83%9D-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80-8c406f62"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI에서 Picker 사용하기: 사용자 선택 기능 추가 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"SwiftUI에서 Picker를 사용하여 사용자 선택 기능을 추가하는 방법에 대해 설명합니다. Picker의 기본 사용법부터 다양한 형식의 구성 요소, 활용 방법, 그리고 예제 코드를 통해 실습을 진행합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI에서 Picker 사용하기: 사용자 선택 기능 추가"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI에서 Picker 사용하기: 사용자 선택 기능 추가"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-11"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"dc9e4c47","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI에서 Picker 사용하기: 사용자 선택 기능 추가하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI는 애플의 혁신적인 사용자 인터페이스 프레임워크로, 앱 개발을 더욱 간편하고 효과적으로 만들어줍니다. 이 문서에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SwiftUI","position":{"start":{"line":4,"column":73,"offset":114},"end":{"line":4,"column":82,"offset":123}}}],"position":{"start":{"line":4,"column":73,"offset":114},"end":{"line":4,"column":82,"offset":123}}},"children":"SwiftUI"}}],"에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":4,"column":85,"offset":126},"end":{"line":4,"column":93,"offset":134}}}],"position":{"start":{"line":4,"column":85,"offset":126},"end":{"line":4,"column":93,"offset":134}}},"children":"Picker"}}],"를 사용하여 사용자 선택 기능을 구현하는 방법에 대해 다룹니다. 기본적인 사용법부터 다양한 형태의 픽커 구현, 그리고 실습 예제까지 폭넓게 살펴보겠습니다."]}],"\n",["$","h2",null,{"id":"448e1859","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"SwiftUI의 Picker 기본 사용법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":8,"column":1,"offset":249},"end":{"line":8,"column":9,"offset":257}}}],"position":{"start":{"line":8,"column":1,"offset":249},"end":{"line":8,"column":9,"offset":257}}},"children":"Picker"}}],"는 사용자가 여러 옵션 중 하나를 선택할 수 있도록 도와주는 UI 요소입니다. 먼저, 기본적인 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":8,"column":62,"offset":310},"end":{"line":8,"column":70,"offset":318}}}],"position":{"start":{"line":8,"column":62,"offset":310},"end":{"line":8,"column":70,"offset":318}}},"children":"Picker"}}],"의 사용법을 살펴보겠습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":8,"column":86,"offset":334},"end":{"line":8,"column":94,"offset":342}}}],"position":{"start":{"line":8,"column":86,"offset":334},"end":{"line":8,"column":94,"offset":342}}},"children":"Picker"}}],"는 선택할 항목 배열과 선택된 값을 저장할 상태 변수를 필요로 합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct BasicPickerView: View {\n    @State private var selectedOption = \"Option 1\"\n    let options = [\"Option 1\", \"Option 2\", \"Option 3\"]\n\n    var body: some View {\n        VStack {\n            Text(\"Selected: \\(selectedOption)\")\n                .padding()\n\n            Picker(selection: $selectedOption, label: Text(\"Options\")) {\n                ForEach(options, id: \\self) { option in\n                    Text(option)\n                }\n            }\n            .pickerStyle(MenuPickerStyle()) // 또는 다른 스타일 지정 가능\n        }\n    }\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":383},"end":{"line":29,"column":4,"offset":927}}},"children":"struct BasicPickerView: View {\n    @State private var selectedOption = \"Option 1\"\n    let options = [\"Option 1\", \"Option 2\", \"Option 3\"]\n\n    var body: some View {\n        VStack {\n            Text(\"Selected: \\(selectedOption)\")\n                .padding()\n\n            Picker(selection: $selectedOption, label: Text(\"Options\")) {\n                ForEach(options, id: \\self) { option in\n                    Text(option)\n                }\n            }\n            .pickerStyle(MenuPickerStyle()) // 또는 다른 스타일 지정 가능\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@State","position":{"start":{"line":31,"column":9,"offset":937},"end":{"line":31,"column":17,"offset":945}}}],"position":{"start":{"line":31,"column":9,"offset":937},"end":{"line":31,"column":17,"offset":945}}},"children":"@State"}}]," 변수를 사용해 선택된 값을 저장하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ForEach","position":{"start":{"line":31,"column":39,"offset":967},"end":{"line":31,"column":48,"offset":976}}}],"position":{"start":{"line":31,"column":39,"offset":967},"end":{"line":31,"column":48,"offset":976}}},"children":"ForEach"}}],"를 사용해 선택 가능한 옵션들을 제공하고 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pickerStyle","position":{"start":{"line":31,"column":77,"offset":1005},"end":{"line":31,"column":90,"offset":1018}}}],"position":{"start":{"line":31,"column":77,"offset":1005},"end":{"line":31,"column":90,"offset":1018}}},"children":"pickerStyle"}}],"을 사용해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":31,"column":96,"offset":1024},"end":{"line":31,"column":104,"offset":1032}}}],"position":{"start":{"line":31,"column":96,"offset":1024},"end":{"line":31,"column":104,"offset":1032}}},"children":"Picker"}}],"의 스타일을 지정할 수 있습니다."]}],"\n",["$","h2",null,{"id":"9135a827","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"다양한 Picker 스타일"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI는 여러 가지 스타일의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":35,"column":21,"offset":1091},"end":{"line":35,"column":29,"offset":1099}}}],"position":{"start":{"line":35,"column":21,"offset":1091},"end":{"line":35,"column":29,"offset":1099}}},"children":"Picker"}}],"를 제공합니다. 각 스타일은 사용자가 더 직관적으로 선택할 수 있도록 돕습니다. 여기서는 몇 가지 자주 사용하는 스타일을 소개하겠습니다."]}],"\n",["$","h3",null,{"id":"782bebab","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"WheelPickerStyle"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 스타일은 주로 날짜나 시간이 포함된 선택 항목을 제공할 때 사용됩니다. 아이폰에서 사용자가 손쉽게 스크롤할 수 있도록 직관적인 인터페이스를 제공합니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct WheelPickerView: View {\n    @State private var selectedOption = \"Option 1\"\n    let options = [\"Option 1\", \"Option 2\", \"Option 3\"]\n\n    var body: some View {\n        VStack {\n            Text(\"Selected: \\(selectedOption)\")\n                .padding()\n\n            Picker(selection: $selectedOption, label: Text(\"Options\")) {\n                ForEach(options, id: \\self) { option in\n                    Text(option)\n                }\n            }\n            .pickerStyle(WheelPickerStyle())\n        }\n    }\n}\n"}],"position":{"start":{"line":41,"column":1,"offset":1287},"end":{"line":60,"column":4,"offset":1813}}},"children":"struct WheelPickerView: View {\n    @State private var selectedOption = \"Option 1\"\n    let options = [\"Option 1\", \"Option 2\", \"Option 3\"]\n\n    var body: some View {\n        VStack {\n            Text(\"Selected: \\(selectedOption)\")\n                .padding()\n\n            Picker(selection: $selectedOption, label: Text(\"Options\")) {\n                ForEach(options, id: \\self) { option in\n                    Text(option)\n                }\n            }\n            .pickerStyle(WheelPickerStyle())\n        }\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"75e70bfa","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"SegmentedPickerStyle"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 스타일은 여러 선택지를 나란히 배치하여, 사용자가 탭으로 선택할 수 있도록 합니다. 주로 다섯 개 이하의 선택지가 있는 경우 유용하게 사용할 수 있습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct SegmentedPickerView: View {\n    @State private var selectedOption = \"Option 1\"\n    let options = [\"Option 1\", \"Option 2\", \"Option 3\"]\n\n    var body: some View {\n        VStack {\n            Text(\"Selected: \\(selectedOption)\")\n                .padding()\n\n            Picker(selection: $selectedOption, label: Text(\"Options\")) {\n                ForEach(options, id: \\self) { option in\n                    Text(option)\n                }\n            }\n            .pickerStyle(SegmentedPickerStyle())\n        }\n    }\n}\n"}],"position":{"start":{"line":66,"column":1,"offset":1931},"end":{"line":85,"column":4,"offset":2465}}},"children":"struct SegmentedPickerView: View {\n    @State private var selectedOption = \"Option 1\"\n    let options = [\"Option 1\", \"Option 2\", \"Option 3\"]\n\n    var body: some View {\n        VStack {\n            Text(\"Selected: \\(selectedOption)\")\n                .padding()\n\n            Picker(selection: $selectedOption, label: Text(\"Options\")) {\n                ForEach(options, id: \\self) { option in\n                    Text(option)\n                }\n            }\n            .pickerStyle(SegmentedPickerStyle())\n        }\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"e9938a45","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"MenuPickerStyle"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"MenuPickerStyle","position":{"start":{"line":89,"column":1,"offset":2488},"end":{"line":89,"column":18,"offset":2505}}}],"position":{"start":{"line":89,"column":1,"offset":2488},"end":{"line":89,"column":18,"offset":2505}}},"children":"MenuPickerStyle"}}],"는 사용자 선택 옵션을 드롭다운 메뉴로 표시하여, 화면을 보다 깔끔하게 관리할 수 있습니다. 주로 옵션이 많지 않은 경우 유용하게 사용할 수 있습니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct MenuPickerView: View {\n    @State private var selectedOption = \"Option 1\"\n    let options = [\"Option 1\", \"Option 2\", \"Option 3\"]\n\n    var body: some View {\n        VStack {\n            Text(\"Selected: \\(selectedOption)\")\n                .padding()\n\n            Picker(selection: $selectedOption, label: Text(\"Options\")) {\n                ForEach(options, id: \\self) { option in\n                    Text(option)\n                }\n            }\n            .pickerStyle(MenuPickerStyle())\n        }\n    }\n}\n"}],"position":{"start":{"line":91,"column":1,"offset":2591},"end":{"line":110,"column":4,"offset":3115}}},"children":"struct MenuPickerView: View {\n    @State private var selectedOption = \"Option 1\"\n    let options = [\"Option 1\", \"Option 2\", \"Option 3\"]\n\n    var body: some View {\n        VStack {\n            Text(\"Selected: \\(selectedOption)\")\n                .padding()\n\n            Picker(selection: $selectedOption, label: Text(\"Options\")) {\n                ForEach(options, id: \\self) { option in\n                    Text(option)\n                }\n            }\n            .pickerStyle(MenuPickerStyle())\n        }\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"595ca5bc","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Picker의 고급 사용법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["기본적인 사용법을 익혔다면, 이제 조금 더 복잡한 예제를 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":114,"column":36,"offset":3171},"end":{"line":114,"column":44,"offset":3179}}}],"position":{"start":{"line":114,"column":36,"offset":3171},"end":{"line":114,"column":44,"offset":3179}}},"children":"Picker"}}],"를 활용하는 방법을 알아보겠습니다. 예를 들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":114,"column":71,"offset":3206},"end":{"line":114,"column":79,"offset":3214}}}],"position":{"start":{"line":114,"column":71,"offset":3206},"end":{"line":114,"column":79,"offset":3214}}},"children":"Picker"}}],"를 사용하여 다양한 데이터 타입을 선택할 수 있습니다."]}],"\n",["$","h3",null,{"id":"154d8e90","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Enum을 사용한 Picker"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["열거형(Enum)을 사용하면 코드의 가독성을 높이고 버그를 줄일 수 있습니다. 열거형을 사용하는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":118,"column":55,"offset":3322},"end":{"line":118,"column":63,"offset":3330}}}],"position":{"start":{"line":118,"column":55,"offset":3322},"end":{"line":118,"column":63,"offset":3330}}},"children":"Picker"}}],"의 예제를 살펴보겠습니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"enum ColorOption: String, CaseIterable, Identifiable {\n    case red = \"Red\"\n    case green = \"Green\"\n    case blue = \"Blue\"\n\n    var id: String { self.rawValue }\n}\n\nstruct EnumPickerView: View {\n    @State private var selectedColor: ColorOption = .red\n\n    var body: some View {\n        VStack {\n            Text(\"Selected color: \\(selectedColor.rawValue)\")\n                .padding()\n\n            Picker(\"Colors\", selection: $selectedColor) {\n                ForEach(ColorOption.allCases) { color in\n                    Text(color.rawValue).tag(color)\n                }\n            }\n            .pickerStyle(SegmentedPickerStyle())\n        }\n    }\n}\n"}],"position":{"start":{"line":120,"column":1,"offset":3346},"end":{"line":146,"column":4,"offset":4010}}},"children":"enum ColorOption: String, CaseIterable, Identifiable {\n    case red = \"Red\"\n    case green = \"Green\"\n    case blue = \"Blue\"\n\n    var id: String { self.rawValue }\n}\n\nstruct EnumPickerView: View {\n    @State private var selectedColor: ColorOption = .red\n\n    var body: some View {\n        VStack {\n            Text(\"Selected color: \\(selectedColor.rawValue)\")\n                .padding()\n\n            Picker(\"Colors\", selection: $selectedColor) {\n                ForEach(ColorOption.allCases) { color in\n                    Text(color.rawValue).tag(color)\n                }\n            }\n            .pickerStyle(SegmentedPickerStyle())\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ColorOption","position":{"start":{"line":148,"column":9,"offset":4020},"end":{"line":148,"column":22,"offset":4033}}}],"position":{"start":{"line":148,"column":9,"offset":4020},"end":{"line":148,"column":22,"offset":4033}}},"children":"ColorOption"}}],"이라는 열거형을 만들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":148,"column":36,"offset":4047},"end":{"line":148,"column":44,"offset":4055}}}],"position":{"start":{"line":148,"column":36,"offset":4047},"end":{"line":148,"column":44,"offset":4055}}},"children":"Picker"}}],"에서 선택 가능한 색상 옵션을 정의하였습니다. 열거형을 사용하면 코드의 가독성을 높이고 유지보수를 용이하게 할 수 있습니다."]}],"\n",["$","h3",null,{"id":"96425834","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"복합 데이터 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":152,"column":1,"offset":4141},"end":{"line":152,"column":9,"offset":4149}}}],"position":{"start":{"line":152,"column":1,"offset":4141},"end":{"line":152,"column":9,"offset":4149}}},"children":"Picker"}}],"를 사용하여 복합 데이터를 다룰 수도 있습니다. 예를 들어, 사용자 이름과 ID가 함께 저장된 선택지를 구성할 수 있습니다."]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct User: Identifiable {\n    let id: Int\n    let name: String\n}\n\nstruct ComplexPickerView: View {\n    @State private var selectedUser: User?\n    let users = [\n        User(id: 1, name: \"John Doe\"),\n        User(id: 2, name: \"Jane Smith\"),\n        User(id: 3, name: \"Sam Brown\")\n    ]\n\n    var body: some View {\n        VStack {\n            if let user = selectedUser {\n                Text(\"Selected user: \\(user.name)\")\n                    .padding()\n            } else {\n                Text(\"No user selected\")\n                    .padding()\n            }\n\n            Picker(\"Select user\", selection: $selectedUser) {\n                ForEach(users) { user in\n                    Text(user.name).tag(user as User?)\n                }\n            }\n            .pickerStyle(WheelPickerStyle())\n        }\n    }\n}\n"}],"position":{"start":{"line":154,"column":1,"offset":4220},"end":{"line":187,"column":4,"offset":5048}}},"children":"struct User: Identifiable {\n    let id: Int\n    let name: String\n}\n\nstruct ComplexPickerView: View {\n    @State private var selectedUser: User?\n    let users = [\n        User(id: 1, name: \"John Doe\"),\n        User(id: 2, name: \"Jane Smith\"),\n        User(id: 3, name: \"Sam Brown\")\n    ]\n\n    var body: some View {\n        VStack {\n            if let user = selectedUser {\n                Text(\"Selected user: \\(user.name)\")\n                    .padding()\n            } else {\n                Text(\"No user selected\")\n                    .padding()\n            }\n\n            Picker(\"Select user\", selection: $selectedUser) {\n                ForEach(users) { user in\n                    Text(user.name).tag(user as User?)\n                }\n            }\n            .pickerStyle(WheelPickerStyle())\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"User","position":{"start":{"line":189,"column":9,"offset":5058},"end":{"line":189,"column":15,"offset":5064}}}],"position":{"start":{"line":189,"column":9,"offset":5058},"end":{"line":189,"column":15,"offset":5064}}},"children":"User"}}],"라는 구조체를 사용해, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":189,"column":28,"offset":5077},"end":{"line":189,"column":36,"offset":5085}}}],"position":{"start":{"line":189,"column":28,"offset":5077},"end":{"line":189,"column":36,"offset":5085}}},"children":"Picker"}}],"에서 아이템으로 사용할 수 있도록 하였습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"User","position":{"start":{"line":189,"column":62,"offset":5111},"end":{"line":189,"column":68,"offset":5117}}}],"position":{"start":{"line":189,"column":62,"offset":5111},"end":{"line":189,"column":68,"offset":5117}}},"children":"User"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id","position":{"start":{"line":189,"column":70,"offset":5119},"end":{"line":189,"column":74,"offset":5123}}}],"position":{"start":{"line":189,"column":70,"offset":5119},"end":{"line":189,"column":74,"offset":5123}}},"children":"id"}}],"는 고유 식별자 역할을 하며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":189,"column":91,"offset":5140},"end":{"line":189,"column":99,"offset":5148}}}],"position":{"start":{"line":189,"column":91,"offset":5140},"end":{"line":189,"column":99,"offset":5148}}},"children":"Picker"}}],"에서 선택된 사용자 정보를 쉽게 참조할 수 있습니다."]}],"\n",["$","h2",null,{"id":"ed8464a3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"마무리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":193,"column":10,"offset":5196},"end":{"line":193,"column":18,"offset":5204}}}],"position":{"start":{"line":193,"column":10,"offset":5196},"end":{"line":193,"column":18,"offset":5204}}},"children":"Picker"}}],"는 사용자 인터페이스에 강력한 선택 기능을 더할 수 있는 유용한 도구입니다. 기본 사용법부터 시작하여 다양한 스타일과 고급 사용법까지 이해하면, 더욱 다양한 시나리오에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":193,"column":113,"offset":5299},"end":{"line":193,"column":121,"offset":5307}}}],"position":{"start":{"line":193,"column":113,"offset":5299},"end":{"line":193,"column":121,"offset":5307}}},"children":"Picker"}}],"를 활용할 수 있습니다. 이번 문서를 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Picker","position":{"start":{"line":193,"column":145,"offset":5331},"end":{"line":193,"column":153,"offset":5339}}}],"position":{"start":{"line":193,"column":145,"offset":5331},"end":{"line":193,"column":153,"offset":5339}}},"children":"Picker"}}],"의 다양한 활용법을 익히셨기를 바랍니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI에서 Picker 사용하기: 사용자 선택 기능 추가","toc":[{"tagName":"h1","title":"SwiftUI에서 Picker 사용하기: 사용자 선택 기능 추가하기","id":"dc9e4c47"},{"tagName":"h2","title":"SwiftUI의 Picker 기본 사용법","id":"448e1859"},{"tagName":"h2","title":"다양한 Picker 스타일","id":"9135a827"},{"tagName":"h3","title":"WheelPickerStyle","id":"782bebab"},{"tagName":"h3","title":"SegmentedPickerStyle","id":"75e70bfa"},{"tagName":"h3","title":"MenuPickerStyle","id":"e9938a45"},{"tagName":"h2","title":"Picker의 고급 사용법","id":"595ca5bc"},{"tagName":"h3","title":"Enum을 사용한 Picker","id":"154d8e90"},{"tagName":"h3","title":"복합 데이터 사용","id":"96425834"},{"tagName":"h2","title":"마무리","id":"ed8464a3"}],"language":"kr"}]}]]}]]
8:null
