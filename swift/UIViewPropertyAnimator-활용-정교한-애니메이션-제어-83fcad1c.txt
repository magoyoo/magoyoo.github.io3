1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","UIViewPropertyAnimator-%ED%99%9C%EC%9A%A9-%EC%A0%95%EA%B5%90%ED%95%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%A0%9C%EC%96%B4-83fcad1c","d"],{"children":["__PAGE__?{\"slug\":\"UIViewPropertyAnimator-활용-정교한-애니메이션-제어-83fcad1c\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","UIViewPropertyAnimator-%ED%99%9C%EC%9A%A9-%EC%A0%95%EA%B5%90%ED%95%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%A0%9C%EC%96%B4-83fcad1c","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"UIViewPropertyAnimator-활용-정교한-애니메이션-제어-83fcad1c\"}"},"styles":[]}],"segment":["slug","UIViewPropertyAnimator-%ED%99%9C%EC%9A%A9-%EC%A0%95%EA%B5%90%ED%95%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%A0%9C%EC%96%B4-83fcad1c","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"UIViewPropertyAnimator 활용: 정교한 애니메이션 제어 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"UIViewPropertyAnimator는 iOS 개발에서 애니메이션을 정교하게 제어할 수 있는 강력한 도구입니다. 이 글에서는 UIViewPropertyAnimator의 기본 개념, 주요 기능, 그리고 실제 애니메이션 구현 방법을 예제를 통해 자세히 설명합니다."}],["$","meta","3",{"name":"keywords","content":"iOS,Swift,애니메이션,UIViewPropertyAnimator"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/UIViewPropertyAnimator-%ED%99%9C%EC%9A%A9-%EC%A0%95%EA%B5%90%ED%95%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%A0%9C%EC%96%B4-83fcad1c"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"UIViewPropertyAnimator 활용: 정교한 애니메이션 제어 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"UIViewPropertyAnimator 활용: 정교한 애니메이션 제어 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"UIViewPropertyAnimator는 iOS 개발에서 애니메이션을 정교하게 제어할 수 있는 강력한 도구입니다. 이 글에서는 UIViewPropertyAnimator의 기본 개념, 주요 기능, 그리고 실제 애니메이션 구현 방법을 예제를 통해 자세히 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/UIViewPropertyAnimator-%ED%99%9C%EC%9A%A9-%EC%A0%95%EA%B5%90%ED%95%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%A0%9C%EC%96%B4-83fcad1c"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"UIViewPropertyAnimator 활용: 정교한 애니메이션 제어 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"UIViewPropertyAnimator는 iOS 개발에서 애니메이션을 정교하게 제어할 수 있는 강력한 도구입니다. 이 글에서는 UIViewPropertyAnimator의 기본 개념, 주요 기능, 그리고 실제 애니메이션 구현 방법을 예제를 통해 자세히 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"UIViewPropertyAnimator 활용: 정교한 애니메이션 제어"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"UIViewPropertyAnimator 활용: 정교한 애니메이션 제어"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-08-03"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"61cf56a4","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"UIViewPropertyAnimator 활용: 정교한 애니메이션 제어"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["iOS 애플리케이션의 사용자 인터페이스를 더욱 생동감 있게 만드는 요소 중 하나는 바로 애니메이션입니다. 애니메이션은 앱의 유저 경험을 향상시키고, 사용자와의 상호작용을 더 직관적으로 느낄 수 있게 해줍니다. 이번 글에서는 iOS에서 애니메이션을 제어하는 강력한 도구인 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewPropertyAnimator","position":{"start":{"line":4,"column":152,"offset":195},"end":{"line":4,"column":176,"offset":219}}}],"position":{"start":{"line":4,"column":152,"offset":195},"end":{"line":4,"column":176,"offset":219}}},"children":"UIViewPropertyAnimator"}}],"에 대해 들어보고, 이를 활용해 정교한 애니메이션을 구현하는 방법을 알아보겠습니다."]}],"\n",["$","h2",null,{"id":"a1e65202","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UIViewPropertyAnimator 소개"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewPropertyAnimator","position":{"start":{"line":8,"column":1,"offset":297},"end":{"line":8,"column":25,"offset":321}}}],"position":{"start":{"line":8,"column":1,"offset":297},"end":{"line":8,"column":25,"offset":321}}},"children":"UIViewPropertyAnimator"}}],"는 iOS 10에서 도입된 클래스입니다. 이 클래스는 기존에 사용되던 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIView.animate","position":{"start":{"line":8,"column":64,"offset":360},"end":{"line":8,"column":80,"offset":376}}}],"position":{"start":{"line":8,"column":64,"offset":360},"end":{"line":8,"column":80,"offset":376}}},"children":"UIView.animate"}}]," 메서드보다 더 많은 제어 권한을 제공하며, 애니메이션을 중간에 취소하거나 일시정지, 재개할 수 있는 기능을 제공합니다. 다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewPropertyAnimator","position":{"start":{"line":8,"column":152,"offset":448},"end":{"line":8,"column":176,"offset":472}}}],"position":{"start":{"line":8,"column":152,"offset":448},"end":{"line":8,"column":176,"offset":472}}},"children":"UIViewPropertyAnimator"}}],"의 주요 특징입니다:"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"정교한 제어"}],": 애니메이션의 속도, 지연 시간, 반복 등을 세밀하게 조정할 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"상호작용 애니메이션"}],": 사용자 제스처와 결합하여 애니메이션의 진행 상태를 제어할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"애니메이션의 상태 확인 및 변경"}],": 진행 중인 상태, 비동기 완료 핸들러 등을 통해 애니메이션의 상태를 실시간으로 확인하고 변경할 수 있습니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"cf2b0123","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UIViewPropertyAnimator의 기본 사용법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewPropertyAnimator","position":{"start":{"line":16,"column":1,"offset":720},"end":{"line":16,"column":25,"offset":744}}}],"position":{"start":{"line":16,"column":1,"offset":720},"end":{"line":16,"column":25,"offset":744}}},"children":"UIViewPropertyAnimator"}}],"를 사용하여 애니메이션을 구현하는 과정은 다음과 같이 세 단계로 나뉩니다:"]}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"초기화"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewPropertyAnimator","position":{"start":{"line":18,"column":13,"offset":799},"end":{"line":18,"column":37,"offset":823}}}],"position":{"start":{"line":18,"column":13,"offset":799},"end":{"line":18,"column":37,"offset":823}}},"children":"UIViewPropertyAnimator"}}]," 인스턴스를 초기화합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"애니메이션 정의"}],": 애니메이션 블록을 정의합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"애니메이션 시작"}],": 애니메이션을 시작합니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 간단한 예제를 통해 이를 살펴보겠습니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass AnimatorExampleViewController: UIViewController {\n\n    let animatedView = UIView()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        // 애니메이션 대상 뷰 설정\n        animatedView.frame = CGRect(x: 50, y: 50, width: 100, height: 100)\n        animatedView.backgroundColor = .red\n        view.addSubview(animatedView)\n\n        // 애니메이터 초기화\n        let animator = UIViewPropertyAnimator(duration: 2.0, curve: .easeInOut) {\n            // 애니메이션 정의\n            self.animatedView.frame = CGRect(x: 200, y: 200, width: 100, height: 100)\n        }\n\n        // 애니메이션 시작\n        animator.startAnimation()\n    }\n}\n"}],"position":{"start":{"line":24,"column":1,"offset":932},"end":{"line":49,"column":4,"offset":1580}}},"children":"import UIKit\n\nclass AnimatorExampleViewController: UIViewController {\n\n    let animatedView = UIView()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        // 애니메이션 대상 뷰 설정\n        animatedView.frame = CGRect(x: 50, y: 50, width: 100, height: 100)\n        animatedView.backgroundColor = .red\n        view.addSubview(animatedView)\n\n        // 애니메이터 초기화\n        let animator = UIViewPropertyAnimator(duration: 2.0, curve: .easeInOut) {\n            // 애니메이션 정의\n            self.animatedView.frame = CGRect(x: 200, y: 200, width: 100, height: 100)\n        }\n\n        // 애니메이션 시작\n        animator.startAnimation()\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"50412457","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"애니메이션의 상태 관리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewPropertyAnimator","position":{"start":{"line":53,"column":1,"offset":1599},"end":{"line":53,"column":25,"offset":1623}}}],"position":{"start":{"line":53,"column":1,"offset":1599},"end":{"line":53,"column":25,"offset":1623}}},"children":"UIViewPropertyAnimator"}}],"는 애니메이션의 다양한 상태를 제어할 수 있는 기능을 제공합니다. 대표적으로 애니메이션의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"중단","position":{"start":{"line":53,"column":75,"offset":1673},"end":{"line":53,"column":79,"offset":1677}}}],"position":{"start":{"line":53,"column":75,"offset":1673},"end":{"line":53,"column":79,"offset":1677}}},"children":"중단"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"재개","position":{"start":{"line":53,"column":81,"offset":1679},"end":{"line":53,"column":85,"offset":1683}}}],"position":{"start":{"line":53,"column":81,"offset":1679},"end":{"line":53,"column":85,"offset":1683}}},"children":"재개"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"취소","position":{"start":{"line":53,"column":87,"offset":1685},"end":{"line":53,"column":91,"offset":1689}}}],"position":{"start":{"line":53,"column":87,"offset":1685},"end":{"line":53,"column":91,"offset":1689}}},"children":"취소"}}],"가 있습니다. 애니메이션을 일시 중단하거나 재개하는 방법은 다음과 같습니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"// 애니메이션 중단\nanimator.pauseAnimation()\n\n// 애니메이션 재개\nanimator.startAnimation()\n"}],"position":{"start":{"line":55,"column":1,"offset":1733},"end":{"line":61,"column":4,"offset":1822}}},"children":"// 애니메이션 중단\nanimator.pauseAnimation()\n\n// 애니메이션 재개\nanimator.startAnimation()\n"}}]}],"\n",["$","h2",null,{"id":"c0d1b9cc","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"상호작용 애니메이션 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"상호작용 애니메이션은 사용자 제스처와 결합하여 애니메이션의 진행 상태를 동적으로 변경할 수 있는 기능입니다. 예를 들어, 팬 제스처를 사용해 뷰를 드래그할 때 애니메이션을 적용해 보겠습니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"먼저, 팬 제스처 인식기를 추가합니다:"}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"override func viewDidLoad() {\n    super.viewDidLoad()\n\n    let panGestureRecognizer = UIPanGestureRecognizer(target: self, action: #selector(handlePan))\n    view.addGestureRecognizer(panGestureRecognizer)\n}\n"}],"position":{"start":{"line":69,"column":1,"offset":1973},"end":{"line":76,"column":4,"offset":2192}}},"children":"override func viewDidLoad() {\n    super.viewDidLoad()\n\n    let panGestureRecognizer = UIPanGestureRecognizer(target: self, action: #selector(handlePan))\n    view.addGestureRecognizer(panGestureRecognizer)\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"팬 제스처의 핸들러 메서드를 정의합니다:"}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"@objc func handlePan(gesture: UIPanGestureRecognizer) {\n    switch gesture.state {\n    case .began:\n        // 애니메이터 초기화\n        animator = UIViewPropertyAnimator(duration: 2.0, curve: .easeInOut) {\n            self.animatedView.center = gesture.location(in: self.view)\n        }\n        animator.startAnimation()\n        animator.pauseAnimation()\n    case .changed:\n        let translation = gesture.translation(in: view)\n        animator.fractionComplete = translation.x / view.bounds.width\n    case .ended:\n        animator.continueAnimation(withTimingParameters: nil, durationFactor: 0)\n    default:\n        break\n    }\n}\n"}],"position":{"start":{"line":80,"column":1,"offset":2218},"end":{"line":99,"column":4,"offset":2856}}},"children":"@objc func handlePan(gesture: UIPanGestureRecognizer) {\n    switch gesture.state {\n    case .began:\n        // 애니메이터 초기화\n        animator = UIViewPropertyAnimator(duration: 2.0, curve: .easeInOut) {\n            self.animatedView.center = gesture.location(in: self.view)\n        }\n        animator.startAnimation()\n        animator.pauseAnimation()\n    case .changed:\n        let translation = gesture.translation(in: view)\n        animator.fractionComplete = translation.x / view.bounds.width\n    case .ended:\n        animator.continueAnimation(withTimingParameters: nil, durationFactor: 0)\n    default:\n        break\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 팬 제스처에 따라 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"animatedView","position":{"start":{"line":101,"column":14,"offset":2871},"end":{"line":101,"column":28,"offset":2885}}}],"position":{"start":{"line":101,"column":14,"offset":2871},"end":{"line":101,"column":28,"offset":2885}}},"children":"animatedView"}}],"가 드래그 되면서 애니메이션이 적용됩니다. 이처럼 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewPropertyAnimator","position":{"start":{"line":101,"column":56,"offset":2913},"end":{"line":101,"column":80,"offset":2937}}}],"position":{"start":{"line":101,"column":56,"offset":2913},"end":{"line":101,"column":80,"offset":2937}}},"children":"UIViewPropertyAnimator"}}],"를 사용하면 사용자 인터페이스에서 훨씬 더 자연스럽고 반응성 있는 애니메이션을 구현할 수 있습니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewPropertyAnimator","position":{"start":{"line":105,"column":1,"offset":3001},"end":{"line":105,"column":25,"offset":3025}}}],"position":{"start":{"line":105,"column":1,"offset":3001},"end":{"line":105,"column":25,"offset":3025}}},"children":"UIViewPropertyAnimator"}}],"는 iOS 애플리케이션에서 애니메이션을 더욱 정교하게 제어할 수 있는 강력한 도구입니다. 이를 활용하면 애니메이션을 중간에 취소하거나 재개할 수 있으며, 사용자와의 상호작용을 통해 동적인 애니메이션을 구현할 수 있습니다. 이번 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewPropertyAnimator","position":{"start":{"line":105,"column":157,"offset":3157},"end":{"line":105,"column":181,"offset":3181}}}],"position":{"start":{"line":105,"column":157,"offset":3157},"end":{"line":105,"column":181,"offset":3181}}},"children":"UIViewPropertyAnimator"}}],"의 기본 개념에서부터 실제 애니메이션을 구현하는 과정을 예제를 통해 알아보았습니다. 여러분의 iOS 애플리케이션이 더욱 생동감 넘치는 사용자 경험을 제공할 수 있기를 바랍니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"UIViewPropertyAnimator 활용: 정교한 애니메이션 제어","toc":[{"tagName":"h1","title":"UIViewPropertyAnimator 활용: 정교한 애니메이션 제어","id":"61cf56a4"},{"tagName":"h2","title":"UIViewPropertyAnimator 소개","id":"a1e65202"},{"tagName":"h2","title":"UIViewPropertyAnimator의 기본 사용법","id":"cf2b0123"},{"tagName":"h2","title":"애니메이션의 상태 관리","id":"50412457"},{"tagName":"h2","title":"상호작용 애니메이션 구현","id":"c0d1b9cc"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
