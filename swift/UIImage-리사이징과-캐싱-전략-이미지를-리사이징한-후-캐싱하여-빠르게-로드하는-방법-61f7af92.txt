1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","UIImage-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%EA%B3%BC-%EC%BA%90%EC%8B%B1-%EC%A0%84%EB%9E%B5-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%ED%95%9C-%ED%9B%84-%EC%BA%90%EC%8B%B1%ED%95%98%EC%97%AC-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EB%A1%9C%EB%93%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-61f7af92","d"],{"children":["__PAGE__?{\"slug\":\"UIImage-리사이징과-캐싱-전략-이미지를-리사이징한-후-캐싱하여-빠르게-로드하는-방법-61f7af92\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","UIImage-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%EA%B3%BC-%EC%BA%90%EC%8B%B1-%EC%A0%84%EB%9E%B5-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%ED%95%9C-%ED%9B%84-%EC%BA%90%EC%8B%B1%ED%95%98%EC%97%AC-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EB%A1%9C%EB%93%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-61f7af92","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"UIImage-리사이징과-캐싱-전략-이미지를-리사이징한-후-캐싱하여-빠르게-로드하는-방법-61f7af92\"}"},"styles":[]}],"segment":["slug","UIImage-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%EA%B3%BC-%EC%BA%90%EC%8B%B1-%EC%A0%84%EB%9E%B5-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%ED%95%9C-%ED%9B%84-%EC%BA%90%EC%8B%B1%ED%95%98%EC%97%AC-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EB%A1%9C%EB%93%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-61f7af92","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"UIImage 리사이징과 캐싱 전략: 이미지를 리사이징한 후 캐싱하여 빠르게 로드하는 방법. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift에서 `UIImage`를 리사이징하고 캐시를 사용하여 빠르게 로드하는 방법에 대해 다룹니다. 이 글에서는 효율적인 이미지 처리를 통해 앱의 성능을 향상시키는 다양한 기법을 설명합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,UIImage,리사이징,캐싱"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/UIImage-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%EA%B3%BC-%EC%BA%90%EC%8B%B1-%EC%A0%84%EB%9E%B5-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%ED%95%9C-%ED%9B%84-%EC%BA%90%EC%8B%B1%ED%95%98%EC%97%AC-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EB%A1%9C%EB%93%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-61f7af92"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"UIImage 리사이징과 캐싱 전략: 이미지를 리사이징한 후 캐싱하여 빠르게 로드하는 방법. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"UIImage 리사이징과 캐싱 전략: 이미지를 리사이징한 후 캐싱하여 빠르게 로드하는 방법. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift에서 `UIImage`를 리사이징하고 캐시를 사용하여 빠르게 로드하는 방법에 대해 다룹니다. 이 글에서는 효율적인 이미지 처리를 통해 앱의 성능을 향상시키는 다양한 기법을 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/UIImage-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%EA%B3%BC-%EC%BA%90%EC%8B%B1-%EC%A0%84%EB%9E%B5-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%ED%95%9C-%ED%9B%84-%EC%BA%90%EC%8B%B1%ED%95%98%EC%97%AC-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EB%A1%9C%EB%93%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-61f7af92"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"UIImage 리사이징과 캐싱 전략: 이미지를 리사이징한 후 캐싱하여 빠르게 로드하는 방법. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift에서 `UIImage`를 리사이징하고 캐시를 사용하여 빠르게 로드하는 방법에 대해 다룹니다. 이 글에서는 효율적인 이미지 처리를 통해 앱의 성능을 향상시키는 다양한 기법을 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"UIImage 리사이징과 캐싱 전략: 이미지를 리사이징한 후 캐싱하여 빠르게 로드하는 방법."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"UIImage 리사이징과 캐싱 전략: 이미지를 리사이징한 후 캐싱하여 빠르게 로드하는 방법."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-19"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"7006e5a1","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"UIImage 리사이징과 캐싱 전략: 이미지를 리사이징한 후 캐싱하여 빠르게 로드하는 방법"}],"\n",["$","h2",null,{"id":"fa255f0c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"소개"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이미지 처리는 앱 개발에서 중요한 부분을 차지합니다. 특히 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIImage","position":{"start":{"line":5,"column":34,"offset":94},"end":{"line":5,"column":43,"offset":103}}}],"position":{"start":{"line":5,"column":34,"offset":94},"end":{"line":5,"column":43,"offset":103}}},"children":"UIImage"}}],"와 같은 기본 클래스들이 주로 사용되며, 이 이미지를 최적화하는 방법은 사용자가 경험하는 로딩 속도와 앱의 성능에 큰 영향을 미칩니다. 이 글에서는 Swift 언어를 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIImage","position":{"start":{"line":5,"column":141,"offset":201},"end":{"line":5,"column":150,"offset":210}}}],"position":{"start":{"line":5,"column":141,"offset":201},"end":{"line":5,"column":150,"offset":210}}},"children":"UIImage"}}],"를 리사이징하고 캐시를 사용하여 빠르게 로드하는 방법에 대해 다루겠습니다. 이를 통해 앱의 성능을 최적화하는 데 많은 도움이 될 것입니다."]}],"\n",["$","h2",null,{"id":"5aa36918","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UIImage 리사이징"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이미지를 리사이징하는 것은 앱 성능에 중요한 역할을 합니다. 고해상도의 이미지를 그대로 사용하는 것은 메모리와 로딩 시간을 많이 소비하므로, 적절한 크기로 리사이징하는 것이 필요합니다."}],"\n",["$","h3",null,{"id":"9b3f337c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"리사이징 구현 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIImage","position":{"start":{"line":11,"column":5,"offset":429},"end":{"line":11,"column":14,"offset":438}}}],"position":{"start":{"line":11,"column":5,"offset":429},"end":{"line":11,"column":14,"offset":438}}},"children":"UIImage"}}],"를 리사이징하는 기본적인 코드입니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nextension UIImage {\n    func resized(to width: CGFloat) -> UIImage? {\n        let height = CGFloat(ceil(width/size.width * size.height))\n        let newSize = CGSize(width: width, height: height)\n        let format = UIGraphicsImageRendererFormat()\n        format.scale = 1\n        let renderer = UIGraphicsImageRenderer(size: newSize, format: format)\n        return renderer.image { _ in\n            draw(in: CGRect(origin: .zero, size: newSize))\n        }\n    }\n}\n"}],"position":{"start":{"line":13,"column":1,"offset":460},"end":{"line":28,"column":4,"offset":952}}},"children":"import UIKit\n\nextension UIImage {\n    func resized(to width: CGFloat) -> UIImage? {\n        let height = CGFloat(ceil(width/size.width * size.height))\n        let newSize = CGSize(width: width, height: height)\n        let format = UIGraphicsImageRendererFormat()\n        format.scale = 1\n        let renderer = UIGraphicsImageRenderer(size: newSize, format: format)\n        return renderer.image { _ in\n            draw(in: CGRect(origin: .zero, size: newSize))\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIImage","position":{"start":{"line":30,"column":7,"offset":960},"end":{"line":30,"column":16,"offset":969}}}],"position":{"start":{"line":30,"column":7,"offset":960},"end":{"line":30,"column":16,"offset":969}}},"children":"UIImage"}}],"를 새롭게 크기를 조정하여 반환하는 코드를 보여줍니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIGraphicsImageRenderer","position":{"start":{"line":30,"column":47,"offset":1000},"end":{"line":30,"column":72,"offset":1025}}}],"position":{"start":{"line":30,"column":47,"offset":1000},"end":{"line":30,"column":72,"offset":1025}}},"children":"UIGraphicsImageRenderer"}}],"를 사용하여 메모리 효율성을 높였습니다."]}],"\n",["$","h2",null,{"id":"d9b34533","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"캐싱 전략"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"리사이징한 이미지를 캐시하면 다음 로딩 시간에 속도가 대폭 개선됩니다. 메모리 캐시와 디스크 캐시를 적절히 사용하여 성능을 향상시킬 수 있습니다."}],"\n",["$","h3",null,{"id":"ff80a310","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"메모리 캐시"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["메모리 캐시는 앱 실행 중에만 유지되는 캐시로, 빠른 접근이 가능하지만 앱이 종료되면 사라집니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSCache","position":{"start":{"line":36,"column":56,"offset":1207},"end":{"line":36,"column":65,"offset":1216}}}],"position":{"start":{"line":36,"column":56,"offset":1207},"end":{"line":36,"column":65,"offset":1216}}},"children":"NSCache"}}],"를 사용하여 쉽게 구현할 수 있습니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\nimport UIKit\n\nclass ImageCache {\n    static let shared = NSCache<NSString, UIImage>()\n\n    private init() {}\n}\n"}],"position":{"start":{"line":38,"column":1,"offset":1239},"end":{"line":47,"column":4,"offset":1380}}},"children":"import Foundation\nimport UIKit\n\nclass ImageCache {\n    static let shared = NSCache<NSString, UIImage>()\n\n    private init() {}\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"사용 예는 다음과 같습니다:"}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let cacheKey = NSString(string: \"image_key\")\nif let cachedImage = ImageCache.shared.object(forKey: cacheKey) {\n    // 캐시된 이미지 사용\n} else {\n    // 새로운 이미지 로딩 및 캐시\n    let resizedImage = originalImage.resized(to: 100)\n    ImageCache.shared.setObject(resizedImage!, forKey: cacheKey)\n}\n"}],"position":{"start":{"line":51,"column":1,"offset":1399},"end":{"line":60,"column":4,"offset":1693}}},"children":"let cacheKey = NSString(string: \"image_key\")\nif let cachedImage = ImageCache.shared.object(forKey: cacheKey) {\n    // 캐시된 이미지 사용\n} else {\n    // 새로운 이미지 로딩 및 캐시\n    let resizedImage = originalImage.resized(to: 100)\n    ImageCache.shared.setObject(resizedImage!, forKey: cacheKey)\n}\n"}}]}],"\n",["$","h3",null,{"id":"696a6607","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"디스크 캐시"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["디스크 캐시는 영구적으로 데이터를 저장할 수 있어 앱 재실행 후에도 데이터를 유지할 수 있습니다. 여기서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FileManager","position":{"start":{"line":63,"column":61,"offset":1766},"end":{"line":63,"column":74,"offset":1779}}}],"position":{"start":{"line":63,"column":61,"offset":1766},"end":{"line":63,"column":74,"offset":1779}}},"children":"FileManager"}}],"를 사용하여 디스크 캐시를 구현해보겠습니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\nimport UIKit\n\nclass DiskCache {\n    static let shared = DiskCache()\n\n    private init() {}\n\n    private func cacheDirectory() -> URL? {\n        let paths = FileManager.default.urls(for: .cachesDirectory, in: .userDomainMask)\n        return paths.first?.appendingPathComponent(\"ImageCache\")\n    }\n\n    func cacheImage(_ image: UIImage, forKey key: String) {\n        guard let data = image.pngData(), let directory = cacheDirectory() else { return }\n        let imageURL = directory.appendingPathComponent(key)\n        do {\n            try data.write(to: imageURL)\n        } catch {\n            print(\"Error caching image: \\(error)\")\n        }\n    }\n\n    func getCachedImage(forKey key: String) -> UIImage? {\n        guard let directory = cacheDirectory() else { return nil }\n        let imageURL = directory.appendingPathComponent(key)\n        guard let data = try? Data(contentsOf: imageURL) else { return nil }\n        return UIImage(data: data)\n    }\n}\n"}],"position":{"start":{"line":65,"column":1,"offset":1805},"end":{"line":96,"column":4,"offset":2790}}},"children":"import Foundation\nimport UIKit\n\nclass DiskCache {\n    static let shared = DiskCache()\n\n    private init() {}\n\n    private func cacheDirectory() -> URL? {\n        let paths = FileManager.default.urls(for: .cachesDirectory, in: .userDomainMask)\n        return paths.first?.appendingPathComponent(\"ImageCache\")\n    }\n\n    func cacheImage(_ image: UIImage, forKey key: String) {\n        guard let data = image.pngData(), let directory = cacheDirectory() else { return }\n        let imageURL = directory.appendingPathComponent(key)\n        do {\n            try data.write(to: imageURL)\n        } catch {\n            print(\"Error caching image: \\(error)\")\n        }\n    }\n\n    func getCachedImage(forKey key: String) -> UIImage? {\n        guard let directory = cacheDirectory() else { return nil }\n        let imageURL = directory.appendingPathComponent(key)\n        guard let data = try? Data(contentsOf: imageURL) else { return nil }\n        return UIImage(data: data)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"사용 예는 다음과 같습니다:"}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let cacheKey = \"image_key.png\"\nif let cachedImage = DiskCache.shared.getCachedImage(forKey: cacheKey) {\n    // 디스크에 저장된 이미지 사용\n} else {\n    // 새로운 이미지 로딩 및 디스크에 저장\n    let resizedImage = originalImage.resized(to: 100)\n    DiskCache.shared.cacheImage(resizedImage!, forKey: cacheKey)\n}\n"}],"position":{"start":{"line":100,"column":1,"offset":2809},"end":{"line":109,"column":4,"offset":3106}}},"children":"let cacheKey = \"image_key.png\"\nif let cachedImage = DiskCache.shared.getCachedImage(forKey: cacheKey) {\n    // 디스크에 저장된 이미지 사용\n} else {\n    // 새로운 이미지 로딩 및 디스크에 저장\n    let resizedImage = originalImage.resized(to: 100)\n    DiskCache.shared.cacheImage(resizedImage!, forKey: cacheKey)\n}\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIImage","position":{"start":{"line":112,"column":1,"offset":3114},"end":{"line":112,"column":10,"offset":3123}}}],"position":{"start":{"line":112,"column":1,"offset":3114},"end":{"line":112,"column":10,"offset":3123}}},"children":"UIImage"}}]," 리사이징과 캐싱 전략은 앱의 성능을 크게 향상시킬 수 있는 중요한 기술입니다. 메모리 캐시와 디스크 캐시를 적절히 활용하여 이미지를 빠르게 로드하고, 메모리 사용량을 최적화하는 것이 핵심이라 할 수 있습니다. 이 글에서 소개한 기법들을 활용하여 더욱 쾌적한 사용자 경험을 제공하는 앱을 개발하시길 바랍니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"UIImage 리사이징과 캐싱 전략: 이미지를 리사이징한 후 캐싱하여 빠르게 로드하는 방법.","toc":[{"tagName":"h1","title":"UIImage 리사이징과 캐싱 전략: 이미지를 리사이징한 후 캐싱하여 빠르게 로드하는 방법","id":"7006e5a1"},{"tagName":"h2","title":"소개","id":"fa255f0c"},{"tagName":"h2","title":"UIImage 리사이징","id":"5aa36918"},{"tagName":"h3","title":"리사이징 구현 방법","id":"9b3f337c"},{"tagName":"h2","title":"캐싱 전략","id":"d9b34533"},{"tagName":"h3","title":"메모리 캐시","id":"ff80a310"},{"tagName":"h3","title":"디스크 캐시","id":"696a6607"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
