1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","UIPageViewController-%EC%8B%AC%ED%99%94-%ED%99%9C%EC%9A%A9-%EA%B3%A0%EA%B8%89-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-167e1101","d"],{"children":["__PAGE__?{\"slug\":\"UIPageViewController-심화-활용-고급-페이지-네비게이션-167e1101\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","UIPageViewController-%EC%8B%AC%ED%99%94-%ED%99%9C%EC%9A%A9-%EA%B3%A0%EA%B8%89-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-167e1101","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"UIPageViewController-심화-활용-고급-페이지-네비게이션-167e1101\"}"},"styles":[]}],"segment":["slug","UIPageViewController-%EC%8B%AC%ED%99%94-%ED%99%9C%EC%9A%A9-%EA%B3%A0%EA%B8%89-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-167e1101","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"UIPageViewController 심화 활용: 고급 페이지 네비게이션 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 iOS의 강력한 UI 구성 요소인 `UIPageViewController`를 고급 단계에서 활용하는 방법에 대해 다룬다. 기본 사용법에서 나아가 페이지 전환 애니메이션과 데이터 소스 관리 등을 심도 있게 설명한다."}],["$","meta","3",{"name":"keywords","content":"swift,iOS,UIPageViewController,모바일 개발"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/UIPageViewController-%EC%8B%AC%ED%99%94-%ED%99%9C%EC%9A%A9-%EA%B3%A0%EA%B8%89-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-167e1101"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"UIPageViewController 심화 활용: 고급 페이지 네비게이션 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"UIPageViewController 심화 활용: 고급 페이지 네비게이션 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 iOS의 강력한 UI 구성 요소인 `UIPageViewController`를 고급 단계에서 활용하는 방법에 대해 다룬다. 기본 사용법에서 나아가 페이지 전환 애니메이션과 데이터 소스 관리 등을 심도 있게 설명한다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/UIPageViewController-%EC%8B%AC%ED%99%94-%ED%99%9C%EC%9A%A9-%EA%B3%A0%EA%B8%89-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98-167e1101"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"UIPageViewController 심화 활용: 고급 페이지 네비게이션 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 iOS의 강력한 UI 구성 요소인 `UIPageViewController`를 고급 단계에서 활용하는 방법에 대해 다룬다. 기본 사용법에서 나아가 페이지 전환 애니메이션과 데이터 소스 관리 등을 심도 있게 설명한다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"UIPageViewController 심화 활용: 고급 페이지 네비게이션"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"UIPageViewController 심화 활용: 고급 페이지 네비게이션"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-18"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"a85a6feb","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"UIPageViewController 심화 활용: 고급 페이지 네비게이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPageViewController","position":{"start":{"line":4,"column":1,"offset":45},"end":{"line":4,"column":23,"offset":67}}}],"position":{"start":{"line":4,"column":1,"offset":45},"end":{"line":4,"column":23,"offset":67}}},"children":"UIPageViewController"}}],"는 iOS 앱에서 여러 페이지의 콘텐츠를 표시할 때 유용하게 사용할 수 있는 강력한 클래스입니다. 기본적인 사용법은 이미 많은 곳에서 다루어지고 있으나, 이번 글에서는 보다 고급스러운 기능을 활용하여 페이지 네비게이션을 심화 구현하는 방법에 대해 논의하고자 합니다."]}],"\n",["$","h2",null,{"id":"0b1813d3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"기본 설정에서 고급 설정으로"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["기본적으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPageViewController","position":{"start":{"line":8,"column":7,"offset":243},"end":{"line":8,"column":29,"offset":265}}}],"position":{"start":{"line":8,"column":7,"offset":243},"end":{"line":8,"column":29,"offset":265}}},"children":"UIPageViewController"}}],"는 초기 세팅부터 시작합니다. 아래와 같이 기본 설정을 마친 후, 데이터 소스와 델리게이트를 설정할 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass ViewController: UIViewController, UIPageViewControllerDataSource, UIPageViewControllerDelegate {\n\n    var pageViewController: UIPageViewController!\n    var pageContent: [UIViewController] = []\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        setupPageViewController()\n    }\n\n    private func setupPageViewController() {\n        let pageVC = UIPageViewController(transitionStyle: .scroll, navigationOrientation: .horizontal, options: nil)\n        pageVC.dataSource = self\n        pageVC.delegate = self\n\n        if let firstVC = pageContent.first {\n            pageVC.setViewControllers([firstVC], direction: .forward, animated: true, completion: nil)\n        }\n\n        self.addChild(pageVC)\n        self.view.addSubview(pageVC.view)\n        pageVC.didMove(toParent: self)\n\n        self.pageViewController = pageVC\n    }\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":330},"end":{"line":39,"column":4,"offset":1207}}},"children":"import UIKit\n\nclass ViewController: UIViewController, UIPageViewControllerDataSource, UIPageViewControllerDelegate {\n\n    var pageViewController: UIPageViewController!\n    var pageContent: [UIViewController] = []\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        setupPageViewController()\n    }\n\n    private func setupPageViewController() {\n        let pageVC = UIPageViewController(transitionStyle: .scroll, navigationOrientation: .horizontal, options: nil)\n        pageVC.dataSource = self\n        pageVC.delegate = self\n\n        if let firstVC = pageContent.first {\n            pageVC.setViewControllers([firstVC], direction: .forward, animated: true, completion: nil)\n        }\n\n        self.addChild(pageVC)\n        self.view.addSubview(pageVC.view)\n        pageVC.didMove(toParent: self)\n\n        self.pageViewController = pageVC\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 코드는 기본적인 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPageViewController","position":{"start":{"line":41,"column":13,"offset":1221},"end":{"line":41,"column":35,"offset":1243}}}],"position":{"start":{"line":41,"column":13,"offset":1221},"end":{"line":41,"column":35,"offset":1243}}},"children":"UIPageViewController"}}],"의 설정을 보여줍니다. 하지만 이를 심화 활용하기 위해서는 몇 가지 더 알아야 할 점이 있습니다."]}],"\n",["$","h2",null,{"id":"fa58f528","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"페이지 전환 애니메이션의 커스터마이징"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["기존의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPageViewController","position":{"start":{"line":45,"column":5,"offset":1328},"end":{"line":45,"column":27,"offset":1350}}}],"position":{"start":{"line":45,"column":5,"offset":1328},"end":{"line":45,"column":27,"offset":1350}}},"children":"UIPageViewController"}}],"는 몇 가지 기본 애니메이션 스타일을 제공합니다. 하지만 원하는 대로 애니메이션을 커스터마이즈하기 위해 몇 가지 트릭을 사용하는 것이 필요합니다."]}],"\n",["$","h3",null,{"id":"738ca082","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"사용자 정의 전환 애니메이터 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["사용자 정의 애니메이터를 만들려면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewControllerAnimatedTransitioning","position":{"start":{"line":49,"column":20,"offset":1476},"end":{"line":49,"column":59,"offset":1515}}}],"position":{"start":{"line":49,"column":20,"offset":1476},"end":{"line":49,"column":59,"offset":1515}}},"children":"UIViewControllerAnimatedTransitioning"}}]," 프로토콜을 채택한 클래스를 구현해야 합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass CustomPageTransitionAnimator: NSObject, UIViewControllerAnimatedTransitioning {\n    let duration: TimeInterval = 0.5\n\n    func transitionDuration(using transitionContext: UIViewControllerContextTransitioning?) -> TimeInterval {\n        return duration\n    }\n\n    func animateTransition(using transitionContext: UIViewControllerContextTransitioning) {\n        guard let fromVC = transitionContext.viewController(forKey: .from) else { return }\n        guard let toVC = transitionContext.viewController(forKey: .to) else { return }\n\n        let containerView = transitionContext.containerView\n        containerView.addSubview(toVC.view)\n\n        toVC.view.alpha = 0.0\n        UIView.animate(withDuration: duration, animations: {\n            toVC.view.alpha = 1.0\n        }) { _ in\n            fromVC.view.removeFromSuperview()\n            transitionContext.completeTransition(!transitionContext.transitionWasCancelled)\n        }\n    }\n}\n"}],"position":{"start":{"line":51,"column":1,"offset":1542},"end":{"line":77,"column":4,"offset":2508}}},"children":"import UIKit\n\nclass CustomPageTransitionAnimator: NSObject, UIViewControllerAnimatedTransitioning {\n    let duration: TimeInterval = 0.5\n\n    func transitionDuration(using transitionContext: UIViewControllerContextTransitioning?) -> TimeInterval {\n        return duration\n    }\n\n    func animateTransition(using transitionContext: UIViewControllerContextTransitioning) {\n        guard let fromVC = transitionContext.viewController(forKey: .from) else { return }\n        guard let toVC = transitionContext.viewController(forKey: .to) else { return }\n\n        let containerView = transitionContext.containerView\n        containerView.addSubview(toVC.view)\n\n        toVC.view.alpha = 0.0\n        UIView.animate(withDuration: duration, animations: {\n            toVC.view.alpha = 1.0\n        }) { _ in\n            fromVC.view.removeFromSuperview()\n            transitionContext.completeTransition(!transitionContext.transitionWasCancelled)\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 위에서 만든 커스텀 애니메이터를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPageViewController","position":{"start":{"line":79,"column":22,"offset":2531},"end":{"line":79,"column":44,"offset":2553}}}],"position":{"start":{"line":79,"column":22,"offset":2531},"end":{"line":79,"column":44,"offset":2553}}},"children":"UIPageViewController"}}],"에 적용하는 방법을 살펴보겠습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPageViewControllerDelegate","position":{"start":{"line":79,"column":64,"offset":2573},"end":{"line":79,"column":94,"offset":2603}}}],"position":{"start":{"line":79,"column":64,"offset":2573},"end":{"line":79,"column":94,"offset":2603}}},"children":"UIPageViewControllerDelegate"}}]," 메서드를 통해 사용자 정의 전환 애니메이터를 반환합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func pageViewController(_ pageViewController: UIPageViewController, willTransitionTo pendingViewControllers: [UIViewController]) {\n    // Custom logic before transition\n}\n\nfunc pageViewController(_ pageViewController: UIPageViewController, didFinishAnimating finished: Bool, previousViewControllers: [UIViewController], transitionCompleted completed: Bool) {\n    // Custom logic after transition\n}\n}\n\nfunc pageViewController(_ pageViewController: UIPageViewController, spineLocationFor orientation: UIInterfaceOrientation) -> UIPageViewController.SpineLocation {\n    return .none\n}\n\nfunc presentationCount(for pageViewController: UIPageViewController) -> Int {\n    return pageContent.count\n}\n\nfunc presentationIndex(for pageViewController: UIPageViewController) -> Int {\n    guard let currentVC = pageViewController.viewControllers?.first else { return 0 }\n    return pageContent.firstIndex(of: currentVC) ?? 0\n}\n"}],"position":{"start":{"line":81,"column":1,"offset":2637},"end":{"line":103,"column":4,"offset":3562}}},"children":"func pageViewController(_ pageViewController: UIPageViewController, willTransitionTo pendingViewControllers: [UIViewController]) {\n    // Custom logic before transition\n}\n\nfunc pageViewController(_ pageViewController: UIPageViewController, didFinishAnimating finished: Bool, previousViewControllers: [UIViewController], transitionCompleted completed: Bool) {\n    // Custom logic after transition\n}\n}\n\nfunc pageViewController(_ pageViewController: UIPageViewController, spineLocationFor orientation: UIInterfaceOrientation) -> UIPageViewController.SpineLocation {\n    return .none\n}\n\nfunc presentationCount(for pageViewController: UIPageViewController) -> Int {\n    return pageContent.count\n}\n\nfunc presentationIndex(for pageViewController: UIPageViewController) -> Int {\n    guard let currentVC = pageViewController.viewControllers?.first else { return 0 }\n    return pageContent.firstIndex(of: currentVC) ?? 0\n}\n"}}]}],"\n",["$","h3",null,{"id":"b06d37cd","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"애니메이션 적용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 사용자 정의 애니메이션을 실제로 적용해 보겠습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPageViewControllerDelegate","position":{"start":{"line":107,"column":33,"offset":3610},"end":{"line":107,"column":63,"offset":3640}}}],"position":{"start":{"line":107,"column":33,"offset":3610},"end":{"line":107,"column":63,"offset":3640}}},"children":"UIPageViewControllerDelegate"}}],"의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"animationControllerForPresentedController","position":{"start":{"line":107,"column":65,"offset":3642},"end":{"line":107,"column":108,"offset":3685}}}],"position":{"start":{"line":107,"column":65,"offset":3642},"end":{"line":107,"column":108,"offset":3685}}},"children":"animationControllerForPresentedController"}}]," 메서드를 구현하여, 커스텀 애니메이터를 반환하도록 합시다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func pageViewController(_ pageViewController: UIPageViewController, animationControllerForPresentedController presented: UIViewController, presenting: UIViewController, source: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n    return CustomPageTransitionAnimator()\n}\n"}],"position":{"start":{"line":109,"column":1,"offset":3720},"end":{"line":113,"column":4,"offset":4015}}},"children":"func pageViewController(_ pageViewController: UIPageViewController, animationControllerForPresentedController presented: UIViewController, presenting: UIViewController, source: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n    return CustomPageTransitionAnimator()\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 방법을 통해, 페이지 전환 시 사용자 정의 애니메이션이 적용됩니다. 또한, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewControllerContextTransitioning","position":{"start":{"line":115,"column":46,"offset":4062},"end":{"line":115,"column":84,"offset":4100}}}],"position":{"start":{"line":115,"column":46,"offset":4062},"end":{"line":115,"column":84,"offset":4100}}},"children":"UIViewControllerContextTransitioning"}}],"을 활용하면 더욱 다양한 애니메이션을 구현할 수 있습니다."]}],"\n",["$","h2",null,{"id":"1c6566f6","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"데이터 소스 관리 고급 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["데이터 소스 관리에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPageViewControllerDataSource","position":{"start":{"line":119,"column":14,"offset":4167},"end":{"line":119,"column":46,"offset":4199}}}],"position":{"start":{"line":119,"column":14,"offset":4167},"end":{"line":119,"column":46,"offset":4199}}},"children":"UIPageViewControllerDataSource"}}]," 프로토콜을 통해 여러 페이지의 내용 관리가 가능합니다. 다음은 이전, 다음 컨트롤러를 관리하는 기본적인 방법입니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func pageViewController(_ pageViewController: UIPageViewController, viewControllerBefore viewController: UIViewController) -> UIViewController? {\n    guard let index = pageContent.firstIndex(of: viewController), index > 0 else { return nil }\n    return pageContent[index - 1]\n}\n\nfunc pageViewController(_ pageViewController: UIPageViewController, viewControllerAfter viewController: UIViewController) -> UIViewController? {\n    guard let index = pageContent.firstIndex(of: viewController), index < pageContent.count - 1 else { return nil }\n    return pageContent[index + 1]\n}\n"}],"position":{"start":{"line":121,"column":1,"offset":4266},"end":{"line":131,"column":4,"offset":4854}}},"children":"func pageViewController(_ pageViewController: UIPageViewController, viewControllerBefore viewController: UIViewController) -> UIViewController? {\n    guard let index = pageContent.firstIndex(of: viewController), index > 0 else { return nil }\n    return pageContent[index - 1]\n}\n\nfunc pageViewController(_ pageViewController: UIPageViewController, viewControllerAfter viewController: UIViewController) -> UIViewController? {\n    guard let index = pageContent.firstIndex(of: viewController), index < pageContent.count - 1 else { return nil }\n    return pageContent[index + 1]\n}\n"}}]}],"\n",["$","h2",null,{"id":"5fb2575f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"스냅샷을 통한 성능 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"고급 기능을 구현할 때 중요한 점은 성능 최적화입니다. 특히 페이지 전환 시 각각의 페이지에 대해 스냅샷을 만들어 두면 전환 성능이 대폭 향상됩니다."}],"\n",["$","h3",null,{"id":"38a76581","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"스냅샷 저장 및 로드"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"각 페이지의 스냅샷을 저장하고, 페이지 전환 시 이를 로드하는 방법을 살펴봅시다."}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func saveSnapshots() {\n    for (index, viewController) in pageContent.enumerated() {\n        let view = viewController.view.snapshotView(afterScreenUpdates: true)\n        pageSnapshots[index] = view\n    }\n}\n\nfunc loadSnapshot(for index: Int) -> UIView? {\n    return pageSnapshots[index]\n}\n"}],"position":{"start":{"line":141,"column":1,"offset":5024},"end":{"line":152,"column":4,"offset":5325}}},"children":"func saveSnapshots() {\n    for (index, viewController) in pageContent.enumerated() {\n        let view = viewController.view.snapshotView(afterScreenUpdates: true)\n        pageSnapshots[index] = view\n    }\n}\n\nfunc loadSnapshot(for index: Int) -> UIView? {\n    return pageSnapshots[index]\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"스냅샷을 저장하고 로드하는 방법을 통해, 페이지 전환 시에 발생하는 비용을 줄일 수 있으며 따라서 성능을 최적화할 수 있습니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPageViewController","position":{"start":{"line":158,"column":1,"offset":5407},"end":{"line":158,"column":23,"offset":5429}}}],"position":{"start":{"line":158,"column":1,"offset":5407},"end":{"line":158,"column":23,"offset":5429}}},"children":"UIPageViewController"}}],"는 iOS 앱에서 페이지 기반 네비게이션을 구현하는 매우 유용한 도구입니다. 기본 설정을 넘어서 고급 기능을 활용하면 더욱 효과적이고 매력적인 사용자 경험을 제공할 수 있습니다. 페이지 전환 애니메이션 커스터마이즈, 데이터 소스 관리 고급 설정, 성능 최적화 등의 방법을 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIPageViewController","position":{"start":{"line":158,"column":178,"offset":5584},"end":{"line":158,"column":200,"offset":5606}}}],"position":{"start":{"line":158,"column":178,"offset":5584},"end":{"line":158,"column":200,"offset":5606}}},"children":"UIPageViewController"}}],"를 심화 활용하는 방법을 충분히 익히셨길 바랍니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"UIPageViewController 심화 활용: 고급 페이지 네비게이션","toc":[{"tagName":"h1","title":"UIPageViewController 심화 활용: 고급 페이지 네비게이션","id":"a85a6feb"},{"tagName":"h2","title":"기본 설정에서 고급 설정으로","id":"0b1813d3"},{"tagName":"h2","title":"페이지 전환 애니메이션의 커스터마이징","id":"fa58f528"},{"tagName":"h3","title":"사용자 정의 전환 애니메이터 구현","id":"738ca082"},{"tagName":"h3","title":"애니메이션 적용","id":"b06d37cd"},{"tagName":"h2","title":"데이터 소스 관리 고급 설정","id":"1c6566f6"},{"tagName":"h2","title":"스냅샷을 통한 성능 최적화","id":"5fb2575f"},{"tagName":"h3","title":"스냅샷 저장 및 로드","id":"38a76581"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
