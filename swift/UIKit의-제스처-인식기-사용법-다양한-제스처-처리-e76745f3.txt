1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","UIKit%EC%9D%98-%EC%A0%9C%EC%8A%A4%EC%B2%98-%EC%9D%B8%EC%8B%9D%EA%B8%B0-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8B%A4%EC%96%91%ED%95%9C-%EC%A0%9C%EC%8A%A4%EC%B2%98-%EC%B2%98%EB%A6%AC-e76745f3","d"],{"children":["__PAGE__?{\"slug\":\"UIKit의-제스처-인식기-사용법-다양한-제스처-처리-e76745f3\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","UIKit%EC%9D%98-%EC%A0%9C%EC%8A%A4%EC%B2%98-%EC%9D%B8%EC%8B%9D%EA%B8%B0-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8B%A4%EC%96%91%ED%95%9C-%EC%A0%9C%EC%8A%A4%EC%B2%98-%EC%B2%98%EB%A6%AC-e76745f3","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"UIKit의-제스처-인식기-사용법-다양한-제스처-처리-e76745f3\"}"},"styles":[]}],"segment":["slug","UIKit%EC%9D%98-%EC%A0%9C%EC%8A%A4%EC%B2%98-%EC%9D%B8%EC%8B%9D%EA%B8%B0-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8B%A4%EC%96%91%ED%95%9C-%EC%A0%9C%EC%8A%A4%EC%B2%98-%EC%B2%98%EB%A6%AC-e76745f3","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"UIKit의 제스처 인식기 사용법: 다양한 제스처 처리 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 Swift에서 UIKit의 제스처 인식기를 사용하여 다양한 제스처를 처리하는 방법에 대해 다룹니다. 여러 제스처의 등록과 사용 예제를 포함하여 개발자가 다채로운 사용자 경험을 구현하는데 필요한 필수 정보를 제공합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,UIKit,제스처 인식기,iOS 개발"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/UIKit%EC%9D%98-%EC%A0%9C%EC%8A%A4%EC%B2%98-%EC%9D%B8%EC%8B%9D%EA%B8%B0-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8B%A4%EC%96%91%ED%95%9C-%EC%A0%9C%EC%8A%A4%EC%B2%98-%EC%B2%98%EB%A6%AC-e76745f3"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"UIKit의 제스처 인식기 사용법: 다양한 제스처 처리 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"UIKit의 제스처 인식기 사용법: 다양한 제스처 처리 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 Swift에서 UIKit의 제스처 인식기를 사용하여 다양한 제스처를 처리하는 방법에 대해 다룹니다. 여러 제스처의 등록과 사용 예제를 포함하여 개발자가 다채로운 사용자 경험을 구현하는데 필요한 필수 정보를 제공합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/UIKit%EC%9D%98-%EC%A0%9C%EC%8A%A4%EC%B2%98-%EC%9D%B8%EC%8B%9D%EA%B8%B0-%EC%82%AC%EC%9A%A9%EB%B2%95-%EB%8B%A4%EC%96%91%ED%95%9C-%EC%A0%9C%EC%8A%A4%EC%B2%98-%EC%B2%98%EB%A6%AC-e76745f3"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"UIKit의 제스처 인식기 사용법: 다양한 제스처 처리 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 Swift에서 UIKit의 제스처 인식기를 사용하여 다양한 제스처를 처리하는 방법에 대해 다룹니다. 여러 제스처의 등록과 사용 예제를 포함하여 개발자가 다채로운 사용자 경험을 구현하는데 필요한 필수 정보를 제공합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"UIKit의 제스처 인식기 사용법: 다양한 제스처 처리"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"UIKit의 제스처 인식기 사용법: 다양한 제스처 처리"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-10"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"44bc7c11","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"UIKit의 제스처 인식기 사용법: 다양한 제스처 처리"}],"\n",["$","h2",null,{"id":"fa255f0c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"소개"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UIKit의 제스처 인식기는 iOS 애플리케이션에서 다양한 사용자 인터랙션을 처리하기 위해 매우 중요한 요소입니다. 이 글에서는 Swift 프로그래밍 언어를 사용하여 UIKit의 여러 제스처 인식기를 사용하는 방법에 대해 설명합니다. 제스처 인식기는 터치 이벤트를 감지하고 해당 이벤트에 대한 반응을 정의할 수 있게 합니다. 이로써 사용자는 다양한 방식으로 애플리케이션과 상호작용할 수 있습니다. 각각의 제스처 인식기를 활용한 예제 코드를 통해 더 이해하기 쉽게 설명하겠습니다."}],"\n",["$","h2",null,{"id":"afbc200a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"제스처 인식기의 종류"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UIKit은 다양한 제스처 인식기를 제공합니다. 가장 많이 사용하는 제스처 인식기들을 몇 가지 예를 들어보겠습니다:"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":"UITapGestureRecognizer: 탭 제스처를 인식"}],"\n",["$","li","li-1",{"children":"UIPinchGestureRecognizer: 핀치 제스처를 인식"}],"\n",["$","li","li-2",{"children":"UIRotationGestureRecognizer: 회전 제스처를 인식"}],"\n",["$","li","li-3",{"children":"UISwipeGestureRecognizer: 스와이프 제스처를 인식"}],"\n",["$","li","li-4",{"children":"UIPanGestureRecognizer: 팬(드래그) 제스처를 인식"}],"\n",["$","li","li-5",{"children":"UILongPressGestureRecognizer: 길게 누르는 제스처를 인식"}],"\n"]}],"\n",["$","h3",null,{"id":"e12b2ed2","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"UITapGestureRecognizer"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UITapGestureRecognizer는 사용자가 화면을 한 번 또는 여러 번 탭했을 때 이를 감지합니다. 다음은 UITapGestureRecognizer를 사용하는 예제입니다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let tapGestureRecognizer = UITapGestureRecognizer(target: self, action: #selector(handleTap(_:)))\nview.addGestureRecognizer(tapGestureRecognizer)\n\n@objc func handleTap(_ sender: UITapGestureRecognizer) {\n    print(\"Tapped!\")\n}\n"}],"position":{"start":{"line":18,"column":1,"offset":765},"end":{"line":25,"column":4,"offset":1004}}},"children":"let tapGestureRecognizer = UITapGestureRecognizer(target: self, action: #selector(handleTap(_:)))\nview.addGestureRecognizer(tapGestureRecognizer)\n\n@objc func handleTap(_ sender: UITapGestureRecognizer) {\n    print(\"Tapped!\")\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleTap","position":{"start":{"line":26,"column":9,"offset":1013},"end":{"line":26,"column":20,"offset":1024}}}],"position":{"start":{"line":26,"column":9,"offset":1013},"end":{"line":26,"column":20,"offset":1024}}},"children":"handleTap"}}]," 메서드가 사용자가 화면을 한 번 탭했을 때 호출됩니다."]}],"\n",["$","h3",null,{"id":"e2752ffb","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"UIPinchGestureRecognizer"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UIPinchGestureRecognizer는 두 손가락으로 화면을 줌인 또는 줌아웃하는 제스처를 감지합니다. 다음은 UIPinchGestureRecognizer를 사용하는 예제입니다:"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let pinchGestureRecognizer = UIPinchGestureRecognizer(target: self, action: #selector(handlePinch(_:)))\nview.addGestureRecognizer(pinchGestureRecognizer)\n\n@objc func handlePinch(_ sender: UIPinchGestureRecognizer) {\n    if sender.state == .began || sender.state == .changed {\n        sender.view?.transform = (sender.view?.transform.scaledBy(x: sender.scale, y: sender.scale))!\n        sender.scale = 1.0\n    }\n}\n"}],"position":{"start":{"line":30,"column":1,"offset":1190},"end":{"line":40,"column":4,"offset":1615}}},"children":"let pinchGestureRecognizer = UIPinchGestureRecognizer(target: self, action: #selector(handlePinch(_:)))\nview.addGestureRecognizer(pinchGestureRecognizer)\n\n@objc func handlePinch(_ sender: UIPinchGestureRecognizer) {\n    if sender.state == .began || sender.state == .changed {\n        sender.view?.transform = (sender.view?.transform.scaledBy(x: sender.scale, y: sender.scale))!\n        sender.scale = 1.0\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handlePinch","position":{"start":{"line":41,"column":9,"offset":1624},"end":{"line":41,"column":22,"offset":1637}}}],"position":{"start":{"line":41,"column":9,"offset":1624},"end":{"line":41,"column":22,"offset":1637}}},"children":"handlePinch"}}]," 메서드가 사용자가 화면을 핀치(줌인/줌아웃)할 때 호출됩니다."]}],"\n",["$","h3",null,{"id":"246a4616","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"UIRotationGestureRecognizer"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UIRotationGestureRecognizer는 두 손가락을 이용한 회전 제스처를 감지합니다. 다음은 UIRotationGestureRecognizer를 사용하는 예제입니다:"}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let rotationGestureRecognizer = UIRotationGestureRecognizer(target: self, action: #selector(handleRotation(_:)))\nview.addGestureRecognizer(rotationGestureRecognizer)\n\n@objc func handleRotation(_ sender: UIRotationGestureRecognizer) {\n    if sender.state == .began || sender.state == .changed {\n        sender.view?.transform = (sender.view?.transform.rotated(by: sender.rotation))!\n        sender.rotation = 0.0\n    }\n}\n"}],"position":{"start":{"line":45,"column":1,"offset":1806},"end":{"line":55,"column":4,"offset":2238}}},"children":"let rotationGestureRecognizer = UIRotationGestureRecognizer(target: self, action: #selector(handleRotation(_:)))\nview.addGestureRecognizer(rotationGestureRecognizer)\n\n@objc func handleRotation(_ sender: UIRotationGestureRecognizer) {\n    if sender.state == .began || sender.state == .changed {\n        sender.view?.transform = (sender.view?.transform.rotated(by: sender.rotation))!\n        sender.rotation = 0.0\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleRotation","position":{"start":{"line":56,"column":9,"offset":2247},"end":{"line":56,"column":25,"offset":2263}}}],"position":{"start":{"line":56,"column":9,"offset":2247},"end":{"line":56,"column":25,"offset":2263}}},"children":"handleRotation"}}]," 메서드가 사용자가 화면을 두 손가락으로 회전할 때 호출됩니다."]}],"\n",["$","h3",null,{"id":"2cff5ab1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"UISwipeGestureRecognizer"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UISwipeGestureRecognizer는 손가락을 스와이프하는 제스처를 감지합니다. 이 제스처 인식기는 방향 설정이 가능합니다. 다음은 UISwipeGestureRecognizer를 사용하는 예제입니다:"}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let swipeGestureRecognizer = UISwipeGestureRecognizer(target: self, action: #selector(handleSwipe(_:)))\nswipeGestureRecognizer.direction = .right\nview.addGestureRecognizer(swipeGestureRecognizer)\n\n@objc func handleSwipe(_ sender: UISwipeGestureRecognizer) {\n    print(\"Swiped right!\")\n}\n"}],"position":{"start":{"line":60,"column":1,"offset":2446},"end":{"line":68,"column":4,"offset":2745}}},"children":"let swipeGestureRecognizer = UISwipeGestureRecognizer(target: self, action: #selector(handleSwipe(_:)))\nswipeGestureRecognizer.direction = .right\nview.addGestureRecognizer(swipeGestureRecognizer)\n\n@objc func handleSwipe(_ sender: UISwipeGestureRecognizer) {\n    print(\"Swiped right!\")\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSwipe","position":{"start":{"line":69,"column":9,"offset":2754},"end":{"line":69,"column":22,"offset":2767}}}],"position":{"start":{"line":69,"column":9,"offset":2754},"end":{"line":69,"column":22,"offset":2767}}},"children":"handleSwipe"}}]," 메서드가 사용자가 화면을 오른쪽으로 스와이프할 때 호출됩니다."]}],"\n",["$","h3",null,{"id":"2dd416f6","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"UIPanGestureRecognizer"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UIPanGestureRecognizer는 손가락을 끌어서 이동하는 제스처를 감지합니다. 다음은 UIPanGestureRecognizer를 사용하는 예제입니다:"}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let panGestureRecognizer = UIPanGestureRecognizer(target: self, action: #selector(handlePan(_:)))\nview.addGestureRecognizer(panGestureRecognizer)\n\n@objc func handlePan(_ sender: UIPanGestureRecognizer) {\n    let translation = sender.translation(in: view)\n    sender.view?.center = CGPoint(x: (sender.view?.center.x)! + translation.x, y: (sender.view?.center.y)! + translation.y)\n    sender.setTranslation(.zero, in: view)\n}\n"}],"position":{"start":{"line":73,"column":1,"offset":2921},"end":{"line":82,"column":4,"offset":3357}}},"children":"let panGestureRecognizer = UIPanGestureRecognizer(target: self, action: #selector(handlePan(_:)))\nview.addGestureRecognizer(panGestureRecognizer)\n\n@objc func handlePan(_ sender: UIPanGestureRecognizer) {\n    let translation = sender.translation(in: view)\n    sender.view?.center = CGPoint(x: (sender.view?.center.x)! + translation.x, y: (sender.view?.center.y)! + translation.y)\n    sender.setTranslation(.zero, in: view)\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handlePan","position":{"start":{"line":83,"column":9,"offset":3366},"end":{"line":83,"column":20,"offset":3377}}}],"position":{"start":{"line":83,"column":9,"offset":3366},"end":{"line":83,"column":20,"offset":3377}}},"children":"handlePan"}}]," 메서드가 사용자가 화면을 끌어서 이동할 때 호출됩니다."]}],"\n",["$","h3",null,{"id":"4733e3fc","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"UILongPressGestureRecognizer"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UILongPressGestureRecognizer는 사용자가 화면을 길게 누를 때 감지합니다. 다음은 UILongPressGestureRecognizer를 사용하는 예제입니다:"}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let longPressGestureRecognizer = UILongPressGestureRecognizer(target: self, action: #selector(handleLongPress(_:)))\nview.addGestureRecognizer(longPressGestureRecognizer)\n\n@objc func handleLongPress(_ sender: UILongPressGestureRecognizer) {\n    if sender.state == .began {\n        print(\"Long pressed!\")\n    }\n}\n"}],"position":{"start":{"line":87,"column":1,"offset":3543},"end":{"line":96,"column":4,"offset":3866}}},"children":"let longPressGestureRecognizer = UILongPressGestureRecognizer(target: self, action: #selector(handleLongPress(_:)))\nview.addGestureRecognizer(longPressGestureRecognizer)\n\n@objc func handleLongPress(_ sender: UILongPressGestureRecognizer) {\n    if sender.state == .began {\n        print(\"Long pressed!\")\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleLongPress","position":{"start":{"line":97,"column":9,"offset":3875},"end":{"line":97,"column":26,"offset":3892}}}],"position":{"start":{"line":97,"column":9,"offset":3875},"end":{"line":97,"column":26,"offset":3892}}},"children":"handleLongPress"}}]," 메서드가 사용자가 화면을 길게 누를 때 호출됩니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 글에서는 다양한 UIKit 제스처 인식기를 사용하는 방법에 대해 살펴보았습니다. 각각의 제스처 인식기는 특별한 사용자 인터랙션을 감지하고 처리하는데 유용합니다. 실제 애플리케이션에 이러한 제스처 인식기를 결합하여 풍부한 사용자 경험을 제공할 수 있습니다. 각 제스처 인식기를 활용하여 사용자와의 상호작용을 어떻게 디자인할지에 대해 고민해보는 시간을 가지면 좋겠습니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"UIKit의 제스처 인식기 사용법: 다양한 제스처 처리","toc":[{"tagName":"h1","title":"UIKit의 제스처 인식기 사용법: 다양한 제스처 처리","id":"44bc7c11"},{"tagName":"h2","title":"소개","id":"fa255f0c"},{"tagName":"h2","title":"제스처 인식기의 종류","id":"afbc200a"},{"tagName":"h3","title":"UITapGestureRecognizer","id":"e12b2ed2"},{"tagName":"h3","title":"UIPinchGestureRecognizer","id":"e2752ffb"},{"tagName":"h3","title":"UIRotationGestureRecognizer","id":"246a4616"},{"tagName":"h3","title":"UISwipeGestureRecognizer","id":"2cff5ab1"},{"tagName":"h3","title":"UIPanGestureRecognizer","id":"2dd416f6"},{"tagName":"h3","title":"UILongPressGestureRecognizer","id":"4733e3fc"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
