1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["algorithm",{"children":[["slug","%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EB%8A%94-%ED%94%8C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EC%9B%8C%EC%85%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B7%B8%EB%9E%98%ED%94%84-%EC%9D%B4%EB%A1%A0%EC%9D%98-%EA%B0%95%EB%A0%A5%ED%95%9C-%EB%8F%84%EA%B5%AC","d"],{"children":["__PAGE__?{\"slug\":\"쉽게-이해하는-플로이드-워셜-알고리즘-그래프-이론의-강력한-도구\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children",["slug","%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EB%8A%94-%ED%94%8C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EC%9B%8C%EC%85%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B7%B8%EB%9E%98%ED%94%84-%EC%9D%B4%EB%A1%A0%EC%9D%98-%EA%B0%95%EB%A0%A5%ED%95%9C-%EB%8F%84%EA%B5%AC","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"쉽게-이해하는-플로이드-워셜-알고리즘-그래프-이론의-강력한-도구\"}"},"styles":[]}],"segment":["slug","%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EB%8A%94-%ED%94%8C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EC%9B%8C%EC%85%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B7%B8%EB%9E%98%ED%94%84-%EC%9D%B4%EB%A1%A0%EC%9D%98-%EA%B0%95%EB%A0%A5%ED%95%9C-%EB%8F%84%EA%B5%AC","d"]},"styles":[]}],"segment":"algorithm"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"쉽게 이해하는 플로이드 워셜 알고리즘: 그래프 이론의 강력한 도구 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"플로이드 워셜 알고리즘은 그래프에서 모든 정점 쌍 간의 최단 경로를 찾는 데 사용되는 중요한 알고리즘입니다. 이 글에서는 플로이드 워셜 알고리즘의 기본 개념, 구현 방법, 응용 사례를 다룹니다. 교통 네트워크, 소셜 네트워크 분석 등 다양한 실제 문제 해결에 적용되며, 시간 복잡도와 최적화 기법도 논의합니다. 이 가이드는 알고리즘을 효과적으로 사용하여 네트워크 분석 문제를 해결하는 데 유용한 정보를 제공합니다."}],["$","meta","3",{"name":"keywords","content":"알고리즘"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/algorithm/%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EB%8A%94-%ED%94%8C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EC%9B%8C%EC%85%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B7%B8%EB%9E%98%ED%94%84-%EC%9D%B4%EB%A1%A0%EC%9D%98-%EA%B0%95%EB%A0%A5%ED%95%9C-%EB%8F%84%EA%B5%AC"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"쉽게 이해하는 플로이드 워셜 알고리즘: 그래프 이론의 강력한 도구 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"쉽게 이해하는 플로이드 워셜 알고리즘: 그래프 이론의 강력한 도구 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"플로이드 워셜 알고리즘은 그래프에서 모든 정점 쌍 간의 최단 경로를 찾는 데 사용되는 중요한 알고리즘입니다. 이 글에서는 플로이드 워셜 알고리즘의 기본 개념, 구현 방법, 응용 사례를 다룹니다. 교통 네트워크, 소셜 네트워크 분석 등 다양한 실제 문제 해결에 적용되며, 시간 복잡도와 최적화 기법도 논의합니다. 이 가이드는 알고리즘을 효과적으로 사용하여 네트워크 분석 문제를 해결하는 데 유용한 정보를 제공합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/algorithm/%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EB%8A%94-%ED%94%8C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EC%9B%8C%EC%85%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B7%B8%EB%9E%98%ED%94%84-%EC%9D%B4%EB%A1%A0%EC%9D%98-%EA%B0%95%EB%A0%A5%ED%95%9C-%EB%8F%84%EA%B5%AC"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/algorithmImg.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"쉽게 이해하는 플로이드 워셜 알고리즘: 그래프 이론의 강력한 도구 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"플로이드 워셜 알고리즘은 그래프에서 모든 정점 쌍 간의 최단 경로를 찾는 데 사용되는 중요한 알고리즘입니다. 이 글에서는 플로이드 워셜 알고리즘의 기본 개념, 구현 방법, 응용 사례를 다룹니다. 교통 네트워크, 소셜 네트워크 분석 등 다양한 실제 문제 해결에 적용되며, 시간 복잡도와 최적화 기법도 논의합니다. 이 가이드는 알고리즘을 효과적으로 사용하여 네트워크 분석 문제를 해결하는 데 유용한 정보를 제공합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/algorithmImg.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/algorithmImg.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"쉽게 이해하는 플로이드 워셜 알고리즘: 그래프 이론의 강력한 도구"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"쉽게 이해하는 플로이드 워셜 알고리즘: 그래프 이론의 강력한 도구"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-05-30"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h2",null,{"id":"d2e6a762","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"플로이드 워셜 알고리즘: 그래프 이론의 강력한 도구"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"플로이드 워셜 알고리즘(Floyd-Warshall Algorithm)은 그래프 이론에서 매우 중요한 알고리즘 중 하나로, 모든 정점 간의 최단 경로를 찾는 데 사용됩니다. 이 알고리즘은 동적 프로그래밍 기법을 사용하여 복잡한 문제를 단순하게 해결할 수 있는 강력한 도구로, 다양한 실제 문제에 적용될 수 있습니다. 이번 글에서는 플로이드 워셜 알고리즘의 기본 개념부터 응용 사례까지 자세히 살펴보겠습니다."}],"\n",["$","h3",null,{"id":"6fa58fc5","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 플로이드 워셜 알고리즘의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"플로이드 워셜 알고리즘은 주어진 가중치 그래프에서 모든 정점 간의 최단 경로를 찾는 알고리즘입니다. 이 알고리즘은 음수 가중치가 있는 그래프에서도 동작하지만, 음수 사이클이 있는 경우에는 적용할 수 없습니다. 기본적인 아이디어는 각 정점 쌍 사이의 최단 경로를 반복적으로 업데이트하여 최종적으로 모든 정점 쌍 사이의 최단 경로를 구하는 것입니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"알고리즘의 작동 방식은 다음과 같습니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":"초기화: 주어진 그래프의 인접 행렬을 사용하여 최단 경로 행렬을 초기화합니다. 직선 경로가 없는 경우 무한대로 설정합니다."}],"\n",["$","li","li-1",{"children":"반복 업데이트: 각 정점을 중간 정점으로 사용하여 모든 정점 쌍의 최단 경로를 업데이트합니다."}],"\n",["$","li","li-2",{"children":"결과 출력: 모든 정점 쌍 사이의 최단 경로를 포함하는 최종 행렬을 출력합니다."}],"\n"]}],"\n",["$","h3",null,{"id":"d0dc1e71","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 플로이드 워셜 알고리즘의 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"플로이드 워셜 알고리즘은 간단한 3중 루프를 사용하여 구현할 수 있습니다. 아래는 Python을 사용한 구현 예제입니다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"def floyd_warshall(graph):\n    # 정점의 수\n    V = len(graph)\n    # 최단 경로 행렬 초기화\n    dist = [[float('inf')] * V for _ in range(V)]\n\n    # 초기 경로 설정\n    for i in range(V):\n        for j in range(V):\n            if i == j:\n                dist[i][j] = 0\n            elif graph[i][j] != 0:\n                dist[i][j] = graph[i][j]\n\n    # 최단 경로 업데이트\n    for k in range(V):\n        for i in range(V):\n            for j in range(V):\n                dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j])\n\n    return dist\n"}],"position":{"start":{"line":20,"column":1,"offset":780},"end":{"line":42,"column":4,"offset":1302}}},"children":"def floyd_warshall(graph):\n    # 정점의 수\n    V = len(graph)\n    # 최단 경로 행렬 초기화\n    dist = [[float('inf')] * V for _ in range(V)]\n\n    # 초기 경로 설정\n    for i in range(V):\n        for j in range(V):\n            if i == j:\n                dist[i][j] = 0\n            elif graph[i][j] != 0:\n                dist[i][j] = graph[i][j]\n\n    # 최단 경로 업데이트\n    for k in range(V):\n        for i in range(V):\n            for j in range(V):\n                dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j])\n\n    return dist\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 코드는 입력으로 인접 행렬을 받아서 최단 경로 행렬을 반환합니다."}],"\n",["$","h3",null,{"id":"aad4b9c0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 플로이드 워셜 알고리즘의 응용 사례"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"플로이드 워셜 알고리즘은 다양한 실제 문제에 적용될 수 있습니다. 대표적인 응용 사례는 다음과 같습니다:"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"교통 네트워크 분석"}],": 도로 네트워크에서 모든 도시 간의 최단 경로를 계산하여 최적의 경로를 찾는 데 사용됩니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"소셜 네트워크 분석"}],": 소셜 네트워크에서 사용자 간의 관계를 분석하여 최단 경로를 찾고, 네트워크의 중심성을 분석하는 데 사용됩니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"통신 네트워크 최적화"}],": 통신 네트워크에서 데이터 패킷의 전송 경로를 최적화하여 네트워크 효율성을 높이는 데 사용됩니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"eb2f652c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"4. 플로이드 워셜 알고리즘의 장단점"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"플로이드 워셜 알고리즘은 강력한 알고리즘이지만, 모든 알고리즘이 그렇듯 장단점이 있습니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"장점"}],":"]}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":"모든 정점 쌍 간의 최단 경로를 한 번의 실행으로 계산할 수 있습니다."}],"\n",["$","li","li-1",{"children":"구현이 비교적 간단하며 이해하기 쉽습니다."}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"단점"}],":"]}],"\n",["$","ul","ul-2",{"children":["\n",["$","li","li-0",{"children":"시간 복잡도가 (O(V^3))이기 때문에, 정점의 수가 많을 경우 계산 비용이 높습니다."}],"\n",["$","li","li-1",{"children":"음수 사이클이 있는 그래프에서는 적용할 수 없습니다."}],"\n"]}],"\n",["$","h3",null,{"id":"556733f4","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"5. 플로이드 워셜 알고리즘 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"플로이드 워셜 알고리즘은 큰 그래프에서 사용하기 어려울 수 있지만, 몇 가지 최적화 기법을 통해 성능을 개선할 수 있습니다."}],"\n",["$","ul","ul-3",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"메모리 사용 최적화"}],": 2차원 배열 대신 1차원 배열을 사용하여 메모리 사용을 줄일 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"병렬 처리"}],": 여러 프로세서를 사용하여 병렬로 계산함으로써 실행 시간을 단축할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"희소 그래프 최적화"}],": 그래프가 희소한 경우, 플로이드 워셜 알고리즘 대신 다른 최단 경로 알고리즘(예: 다익스트라 알고리즘)을 사용하는 것이 더 효율적일 수 있습니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"1dafc10d","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"6. 결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"플로이드 워셜 알고리즘은 그래프 이론에서 매우 중요한 알고리즘으로, 다양한 응용 사례에서 강력한 도구로 사용될 수 있습니다. 이 알고리즘의 기본 원리와 구현 방법을 이해하고, 최적화 기법을 통해 성능을 개선하면, 복잡한 네트워크 분석 문제를 효과적으로 해결할 수 있습니다. 앞으로도 플로이드 워셜 알고리즘을 활용하여 다양한 문제를 해결하는 데 유용하게 사용되기를 기대합니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"쉽게 이해하는 플로이드 워셜 알고리즘: 그래프 이론의 강력한 도구","toc":[{"tagName":"h2","title":"플로이드 워셜 알고리즘: 그래프 이론의 강력한 도구","id":"d2e6a762"},{"tagName":"h3","title":"1. 플로이드 워셜 알고리즘의 기본 개념","id":"6fa58fc5"},{"tagName":"h3","title":"2. 플로이드 워셜 알고리즘의 구현","id":"d0dc1e71"},{"tagName":"h3","title":"3. 플로이드 워셜 알고리즘의 응용 사례","id":"aad4b9c0"},{"tagName":"h3","title":"4. 플로이드 워셜 알고리즘의 장단점","id":"eb2f652c"},{"tagName":"h3","title":"5. 플로이드 워셜 알고리즘 최적화","id":"556733f4"},{"tagName":"h3","title":"6. 결론","id":"1dafc10d"}],"language":"kr"}]}]]}]]
8:null
