1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["algorithm",{"children":[["slug","algorithm-%EA%B9%8A%EC%9D%B4-%EC%9A%B0%EC%84%A0-%ED%83%90%EC%83%89-DFS-%EC%9D%B4%EB%9E%80","d"],{"children":["__PAGE__?{\"slug\":\"algorithm-깊이-우선-탐색-DFS-이란\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children",["slug","algorithm-%EA%B9%8A%EC%9D%B4-%EC%9A%B0%EC%84%A0-%ED%83%90%EC%83%89-DFS-%EC%9D%B4%EB%9E%80","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"algorithm-깊이-우선-탐색-DFS-이란\"}"},"styles":[]}],"segment":["slug","algorithm-%EA%B9%8A%EC%9D%B4-%EC%9A%B0%EC%84%A0-%ED%83%90%EC%83%89-DFS-%EC%9D%B4%EB%9E%80","d"]},"styles":[]}],"segment":"algorithm"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"깊이 우선 탐색(DFS)이란? DFS 알고리즘 생각보다 어렵지 않아요 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"깊이 우선 탐색(DFS)은 그래프의 모든 정점을 방문하는 알고리즘으로, 스택을 사용해 경로를 추적하며 최대한 깊이 탐색합니다. 이 글에서는 DFS의 기본 개념, 구현 방법, 응용 사례, 장단점을 설명합니다. DFS는 경로 찾기, 사이클 탐지 등 다양한 문제에 사용됩니다."}],["$","meta","3",{"name":"keywords","content":"알고리즘"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/algorithm/algorithm-%EA%B9%8A%EC%9D%B4-%EC%9A%B0%EC%84%A0-%ED%83%90%EC%83%89-DFS-%EC%9D%B4%EB%9E%80"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"깊이 우선 탐색(DFS)이란? DFS 알고리즘 생각보다 어렵지 않아요 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"깊이 우선 탐색(DFS)이란? DFS 알고리즘 생각보다 어렵지 않아요 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"깊이 우선 탐색(DFS)은 그래프의 모든 정점을 방문하는 알고리즘으로, 스택을 사용해 경로를 추적하며 최대한 깊이 탐색합니다. 이 글에서는 DFS의 기본 개념, 구현 방법, 응용 사례, 장단점을 설명합니다. DFS는 경로 찾기, 사이클 탐지 등 다양한 문제에 사용됩니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/algorithm/algorithm-%EA%B9%8A%EC%9D%B4-%EC%9A%B0%EC%84%A0-%ED%83%90%EC%83%89-DFS-%EC%9D%B4%EB%9E%80"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/algorithmImg.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"깊이 우선 탐색(DFS)이란? DFS 알고리즘 생각보다 어렵지 않아요 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"깊이 우선 탐색(DFS)은 그래프의 모든 정점을 방문하는 알고리즘으로, 스택을 사용해 경로를 추적하며 최대한 깊이 탐색합니다. 이 글에서는 DFS의 기본 개념, 구현 방법, 응용 사례, 장단점을 설명합니다. DFS는 경로 찾기, 사이클 탐지 등 다양한 문제에 사용됩니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/algorithmImg.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/algorithmImg.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"깊이 우선 탐색(DFS)이란? DFS 알고리즘 생각보다 어렵지 않아요"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"깊이 우선 탐색(DFS)이란? DFS 알고리즘 생각보다 어렵지 않아요"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-05-30"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h2",null,{"id":"52a1b9c4","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"깊이 우선 탐색(DFS)이란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"깊이 우선 탐색(Depth-First Search, DFS)은 그래프 탐색 알고리즘의 하나로, 트리나 그래프의 모든 정점을 방문하는 방법 중 하나입니다. DFS는 스택을 사용하여 현재 경로를 추적하고, 더 이상 탐색할 정점이 없을 때까지 한 경로를 따라 깊이 들어가는 방식으로 작동합니다. 이 글에서는 DFS의 기본 개념, 구현 방법, 응용 사례, 그리고 장단점에 대해 자세히 설명하겠습니다."}],"\n",["$","h3",null,{"id":"6b137c64","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 깊이 우선 탐색의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"DFS는 시작 정점에서 출발하여 한 정점에서 다른 정점으로 최대한 깊숙이 들어간 후, 더 이상 갈 곳이 없으면 다시 돌아와 다른 경로를 탐색하는 방식입니다. 이를 반복하여 모든 정점을 방문하게 됩니다. DFS는 주로 다음과 같은 단계로 구성됩니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"시작 정점 선택"}],": 탐색을 시작할 정점을 선택합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"방문 표시"}],": 현재 정점을 방문했다고 표시합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"깊이 탐색"}],": 인접한 정점 중 아직 방문하지 않은 정점이 있으면 그 정점으로 이동하여 탐색을 계속합니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"백트래킹"}],": 인접한 모든 정점을 방문했으면 이전 정점으로 돌아가 다른 경로를 탐색합니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"a3aa0b9c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 깊이 우선 탐색의 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"DFS는 재귀와 비재귀(스택 사용) 두 가지 방법으로 구현할 수 있습니다. 여기서는 두 가지 방법 모두를 살펴보겠습니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"재귀를 이용한 DFS 구현"}],":"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"def dfs_recursive(graph, v, visited):\n    visited[v] = True\n    print(v, end=' ')\n\n    for neighbor in graph[v]:\n        if not visited[neighbor]:\n            dfs_recursive(graph, neighbor, visited)\n\n# 그래프를 인접 리스트로 표현\ngraph = {\n    0: [1, 2],\n    1: [0, 3, 4],\n    2: [0, 5],\n    3: [1],\n    4: [1],\n    5: [2]\n}\n\n# 방문 여부를 저장하는 리스트\nvisited = [False] * len(graph)\n\n# DFS 호출\ndfs_recursive(graph, 0, visited)\n"}],"position":{"start":{"line":21,"column":1,"offset":710},"end":{"line":45,"column":4,"offset":1129}}},"children":"def dfs_recursive(graph, v, visited):\n    visited[v] = True\n    print(v, end=' ')\n\n    for neighbor in graph[v]:\n        if not visited[neighbor]:\n            dfs_recursive(graph, neighbor, visited)\n\n# 그래프를 인접 리스트로 표현\ngraph = {\n    0: [1, 2],\n    1: [0, 3, 4],\n    2: [0, 5],\n    3: [1],\n    4: [1],\n    5: [2]\n}\n\n# 방문 여부를 저장하는 리스트\nvisited = [False] * len(graph)\n\n# DFS 호출\ndfs_recursive(graph, 0, visited)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"스택을 이용한 비재귀 DFS 구현"}],":"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"def dfs_stack(graph, start):\n    visited = [False] * len(graph)\n    stack = [start]\n\n    while stack:\n        v = stack.pop()\n\n        if not visited[v]:\n            print(v, end=' ')\n            visited[v] = True\n\n            for neighbor in reversed(graph[v]):\n                if not visited[neighbor]:\n                    stack.append(neighbor)\n\n# 그래프를 인접 리스트로 표현\ngraph = {\n    0: [1, 2],\n    1: [0, 3, 4],\n    2: [0, 5],\n    3: [1],\n    4: [1],\n    5: [2]\n}\n\n# DFS 호출\ndfs_stack(graph, 0)\n"}],"position":{"start":{"line":49,"column":1,"offset":1156},"end":{"line":77,"column":4,"offset":1661}}},"children":"def dfs_stack(graph, start):\n    visited = [False] * len(graph)\n    stack = [start]\n\n    while stack:\n        v = stack.pop()\n\n        if not visited[v]:\n            print(v, end=' ')\n            visited[v] = True\n\n            for neighbor in reversed(graph[v]):\n                if not visited[neighbor]:\n                    stack.append(neighbor)\n\n# 그래프를 인접 리스트로 표현\ngraph = {\n    0: [1, 2],\n    1: [0, 3, 4],\n    2: [0, 5],\n    3: [1],\n    4: [1],\n    5: [2]\n}\n\n# DFS 호출\ndfs_stack(graph, 0)\n"}}]}],"\n",["$","h3",null,{"id":"f1676b7d","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 깊이 우선 탐색의 응용 사례"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"DFS는 다양한 문제 해결에 적용될 수 있습니다. 대표적인 응용 사례는 다음과 같습니다:"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"경로 찾기"}],": 특정 정점에서 다른 정점까지의 경로를 찾는 데 사용됩니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"사이클 탐지"}],": 그래프 내에 사이클이 존재하는지 확인할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"위상 정렬"}],": 방향 그래프의 위상 정렬을 수행하는 데 사용됩니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"강한 연결 요소"}],": 방향 그래프에서 강한 연결 요소를 찾는 Kosaraju 또는 Tarjan 알고리즘의 일부로 사용됩니다."]}],"\n",["$","li","li-4",{"children":[["$","strong",null,{"className":"font-black","children":"미로 탐색"}],": 미로의 출구를 찾거나 모든 가능한 경로를 탐색하는 데 활용됩니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"ca50830b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"4. 깊이 우선 탐색의 장단점"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"DFS는 여러 가지 장점과 단점을 가지고 있습니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"장점"}],":"]}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"메모리 효율성"}],": DFS는 현재 경로만 저장하므로, 방문해야 할 정점이 많지 않다면 메모리 사용량이 적습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"단순한 구현"}],": 재귀 호출을 이용해 간단하게 구현할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"경로 탐색"}],": 특정 경로를 찾는 데 매우 효과적입니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"단점"}],":"]}],"\n",["$","ul","ul-2",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"깊이 제한 문제"}],": 매우 깊은 그래프에서는 스택 오버플로우가 발생할 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"비효율적 경로 탐색"}],": 최단 경로를 찾는 데는 적합하지 않습니다. DFS는 모든 경로를 탐색하지 않기 때문입니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"무한 루프"}],": 순환이 있는 그래프에서 방문을 추적하지 않으면 무한 루프에 빠질 수 있습니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"6d452830","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"5. 깊이 우선 탐색의 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"DFS의 성능을 최적화하려면 다음과 같은 기법을 사용할 수 있습니다:"}],"\n",["$","ul","ul-3",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"방문 확인 최적화"}],": 방문 여부를 효율적으로 확인할 수 있는 데이터 구조를 사용합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"모든 경로 탐색 방지"}],": 특정 조건을 만족하는 경로를 찾으면 탐색을 중단하는 로직을 추가합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"메모이제이션"}],": 이미 계산한 경로를 저장하여 중복 계산을 방지합니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"5b12bcf2","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"깊이 우선 탐색(DFS)은 그래프 탐색에서 중요한 역할을 하는 알고리즘으로, 다양한 문제 해결에 사용될 수 있습니다. DFS는 단순한 구현과 효율적인 메모리 사용으로 인해 많은 응용 분야에서 사용되지만, 깊이 제한 문제와 비효율적 경로 탐색 등의 단점도 가지고 있습니다. 이 글에서 설명한 DFS의 개념과 구현, 응용 사례, 그리고 최적화 기법을 이해하면, 그래프 탐색 문제를 효과적으로 해결하는 데 도움이 될 것입니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"깊이 우선 탐색(DFS)이란? DFS 알고리즘 생각보다 어렵지 않아요","toc":[{"tagName":"h2","title":"깊이 우선 탐색(DFS)이란?","id":"52a1b9c4"},{"tagName":"h3","title":"1. 깊이 우선 탐색의 기본 개념","id":"6b137c64"},{"tagName":"h3","title":"2. 깊이 우선 탐색의 구현","id":"a3aa0b9c"},{"tagName":"h3","title":"3. 깊이 우선 탐색의 응용 사례","id":"f1676b7d"},{"tagName":"h3","title":"4. 깊이 우선 탐색의 장단점","id":"ca50830b"},{"tagName":"h3","title":"5. 깊이 우선 탐색의 최적화","id":"6d452830"},{"tagName":"h3","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
