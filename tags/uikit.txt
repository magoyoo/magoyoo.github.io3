1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["tags",{"children":[["slug","uikit","d"],{"children":["__PAGE__?{\"slug\":\"uikit\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
9:I{"id":1247,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","396:static/chunks/396-5bd701a67a6189e9.js","355:static/chunks/app/tags/[slug]/page-4363d8d5fe95e0a7.js"],"name":"","async":false}
a:I{"id":41465,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","396:static/chunks/396-5bd701a67a6189e9.js","355:static/chunks/app/tags/[slug]/page-4363d8d5fe95e0a7.js"],"name":"","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children",["slug","uikit","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8",["$","div",null,{"className":"pt-[80px]","children":[["$","$L9",null,{"language":"app","screenType":"TAGS"}],["$","main",null,{"className":"flex w-full justify-center","children":["$","div",null,{"className":"flex flex-row justify-start xl:w-[800px] w-full px-[20px] py-[40px] md:px-[40px] md:pb-[80px] md:pt-[60px] gap-[80px]","children":["$","section",null,{"className":"flex flex-1 flex-col gap-[80px]","children":[["$","h2",null,{"className":"md:flex hidden text-gray-900 font-semibold text-[22px]","children":"uikit 관련글"}],["$","ul",null,{"className":"flex flex-1 flex-col gap-[80px]","children":[["$","li","비디오 플레이어와 UIKit: 동영상 재생 기능 구현0",{"children":["$","$La",null,{"postMeta":{"id":"93992241-a0ab-4028-bee7-78b6ef317330","path":"/swift/비디오-플레이어와-UIKit-동영상-재생-기능-구현-93992241","title":"비디오 플레이어와 UIKit: 동영상 재생 기능 구현","description":"이 글에서는 Swift와 UIKit을 사용하여 비디오 플레이어 기능을 구현하는 방법에 대해 다룹니다. AVKit과 AVFoundation 프레임워크를 활용하여 간단한 비디오 플레이어를 만드는 과정을 단계별로 설명합니다.","date":"2024-08-05T06:02:46.198Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"uikit","path":"/tags/uikit","id":"uikit"},{"name":"비디오 플레이어","path":"/tags/비디오-플레이어","id":"비디오-플레이어"},{"name":"동영상 재생","path":"/tags/동영상-재생","id":"동영상-재생"}],"readMin":"4.5","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":0,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Core Graphics와 UIKit 연동: 그래픽 그리기 기법1",{"children":["$","$La",null,{"postMeta":{"id":"aa4ebb0b-23fd-48de-9282-1c5511e6265a","path":"/swift/Core-Graphics와-UIKit-연동-그래픽-그리기-기법-aa4ebb0b","title":"Core Graphics와 UIKit 연동: 그래픽 그리기 기법","description":"이 문서에서는 Swift를 사용하여 Core Graphics와 UIKit을 연동하고 그래픽을 그리는 방법에 대해 설명합니다. UIKit의 뷰와 Core Graphics의 기능을 결합하여 복잡하고 다양한 그래픽을 만드는 과정을 다룹니다.","date":"2024-08-05T06:00:15.288Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"Core Graphics","path":"/tags/core-graphics","id":"core-graphics"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"그래픽","path":"/tags/그래픽","id":"그래픽"}],"readMin":"3.9","category":"swift","banner":"/images/swiftBanner4.jpg"},"index":1,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit에서 PDF 뷰어 만들기: 문서 보기 기능 추가2",{"children":["$","$La",null,{"postMeta":{"id":"9c19ca68-a763-4b06-b933-038305838594","path":"/swift/UIKit에서-PDF-뷰어-만들기-문서-보기-기능-추가-9c19ca68","title":"UIKit에서 PDF 뷰어 만들기: 문서 보기 기능 추가","description":"이 글에서는 Swift에서 UIKit을 사용하여 PDF 뷰어를 만드는 방법과 문서 보기 기능을 추가하는 절차를 설명합니다. 기본적인 PDF 로딩, 페이지 넘김 기능 및 간단한 사용자 인터페이스 요소들을 다룹니다.","date":"2024-08-02T06:03:29.851Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"PDFViewer","path":"/tags/pdfviewer","id":"pdfviewer"},{"name":"iOSDevelopment","path":"/tags/iosdevelopment","id":"iosdevelopment"}],"readMin":"4.5","category":"swift","banner":"/images/swiftBanner5.jpg"},"index":2,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit의 Dynamic Type 지원: 반응형 텍스트 크기 적용3",{"children":["$","$La",null,{"postMeta":{"id":"d7fdeec9-47be-4706-818e-144080da76cf","path":"/swift/UIKit의-Dynamic-Type-지원-반응형-텍스트-크기-적용-d7fdeec9","title":"UIKit의 Dynamic Type 지원: 반응형 텍스트 크기 적용","description":"이 글에서는 iOS 앱 개발에 필수적인 UIKit의 Dynamic Type 지원을 통해 반응형 텍스트 크기를 적용하는 방법을 다룹니다. Dynamic Type은 사용자가 원하는 텍스트 크기 설정에 맞추어 앱의 텍스트 요소들이 자동으로 조정되도록 합니다.","date":"2024-08-01T06:01:08.418Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"Dynamic Type","path":"/tags/dynamic-type","id":"dynamic-type"},{"name":"iOS 개발","path":"/tags/ios-개발","id":"ios-개발"}],"readMin":"4.6","category":"swift","banner":"/images/swiftBanner1.jpg"},"index":3,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit의 접근성 기능: 모든 사용자를 위한 앱 디자인4",{"children":["$","$La",null,{"postMeta":{"id":"89296866-f6f9-441c-97bd-a08fb8647f55","path":"/swift/UIKit의-접근성-기능-모든-사용자를-위한-앱-디자인-89296866","title":"UIKit의 접근성 기능: 모든 사용자를 위한 앱 디자인","description":"이 글에서는 Swift를 사용한 UIKit의 접근성 기능과 이를 통해 모든 사용자를 위한 앱 디자인 방법에 대해 설명합니다. 접근성 기능을 잘 활용하면 더욱 많은 사용자들이 애플리케이션을 이용할 수 있게 됩니다.","date":"2024-08-01T06:00:41.856Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"Accessibility","path":"/tags/accessibility","id":"accessibility"},{"name":"앱 디자인","path":"/tags/앱-디자인","id":"앱-디자인"}],"readMin":"5.3","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":4,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit으로 복잡한 UI 구성하기: 고급 레이아웃 기법5",{"children":["$","$La",null,{"postMeta":{"id":"76811f35-0446-495e-86e0-4373188fb02b","path":"/swift/UIKit으로-복잡한-UI-구성하기-고급-레이아웃-기법-76811f35","title":"UIKit으로 복잡한 UI 구성하기: 고급 레이아웃 기법","description":"이 글은 Swift의 UIKit을 사용하여 복잡한 UI를 구성하는 고급 레이아웃 기법에 대해 설명합니다. 다양한 레이아웃 기법과 그 사용법을 통해 개발자는 더욱 직관적이고 효율적으로 앱의 UI를 구성할 수 있습니다.","date":"2024-07-31T06:01:30.387Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"UI","path":"/tags/ui","id":"ui"},{"name":"레이아웃","path":"/tags/레이아웃","id":"레이아웃"}],"readMin":"5.2","category":"swift","banner":"/images/swiftBanner5.jpg"},"index":5,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit에서 Core Image 사용하기: 이미지 처리 및 필터 적용6",{"children":["$","$La",null,{"postMeta":{"id":"242c3c66-58d0-4cf1-9c2c-7451a32ab944","path":"/swift/UIKit에서-Core-Image-사용하기-이미지-처리-및-필터-적용-242c3c66","title":"UIKit에서 Core Image 사용하기: 이미지 처리 및 필터 적용","description":"이 글은 Swift의 UIKit 프레임워크를 이용하여 Core Image를 사용해 이미지 처리 및 필터를 적용하는 방법에 대해 설명합니다. Core Image의 기본 개념부터 실제 코드 예제까지 자세히 다룹니다.","date":"2024-07-25T06:03:51.984Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"Core Image","path":"/tags/core-image","id":"core-image"},{"name":"이미지 처리","path":"/tags/이미지-처리","id":"이미지-처리"}],"readMin":"5.2","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":6,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit의 버튼과 액션 처리 방법7",{"children":["$","$La",null,{"postMeta":{"id":"eea54508-5627-414a-9f61-681bf314ae0d","path":"/swift/UIKit의-버튼과-액션-처리-방법-eea54508","title":"UIKit의 버튼과 액션 처리 방법","description":"이 글에서는 Swift 언어와 iOS 개발에서 사용되는 UIKit을 활용하여 버튼을 생성하고 버튼의 액션을 처리하는 방법에 대해 다룹니다. 이 가이드는 기본적인 버튼 사용법부터 커스터마이징 방법, 그리고 다양한 액션 처리 기법까지 설명합니다.","date":"2024-07-24T06:00:31.888Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"Button","path":"/tags/button","id":"button"}],"readMin":"4.9","category":"swift","banner":"/images/swiftBanner5.jpg"},"index":7,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit의 Advanced Auto Layout: 복잡한 레이아웃 제어8",{"children":["$","$La",null,{"postMeta":{"id":"4163e2fc-8b6c-4bf0-9342-a5ed5560932e","path":"/swift/UIKit의-Advanced-Auto-Layout-복잡한-레이아웃-제어-4163e2fc","title":"UIKit의 Advanced Auto Layout: 복잡한 레이아웃 제어","description":"이 글에서는 iOS 개발을 위한 UIKit의 고급 자동 레이아웃 기능을 다룹니다. 복잡한 사용자 인터페이스를 효과적으로 구성하고 제어하는 방법을 설명합니다.","date":"2024-07-22T06:02:35.552Z","tags":[{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"Auto Layout","path":"/tags/auto-layout","id":"auto-layout"},{"name":"iOS 개발","path":"/tags/ios-개발","id":"ios-개발"},{"name":"고급","path":"/tags/고급","id":"고급"}],"readMin":"5.1","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":8,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit과 Metal 연동: 고성능 그래픽 구현9",{"children":["$","$La",null,{"postMeta":{"id":"9c90d156-f43c-4615-810c-1e2c05246b33","path":"/swift/UIKit과-Metal-연동-고성능-그래픽-구현-9c90d156","title":"UIKit과 Metal 연동: 고성능 그래픽 구현","description":"이 글에서는 Swift로 iOS 애플리케이션을 개발할 때, UIKit과 Metal을 연동하여 고성능 그래픽을 구현하는 방법을 설명합니다. 이를 통해 Metal의 강력한 그래픽 처리 능력을 UIKit 인터페이스와 통합하여 놀라운 사용자 경험을 제공할 수 있습니다.","date":"2024-07-22T06:02:07.474Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"Metal","path":"/tags/metal","id":"metal"},{"name":"그래픽","path":"/tags/그래픽","id":"그래픽"}],"readMin":"5.5","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":9,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit의 네트워크 통신: URLSession 활용10",{"children":["$","$La",null,{"postMeta":{"id":"1b596b4f-5b04-4c80-b571-cdb81f58e87b","path":"/swift/UIKit의-네트워크-통신-URLSession-활용-1b596b4f","title":"UIKit의 네트워크 통신: URLSession 활용","description":"이 글은 Swift의 UIKit에서 네트워크 통신을 구현하기 위해 URLSession을 사용하는 방법을 다루고 있습니다. 기본 개념부터 실전 예제까지 단계별로 설명하여, 네트워크 요청을 효율적으로 처리하는 방법을 이해할 수 있습니다.","date":"2024-07-21T06:02:44.850Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"URLSession","path":"/tags/urlsession","id":"urlsession"},{"name":"네트워크 통신","path":"/tags/네트워크-통신","id":"네트워크-통신"}],"readMin":"5.1","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":10,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit의 Custom Transition: 맞춤형 화면 전환 효과11",{"children":["$","$La",null,{"postMeta":{"id":"e473e007-c88d-4c78-934d-e9a3afdb56e5","path":"/swift/UIKit의-Custom-Transition-맞춤형-화면-전환-효과-e473e007","title":"UIKit의 Custom Transition: 맞춤형 화면 전환 효과","description":"이 글은 Swift의 UIKit을 이용해 커스텀 화면 전환 효과를 구현하는 방법에 대해 설명합니다. 기본적인 개념, 필요한 클래스 및 프로토콜, 예제 코드 등을 포함하여 깊이 있게 다룰 것입니다.","date":"2024-07-21T06:00:33.475Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"커스텀 트랜지션","path":"/tags/커스텀-트랜지션","id":"커스텀-트랜지션"},{"name":"iOS 개발","path":"/tags/ios-개발","id":"ios-개발"}],"readMin":"4.7","category":"swift","banner":"/images/swiftBanner5.jpg"},"index":11,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit에서 SceneKit 통합: 3D 그래픽 및 애니메이션12",{"children":["$","$La",null,{"postMeta":{"id":"d009016d-bd11-40c0-9262-a9c4673d8996","path":"/swift/UIKit에서-SceneKit-통합-D-그래픽-및-애니메이션-d009016d","title":"UIKit에서 SceneKit 통합: 3D 그래픽 및 애니메이션","description":"UIKit에서 SceneKit을 활용하여 3D 그래픽과 애니메이션을 통합하는 방법에 대한 자세한 안내입니다. 이 글에서는 SceneKit의 기본 설정부터 기본적인 3D 객체 생성, 그리고 애니메이션 구현까지 다루며, 실질적인 예제를 통해 설명합니다.","date":"2024-07-19T06:04:00.889Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"SceneKit","path":"/tags/scenekit","id":"scenekit"},{"name":"3D Animation","path":"/tags/3d-animation","id":"3d-animation"}],"readMin":"4.8","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":12,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Core Motion과 UIKit 연동: 센서 데이터 처리13",{"children":["$","$La",null,{"postMeta":{"id":"83652fa5-f8bc-4f38-b307-10cab8702a9f","path":"/swift/Core-Motion과-UIKit-연동-센서-데이터-처리-83652fa5","title":"Core Motion과 UIKit 연동: 센서 데이터 처리","description":"이 글은 Apple의 `Core Motion` 프레임워크와 `UIKit`을 연동하여 센서 데이터를 처리하는 방법에 대해 설명합니다. 자세한 구현 방법과 예제 코드를 포함하여 `Core Motion`의 기능을 최대한 활용하는 방법을 다룹니다.","date":"2024-07-18T06:05:31.966Z","tags":[{"name":"Core Motion","path":"/tags/core-motion","id":"core-motion"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"iOS 개발","path":"/tags/ios-개발","id":"ios-개발"},{"name":"센서 데이터","path":"/tags/센서-데이터","id":"센서-데이터"}],"readMin":"5.2","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":13,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit의 기본 애니메이션: 뷰에 생동감 더하기14",{"children":["$","$La",null,{"postMeta":{"id":"ad9901e9-496d-4f56-a6a9-4f4ee993f377","path":"/swift/UIKit의-기본-애니메이션-뷰에-생동감-더하기-ad9901e9","title":"UIKit의 기본 애니메이션: 뷰에 생동감 더하기","description":"이 글은 Swift의 UIKit을 사용하여 기본적인 애니메이션을 뷰에 적용하는 방법에 대해 설명합니다. 예제를 통해 애니메이션의 기본 원리와 UIView의 다양한 애니메이션 메서드를 알아봅니다.","date":"2024-07-18T06:03:08.238Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"애니메이션","path":"/tags/애니메이션","id":"애니메이션"}],"readMin":"5.4","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":14,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit의 Drag and Drop 기능: 드래그 앤 드롭 구현15",{"children":["$","$La",null,{"postMeta":{"id":"250c6bb9-07fb-4b56-8918-405c7215a8c8","path":"/swift/UIKit의-Drag-and-Drop-기능-드래그-앤-드롭-구현-250c6bb9","title":"UIKit의 Drag and Drop 기능: 드래그 앤 드롭 구현","description":"이 글에서는 Swift를 사용하여 iOS 애플리케이션에서 UIKit의 Drag and Drop 기능을 구현하는 방법에 대해 설명합니다. 기본 구성 요소부터 고급 설정까지 단계별로 안내하여 쉽게 따라 할 수 있도록 도와드립니다.","date":"2024-07-17T06:01:12.946Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"Drag and Drop","path":"/tags/drag-and-drop","id":"drag-and-drop"},{"name":"iOS","path":"/tags/ios","id":"ios"}],"readMin":"5.2","category":"swift","banner":"/images/swiftBanner1.jpg"},"index":15,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit으로 그리기 및 터치 이벤트 처리: 사용자 인터랙션 구현16",{"children":["$","$La",null,{"postMeta":{"id":"52507da9-2f2b-4d66-aa06-425e50fe7950","path":"/swift/UIKit으로-그리기-및-터치-이벤트-처리-사용자-인터랙션-구현-52507da9","title":"UIKit으로 그리기 및 터치 이벤트 처리: 사용자 인터랙션 구현","description":"UIKit을 사용한 그리기와 터치 이벤트 처리를 통해 사용자 인터랙션을 구현하는 방법을 다룹니다. 이 글은 iOS 개발자들이 UIKit을 활용해 사용자 인터페이스와 인터랙션을 더 효과적으로 구현할 수 있도록 돕기 위한 튜토리얼입니다.","date":"2024-07-16T06:03:24.563Z","tags":[{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"그리기","path":"/tags/그리기","id":"그리기"},{"name":"터치 이벤트","path":"/tags/터치-이벤트","id":"터치-이벤트"}],"readMin":"5.9","category":"swift","banner":"/images/swiftBanner1.jpg"},"index":16,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit 시작하기: 기본 레이아웃 구성 가이드17",{"children":["$","$La",null,{"postMeta":{"id":"6bcf3ba5-0cdb-4e71-8f8f-8594a6dc804f","path":"/swift/UIKit-시작하기-기본-레이아웃-구성-가이드-6bcf3ba5","title":"UIKit 시작하기: 기본 레이아웃 구성 가이드","description":"이 글은 iOS 개발에 사용되는 UIKit의 기본 레이아웃 구성 방법을 설명합니다. UIView와 Auto Layout을 사용하여 앱의 UI를 만드는 기초적인 방법을 다룹니다.","date":"2024-07-15T06:01:03.287Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"AutoLayout","path":"/tags/autolayout","id":"autolayout"}],"readMin":"3.9","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":17,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit으로 게임 만들기: 인터랙티브 앱 개발18",{"children":["$","$La",null,{"postMeta":{"id":"cfe3f683-eafc-4734-bc25-393503b23f5e","path":"/swift/UIKit으로-게임-만들기-인터랙티브-앱-개발-cfe3f683","title":"UIKit으로 게임 만들기: 인터랙티브 앱 개발","description":"이 글은 Swift와 UIKit을 사용하여 간단한 인터랙티브 게임 앱을 만드는 방법을 설명합니다. 단계별 튜토리얼을 통해 뼈대를 구성하고, 사용자 인터랙션을 처리하고, 게임의 논리를 구현합니다.","date":"2024-07-13T06:02:18.819Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"iOS 개발","path":"/tags/ios-개발","id":"ios-개발"},{"name":"게임 개발","path":"/tags/게임-개발","id":"게임-개발"}],"readMin":"4.8","category":"swift","banner":"/images/swiftBanner4.jpg"},"index":18,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","AVFoundation과 UIKit: 오디오 및 비디오 통합19",{"children":["$","$La",null,{"postMeta":{"id":"1a3a73e2-38e1-4a37-b625-566c8e946425","path":"/swift/AVFoundation과-UIKit-오디오-및-비디오-통합-1a3a73e2","title":"AVFoundation과 UIKit: 오디오 및 비디오 통합","description":"AVFoundation와 UIKit은 iOS 애플리케이션에서 오디오 및 비디오 콘텐츠를 처리하고 통합하는 강력한 도구들입니다. 이 글은 AVFoundation과 UIKit을 사용하여 오디오 및 비디오 통합을 구현하는 방법에 대해 자세히 설명합니다.","date":"2024-07-13T06:01:30.336Z","tags":[{"name":"AVFoundation","path":"/tags/avfoundation","id":"avfoundation"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"iOS 개발","path":"/tags/ios-개발","id":"ios-개발"},{"name":"오디오 비디오","path":"/tags/오디오-비디오","id":"오디오-비디오"}],"readMin":"4.8","category":"swift","banner":"/images/swiftBanner1.jpg"},"index":19,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Core Data와 UIKit 통합: 데이터 지속성 관리20",{"children":["$","$La",null,{"postMeta":{"id":"46391073-7ab9-454a-a495-81648e26e47e","path":"/swift/Core-Data와-UIKit-통합-데이터-지속성-관리-46391073","title":"Core Data와 UIKit 통합: 데이터 지속성 관리","description":"Core Data와 UIKit을 통합하여 iOS 앱의 데이터 지속성을 관리하는 방법을 다룹니다. 다양한 사례와 코드 예제를 통해 Core Data의 기본 개념과 이를 UIKit과 결합하여 효율적인 데이터 관리 시스템을 구축하는 방법을 설명합니다.","date":"2024-07-12T06:02:13.203Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"Core Data","path":"/tags/core-data","id":"core-data"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"iOS","path":"/tags/ios","id":"ios"}],"readMin":"6.4","category":"swift","banner":"/images/swiftBanner4.jpg"},"index":20,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit에서 Core Animation 사용하기: 고급 애니메이션 기법21",{"children":["$","$La",null,{"postMeta":{"id":"e6d0e0de-43bb-4080-b7c9-d5a12e56f0e3","path":"/swift/UIKit에서-Core-Animation-사용하기-고급-애니메이션-기법-e6d0e0de","title":"UIKit에서 Core Animation 사용하기: 고급 애니메이션 기법","description":"이 글에서는 Swift로 개발할 때 UIKit에서 Core Animation을 활용하여 고급 애니메이션 기법을 구현하는 방법을 다룹니다. 기본적인 개념부터 시작해 실습 예제까지 단계적으로 설명합니다.","date":"2024-07-11T06:04:27.218Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"Core Animation","path":"/tags/core-animation","id":"core-animation"},{"name":"고급 애니메이션","path":"/tags/고급-애니메이션","id":"고급-애니메이션"}],"readMin":"4.5","category":"swift","banner":"/images/swiftBanner1.jpg"},"index":21,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit의 제스처 인식기 사용법: 다양한 제스처 처리22",{"children":["$","$La",null,{"postMeta":{"id":"e76745f3-cdb5-4725-a692-8d84dc2f5bb4","path":"/swift/UIKit의-제스처-인식기-사용법-다양한-제스처-처리-e76745f3","title":"UIKit의 제스처 인식기 사용법: 다양한 제스처 처리","description":"이 글은 Swift에서 UIKit의 제스처 인식기를 사용하여 다양한 제스처를 처리하는 방법에 대해 다룹니다. 여러 제스처의 등록과 사용 예제를 포함하여 개발자가 다채로운 사용자 경험을 구현하는데 필요한 필수 정보를 제공합니다.","date":"2024-07-10T06:00:48.512Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"제스처 인식기","path":"/tags/제스처-인식기","id":"제스처-인식기"},{"name":"iOS 개발","path":"/tags/ios-개발","id":"ios-개발"}],"readMin":"4.7","category":"swift","banner":"/images/swiftBanner4.jpg"},"index":22,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit에서 layoutSubviews의 라이프사이클 이해하기23",{"children":["$","$La",null,{"postMeta":{"id":"e01ed376-f3cd-46aa-8857-04dda82402c3","path":"/swift/UIKit에서-layoutSubviews의-라이프사이클-이해하기-e01ed376","title":"UIKit에서 layoutSubviews의 라이프사이클 이해하기","description":"UIKit 프레임워크에서는 뷰의 레이아웃을 조정하는 데 있어 layoutSubviews 메서드가 중요한 역할을 합니다. 이 글에서는 layoutSubviews의 라이프사이클과 그 사용 방법에 대해 깊이 있게 살펴봅니다.","date":"2024-07-06T06:01:12.180Z","tags":[{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"layoutSubviews","path":"/tags/layoutsubviews","id":"layoutsubviews"}],"readMin":"6.0","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":23,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","스크롤 뷰 내부의 다이나믹 콘텐츠와 contentInsetAdjustmentBehavior: 동적 콘텐츠가 많은 스크롤 뷰에서 contentInsetAdjustmentBehavior를 효과적으로 활용하는 방법.24",{"children":["$","$La",null,{"postMeta":{"id":"fffcfbe5-ea61-49da-a335-ab01ce93ad03","path":"/swift/스크롤-뷰-내부의-다이나믹-콘텐츠와-contentInsetAdjustmentBehavior-동적-콘텐츠가-많은-스크롤-뷰에서-contentInsetAdjustmentBehavior를-효과적으로-활용하는-방법-fffcfbe5","title":"스크롤 뷰 내부의 다이나믹 콘텐츠와 contentInsetAdjustmentBehavior: 동적 콘텐츠가 많은 스크롤 뷰에서 contentInsetAdjustmentBehavior를 효과적으로 활용하는 방법.","description":"이 글에서는 Swift에서 스크롤 뷰 내부의 다이나믹 콘텐츠와 contentInsetAdjustmentBehavior 속성을 효과적으로 활용하는 방법에 대해 소개합니다. 이를 통해 사용자 경험을 향상시키는 다양한 기법을 다룹니다.","date":"2024-07-05T06:00:41.351Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"스크롤 뷰","path":"/tags/스크롤-뷰","id":"스크롤-뷰"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"iOS","path":"/tags/ios","id":"ios"}],"readMin":"4.2","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":24,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","기존 UIKit 앱에 SwiftUI 통합하기: 기존 코드베이스에 SwiftUI gradual adoption.25",{"children":["$","$La",null,{"postMeta":{"id":"d1df6ef9-5efa-4056-af78-ce1f39eeaa90","path":"/swift/기존-UIKit-앱에-SwiftUI-통합하기-기존-코드베이스에-SwiftUI-gradual-adoption-d1df6ef9","title":"기존 UIKit 앱에 SwiftUI 통합하기: 기존 코드베이스에 SwiftUI gradual adoption.","description":"SwiftUI는 Apple이 제시한 새로운 사용자 인터페이스 프레임워크로, 기존 UIKit 앱에 점진적으로 통합할 수 있습니다. 이 글은 SwiftUI와 UIKit을 함께 사용하여 기존 코드베이스에 SwiftUI을 천천히 도입하는 방법을 설명합니다.","date":"2024-06-28T06:02:43.175Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"iOS 개발","path":"/tags/ios-개발","id":"ios-개발"},{"name":"코드 통합","path":"/tags/코드-통합","id":"코드-통합"}],"readMin":"6.0","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":25,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI와 UIKit 비교 분석: 각 프레임워크의 장단점26",{"children":["$","$La",null,{"postMeta":{"id":"c8a438d1-f8ee-4924-9351-97aef56afc6b","path":"/swift/SwiftUI와-UIKit-비교-분석-각-프레임워크의-장단점-c8a438d1","title":"SwiftUI와 UIKit 비교 분석: 각 프레임워크의 장단점","description":"SwiftUI와 UIKit은 iOS 개발에서 자주 사용되는 두 가지 주요 프레임워크입니다. 이 글에서는 이 두 프레임워크의 기본 개념과 함께 각각의 장단점을 비교 분석하여 어떤 상황에서 어떤 프레임워크를 선택하는 것이 적합한지 알아보겠습니다.","date":"2024-06-28T06:02:02.036Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"iOS 개발","path":"/tags/ios-개발","id":"ios-개발"},{"name":"프레임워크 비교","path":"/tags/프레임워크-비교","id":"프레임워크-비교"}],"readMin":"6.1","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":26,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UIKit과 Core Image를 활용한 이미지 리사이징: 다양한 iOS 라이브러리를 활용하여 이미지 크기 조정.27",{"children":["$","$La",null,{"postMeta":{"id":"0fa30cd1-f651-4afa-9d9c-7a1aec0854f1","path":"/swift/UIKit과-Core-Image를-활용한-이미지-리사이징-다양한-iOS-라이브러리를-활용하여-이미지-크기-조정-0fa30cd1","title":"UIKit과 Core Image를 활용한 이미지 리사이징: 다양한 iOS 라이브러리를 활용하여 이미지 크기 조정.","description":"Swift를 사용하여 iOS 앱 개발에서 자주 쓰이는 이미지 리사이징 기술에 대해 알아봅니다. UIKit과 Core Image를 활용하여 이미지의 크기를 효율적으로 조정하는 방법을 다양한 코드 예제를 통해 설명합니다.","date":"2024-06-26T06:03:48.530Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"Core Image","path":"/tags/core-image","id":"core-image"},{"name":"이미지 리사이징","path":"/tags/이미지-리사이징","id":"이미지-리사이징"}],"readMin":"5.1","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":27,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","기존 UIKit 애플리케이션에 SwiftUI 통합하기: 기존 프로젝트에 SwiftUI 점진적 채택 최선의 방법.28",{"children":["$","$La",null,{"postMeta":{"id":"444393d3-f9eb-4738-b84a-978144d5cbbc","path":"/swift/기존-UIKit-애플리케이션에-SwiftUI-통합하기-기존-프로젝트에-SwiftUI-점진적-채택-최선의-방법-444393d3","title":"기존 UIKit 애플리케이션에 SwiftUI 통합하기: 기존 프로젝트에 SwiftUI 점진적 채택 최선의 방법.","description":"Swift는 애플리케이션 개발에서 강력하고 직관적인 도구로 자리잡아 왔습니다. 이 글에서는 기존 UIKit 애플리케이션에 SwiftUI를 통합하는 방법과 점진적으로 SwiftUI를 채택하는 최선의 방법을 소개합니다.","date":"2024-06-18T06:05:11.084Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"iOS개발","path":"/tags/ios개발","id":"ios개발"}],"readMin":"6.2","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":28,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift를 활용한 Bottom Sheet 애니메이션 효과 추가하기29",{"children":["$","$La",null,{"postMeta":{"id":"52d57d7c-632b-404f-941f-de4e2f61dc9a","path":"/swift/Swift를-활용한-Bottom-Sheet-애니메이션-효과-추가하기-52d57d7c","title":"Swift를 활용한 Bottom Sheet 애니메이션 효과 추가하기","description":"이 글은 Swift를 활용하여 iOS 애플리케이션에서 Bottom Sheet 애니메이션 효과를 구현하는 방법을 설명합니다. 이 글에서 필요한 UIKit 요소와 Swift의 애니메이션 API를 사용하는 방법을 배우게 됩니다.","date":"2024-06-14T11:48:07.956Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"애니메이션","path":"/tags/애니메이션","id":"애니메이션"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"}],"readMin":"5.9","category":"swift","banner":"/images/swiftBanner4.jpg"},"index":29,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI와 UIKit 통합: UITextField와 UITextView의 Binding 사용법30",{"children":["$","$La",null,{"postMeta":{"id":"14be053d-a509-4a39-aa6b-d012439bcd94","path":"/swift/SwiftUI와-UIKit-통합-UITextField와-UITextView의-Binding-사용법-14be053d","title":"SwiftUI와 UIKit 통합: UITextField와 UITextView의 Binding 사용법","description":"SwiftUI와 UIKit을 통합하여 UITextField와 UITextView에 Binding을 적용하는 방법을 자세히 다룹니다. 이를 통해 개발자는 SwiftUI의 기능을 유지하면서도 UIKit의 강력한 컴포넌트를 활용할 수 있습니다.","date":"2024-06-11T06:05:43.640Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"Binding","path":"/tags/binding","id":"binding"},{"name":"UITextField","path":"/tags/uitextfield","id":"uitextfield"},{"name":"UITextView","path":"/tags/uitextview","id":"uitextview"}],"readMin":"5.4","category":"swift","banner":"/images/swiftBanner5.jpg"},"index":30,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","UITableView와 UICollectionView에서 isHighlighted와 isSelected를 사용하여 셀 강조와 선택 상태 관리하기31",{"children":["$","$La",null,{"postMeta":{"id":"fd51d7a8-9064-4a1d-89b5-ea9ed037efb2","path":"/swift/UITableView와-UICollectionView에서-isHighlighted와-isSelected를-사용하여-셀-강조와-선택-상태-관리하기-fd51d7a8","title":"UITableView와 UICollectionView에서 isHighlighted와 isSelected를 사용하여 셀 강조와 선택 상태 관리하기","description":"이 글에서는 Swift를 이용하여 UITableView 및 UICollectionView에서 셀의 강조 상태 및 선택 상태를 관리하는 방법을 다룹니다. 주요 속성인 isHighlighted와 isSelected를 활용하여 셀의 상태 변화를 쉽게 구현하는 방법을 설명합니다.","date":"2024-06-10T12:46:42.221Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"UITableView","path":"/tags/uitableview","id":"uitableview"},{"name":"UICollectionView","path":"/tags/uicollectionview","id":"uicollectionview"}],"readMin":"4.2","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":31,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[번역] Programmatically Creating Constraints - Advanced Auto Layout32",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/programmatically+creating+constraints","title":"[번역] Programmatically Creating Constraints - Advanced Auto Layout","description":"apple 공식 문서인 Auto Layout Guide 중 Programmatically Creating Constraints - Advanced Auto Layout Chapter를 번역한 글입니다.","date":"2023-05-04T23:55:40.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"auth layout","path":"/tags/auth-layout","id":"auth-layout"},{"name":"document","path":"/tags/document","id":"document"},{"name":"번역","path":"/tags/번역","id":"번역"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"}],"readMin":"10.0","category":"swift","banner":"/images/auto0301.jpg"},"index":32,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[번역] Debugging Tricks and Tips - Debugging Auto Layout33",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/debugging+tricks+and+tips","title":"[번역] Debugging Tricks and Tips - Debugging Auto Layout","description":"apple 공식 문서인 Auto Layout Guide 중 Debugging Tricks and Tips - Debugging Auto Layout Chapter를 번역한 글입니다.","date":"2023-05-03T13:28:40.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"auth layout","path":"/tags/auth-layout","id":"auth-layout"},{"name":"document","path":"/tags/document","id":"document"},{"name":"번역","path":"/tags/번역","id":"번역"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"}],"readMin":"12.8","category":"swift","banner":"/images/auto0804.jpg"},"index":33,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[번역] Ambiguous Layouts - Debugging Auto Layout34",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/ambiguous-layouts","title":"[번역] Ambiguous Layouts - Debugging Auto Layout","description":"apple 공식 문서인 Auto Layout Guide 중 Ambiguous Layouts - Debugging Auto Layout Chapter를 번역한 글입니다.","date":"2023-05-03T13:14:40.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"auth layout","path":"/tags/auth-layout","id":"auth-layout"},{"name":"document","path":"/tags/document","id":"document"},{"name":"번역","path":"/tags/번역","id":"번역"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"}],"readMin":"7.5","category":"swift","banner":"/images/auto0705.jpg"},"index":34,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[번역] Unsatisfiable Layouts - Debugging Auto Layout35",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/unsatisfiable+layouts","title":"[번역] Unsatisfiable Layouts - Debugging Auto Layout","description":"apple 공식 문서인 Auto Layout Guide 중 Unsatisfiable Layouts - Debugging Auto Layout Chapter를 번역한 글입니다.","date":"2023-05-02T21:04:40.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"auth layout","path":"/tags/auth-layout","id":"auth-layout"},{"name":"document","path":"/tags/document","id":"document"},{"name":"번역","path":"/tags/번역","id":"번역"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"}],"readMin":"6.6","category":"swift","banner":"/images/auto0801.jpg"},"index":35,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[번역] Types of Errors - Debugging Auto Layout36",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/type+of+error","title":"[번역] Types of Errors - Debugging Auto Layout","description":"apple 공식 문서인 Auto Layout Guide 중 Types of Errors - Debugging Auto Layout Chapter를 번역한 글입니다.","date":"2023-05-02T21:00:40.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"auth layout","path":"/tags/auth-layout","id":"auth-layout"},{"name":"document","path":"/tags/document","id":"document"},{"name":"번역","path":"/tags/번역","id":"번역"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"}],"readMin":"1.4","category":"swift","banner":"/images/auto0709.jpg"},"index":36,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[번역] Views with Intrinsic Content Size37",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/simple+contrains","title":"[번역] Views with Intrinsic Content Size","description":"apple 공식 문서인 Auto Layout Guide 중 Views with Intrinsic Content Size Chapter를 번역한 글입니다.","date":"2023-04-29T20:23:40.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"auth layout","path":"/tags/auth-layout","id":"auth-layout"},{"name":"document","path":"/tags/document","id":"document"},{"name":"번역","path":"/tags/번역","id":"번역"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"}],"readMin":"33.7","category":"swift","banner":"/images/auto0708.jpg"},"index":37,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[번역] Stack Views38",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/stack+view","title":"[번역] Stack Views","description":"apple 공식 문서인 Auto Layout Guide 중 Stack Views Chapter를 번역한 글입니다.","date":"2023-04-27T18:20:40.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"auth layout","path":"/tags/auth-layout","id":"auth-layout"},{"name":"document","path":"/tags/document","id":"document"},{"name":"번역","path":"/tags/번역","id":"번역"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"}],"readMin":"16.5","category":"swift","banner":"/images/auto0506.jpg"},"index":38,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[번역] Interface Builder에서 제약 조건 설정하기 (Working with Constraints in Interface Builder)39",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/working+with+constraints+in+interface+builder","title":"[번역] Interface Builder에서 제약 조건 설정하기 (Working with Constraints in Interface Builder)","description":"apple 공식 문서인 Auto Layout Guide 중 Working with Constraints in Interface Builder 번역한 글입니다.","date":"2023-04-24T02:11:40.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"auth layout","path":"/tags/auth-layout","id":"auth-layout"},{"name":"document","path":"/tags/document","id":"document"},{"name":"번역","path":"/tags/번역","id":"번역"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"}],"readMin":"33.4","category":"swift","banner":"/images/auto0403.jpg"},"index":39,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[번역] Constraint 톺아보기 (Anatomy of a Constraint) 2/240",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/anatomy+of+a+constraint+2","title":"[번역] Constraint 톺아보기 (Anatomy of a Constraint) 2/2","description":"apple 공식 문서인 Auto Layout Guide 중 Anatomy of a Constraint Chapter를 번역한 글입니다.","date":"2023-04-19T19:22:40.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"auth layout","path":"/tags/auth-layout","id":"auth-layout"},{"name":"document","path":"/tags/document","id":"document"},{"name":"번역","path":"/tags/번역","id":"번역"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"}],"readMin":"13.0","category":"swift","banner":"/images/auto0308.jpg"},"index":40,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[번역] Constraint 톺아보기 (Anatomy of a Constraint) 1/241",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/anatomy+of+a+constraint+1","title":"[번역] Constraint 톺아보기 (Anatomy of a Constraint) 1/2","description":"apple 공식 문서인 Auto Layout Guide 중 Anatomy of a Constraint Chapter를 번역한 글입니다.","date":"2023-04-19T18:11:40.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"auth layout","path":"/tags/auth-layout","id":"auth-layout"},{"name":"document","path":"/tags/document","id":"document"},{"name":"번역","path":"/tags/번역","id":"번역"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"}],"readMin":"15.9","category":"swift","banner":"/images/auto0306.jpg"},"index":41,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[번역] Constraints 없는 오토레이아웃(Auto Layout Without Constraints)42",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/auto+layout+without+constraints","title":"[번역] Constraints 없는 오토레이아웃(Auto Layout Without Constraints)","description":"apple 공식 문서인 Auto Layout Guide 중 Auto Layout Without Constraints Chapter를 번역한 글입니다.","date":"2023-04-18T10:22:40.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"auth layout","path":"/tags/auth-layout","id":"auth-layout"},{"name":"document","path":"/tags/document","id":"document"},{"name":"번역","path":"/tags/번역","id":"번역"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"}],"readMin":"3.0","category":"swift","banner":"/images/auto0202.jpg"},"index":42,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[번역] 오토레이아웃 이해하기(Understanding Auto Layout)43",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/understanding+auto+layout","title":"[번역] 오토레이아웃 이해하기(Understanding Auto Layout)","description":"apple 공식 문서인 Auto Layout Guide 중 Understanding Auto Layout Chapter를 번역한 글입니다.","date":"2023-04-18T10:22:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"auth layout","path":"/tags/auth-layout","id":"auth-layout"},{"name":"document","path":"/tags/document","id":"document"},{"name":"번역","path":"/tags/번역","id":"번역"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"}],"readMin":"9.4","category":"swift","banner":"/images/auto0102.jpg"},"index":43,"articleType":"최신글","screenType":"TAGS","language":"app"}]}]]}]]}]}]}]]}],null],"segment":"__PAGE__?{\"slug\":\"uikit\"}"},"styles":[]}],"segment":["slug","uikit","d"]},"styles":[]}],"segment":"tags"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"uikit 관련글 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","3",{"name":"keywords","content":"마고자비 블로그 블로그,Swift,Javascript,최적화,앱개발,1인 개발,개발자,개발,Developer"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com//tags/uikit"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"uikit 관련글 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"uikit 관련글 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com//tags/uikit"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/magomercy.png"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"uikit 관련글 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/magomercy.png"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
8:null
