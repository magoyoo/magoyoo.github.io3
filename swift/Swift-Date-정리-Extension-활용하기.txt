1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-Date-%EC%A0%95%EB%A6%AC-Extension-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0","d"],{"children":["__PAGE__?{\"slug\":\"Swift-Date-정리-Extension-활용하기\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-Date-%EC%A0%95%EB%A6%AC-Extension-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-Date-정리-Extension-활용하기\"}"},"styles":[]}],"segment":["slug","Swift-Date-%EC%A0%95%EB%A6%AC-Extension-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift에서 Date 이거 하나로 종결. Extension으로 한 번 정리하면 끝! | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift의 Date Extension을 활용하여 시간 조작과 형식 변환을 손쉽게 처리하는 방법을 알아보세요. 실용적인 예제와 함께 다양한 시간 관련 작업을 최적화하는 방법을 상세히 설명합니다."}],["$","meta","3",{"name":"keywords","content":"swift,extension활용"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-Date-%EC%A0%95%EB%A6%AC-Extension-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift에서 Date 이거 하나로 종결. Extension으로 한 번 정리하면 끝! | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift에서 Date 이거 하나로 종결. Extension으로 한 번 정리하면 끝! | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift의 Date Extension을 활용하여 시간 조작과 형식 변환을 손쉽게 처리하는 방법을 알아보세요. 실용적인 예제와 함께 다양한 시간 관련 작업을 최적화하는 방법을 상세히 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-Date-%EC%A0%95%EB%A6%AC-Extension-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift에서 Date 이거 하나로 종결. Extension으로 한 번 정리하면 끝! | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift의 Date Extension을 활용하여 시간 조작과 형식 변환을 손쉽게 처리하는 방법을 알아보세요. 실용적인 예제와 함께 다양한 시간 관련 작업을 최적화하는 방법을 상세히 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBasic.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift에서 Date 이거 하나로 종결. Extension으로 한 번 정리하면 끝!"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift에서 Date 이거 하나로 종결. Extension으로 한 번 정리하면 끝!"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-05-31"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h2",null,{"id":"e4bfba27","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Swift에서 Date Extension 활용하기: 시간 조작과 형식 변환의 모든 것"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift는 강력한 날짜 및 시간 처리 기능을 제공하며, 이를 더욱 강화하기 위해 Date Extension을 활용할 수 있습니다. Date Extension을 사용하면 기본 Date 클래스에 새로운 기능을 추가하여 시간 조작과 형식 변환을 더 쉽게 할 수 있습니다. 이번 글에서는 Swift에서 Date Extension을 사용하는 방법, 다양한 실용적인 예제, 그리고 이를 통해 시간 관련 작업을 최적화하는 방법을 자세히 설명하겠습니다."}],"\n",["$","h2",null,{"id":"5a2f303f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Date Extension의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서 Extension은 기존 클래스, 구조체, 열거형 또는 프로토콜에 새로운 기능을 추가할 수 있는 강력한 도구입니다. Date Extension을 사용하면 Date 클래스에 새로운 메서드와 속성을 추가하여 날짜와 시간을 보다 효율적으로 다룰 수 있습니다."}],"\n",["$","h2",null,{"id":"1574d156","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Date Extension 구현 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Date Extension을 구현하려면 Extension 키워드를 사용하여 Date 클래스에 새로운 기능을 추가합니다. 예를 들어, 특정 날짜에 일수를 추가하는 메서드를 구현해보겠습니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\n\nextension Date {\n    func addingDays(_ days: Int) -> Date? {\n        var dateComponents = DateComponents()\n        dateComponents.day = days\n        return Calendar.current.date(byAdding: dateComponents, to: self)\n    }\n}\n"}],"position":{"start":{"line":14,"column":1,"offset":609},"end":{"line":24,"column":4,"offset":862}}},"children":"import Foundation\n\nextension Date {\n    func addingDays(_ days: Int) -> Date? {\n        var dateComponents = DateComponents()\n        dateComponents.day = days\n        return Calendar.current.date(byAdding: dateComponents, to: self)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addingDays","position":{"start":{"line":26,"column":9,"offset":872},"end":{"line":26,"column":21,"offset":884}}}],"position":{"start":{"line":26,"column":9,"offset":872},"end":{"line":26,"column":21,"offset":884}}},"children":"addingDays"}}]," 메서드를 통해 현재 날짜에 특정 일수를 더하는 기능을 추가했습니다. 이제 이 메서드를 사용하여 날짜를 쉽게 조작할 수 있습니다."]}],"\n",["$","h2",null,{"id":"9c826463","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"실용적인 Date Extension 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다양한 시간 관련 작업을 더 쉽게 처리할 수 있는 몇 가지 유용한 Date Extension 예제를 소개하겠습니다."}],"\n",["$","h3",null,{"id":"5a0ce109","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 날짜 형식 변환"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"날짜를 문자열로 변환하거나, 문자열을 날짜로 변환하는 것은 매우 일반적인 작업입니다. 이를 위해 DateFormatter를 활용한 확장을 구현해보겠습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"extension Date {\n    func toString(format: String) -> String {\n        let dateFormatter = DateFormatter()\n        dateFormatter.dateFormat = format\n        return dateFormatter.string(from: self)\n    }\n\n    static func fromString(_ dateString: String, format: String) -> Date? {\n        let dateFormatter = DateFormatter()\n        dateFormatter.dateFormat = format\n        return dateFormatter.date(from: dateString)\n    }\n}\n"}],"position":{"start":{"line":36,"column":1,"offset":1156},"end":{"line":50,"column":4,"offset":1594}}},"children":"extension Date {\n    func toString(format: String) -> String {\n        let dateFormatter = DateFormatter()\n        dateFormatter.dateFormat = format\n        return dateFormatter.string(from: self)\n    }\n\n    static func fromString(_ dateString: String, format: String) -> Date? {\n        let dateFormatter = DateFormatter()\n        dateFormatter.dateFormat = format\n        return dateFormatter.date(from: dateString)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 날짜를 문자열로, 문자열을 날짜로 쉽게 변환할 수 있습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let currentDate = Date()\nlet dateString = currentDate.toString(format: \"yyyy-MM-dd\")\nprint(dateString) // 예: 2024-05-31\n\nif let dateFromString = Date.fromString(\"2024-05-31\", format: \"yyyy-MM-dd\") {\n    print(dateFromString)\n}\n"}],"position":{"start":{"line":54,"column":1,"offset":1634},"end":{"line":62,"column":4,"offset":1873}}},"children":"let currentDate = Date()\nlet dateString = currentDate.toString(format: \"yyyy-MM-dd\")\nprint(dateString) // 예: 2024-05-31\n\nif let dateFromString = Date.fromString(\"2024-05-31\", format: \"yyyy-MM-dd\") {\n    print(dateFromString)\n}\n"}}]}],"\n",["$","h3",null,{"id":"6b9fa55d","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 특정 시간 단위 추가"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"날짜에 특정 시간 단위를 더하는 것은 매우 유용합니다. 예를 들어, 시간, 분, 초 등을 더하는 확장을 구현해보겠습니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"extension Date {\n    func addingHours(_ hours: Int) -> Date? {\n        return Calendar.current.date(byAdding: .hour, value: hours, to: self)\n    }\n\n    func addingMinutes(_ minutes: Int) -> Date? {\n        return Calendar.current.date(byAdding: .minute, value: minutes, to: self)\n    }\n\n    func addingSeconds(_ seconds: Int) -> Date? {\n        return Calendar.current.date(byAdding: .second, value: seconds, to: self)\n    }\n}\n"}],"position":{"start":{"line":68,"column":1,"offset":1964},"end":{"line":82,"column":4,"offset":2403}}},"children":"extension Date {\n    func addingHours(_ hours: Int) -> Date? {\n        return Calendar.current.date(byAdding: .hour, value: hours, to: self)\n    }\n\n    func addingMinutes(_ minutes: Int) -> Date? {\n        return Calendar.current.date(byAdding: .minute, value: minutes, to: self)\n    }\n\n    func addingSeconds(_ seconds: Int) -> Date? {\n        return Calendar.current.date(byAdding: .second, value: seconds, to: self)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 날짜에 시간, 분, 초를 쉽게 추가할 수 있습니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let now = Date()\nif let newDate = now.addingHours(2) {\n    print(newDate)\n}\n"}],"position":{"start":{"line":86,"column":1,"offset":2438},"end":{"line":91,"column":4,"offset":2526}}},"children":"let now = Date()\nif let newDate = now.addingHours(2) {\n    print(newDate)\n}\n"}}]}],"\n",["$","h3",null,{"id":"733132b0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 날짜 비교"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"날짜를 비교하는 것도 자주 필요합니다. 날짜를 비교하는 메서드를 확장으로 구현해보겠습니다."}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"extension Date {\n    func isEarlier(than date: Date) -> Bool {\n        return self < date\n    }\n\n    func isLater(than date: Date) -> Bool {\n        return self > date\n    }\n\n    func isSameDay(as date: Date) -> Bool {\n        return Calendar.current.isDate(self, inSameDayAs: date)\n    }\n}\n"}],"position":{"start":{"line":97,"column":1,"offset":2594},"end":{"line":111,"column":4,"offset":2897}}},"children":"extension Date {\n    func isEarlier(than date: Date) -> Bool {\n        return self < date\n    }\n\n    func isLater(than date: Date) -> Bool {\n        return self > date\n    }\n\n    func isSameDay(as date: Date) -> Bool {\n        return Calendar.current.isDate(self, inSameDayAs: date)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 날짜를 쉽게 비교할 수 있습니다."}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let date1 = Date()\nlet date2 = date1.addingDays(1)!\n\nprint(date1.isEarlier(than: date2)) // true\nprint(date1.isLater(than: date2))   // false\nprint(date1.isSameDay(as: date2))   // false\n"}],"position":{"start":{"line":115,"column":1,"offset":2922},"end":{"line":122,"column":4,"offset":3121}}},"children":"let date1 = Date()\nlet date2 = date1.addingDays(1)!\n\nprint(date1.isEarlier(than: date2)) // true\nprint(date1.isLater(than: date2))   // false\nprint(date1.isSameDay(as: date2))   // false\n"}}]}],"\n",["$","h2",null,{"id":"90e6a364","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"성능 최적화를 위한 Date Extension 활용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Date Extension을 활용하여 성능을 최적화할 수 있는 몇 가지 방법을 소개합니다."}],"\n",["$","h3",null,{"id":"ebeaaec0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 캐싱을 통한 DateFormatter 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"DateFormatter는 생성 비용이 높은 객체이므로, 확장 내에서 이를 캐싱하여 성능을 개선할 수 있습니다."}],"\n",["$","pre","pre-7",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"extension Date {\n    private static var dateFormatterCache = [String: DateFormatter]()\n\n    private static func cachedFormatter(format: String) -> DateFormatter {\n        if let cachedFormatter = dateFormatterCache[format] {\n            return cachedFormatter\n        } else {\n            let formatter = DateFormatter()\n            formatter.dateFormat = format\n            dateFormatterCache[format] = formatter\n            return formatter\n        }\n    }\n\n    func toStringOptimized(format: String) -> String {\n        let formatter = Date.cachedFormatter(format: format)\n        return formatter.string(from: self)\n    }\n}\n"}],"position":{"start":{"line":132,"column":1,"offset":3305},"end":{"line":152,"column":4,"offset":3945}}},"children":"extension Date {\n    private static var dateFormatterCache = [String: DateFormatter]()\n\n    private static func cachedFormatter(format: String) -> DateFormatter {\n        if let cachedFormatter = dateFormatterCache[format] {\n            return cachedFormatter\n        } else {\n            let formatter = DateFormatter()\n            formatter.dateFormat = format\n            dateFormatterCache[format] = formatter\n            return formatter\n        }\n    }\n\n    func toStringOptimized(format: String) -> String {\n        let formatter = Date.cachedFormatter(format: format)\n        return formatter.string(from: self)\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"3086e31b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 효율적인 날짜 조작"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"DateComponents와 Calendar를 적절히 활용하여 날짜 조작을 더 효율적으로 수행할 수 있습니다. 예를 들어, 반복적인 날짜 조작을 최적화할 수 있습니다."}],"\n",["$","pre","pre-8",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"extension Date {\n    func adding(days: Int, months: Int, years: Int) -> Date? {\n        var dateComponents = DateComponents()\n        dateComponents.day = days\n        dateComponents.month = months\n        dateComponents.year = years\n        return Calendar.current.date(byAdding: dateComponents, to: self)\n    }\n}\n"}],"position":{"start":{"line":158,"column":1,"offset":4061},"end":{"line":168,"column":4,"offset":4388}}},"children":"extension Date {\n    func adding(days: Int, months: Int, years: Int) -> Date? {\n        var dateComponents = DateComponents()\n        dateComponents.day = days\n        dateComponents.month = months\n        dateComponents.year = years\n        return Calendar.current.date(byAdding: dateComponents, to: self)\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서 Date Extension을 활용하면 날짜와 시간을 보다 효율적으로 처리할 수 있습니다. Date Extension을 통해 시간 조작, 형식 변환, 날짜 비교 등의 작업을 쉽게 수행할 수 있으며, 이를 통해 코드의 가독성과 유지보수성을 높일 수 있습니다. 또한, 성능 최적화를 위해 캐싱 기법과 효율적인 날짜 조작 방법을 활용함으로써 애플리케이션의 성능을 향상시킬 수 있습니다. Swift 개발자라면 Date Extension을 적극적으로 활용하여 시간 관련 작업을 최적화해보세요."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift에서 Date 이거 하나로 종결. Extension으로 한 번 정리하면 끝!","toc":[{"tagName":"h2","title":"Swift에서 Date Extension 활용하기: 시간 조작과 형식 변환의 모든 것","id":"e4bfba27"},{"tagName":"h2","title":"Date Extension의 기본 개념","id":"5a2f303f"},{"tagName":"h2","title":"Date Extension 구현 방법","id":"1574d156"},{"tagName":"h2","title":"실용적인 Date Extension 예제","id":"9c826463"},{"tagName":"h3","title":"1. 날짜 형식 변환","id":"5a0ce109"},{"tagName":"h3","title":"2. 특정 시간 단위 추가","id":"6b9fa55d"},{"tagName":"h3","title":"3. 날짜 비교","id":"733132b0"},{"tagName":"h2","title":"성능 최적화를 위한 Date Extension 활용","id":"90e6a364"},{"tagName":"h3","title":"1. 캐싱을 통한 DateFormatter 최적화","id":"ebeaaec0"},{"tagName":"h3","title":"2. 효율적인 날짜 조작","id":"3086e31b"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
