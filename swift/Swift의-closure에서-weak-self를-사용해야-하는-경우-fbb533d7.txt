1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift%EC%9D%98-closure%EC%97%90%EC%84%9C-weak-self%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0-fbb533d7","d"],{"children":["__PAGE__?{\"slug\":\"Swift의-closure에서-weak-self를-사용해야-하는-경우-fbb533d7\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift%EC%9D%98-closure%EC%97%90%EC%84%9C-weak-self%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0-fbb533d7","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift의-closure에서-weak-self를-사용해야-하는-경우-fbb533d7\"}"},"styles":[]}],"segment":["slug","Swift%EC%9D%98-closure%EC%97%90%EC%84%9C-weak-self%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0-fbb533d7","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift의 closure에서 weak self를 사용해야 하는 경우 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Swift의 클로저(closure)에서 'weak self'를 사용해야 하는 경우와 그 이유에 대해 다룹니다. 메모리 관리와 관련된 개념을 바탕으로 클로저와 객체 사이의 강한 참조 순환(strong reference cycle) 문제를 피하는 방법을 설명합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,closure,weak self,메모리 관리"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift%EC%9D%98-closure%EC%97%90%EC%84%9C-weak-self%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0-fbb533d7"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift의 closure에서 weak self를 사용해야 하는 경우 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift의 closure에서 weak self를 사용해야 하는 경우 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Swift의 클로저(closure)에서 'weak self'를 사용해야 하는 경우와 그 이유에 대해 다룹니다. 메모리 관리와 관련된 개념을 바탕으로 클로저와 객체 사이의 강한 참조 순환(strong reference cycle) 문제를 피하는 방법을 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift%EC%9D%98-closure%EC%97%90%EC%84%9C-weak-self%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0-fbb533d7"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift의 closure에서 weak self를 사용해야 하는 경우 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Swift의 클로저(closure)에서 'weak self'를 사용해야 하는 경우와 그 이유에 대해 다룹니다. 메모리 관리와 관련된 개념을 바탕으로 클로저와 객체 사이의 강한 참조 순환(strong reference cycle) 문제를 피하는 방법을 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift의 closure에서 weak self를 사용해야 하는 경우"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift의 closure에서 weak self를 사용해야 하는 경우"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-17"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"569f9a0e","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift의 클로저에서 'weak self'를 사용해야 하는 경우"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서 클로저는 매우 강력한 기능을 제공하지만, 잘못 사용하면 메모리 누수(memory leak)와 같은 문제를 일으킬 수 있습니다. 특히 클로저가 객체의 참조를 강하게 유지할 때, 강한 참조 순환(strong reference cycle)이 발생할 수 있습니다. 이로 인해 메모리 관리 문제가 발생합니다. 이를 피하기 위해 'weak self' 키워드를 사용하게 됩니다. 이 글에서는 'weak self'를 사용해야 하는 경우와 그 이유에 대해 설명하겠습니다."}],"\n",["$","h2",null,{"id":"3ebcf45a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"클로저와 강한 참조 순환"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서 클로저는 참조 타입(reference type)이며, 객체의 프로퍼티로 사용될 때 그 객체를 강하게 참조할 수 있습니다. 예를 들어, 객체 내에서 클로저를 프로퍼티로 갖고, 그 클로저가 다시 그 객체를 참조한다면 강한 참조 순환이 발생할 수 있습니다. 아래 코드 예제를 통해 설명합니다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class MyClass {\n    var closure: (() -> Void)?\n    \n    func doSomething() {\n        closure = {\n            print(\"Doing something in MyClass\")\n        }\n    }\n}\n\nlet instance = MyClass()\ninstance.doSomething()\ninstance.closure?()\n"}],"position":{"start":{"line":10,"column":1,"offset":493},"end":{"line":24,"column":4,"offset":737}}},"children":"class MyClass {\n    var closure: (() -> Void)?\n    \n    func doSomething() {\n        closure = {\n            print(\"Doing something in MyClass\")\n        }\n    }\n}\n\nlet instance = MyClass()\ninstance.doSomething()\ninstance.closure?()\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"instance","position":{"start":{"line":26,"column":8,"offset":746},"end":{"line":26,"column":18,"offset":756}}}],"position":{"start":{"line":26,"column":8,"offset":746},"end":{"line":26,"column":18,"offset":756}}},"children":"instance"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"MyClass","position":{"start":{"line":26,"column":20,"offset":758},"end":{"line":26,"column":29,"offset":767}}}],"position":{"start":{"line":26,"column":20,"offset":758},"end":{"line":26,"column":29,"offset":767}}},"children":"MyClass"}}],"의 인스턴스로, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"doSomething","position":{"start":{"line":26,"column":38,"offset":776},"end":{"line":26,"column":51,"offset":789}}}],"position":{"start":{"line":26,"column":38,"offset":776},"end":{"line":26,"column":51,"offset":789}}},"children":"doSomething"}}]," 메서드를 호출하면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"closure","position":{"start":{"line":26,"column":62,"offset":800},"end":{"line":26,"column":71,"offset":809}}}],"position":{"start":{"line":26,"column":62,"offset":800},"end":{"line":26,"column":71,"offset":809}}},"children":"closure"}}]," 프로퍼티가 클로저를 할당받습니다. 이 클로저는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"MyClass","position":{"start":{"line":26,"column":98,"offset":836},"end":{"line":26,"column":107,"offset":845}}}],"position":{"start":{"line":26,"column":98,"offset":836},"end":{"line":26,"column":107,"offset":845}}},"children":"MyClass"}}]," 인스턴스를 강하게 참조하여 메모리에서 해제되지 않는 문제가 발생할 수 있습니다."]}],"\n",["$","h2",null,{"id":"da39a3ee","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak self","position":{"start":{"line":28,"column":4,"offset":895},"end":{"line":28,"column":15,"offset":906}}}],"position":{"start":{"line":28,"column":4,"offset":895},"end":{"line":28,"column":15,"offset":906}}},"children":"weak self"}}]," 키워드로 해결"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이러한 강한 참조 순환을 피하기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak self","position":{"start":{"line":30,"column":22,"offset":937},"end":{"line":30,"column":33,"offset":948}}}],"position":{"start":{"line":30,"column":22,"offset":937},"end":{"line":30,"column":33,"offset":948}}},"children":"weak self"}}]," 키워드를 사용할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak self","position":{"start":{"line":30,"column":51,"offset":966},"end":{"line":30,"column":62,"offset":977}}}],"position":{"start":{"line":30,"column":51,"offset":966},"end":{"line":30,"column":62,"offset":977}}},"children":"weak self"}}],"를 사용하면 클로저 내부에서 객체를 약한 참조(weak reference)로 유지할 수 있습니다. 약한 참조는 객체가 메모리에서 해제되는 것을 막지 않습니다. 따라서 클로저 내에서 객체가 강하게 참조되지 않습니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음 예제를 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak self","position":{"start":{"line":32,"column":11,"offset":1108},"end":{"line":32,"column":22,"offset":1119}}}],"position":{"start":{"line":32,"column":11,"offset":1108},"end":{"line":32,"column":22,"offset":1119}}},"children":"weak self"}}]," 사용을 설명하겠습니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class MyClass {\n    var closure: (() -> Void)?\n    \n    func doSomething() {\n        closure = { [weak self] in\n            guard let self = self else { return }\n            print(\"Doing something in MyClass\")\n        }\n    }\n}\n\nlet instance = MyClass()\ninstance.doSomething()\ninstance.closure?()\n"}],"position":{"start":{"line":34,"column":1,"offset":1134},"end":{"line":49,"column":4,"offset":1443}}},"children":"class MyClass {\n    var closure: (() -> Void)?\n    \n    func doSomething() {\n        closure = { [weak self] in\n            guard let self = self else { return }\n            print(\"Doing something in MyClass\")\n        }\n    }\n}\n\nlet instance = MyClass()\ninstance.doSomething()\ninstance.closure?()\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서 클로저는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[weak self]","position":{"start":{"line":51,"column":13,"offset":1457},"end":{"line":51,"column":26,"offset":1470}}}],"position":{"start":{"line":51,"column":13,"offset":1457},"end":{"line":51,"column":26,"offset":1470}}},"children":"[weak self]"}}]," 캡처 리스트를 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"self","position":{"start":{"line":51,"column":40,"offset":1484},"end":{"line":51,"column":46,"offset":1490}}}],"position":{"start":{"line":51,"column":40,"offset":1484},"end":{"line":51,"column":46,"offset":1490}}},"children":"self"}}],"를 약하게 참조합니다. 클로저 실행 시점에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"self","position":{"start":{"line":51,"column":70,"offset":1514},"end":{"line":51,"column":76,"offset":1520}}}],"position":{"start":{"line":51,"column":70,"offset":1514},"end":{"line":51,"column":76,"offset":1520}}},"children":"self"}}],"가 존재하는지 확인하기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"guard let self = self else { return }","position":{"start":{"line":51,"column":92,"offset":1536},"end":{"line":51,"column":131,"offset":1575}}}],"position":{"start":{"line":51,"column":92,"offset":1536},"end":{"line":51,"column":131,"offset":1575}}},"children":"guard let self = self else { return }"}}]," 구문을 사용합니다. 이를 통해 강한 참조 순환을 방지할 수 있습니다."]}],"\n",["$","h2",null,{"id":"fe2284c0","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":["언제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak self","position":{"start":{"line":53,"column":7,"offset":1622},"end":{"line":53,"column":18,"offset":1633}}}],"position":{"start":{"line":53,"column":7,"offset":1622},"end":{"line":53,"column":18,"offset":1633}}},"children":"weak self"}}],"를 사용해야 할까?"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak self","position":{"start":{"line":55,"column":5,"offset":1649},"end":{"line":55,"column":16,"offset":1660}}}],"position":{"start":{"line":55,"column":5,"offset":1649},"end":{"line":55,"column":16,"offset":1660}}},"children":"weak self"}}],"를 사용해야 하는 경우입니다:"]}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"비동기 작업:"}]," 네트워크 요청, 타이머, 비동기 클로저 등의 작업에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"self","position":{"start":{"line":57,"column":46,"offset":1723},"end":{"line":57,"column":52,"offset":1729}}}],"position":{"start":{"line":57,"column":46,"offset":1723},"end":{"line":57,"column":52,"offset":1729}}},"children":"self"}}],"를 참조할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak self","position":{"start":{"line":57,"column":60,"offset":1737},"end":{"line":57,"column":71,"offset":1748}}}],"position":{"start":{"line":57,"column":60,"offset":1737},"end":{"line":57,"column":71,"offset":1748}}},"children":"weak self"}}],"를 사용하여 강한 참조 순환을 방지합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"클로저 속 콜백:"}]," 콜백이 객체를 소유하거나 객체가 콜백을 소유할 때 약한 참조를 사용하여 두 객체가 서로를 강하게 참조하지 않도록 합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"중간 상태 유지:"}]," 클로저 내에서 객체의 중간 상태를 유지하는 경우에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak self","position":{"start":{"line":59,"column":46,"offset":1902},"end":{"line":59,"column":57,"offset":1913}}}],"position":{"start":{"line":59,"column":46,"offset":1902},"end":{"line":59,"column":57,"offset":1913}}},"children":"weak self"}}],"를 사용하여 객체가 메모리에 계속 남아있지 않도록 합니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"아래는 네트워크 요청 예제입니다:"}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class NetworkManager {\n    var completionHandler: (() -> Void)?\n    \n    func fetchData() {\n        completionHandler = { [weak self] in\n            guard let self = self else { return }\n            // 데이터 처리 코드\n            print(\"Fetched data\")\n        }\n    }\n}\n\nlet networkManager = NetworkManager()\nnetworkManager.fetchData()\nnetworkManager.completionHandler?()\n"}],"position":{"start":{"line":63,"column":1,"offset":1967},"end":{"line":79,"column":4,"offset":2345}}},"children":"class NetworkManager {\n    var completionHandler: (() -> Void)?\n    \n    func fetchData() {\n        completionHandler = { [weak self] in\n            guard let self = self else { return }\n            // 데이터 처리 코드\n            print(\"Fetched data\")\n        }\n    }\n}\n\nlet networkManager = NetworkManager()\nnetworkManager.fetchData()\nnetworkManager.completionHandler?()\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["네트워크 요청이 완료되기 전 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NetworkManager","position":{"start":{"line":81,"column":17,"offset":2363},"end":{"line":81,"column":33,"offset":2379}}}],"position":{"start":{"line":81,"column":17,"offset":2363},"end":{"line":81,"column":33,"offset":2379}}},"children":"NetworkManager"}}]," 인스턴스가 해제되더라도 클로저 내에서의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"self","position":{"start":{"line":81,"column":56,"offset":2402},"end":{"line":81,"column":62,"offset":2408}}}],"position":{"start":{"line":81,"column":56,"offset":2402},"end":{"line":81,"column":62,"offset":2408}}},"children":"self"}}]," 참조가 약한 참조인 경우 메모리 누수를 방지할 수 있습니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서 클로저를 사용할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak self","position":{"start":{"line":85,"column":20,"offset":2470},"end":{"line":85,"column":31,"offset":2481}}}],"position":{"start":{"line":85,"column":20,"offset":2470},"end":{"line":85,"column":31,"offset":2481}}},"children":"weak self"}}],"를 사용하면 강한 참조 순환을 방지하고 메모리 관리 문제를 해결할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak self","position":{"start":{"line":85,"column":76,"offset":2526},"end":{"line":85,"column":87,"offset":2537}}}],"position":{"start":{"line":85,"column":76,"offset":2526},"end":{"line":85,"column":87,"offset":2537}}},"children":"weak self"}}],"를 사용해야 하는 경우와 그 사용 방법을 이해하면 앱의 메모리 사용 효율성을 높이고 예기치 않은 크래시를 방지할 수 있습니다. 위에서 설명한 내용을 기반으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak self","position":{"start":{"line":85,"column":175,"offset":2625},"end":{"line":85,"column":186,"offset":2636}}}],"position":{"start":{"line":85,"column":175,"offset":2625},"end":{"line":85,"column":186,"offset":2636}}},"children":"weak self"}}],"를 올바르게 사용하여 안정적인 코드를 작성할 수 있도록 노력합시다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift의 closure에서 weak self를 사용해야 하는 경우","toc":[{"tagName":"h1","title":"Swift의 클로저에서 'weak self'를 사용해야 하는 경우","id":"569f9a0e"},{"tagName":"h2","title":"클로저와 강한 참조 순환","id":"3ebcf45a"},{"tagName":"h2","title":"$undefined","id":""},{"tagName":"h2","title":"언제 ","id":"fe2284c0"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
