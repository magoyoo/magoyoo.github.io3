1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift%EC%97%90%EC%84%9C-Image%EB%A5%BC-Hex%EB%A1%9C-%EB%8B%A4%EB%A3%A8%EB%8A%94-%EB%B2%95-Protocol-%ED%99%9C%EC%9A%A9-%EB%B0%A9%EB%B2%95-ebdeed10","d"],{"children":["__PAGE__?{\"slug\":\"Swift에서-Image를-Hex로-다루는-법-Protocol-활용-방법-ebdeed10\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift%EC%97%90%EC%84%9C-Image%EB%A5%BC-Hex%EB%A1%9C-%EB%8B%A4%EB%A3%A8%EB%8A%94-%EB%B2%95-Protocol-%ED%99%9C%EC%9A%A9-%EB%B0%A9%EB%B2%95-ebdeed10","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift에서-Image를-Hex로-다루는-법-Protocol-활용-방법-ebdeed10\"}"},"styles":[]}],"segment":["slug","Swift%EC%97%90%EC%84%9C-Image%EB%A5%BC-Hex%EB%A1%9C-%EB%8B%A4%EB%A3%A8%EB%8A%94-%EB%B2%95-Protocol-%ED%99%9C%EC%9A%A9-%EB%B0%A9%EB%B2%95-ebdeed10","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift에서 Image를 Hex로 다루는 법: Protocol 활용 방법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 Swift 개발 환경에서 이미지를 Hex 형태로 변환하고 다루는 방법에 대해 설명합니다. 프로토콜을 활용하여 코드의 확장성과 재사용성을 높이는 방법까지 함께 다룹니다."}],["$","meta","3",{"name":"keywords","content":"Swift,Image,Hex,Protocol"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift%EC%97%90%EC%84%9C-Image%EB%A5%BC-Hex%EB%A1%9C-%EB%8B%A4%EB%A3%A8%EB%8A%94-%EB%B2%95-Protocol-%ED%99%9C%EC%9A%A9-%EB%B0%A9%EB%B2%95-ebdeed10"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift에서 Image를 Hex로 다루는 법: Protocol 활용 방법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift에서 Image를 Hex로 다루는 법: Protocol 활용 방법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 Swift 개발 환경에서 이미지를 Hex 형태로 변환하고 다루는 방법에 대해 설명합니다. 프로토콜을 활용하여 코드의 확장성과 재사용성을 높이는 방법까지 함께 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift%EC%97%90%EC%84%9C-Image%EB%A5%BC-Hex%EB%A1%9C-%EB%8B%A4%EB%A3%A8%EB%8A%94-%EB%B2%95-Protocol-%ED%99%9C%EC%9A%A9-%EB%B0%A9%EB%B2%95-ebdeed10"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift에서 Image를 Hex로 다루는 법: Protocol 활용 방법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 Swift 개발 환경에서 이미지를 Hex 형태로 변환하고 다루는 방법에 대해 설명합니다. 프로토콜을 활용하여 코드의 확장성과 재사용성을 높이는 방법까지 함께 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
12:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
13:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T572,import UIKit
import CoreImage

extension UIImage {
    func toHex() -> String? {
        guard let cgImage = self.cgImage else { return nil }
        let width = cgImage.width
        let height = cgImage.height
        let colorSpace = CGColorSpaceCreateDeviceRGB()
        let rawData = UnsafeMutablePointer<UInt8>.allocate(capacity: height * width * 4)
        let bytesPerPixel = 4
        let bytesPerRow = bytesPerPixel * width
        let bitsPerComponent = 8
        let context = CGContext(
            data: rawData,
            width: width,
            height: height,
            bitsPerComponent: bitsPerComponent,
            bytesPerRow: bytesPerRow,
            space: colorSpace,
            bitmapInfo: CGImageAlphaInfo.premultipliedLast.rawValue
        )
        context?.draw(cgImage, in: CGRect(x: 0, y: 0, width: width, height: height))

        var hexString = ""
        for y in 0..<height {
            for x in 0..<width {
                let byteIndex = (bytesPerRow * y) + x * bytesPerPixel
                let red = rawData[byteIndex]
                let green = rawData[byteIndex + 1]
                let blue = rawData[byteIndex + 2]
                let alpha = rawData[byteIndex + 3]
                hexString += String(format: "%02X%02X%02X%02X", red, green, blue, alpha)
            }
        }
        rawData.deallocate()
        return hexString
    }
}
f:T572,import UIKit
import CoreImage

extension UIImage {
    func toHex() -> String? {
        guard let cgImage = self.cgImage else { return nil }
        let width = cgImage.width
        let height = cgImage.height
        let colorSpace = CGColorSpaceCreateDeviceRGB()
        let rawData = UnsafeMutablePointer<UInt8>.allocate(capacity: height * width * 4)
        let bytesPerPixel = 4
        let bytesPerRow = bytesPerPixel * width
        let bitsPerComponent = 8
        let context = CGContext(
            data: rawData,
            width: width,
            height: height,
            bitsPerComponent: bitsPerComponent,
            bytesPerRow: bytesPerRow,
            space: colorSpace,
            bitmapInfo: CGImageAlphaInfo.premultipliedLast.rawValue
        )
        context?.draw(cgImage, in: CGRect(x: 0, y: 0, width: width, height: height))

        var hexString = ""
        for y in 0..<height {
            for x in 0..<width {
                let byteIndex = (bytesPerRow * y) + x * bytesPerPixel
                let red = rawData[byteIndex]
                let green = rawData[byteIndex + 1]
                let blue = rawData[byteIndex + 2]
                let alpha = rawData[byteIndex + 3]
                hexString += String(format: "%02X%02X%02X%02X", red, green, blue, alpha)
            }
        }
        rawData.deallocate()
        return hexString
    }
}
10:T59c,protocol HexConvertible {
    func toHex() -> String?
}

extension UIImage: HexConvertible {
    func toHex() -> String? {
        guard let cgImage = self.cgImage else { return nil }
        let width = cgImage.width
        let height = cgImage.height
        let colorSpace = CGColorSpaceCreateDeviceRGB()
        let rawData = UnsafeMutablePointer<UInt8>.allocate(capacity: height * width * 4)
        let bytesPerPixel = 4
        let bytesPerRow = bytesPerPixel * width
        let bitsPerComponent = 8
        let context = CGContext(
            data: rawData,
            width: width,
            height: height,
            bitsPerComponent: bitsPerComponent,
            bytesPerRow: bytesPerRow,
            space: colorSpace,
            bitmapInfo: CGImageAlphaInfo.premultipliedLast.rawValue
        )
        context?.draw(cgImage, in: CGRect(x: 0, y: 0, width: width, height: height))

        var hexString = ""
        for y in 0..<height {
            for x in 0..<width {
                let byteIndex = (bytesPerRow * y) + x * bytesPerPixel
                let red = rawData[byteIndex]
                let green = rawData[byteIndex + 1]
                let blue = rawData[byteIndex + 2]
                let alpha = rawData[byteIndex + 3]
                hexString += String(format: "%02X%02X%02X%02X", red, green, blue, alpha)
            }
        }
        rawData.deallocate()
        return hexString
    }
}
11:T59c,protocol HexConvertible {
    func toHex() -> String?
}

extension UIImage: HexConvertible {
    func toHex() -> String? {
        guard let cgImage = self.cgImage else { return nil }
        let width = cgImage.width
        let height = cgImage.height
        let colorSpace = CGColorSpaceCreateDeviceRGB()
        let rawData = UnsafeMutablePointer<UInt8>.allocate(capacity: height * width * 4)
        let bytesPerPixel = 4
        let bytesPerRow = bytesPerPixel * width
        let bitsPerComponent = 8
        let context = CGContext(
            data: rawData,
            width: width,
            height: height,
            bitsPerComponent: bitsPerComponent,
            bytesPerRow: bytesPerRow,
            space: colorSpace,
            bitmapInfo: CGImageAlphaInfo.premultipliedLast.rawValue
        )
        context?.draw(cgImage, in: CGRect(x: 0, y: 0, width: width, height: height))

        var hexString = ""
        for y in 0..<height {
            for x in 0..<width {
                let byteIndex = (bytesPerRow * y) + x * bytesPerPixel
                let red = rawData[byteIndex]
                let green = rawData[byteIndex + 1]
                let blue = rawData[byteIndex + 2]
                let alpha = rawData[byteIndex + 3]
                hexString += String(format: "%02X%02X%02X%02X", red, green, blue, alpha)
            }
        }
        rawData.deallocate()
        return hexString
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift에서 Image를 Hex로 다루는 법: Protocol 활용 방법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift에서 Image를 Hex로 다루는 법: Protocol 활용 방법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-09"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"4ba36e47","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift에서 Image를 Hex로 다루는 법: Protocol 활용 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이미지를 프로그램상에서 다루는 일은 많은 애플리케이션에서 없어서는 안 될 요소입니다. 특히 이미지 데이터를 Hex 형태로 변환 및 다루는 것은 이미지의 저장, 전송 및 다양한 변환 작업에서 중요한 역할을 합니다. 이 글에서는 Swift 언어를 사용하여 이미지를 Hex 형태로 변환하고 이를 효과적으로 다루기 위한 방법을 소개합니다. 또한, 코드의 재사용성과 확장성을 고려하여 프로토콜을 활용하는 방법도 함께 다룹니다."}],"\n",["$","h2",null,{"id":"cef9ee40","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"이미지 데이터를 Hex로 변환하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이미지 데이터를 Hex 형태로 변환하는 것은 이미지의 각 픽셀 값을 16진수로 표현하는 과정을 의미합니다. 이를 위해 Swift에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIImage","position":{"start":{"line":8,"column":76,"offset":379},"end":{"line":8,"column":85,"offset":388}}}],"position":{"start":{"line":8,"column":76,"offset":379},"end":{"line":8,"column":85,"offset":388}}},"children":"UIImage"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CIImage","position":{"start":{"line":8,"column":87,"offset":390},"end":{"line":8,"column":96,"offset":399}}}],"position":{"start":{"line":8,"column":87,"offset":390},"end":{"line":8,"column":96,"offset":399}}},"children":"CIImage"}}]," 클래스 및 관련된 메서드들을 사용할 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":10,"column":1,"offset":429},"end":{"line":50,"column":4,"offset":1835}}},"children":"$f"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIImage","position":{"start":{"line":52,"column":8,"offset":1844},"end":{"line":52,"column":17,"offset":1853}}}],"position":{"start":{"line":52,"column":8,"offset":1844},"end":{"line":52,"column":17,"offset":1853}}},"children":"UIImage"}}]," 클래스에 확장을 추가하여 이미지를 Hex 문자열로 변환할 수 있는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toHex","position":{"start":{"line":52,"column":55,"offset":1891},"end":{"line":52,"column":62,"offset":1898}}}],"position":{"start":{"line":52,"column":55,"offset":1891},"end":{"line":52,"column":62,"offset":1898}}},"children":"toHex"}}]," 메서드를 정의했습니다. 각 픽셀의 RGB 및 알파 값을 16진수로 변환하고 이를 하나의 문자열로 결합하여 Hex 값을 생성합니다."]}],"\n",["$","h2",null,{"id":"0304b3f8","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프로토콜을 활용한 코드의 일반화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 코드는 특정 이미지 클래스에 국한되어 있습니다. 코드의 재사용성과 확장성을 높이기 위해 프로토콜을 활용할 수 있습니다. 아래는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"HexConvertible","position":{"start":{"line":56,"column":75,"offset":2069},"end":{"line":56,"column":91,"offset":2085}}}],"position":{"start":{"line":56,"column":75,"offset":2069},"end":{"line":56,"column":91,"offset":2085}}},"children":"HexConvertible"}}],"이라는 프로토콜을 정의하고 이를 채택하는 예제입니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$10"}],"position":{"start":{"line":58,"column":1,"offset":2116},"end":{"line":99,"column":4,"offset":3564}}},"children":"$11"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIImage","position":{"start":{"line":101,"column":4,"offset":3569},"end":{"line":101,"column":13,"offset":3578}}}],"position":{"start":{"line":101,"column":4,"offset":3569},"end":{"line":101,"column":13,"offset":3578}}},"children":"UIImage"}}]," 클래스는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"HexConvertible","position":{"start":{"line":101,"column":19,"offset":3584},"end":{"line":101,"column":35,"offset":3600}}}],"position":{"start":{"line":101,"column":19,"offset":3584},"end":{"line":101,"column":35,"offset":3600}}},"children":"HexConvertible"}}]," 프로토콜을 채택하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toHex","position":{"start":{"line":101,"column":47,"offset":3612},"end":{"line":101,"column":54,"offset":3619}}}],"position":{"start":{"line":101,"column":47,"offset":3612},"end":{"line":101,"column":54,"offset":3619}}},"children":"toHex"}}]," 메서드를 구현합니다. 이를 통해 코드의 재사용성과 확장성이 높아집니다. 나중에 다른 이미지 타입을 추가로 다뤄야 할 때도 유사한 방식으로 프로토콜을 채택하고 변환 메서드를 구현하면 됩니다."]}],"\n",["$","h2",null,{"id":"74d1bd81","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"예제를 통한 이해"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"실제 예제를 통해 사용 방법을 살펴보겠습니다. 다음은 뷰 컨트롤러에서 이미지를 Hex로 변환하고 이를 출력하는 코드입니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nclass ViewController: UIViewController {\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        if let image = UIImage(named: \"exampleImage\") {\n            if let hexString = image.toHex() {\n                print(\"Hex Value: \\(hexString)\")\n            } else {\n                print(\"Failed to convert image to Hex\")\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":107,"column":1,"offset":3811},"end":{"line":122,"column":4,"offset":4201}}},"children":"import UIKit\n\nclass ViewController: UIViewController {\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        if let image = UIImage(named: \"exampleImage\") {\n            if let hexString = image.toHex() {\n                print(\"Hex Value: \\(hexString)\")\n            } else {\n                print(\"Failed to convert image to Hex\")\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이와 같이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIImage","position":{"start":{"line":124,"column":7,"offset":4209},"end":{"line":124,"column":16,"offset":4218}}}],"position":{"start":{"line":124,"column":7,"offset":4209},"end":{"line":124,"column":16,"offset":4218}}},"children":"UIImage"}}]," 객체를 생성하고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toHex","position":{"start":{"line":124,"column":26,"offset":4228},"end":{"line":124,"column":33,"offset":4235}}}],"position":{"start":{"line":124,"column":26,"offset":4228},"end":{"line":124,"column":33,"offset":4235}}},"children":"toHex"}}]," 메서드를 호출하여 Hex 값으로 변환한 후, 이를 출력할 수 있습니다. 만약 변환에 실패하면 에러 메시지를 출력할 수 있습니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서 이미지를 Hex 형태로 변환하고 다루는 법에 대해 설명했습니다. 코드를 작성함에 있어 프로토콜을 활용하면 재사용성과 확장성을 더욱 높일 수 있습니다. 이러한 접근 방식은 애플리케이션을 개발하는 데 있어 코드의 유지보수성과 일관성을 높이는 데 큰 도움을 줄 것입니다. 이제 이 기법을 프로젝트에 적용하여 이미지 데이터를 더욱 효율적으로 관리해보세요!"}]]}]}],["$","$L12",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L13",null,{"articleTitle":"Swift에서 Image를 Hex로 다루는 법: Protocol 활용 방법","toc":[{"tagName":"h1","title":"Swift에서 Image를 Hex로 다루는 법: Protocol 활용 방법","id":"4ba36e47"},{"tagName":"h2","title":"이미지 데이터를 Hex로 변환하기","id":"cef9ee40"},{"tagName":"h2","title":"프로토콜을 활용한 코드의 일반화","id":"0304b3f8"},{"tagName":"h2","title":"예제를 통한 이해","id":"74d1bd81"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
