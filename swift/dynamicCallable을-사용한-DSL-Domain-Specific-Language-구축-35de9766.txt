1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","dynamicCallable%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-DSL-Domain-Specific-Language-%EA%B5%AC%EC%B6%95-35de9766","d"],{"children":["__PAGE__?{\"slug\":\"dynamicCallable을-사용한-DSL-Domain-Specific-Language-구축-35de9766\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","dynamicCallable%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-DSL-Domain-Specific-Language-%EA%B5%AC%EC%B6%95-35de9766","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"dynamicCallable을-사용한-DSL-Domain-Specific-Language-구축-35de9766\"}"},"styles":[]}],"segment":["slug","dynamicCallable%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-DSL-Domain-Specific-Language-%EA%B5%AC%EC%B6%95-35de9766","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"@dynamicCallable을 사용한 DSL (Domain Specific Language) 구축 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift의 @dynamicCallable 속성을 사용하여 도메인 특화 언어(DSL)를 구축하는 방법을 설명합니다. 이 글에서는 @dynamicCallable의 기본 개념, 사용법, 그리고 실제로 DSL을 구현하는 과정을 단계별로 설명합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,DSL,DynamicCallable,프로그래밍"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/dynamicCallable%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-DSL-Domain-Specific-Language-%EA%B5%AC%EC%B6%95-35de9766"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"@dynamicCallable을 사용한 DSL (Domain Specific Language) 구축 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"@dynamicCallable을 사용한 DSL (Domain Specific Language) 구축 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift의 @dynamicCallable 속성을 사용하여 도메인 특화 언어(DSL)를 구축하는 방법을 설명합니다. 이 글에서는 @dynamicCallable의 기본 개념, 사용법, 그리고 실제로 DSL을 구현하는 과정을 단계별로 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/dynamicCallable%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-DSL-Domain-Specific-Language-%EA%B5%AC%EC%B6%95-35de9766"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"@dynamicCallable을 사용한 DSL (Domain Specific Language) 구축 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift의 @dynamicCallable 속성을 사용하여 도메인 특화 언어(DSL)를 구축하는 방법을 설명합니다. 이 글에서는 @dynamicCallable의 기본 개념, 사용법, 그리고 실제로 DSL을 구현하는 과정을 단계별로 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"@dynamicCallable을 사용한 DSL (Domain Specific Language) 구축"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"@dynamicCallable을 사용한 DSL (Domain Specific Language) 구축"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-08"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"ea9abe7d","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"@dynamicCallable을 사용한 DSL (Domain Specific Language) 구축"}],"\n",["$","h2",null,{"id":"47404d4c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"@dynamicCallable의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift 5.0에서 도입된 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@dynamicCallable","position":{"start":{"line":6,"column":17,"offset":104},"end":{"line":6,"column":35,"offset":122}}}],"position":{"start":{"line":6,"column":17,"offset":104},"end":{"line":6,"column":35,"offset":122}}},"children":"@dynamicCallable"}}]," 속성은 자연스러운 문법으로 메서드를 호출할 수 있게 해주는 기능입니다. 이 속성 덕분에 객체를 함수처럼 호출할 수 있게 되며, 이를 통해 도메인 특화 언어(DSL)를 구현하는데 매우 유용합니다. DSL은 특정 문제 영역에 맞춰 최적화된 언어로, 코드를 직관적이고 간결하게 작성할 수 있게 해줍니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@dynamicCallable","position":{"start":{"line":8,"column":1,"offset":291},"end":{"line":8,"column":19,"offset":309}}}],"position":{"start":{"line":8,"column":1,"offset":291},"end":{"line":8,"column":19,"offset":309}}},"children":"@dynamicCallable"}}],"을 사용하면 객체가 함수 호출처럼 보이게 만들 수 있으며 이는 문법을 매우 깔끔하게 만듭니다. 이 기능을 사용하려면 먼저 클래스나 구조체에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@dynamicCallable","position":{"start":{"line":8,"column":97,"offset":387},"end":{"line":8,"column":115,"offset":405}}}],"position":{"start":{"line":8,"column":97,"offset":387},"end":{"line":8,"column":115,"offset":405}}},"children":"@dynamicCallable"}}]," 속성을 추가하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"dynamicallyCall(withArguments:)","position":{"start":{"line":8,"column":126,"offset":416},"end":{"line":8,"column":159,"offset":449}}}],"position":{"start":{"line":8,"column":126,"offset":416},"end":{"line":8,"column":159,"offset":449}}},"children":"dynamicallyCall(withArguments:)"}}]," 또는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"dynamicallyCall(withKeywordArguments:)","position":{"start":{"line":8,"column":163,"offset":453},"end":{"line":8,"column":203,"offset":493}}}],"position":{"start":{"line":8,"column":163,"offset":453},"end":{"line":8,"column":203,"offset":493}}},"children":"dynamicallyCall(withKeywordArguments:)"}}]," 메서드를 구현해야 합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["예를 들어, 다음과 같이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@dynamicCallable","position":{"start":{"line":10,"column":15,"offset":524},"end":{"line":10,"column":33,"offset":542}}}],"position":{"start":{"line":10,"column":15,"offset":524},"end":{"line":10,"column":33,"offset":542}}},"children":"@dynamicCallable"}}],"을 사용하여 객체를 함수처럼 호출하는 예제를 볼 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"@dynamicCallable\nstruct FunctionLike {\n    func dynamicallyCall(withArguments args: [Int]) -> Int {\n        return args.reduce(0, +)\n    }\n}\n\nlet sum = FunctionLike()\nlet result = sum(1, 2, 3, 4) // 결과는 10\n"}],"position":{"start":{"line":12,"column":1,"offset":578},"end":{"line":22,"column":4,"offset":796}}},"children":"@dynamicCallable\nstruct FunctionLike {\n    func dynamicallyCall(withArguments args: [Int]) -> Int {\n        return args.reduce(0, +)\n    }\n}\n\nlet sum = FunctionLike()\nlet result = sum(1, 2, 3, 4) // 결과는 10\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sum(1, 2, 3, 4)","position":{"start":{"line":24,"column":9,"offset":806},"end":{"line":24,"column":26,"offset":823}}}],"position":{"start":{"line":24,"column":9,"offset":806},"end":{"line":24,"column":26,"offset":823}}},"children":"sum(1, 2, 3, 4)"}}],"는 실제로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sum.dynamicallyCall(withArguments: [1, 2, 3, 4])","position":{"start":{"line":24,"column":32,"offset":829},"end":{"line":24,"column":82,"offset":879}}}],"position":{"start":{"line":24,"column":32,"offset":829},"end":{"line":24,"column":82,"offset":879}}},"children":"sum.dynamicallyCall(withArguments: [1, 2, 3, 4])"}}],"와 동일하게 동작합니다. 이처럼 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@dynamicCallable","position":{"start":{"line":24,"column":100,"offset":897},"end":{"line":24,"column":118,"offset":915}}}],"position":{"start":{"line":24,"column":100,"offset":897},"end":{"line":24,"column":118,"offset":915}}},"children":"@dynamicCallable"}}],"을 사용하면 객체를 더욱 직관적이고 간결하게 사용할 수 있습니다."]}],"\n",["$","h2",null,{"id":"52c82f84","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"DSL (Domain Specific Language) 구축하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@dynamicCallable","position":{"start":{"line":28,"column":4,"offset":996},"end":{"line":28,"column":22,"offset":1014}}}],"position":{"start":{"line":28,"column":4,"offset":996},"end":{"line":28,"column":22,"offset":1014}}},"children":"@dynamicCallable"}}],"을 사용하여 DSL을 구축하는 과정을 단계별로 살펴보겠습니다. 여기에서는 간단한 예제로 JSON 객체를 생성하는 DSL을 만들어보겠습니다."]}],"\n",["$","h3",null,{"id":"1528a784","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 기본 구조 정의하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저 JSON 객체를 표현할 클래스를 정의합니다. 이 클래스는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@dynamicCallable","position":{"start":{"line":32,"column":36,"offset":1147},"end":{"line":32,"column":54,"offset":1165}}}],"position":{"start":{"line":32,"column":36,"offset":1147},"end":{"line":32,"column":54,"offset":1165}}},"children":"@dynamicCallable"}}]," 속성을 가지고 있으며, 키워드 인자를 사용하여 JSON의 키-값 쌍을 추가는 기능을 제공합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"@dynamicCallable\nclass JSONBuilder {\n    var jsonObject: [String: Any] = [:]\n\n    func dynamicallyCall(withKeywordArguments keyValuePairs: KeyValuePairs<String, Any>) {\n        for (key, value) in keyValuePairs {\n            jsonObject[key] = value\n        }\n    }\n\n    func build() -> [String: Any] {\n        return jsonObject\n    }\n}\n"}],"position":{"start":{"line":34,"column":1,"offset":1221},"end":{"line":49,"column":4,"offset":1569}}},"children":"@dynamicCallable\nclass JSONBuilder {\n    var jsonObject: [String: Any] = [:]\n\n    func dynamicallyCall(withKeywordArguments keyValuePairs: KeyValuePairs<String, Any>) {\n        for (key, value) in keyValuePairs {\n            jsonObject[key] = value\n        }\n    }\n\n    func build() -> [String: Any] {\n        return jsonObject\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@dynamicCallable","position":{"start":{"line":51,"column":1,"offset":1571},"end":{"line":51,"column":19,"offset":1589}}}],"position":{"start":{"line":51,"column":1,"offset":1571},"end":{"line":51,"column":19,"offset":1589}}},"children":"@dynamicCallable"}}]," 속성을 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"dynamicallyCall(withKeywordArguments:)","position":{"start":{"line":51,"column":27,"offset":1597},"end":{"line":51,"column":67,"offset":1637}}}],"position":{"start":{"line":51,"column":27,"offset":1597},"end":{"line":51,"column":67,"offset":1637}}},"children":"dynamicallyCall(withKeywordArguments:)"}}]," 메서드를 구현하여 키워드 인자를 받아들이고, 이를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"jsonObject","position":{"start":{"line":51,"column":96,"offset":1666},"end":{"line":51,"column":108,"offset":1678}}}],"position":{"start":{"line":51,"column":96,"offset":1666},"end":{"line":51,"column":108,"offset":1678}}},"children":"jsonObject"}}]," 딕셔너리에 추가합니다."]}],"\n",["$","h3",null,{"id":"f4c1936a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. DSL 사용 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 JSONBuilder 클래스를 사용하여 JSON 객체를 생성하는 예제입니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let jsonBuilder = JSONBuilder()\njsonBuilder(name: \"John Doe\", age: 29, isActive: true)\nlet jsonObject = jsonBuilder.build()\nprint(jsonObject) // [\n"}],"position":{"start":{"line":57,"column":1,"offset":1759},"end":{"line":62,"column":4,"offset":1918}}},"children":"let jsonBuilder = JSONBuilder()\njsonBuilder(name: \"John Doe\", age: 29, isActive: true)\nlet jsonObject = jsonBuilder.build()\nprint(jsonObject) // [\n"}}]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"@dynamicCallable을 사용한 DSL (Domain Specific Language) 구축","toc":[{"tagName":"h1","title":"@dynamicCallable을 사용한 DSL (Domain Specific Language) 구축","id":"ea9abe7d"},{"tagName":"h2","title":"@dynamicCallable의 기본 개념","id":"47404d4c"},{"tagName":"h2","title":"DSL (Domain Specific Language) 구축하기","id":"52c82f84"},{"tagName":"h3","title":"1. 기본 구조 정의하기","id":"1528a784"},{"tagName":"h3","title":"2. DSL 사용 예제","id":"f4c1936a"}],"language":"kr"}]}]]}]]
8:null
