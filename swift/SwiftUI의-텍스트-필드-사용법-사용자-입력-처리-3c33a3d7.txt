1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI%EC%9D%98-%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%95%84%EB%93%9C-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9E%85%EB%A0%A5-%EC%B2%98%EB%A6%AC-3c33a3d7","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI의-텍스트-필드-사용법-사용자-입력-처리-3c33a3d7\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI%EC%9D%98-%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%95%84%EB%93%9C-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9E%85%EB%A0%A5-%EC%B2%98%EB%A6%AC-3c33a3d7","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI의-텍스트-필드-사용법-사용자-입력-처리-3c33a3d7\"}"},"styles":[]}],"segment":["slug","SwiftUI%EC%9D%98-%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%95%84%EB%93%9C-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9E%85%EB%A0%A5-%EC%B2%98%EB%A6%AC-3c33a3d7","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI의 텍스트 필드 사용법: 사용자 입력 처리 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 SwiftUI에서 텍스트 필드를 사용하여 사용자 입력을 처리하는 방법에 대해 설명합니다. 텍스트 필드의 기초적인 사용법부터 사용자 입력 검증과 포맷팅까지 다룹니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,텍스트 필드,사용자 입력,Swift"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI%EC%9D%98-%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%95%84%EB%93%9C-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9E%85%EB%A0%A5-%EC%B2%98%EB%A6%AC-3c33a3d7"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI의 텍스트 필드 사용법: 사용자 입력 처리 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI의 텍스트 필드 사용법: 사용자 입력 처리 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 SwiftUI에서 텍스트 필드를 사용하여 사용자 입력을 처리하는 방법에 대해 설명합니다. 텍스트 필드의 기초적인 사용법부터 사용자 입력 검증과 포맷팅까지 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI%EC%9D%98-%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%95%84%EB%93%9C-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9E%85%EB%A0%A5-%EC%B2%98%EB%A6%AC-3c33a3d7"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI의 텍스트 필드 사용법: 사용자 입력 처리 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 SwiftUI에서 텍스트 필드를 사용하여 사용자 입력을 처리하는 방법에 대해 설명합니다. 텍스트 필드의 기초적인 사용법부터 사용자 입력 검증과 포맷팅까지 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI의 텍스트 필드 사용법: 사용자 입력 처리"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI의 텍스트 필드 사용법: 사용자 입력 처리"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-08-02"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"3747248d","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI의 텍스트 필드 사용법: 사용자 입력 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI는 혁신적인 사용자 인터페이스 프레임워크로, 선언형 문법을 사용하여 코드를 간결하고 읽기 쉽게 만드는 데 도움이 됩니다. 이 글에서는 SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TextField","position":{"start":{"line":4,"column":92,"offset":126},"end":{"line":4,"column":103,"offset":137}}}],"position":{"start":{"line":4,"column":92,"offset":126},"end":{"line":4,"column":103,"offset":137}}},"children":"TextField"}}],"를 사용하여 사용자 입력을 처리하는 방법에 대해 설명합니다. 처음부터 끝까지 차근차근 따라가면서 기본 사용법부터 고급 활용 방법까지 이해할 수 있도록 작성되었습니다."]}],"\n",["$","h2",null,{"id":"6816cab6","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"기본 텍스트 필드 사용법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI에서 텍스트 필드를 사용하려면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@State","position":{"start":{"line":8,"column":25,"offset":273},"end":{"line":8,"column":33,"offset":281}}}],"position":{"start":{"line":8,"column":25,"offset":273},"end":{"line":8,"column":33,"offset":281}}},"children":"@State"}}]," 프로퍼티를 이용하여 사용자 입력을 저장할 수 있는 변수를 선언해야 합니다. 예를 들어, 사용자의 이름을 입력받는 간단한 텍스트 필드는 다음과 같이 구현할 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var name: String = \"\"\n\n    var body: some View {\n        VStack {\n            TextField(\"Enter your name\", text: $name)\n                .padding()\n                .textFieldStyle(RoundedBorderTextFieldStyle())\n            Text(\"Hello, \\(name)!\")\n        }\n        .padding()\n    }\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":377},"end":{"line":26,"column":4,"offset":734}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var name: String = \"\"\n\n    var body: some View {\n        VStack {\n            TextField(\"Enter your name\", text: $name)\n                .padding()\n                .textFieldStyle(RoundedBorderTextFieldStyle())\n            Text(\"Hello, \\(name)!\")\n        }\n        .padding()\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@State","position":{"start":{"line":28,"column":8,"offset":743},"end":{"line":28,"column":16,"offset":751}}}],"position":{"start":{"line":28,"column":8,"offset":743},"end":{"line":28,"column":16,"offset":751}}},"children":"@State"}}],"로 선언된 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name","position":{"start":{"line":28,"column":22,"offset":757},"end":{"line":28,"column":28,"offset":763}}}],"position":{"start":{"line":28,"column":22,"offset":757},"end":{"line":28,"column":28,"offset":763}}},"children":"name"}}]," 변수는 텍스트 필드에 입력된 값을 실시간으로 업데이트합니다. 사용자가 텍스트 필드에 이름을 입력하면, 아래의 텍스트가 해당 이름으로 인사말을 표시합니다."]}],"\n",["$","h2",null,{"id":"68bd7350","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"사용자 입력 검증"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"사용자 입력을 검증하는 것은 많은 애플리케이션에서 중요한 작업입니다. SwiftUI에서는 다양한 검증 방법을 제공하는데, 가장 기본적인 방법은 입력 값이 특정 조건을 만족하는지 확인하는 것입니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"아래 예제는 이메일 주소를 입력받고 유효한 형식인지 확인하는 간단한 검증 로직을 보여줍니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct EmailValidationView: View {\n    @State private var email: String = \"\"\n    @State private var isValid: Bool = true\n\n    var body: some View {\n        VStack {\n            TextField(\"Enter your email\", text: $email)\n                .padding()\n                .textFieldStyle(RoundedBorderTextFieldStyle())\n                .onChange(of: email) { newValue in\n                    isValid = isValidEmail(newValue)\n                }\n            Text(isValid ? \"Valid email\" : \"Invalid email\")\n                .foregroundColor(isValid ? .green : .red)\n        }\n        .padding()\n    }\n\n    func isValidEmail(_ email: String) -> Bool {\n        // 정규식을 사용한 이메일 검증\n        let emailRegEx = \".+@.+\\..+\"\n        let emailTest = NSPredicate(format:\"SELF MATCHES %@\", emailRegEx)\n        return emailTest.evaluate(with: email)\n    }\n}\n"}],"position":{"start":{"line":36,"column":1,"offset":1029},"end":{"line":62,"column":4,"offset":1870}}},"children":"struct EmailValidationView: View {\n    @State private var email: String = \"\"\n    @State private var isValid: Bool = true\n\n    var body: some View {\n        VStack {\n            TextField(\"Enter your email\", text: $email)\n                .padding()\n                .textFieldStyle(RoundedBorderTextFieldStyle())\n                .onChange(of: email) { newValue in\n                    isValid = isValidEmail(newValue)\n                }\n            Text(isValid ? \"Valid email\" : \"Invalid email\")\n                .foregroundColor(isValid ? .green : .red)\n        }\n        .padding()\n    }\n\n    func isValidEmail(_ email: String) -> Bool {\n        // 정규식을 사용한 이메일 검증\n        let emailRegEx = \".+@.+\\..+\"\n        let emailTest = NSPredicate(format:\"SELF MATCHES %@\", emailRegEx)\n        return emailTest.evaluate(with: email)\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onChange(of:)","position":{"start":{"line":64,"column":9,"offset":1880},"end":{"line":64,"column":24,"offset":1895}}}],"position":{"start":{"line":64,"column":9,"offset":1880},"end":{"line":64,"column":24,"offset":1895}}},"children":"onChange(of:)"}}]," 메서드를 사용하여 이메일 입력 필드의 값이 변경될 때마다 검증을 수행합니다. 정규식을 사용하여 유효한 이메일 형식인지 확인하고, 결과에 따라 텍스트의 색상을 변경합니다."]}],"\n",["$","h2",null,{"id":"c04a39ef","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"사용자 입력 포맷팅"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"특정 형식으로 입력을 받거나 포맷팅하는 경우가 있습니다. 예를 들어, 전화번호나 날짜를 입력받을 때는 특정 포맷이 필요합니다. 아래 예제에서는 전화번호를 포맷팅하는 방법을 보여줍니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct PhoneNumberFormatterView: View {\n    @State private var phoneNumber: String = \"\"\n\n    var body: some View {\n        VStack {\n            TextField(\"Enter your phone number\", text: $phoneNumber)\n                .keyboardType(.numberPad)\n                .padding()\n                .textFieldStyle(RoundedBorderTextFieldStyle())\n                .onChange(of: phoneNumber) { newValue in\n                    phoneNumber = formatPhoneNumber(newValue)\n                }\n            Text(\"Formatted: \\(phoneNumber)\")\n        }\n        .padding()\n    }\n\n    func formatPhoneNumber(_ number: String) -> String {\n        let cleanedNumber = number.filter { $0.isNumber }\n        let formatter = NumberFormatter()\n        formatter.numberStyle = .none\n        let numberAsNSNumber = NSNumber(value: Int(cleanedNumber) ?? 0)\n\n        return formatter.string(from: numberAsNSNumber) ?? number\n    }\n}\n"}],"position":{"start":{"line":70,"column":1,"offset":2111},"end":{"line":97,"column":4,"offset":3017}}},"children":"struct PhoneNumberFormatterView: View {\n    @State private var phoneNumber: String = \"\"\n\n    var body: some View {\n        VStack {\n            TextField(\"Enter your phone number\", text: $phoneNumber)\n                .keyboardType(.numberPad)\n                .padding()\n                .textFieldStyle(RoundedBorderTextFieldStyle())\n                .onChange(of: phoneNumber) { newValue in\n                    phoneNumber = formatPhoneNumber(newValue)\n                }\n            Text(\"Formatted: \\(phoneNumber)\")\n        }\n        .padding()\n    }\n\n    func formatPhoneNumber(_ number: String) -> String {\n        let cleanedNumber = number.filter { $0.isNumber }\n        let formatter = NumberFormatter()\n        formatter.numberStyle = .none\n        let numberAsNSNumber = NSNumber(value: Int(cleanedNumber) ?? 0)\n\n        return formatter.string(from: numberAsNSNumber) ?? number\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서는 전화번호 입력 시 숫자만 남기고 특정 형식으로 변환합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onChange(of:)","position":{"start":{"line":99,"column":42,"offset":3060},"end":{"line":99,"column":57,"offset":3075}}}],"position":{"start":{"line":99,"column":42,"offset":3060},"end":{"line":99,"column":57,"offset":3075}}},"children":"onChange(of:)"}}]," 메서드를 사용하여 입력 값이 변경될 때마다 포맷팅을 적용합니다."]}],"\n",["$","h2",null,{"id":"ed8464a3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"마무리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TextField","position":{"start":{"line":103,"column":10,"offset":3130},"end":{"line":103,"column":21,"offset":3141}}}],"position":{"start":{"line":103,"column":10,"offset":3130},"end":{"line":103,"column":21,"offset":3141}}},"children":"TextField"}}],"는 강력하고 유연한 사용자 입력 도구로, 기본 사용법부터 고급 기능까지 다양한 방식으로 활용할 수 있습니다. 텍스트 필드를 사용하여 사용자 입력을 받고 이를 검증하고 포맷팅하는 방법을 이해하고 나면, 더 복잡한 입력 폼을 제작하는 데 크게 도움이 될 것입니다. 다양한 예제를 통해 직접 구현해보고, 앱 개발에 적용해 보세요."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI의 텍스트 필드 사용법: 사용자 입력 처리","toc":[{"tagName":"h1","title":"SwiftUI의 텍스트 필드 사용법: 사용자 입력 처리","id":"3747248d"},{"tagName":"h2","title":"기본 텍스트 필드 사용법","id":"6816cab6"},{"tagName":"h2","title":"사용자 입력 검증","id":"68bd7350"},{"tagName":"h2","title":"사용자 입력 포맷팅","id":"c04a39ef"},{"tagName":"h2","title":"마무리","id":"ed8464a3"}],"language":"kr"}]}]]}]]
8:null
