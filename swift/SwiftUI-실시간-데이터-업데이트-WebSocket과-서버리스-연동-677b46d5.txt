1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-WebSocket%EA%B3%BC-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%EC%97%B0%EB%8F%99-677b46d5","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI-실시간-데이터-업데이트-WebSocket과-서버리스-연동-677b46d5\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-WebSocket%EA%B3%BC-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%EC%97%B0%EB%8F%99-677b46d5","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI-실시간-데이터-업데이트-WebSocket과-서버리스-연동-677b46d5\"}"},"styles":[]}],"segment":["slug","SwiftUI-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-WebSocket%EA%B3%BC-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%EC%97%B0%EB%8F%99-677b46d5","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI 실시간 데이터 업데이트: WebSocket과 서버리스 연동 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"SwiftUI에서 WebSocket과 서버리스(back-end)를 활용해 실시간 데이터 업데이트를 구현하는 방법을 설명합니다. 이 글은 실시간 앱 개발을 통해 사용성 향상에 도움을 줄 수 있을 것입니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,WebSocket,서버리스,실시간 업데이트"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-WebSocket%EA%B3%BC-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%EC%97%B0%EB%8F%99-677b46d5"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI 실시간 데이터 업데이트: WebSocket과 서버리스 연동 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI 실시간 데이터 업데이트: WebSocket과 서버리스 연동 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"SwiftUI에서 WebSocket과 서버리스(back-end)를 활용해 실시간 데이터 업데이트를 구현하는 방법을 설명합니다. 이 글은 실시간 앱 개발을 통해 사용성 향상에 도움을 줄 수 있을 것입니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-WebSocket%EA%B3%BC-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%EC%97%B0%EB%8F%99-677b46d5"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI 실시간 데이터 업데이트: WebSocket과 서버리스 연동 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"SwiftUI에서 WebSocket과 서버리스(back-end)를 활용해 실시간 데이터 업데이트를 구현하는 방법을 설명합니다. 이 글은 실시간 앱 개발을 통해 사용성 향상에 도움을 줄 수 있을 것입니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
10:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
11:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T5aa,import Foundation
import Combine

class WebSocketManager: ObservableObject {
    private var webSocketTask: URLSessionWebSocketTask?
    private var cancellables: Set<AnyCancellable> = []
    
    @Published var receivedMessage: String?
    
    func connect() {
        let url = URL(string: "wss://your-websocket-endpoint")!
        let webSocketTask = URLSession.shared.webSocketTask(with: url)
        self.webSocketTask = webSocketTask
        webSocketTask.resume()
        receiveMessage()
    }
    
    func receiveMessage() {
        webSocketTask?.receive { [weak self] result in
            switch result {
            case .failure(let error):
                print("Error receiving message: \(error)")
            case .success(.string(let message)):
                DispatchQueue.main.async {
                    self?.receivedMessage = message
                }
                self?.receiveMessage() // continue listening for new messages
            case .success:
                break // handle other message types
            }
        }
    }
    
    func sendMessage(_ message: String) {
        let message = URLSessionWebSocketTask.Message.string(message)
        webSocketTask?.send(message) { error in
            if let error = error {
                print("Error sending message: \(error)")
            }
        }
    }
    
    func disconnect() {
        webSocketTask?.cancel(with: .goingAway, reason: nil)
    }
}
f:T5aa,import Foundation
import Combine

class WebSocketManager: ObservableObject {
    private var webSocketTask: URLSessionWebSocketTask?
    private var cancellables: Set<AnyCancellable> = []
    
    @Published var receivedMessage: String?
    
    func connect() {
        let url = URL(string: "wss://your-websocket-endpoint")!
        let webSocketTask = URLSession.shared.webSocketTask(with: url)
        self.webSocketTask = webSocketTask
        webSocketTask.resume()
        receiveMessage()
    }
    
    func receiveMessage() {
        webSocketTask?.receive { [weak self] result in
            switch result {
            case .failure(let error):
                print("Error receiving message: \(error)")
            case .success(.string(let message)):
                DispatchQueue.main.async {
                    self?.receivedMessage = message
                }
                self?.receiveMessage() // continue listening for new messages
            case .success:
                break // handle other message types
            }
        }
    }
    
    func sendMessage(_ message: String) {
        let message = URLSessionWebSocketTask.Message.string(message)
        webSocketTask?.send(message) { error in
            if let error = error {
                print("Error sending message: \(error)")
            }
        }
    }
    
    func disconnect() {
        webSocketTask?.cancel(with: .goingAway, reason: nil)
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI 실시간 데이터 업데이트: WebSocket과 서버리스 연동"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI 실시간 데이터 업데이트: WebSocket과 서버리스 연동"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-15"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"60759f48","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI 실시간 데이터 업데이트: WebSocket과 서버리스 연동"}],"\n",["$","h2",null,{"id":"4fbf3662","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"서론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["모바일 애플리케이션에서 실시간 데이터 업데이트는 사용자 경험을 크게 향상시킬 수 있는 중요한 기능입니다. 주가 정보, 채팅 어플리케이션, 스포츠 경기 업데이트 등 다양한 분야에서 이러한 기능은 매우 유용합니다. 이번 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SwiftUI","position":{"start":{"line":6,"column":127,"offset":178},"end":{"line":6,"column":136,"offset":187}}}],"position":{"start":{"line":6,"column":127,"offset":178},"end":{"line":6,"column":136,"offset":187}}},"children":"SwiftUI"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"WebSocket","position":{"start":{"line":6,"column":138,"offset":189},"end":{"line":6,"column":149,"offset":200}}}],"position":{"start":{"line":6,"column":138,"offset":189},"end":{"line":6,"column":149,"offset":200}}},"children":"WebSocket"}}],"을 활용하여 실시간으로 데이터를 업데이트하는 방법을 살펴보겠습니다. 이를 위해 서버리스(back-end) 솔루션도 함께 이용합니다."]}],"\n",["$","h2",null,{"id":"e1ff1ce7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"WebSocket 개요"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"WebSocket","position":{"start":{"line":10,"column":1,"offset":292},"end":{"line":10,"column":12,"offset":303}}}],"position":{"start":{"line":10,"column":1,"offset":292},"end":{"line":10,"column":12,"offset":303}}},"children":"WebSocket"}}],"은 클라이언트와 서버 간의 양방향 통신을 가능하게 하는 프로토콜입니다. 일반적인 HTTP 요청과 응답 방식과 달리, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"WebSocket","position":{"start":{"line":10,"column":77,"offset":368},"end":{"line":10,"column":88,"offset":379}}}],"position":{"start":{"line":10,"column":77,"offset":368},"end":{"line":10,"column":88,"offset":379}}},"children":"WebSocket"}}],"은 연결이 유지되는 동안 양쪽에서 자유롭게 데이터를 주고받을 수 있습니다. 이는 실시간 데이터 업데이트에 매우 적합합니다."]}],"\n",["$","h2",null,{"id":"01fa1e45","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"준비사항"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":"최신 버전의 Xcode"}],"\n",["$","li","li-1",{"children":"AWS Lambda 또는 Firebase Functions 같은 서버리스 플랫폼"}],"\n",["$","li","li-2",{"children":"기본적인 SwiftUI 및 Swift 언어에 대한 이해"}],"\n"]}],"\n",["$","h2",null,{"id":"35ce895d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프로젝트 설정"}],"\n",["$","h3",null,{"id":"e561e020","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"SwiftUI 프로젝트 생성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"먼저, Xcode에서 SwiftUI 프로젝트를 생성합니다. 이는 일반적인 iOS 앱 만들기와 동일합니다. 프로젝트 이름을 예를 들어 'RealTimeDataApp'으로 설정합니다."}],"\n",["$","h3",null,{"id":"259ba30d","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"WebSocket 클라이언트 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"URLSessionWebSocketTask","position":{"start":{"line":24,"column":8,"offset":718},"end":{"line":24,"column":33,"offset":743}}}],"position":{"start":{"line":24,"column":8,"offset":718},"end":{"line":24,"column":33,"offset":743}}},"children":"URLSessionWebSocketTask"}}],"를 활용해 WebSocket을 쉽게 구현할 수 있는 도구를 제공합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"URLSessionWebSocketTask","position":{"start":{"line":24,"column":73,"offset":783},"end":{"line":24,"column":98,"offset":808}}}],"position":{"start":{"line":24,"column":73,"offset":783},"end":{"line":24,"column":98,"offset":808}}},"children":"URLSessionWebSocketTask"}}],"를 사용해 WebSocket 연결을 설정하고 데이터를 주고받는 방법을 살펴보겠습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":26,"column":1,"offset":857},"end":{"line":73,"column":4,"offset":2319}}},"children":"$f"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 WebSocket을 통해 데이터를 주고받을 수 있는 커넥션을 만들었습니다. 이를 SwiftUI 뷰와 연결해보겠습니다."}],"\n",["$","h3",null,{"id":"7e1ab92e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"SwiftUI와 WebSocket 연동"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 SwiftUI 뷰에서 WebSocket을 통해 실시간 데이터를 업데이트할 수 있도록 작업하겠습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @ObservedObject var webSocketManager = WebSocketManager()\n    \n    var body: some View {\n        VStack {\n            if let message = webSocketManager.receivedMessage {\n                Text(\"Received: \\(message)\")\n                    .padding()\n            }\n            Button(\"Connect\") {\n                webSocketManager.connect()\n            }\n            Button(\"Disconnect\") {\n                webSocketManager.disconnect()\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":80,"column":1,"offset":2477},"end":{"line":101,"column":4,"offset":2998}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @ObservedObject var webSocketManager = WebSocketManager()\n    \n    var body: some View {\n        VStack {\n            if let message = webSocketManager.receivedMessage {\n                Text(\"Received: \\(message)\")\n                    .padding()\n            }\n            Button(\"Connect\") {\n                webSocketManager.connect()\n            }\n            Button(\"Disconnect\") {\n                webSocketManager.disconnect()\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ContentView","position":{"start":{"line":103,"column":4,"offset":3003},"end":{"line":103,"column":17,"offset":3016}}}],"position":{"start":{"line":103,"column":4,"offset":3003},"end":{"line":103,"column":17,"offset":3016}}},"children":"ContentView"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"WebSocketManager","position":{"start":{"line":103,"column":19,"offset":3018},"end":{"line":103,"column":37,"offset":3036}}}],"position":{"start":{"line":103,"column":19,"offset":3018},"end":{"line":103,"column":37,"offset":3036}}},"children":"WebSocketManager"}}],"의 상태를 관찰하고 실시간으로 메시지를 표시합니다. 버튼을 통해 WebSocket 연결 및 해제를 제어할 수 있습니다."]}],"\n",["$","h2",null,{"id":"8eff145a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"서버리스 백엔드 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"실시간 데이터를 제공하기 위해 서버리스 백엔드를 설정할 수 있습니다. 여기에서는 AWS Lambda와 API Gateway를 예로 들어 설명하겠습니다."}],"\n",["$","h3",null,{"id":"e1562880","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"AWS Lambda 함수 작성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"AWS Lambda는 서버를 관리하지 않고도 코드를 실행할 수 있는 서버리스 컴퓨팅 서비스입니다. 다음은 간단한 Lambda 함수 예시입니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"import json\nimport boto3\nimport os\n\napigatewaymanagementapi = boto3.client('apigatewaymanagementapi', endpoint_url=os.environ['ENDPOINT_URL'])\n\n\ndef lambda_handler(event, context):\n    message = json.dumps({\"message\": \"Hello from Lambda!\"})\n    connection_id = event['requestContext']['connectionId']\n\n    try:\n        apigatewaymanagementapi.post_to_connection(ConnectionId=connection_id, Data=message)\n        return {\n            'statusCode': 200,\n            'body': 'Message sent'\n        }\n    except Exception as e:\n        return {\n            'statusCode': 500,\n            'body': str(e)\n        }\n"}],"position":{"start":{"line":111,"column":1,"offset":3307},"end":{"line":134,"column":4,"offset":3929}}},"children":"import json\nimport boto3\nimport os\n\napigatewaymanagementapi = boto3.client('apigatewaymanagementapi', endpoint_url=os.environ['ENDPOINT_URL'])\n\n\ndef lambda_handler(event, context):\n    message = json.dumps({\"message\": \"Hello from Lambda!\"})\n    connection_id = event['requestContext']['connectionId']\n\n    try:\n        apigatewaymanagementapi.post_to_connection(ConnectionId=connection_id, Data=message)\n        return {\n            'statusCode': 200,\n            'body': 'Message sent'\n        }\n    except Exception as e:\n        return {\n            'statusCode': 500,\n            'body': str(e)\n        }\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 Lambda 함수는 WebSocket 연결을 통해 클라이언트로 메시지를 보냅니다. 이를 AWS API Gateway와 연동하여 WebSocket API를 생성할 수 있습니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI와 WebSocket을 활용해 실시간 데이터 업데이트를 구현하는 방법을 배웠습니다. 또한, 서버리스 백엔드를 사용해 더욱 확장 가능하고 관리하기 쉬운 시스템을 구축할 수 있었습니다. 이런 기술을 통해 다양한 실시간 애플리케이션을 개발하는데 도움이 되길 바랍니다."}]]}]}],["$","$L10",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L11",null,{"articleTitle":"SwiftUI 실시간 데이터 업데이트: WebSocket과 서버리스 연동","toc":[{"tagName":"h1","title":"SwiftUI 실시간 데이터 업데이트: WebSocket과 서버리스 연동","id":"60759f48"},{"tagName":"h2","title":"서론","id":"4fbf3662"},{"tagName":"h2","title":"WebSocket 개요","id":"e1ff1ce7"},{"tagName":"h2","title":"준비사항","id":"01fa1e45"},{"tagName":"h2","title":"프로젝트 설정","id":"35ce895d"},{"tagName":"h3","title":"SwiftUI 프로젝트 생성","id":"e561e020"},{"tagName":"h3","title":"WebSocket 클라이언트 구현","id":"259ba30d"},{"tagName":"h3","title":"SwiftUI와 WebSocket 연동","id":"7e1ab92e"},{"tagName":"h2","title":"서버리스 백엔드 설정","id":"8eff145a"},{"tagName":"h3","title":"AWS Lambda 함수 작성","id":"e1562880"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
