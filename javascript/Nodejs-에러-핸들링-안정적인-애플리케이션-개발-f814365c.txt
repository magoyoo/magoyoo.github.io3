1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","Nodejs-%EC%97%90%EB%9F%AC-%ED%95%B8%EB%93%A4%EB%A7%81-%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EA%B0%9C%EB%B0%9C-f814365c","d"],{"children":["__PAGE__?{\"slug\":\"Nodejs-에러-핸들링-안정적인-애플리케이션-개발-f814365c\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","Nodejs-%EC%97%90%EB%9F%AC-%ED%95%B8%EB%93%A4%EB%A7%81-%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EA%B0%9C%EB%B0%9C-f814365c","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Nodejs-에러-핸들링-안정적인-애플리케이션-개발-f814365c\"}"},"styles":[]}],"segment":["slug","Nodejs-%EC%97%90%EB%9F%AC-%ED%95%B8%EB%93%A4%EB%A7%81-%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EA%B0%9C%EB%B0%9C-f814365c","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Node.js 에러 핸들링: 안정적인 애플리케이션 개발 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Node.js 애플리케이션의 안정성과 신뢰성을 높이기 위해 에러 핸들링의 중요성 및 다양한 접근 방안을 다룹니다."}],["$","meta","3",{"name":"keywords","content":"Node.js,에러 핸들링,애플리케이션 개발,안정성"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/Nodejs-%EC%97%90%EB%9F%AC-%ED%95%B8%EB%93%A4%EB%A7%81-%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EA%B0%9C%EB%B0%9C-f814365c"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Node.js 에러 핸들링: 안정적인 애플리케이션 개발 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Node.js 에러 핸들링: 안정적인 애플리케이션 개발 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Node.js 애플리케이션의 안정성과 신뢰성을 높이기 위해 에러 핸들링의 중요성 및 다양한 접근 방안을 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/Nodejs-%EC%97%90%EB%9F%AC-%ED%95%B8%EB%93%A4%EB%A7%81-%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EA%B0%9C%EB%B0%9C-f814365c"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Node.js 에러 핸들링: 안정적인 애플리케이션 개발 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Node.js 애플리케이션의 안정성과 신뢰성을 높이기 위해 에러 핸들링의 중요성 및 다양한 접근 방안을 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Node.js 에러 핸들링: 안정적인 애플리케이션 개발"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Node.js 에러 핸들링: 안정적인 애플리케이션 개발"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-25"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"dba7d463","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Node.js 에러 핸들링: 안정적인 애플리케이션 개발"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Node.js는 비동기 프로그래밍 모델과 이벤트 기반 아키텍처로 효율적인 서버 애플리케이션을 구축할 수 있는 강력한 도구입니다. 그러나 이와 같은 비동기 특성은 에러를 처리하는 데에도 도전 과제를 안겨줍니다. 에러 핸들링은 애플리케이션의 안정성과 신뢰성을 높이는 중요한 요소입니다. 이 글에서는 Node.js에서 에러를 핸들링하는 다양한 방법과 모범 사례를 다루겠습니다."}],"\n",["$","h2",null,{"id":"bdbc730f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"에러의 종류"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Node.js에서 발생할 수 있는 에러는 크게 세 가지로 분류할 수 있습니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"프로그래밍 에러"}],": 코드의 버그 또는 논리적 오류로 인해 발생하는 에러입니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"운영 에러"}],": 외부 시스템의 문제나 네트워크 장애 등의 원인으로 발생하는 에러입니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"예상되지 않은 에러"}],": 예상치 못한 상황에서 발생하는 모든 종류의 에러를 포함합니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"에러의 종류를 이해하고 이를 적절히 처리하는 것은 안정적인 애플리케이션을 구축하는 첫걸음입니다."}],"\n",["$","h2",null,{"id":"ad5d7a49","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"에러 핸들링 기본 원칙"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"에러를 제대로 처리하기 위해 몇 가지 기본 원칙을 지켜야 합니다:"}],"\n",["$","h3",null,{"id":"e0ad2e76","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 에러를 무시하지 않습니다"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"에러를 단순히 로그로 남기거나 무시하는 것은 나중에 큰 문제를 야기할 수 있습니다. 에러가 발생한 원인을 추적하고 적절히 대응하는 것이 중요합니다."}],"\n",["$","h3",null,{"id":"539667b0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. 중앙 집중식 에러 핸들링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Node.js 애플리케이션은 여러 모듈로 구성될 수 있습니다. 모듈마다 개별적으로 에러를 처리하면 관리가 복잡해질 수 있으므로, 주로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"middleware","position":{"start":{"line":26,"column":76,"offset":772},"end":{"line":26,"column":88,"offset":784}}}],"position":{"start":{"line":26,"column":76,"offset":772},"end":{"line":26,"column":88,"offset":784}}},"children":"middleware"}}],"를 사용해 중앙에서 에러를 처리하는 것이 좋습니다."]}],"\n",["$","h3",null,{"id":"2eb1c0f0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 사용자에게 유용한 에러 메시지 제공"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"에러가 발생했을 때 사용자에게는 이해하기 쉬운 메시지를 제공하고, 개발자에게는 디버깅에 도움이 되는 상세 정보를 로그로 남겨야 합니다."}],"\n",["$","h3",null,{"id":"26615d13","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"4. 예외와 에러를 구분하여 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Node.js에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"throw","position":{"start":{"line":34,"column":12,"offset":954},"end":{"line":34,"column":19,"offset":961}}}],"position":{"start":{"line":34,"column":12,"offset":954},"end":{"line":34,"column":19,"offset":961}}},"children":"throw"}}],"를 사용해 예외를 발생시킬 수 있습니다. 예외는 코드 흐름을 제어하는 수단으로, 이를 적절히 처리하지 않으면 애플리케이션이 비정상 종료될 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"try {\n  // 예외 발생 가능성 있는 코드\n  throw new Error('Something went wrong');\n} catch (err) {\n  console.error('Caught an exception:', err);\n}\n"}],"position":{"start":{"line":36,"column":1,"offset":1047},"end":{"line":43,"column":4,"offset":1198}}},"children":"try {\n  // 예외 발생 가능성 있는 코드\n  throw new Error('Something went wrong');\n} catch (err) {\n  console.error('Caught an exception:', err);\n}\n"}}]}],"\n",["$","h2",null,{"id":"6ae54418","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"비동기 코드에서의 에러 핸들링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["비동기 프로그래밍이 주를 이루는 Node.js에서는 콜백, 프로미스, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async/await","position":{"start":{"line":47,"column":40,"offset":1260},"end":{"line":47,"column":53,"offset":1273}}}],"position":{"start":{"line":47,"column":40,"offset":1260},"end":{"line":47,"column":53,"offset":1273}}},"children":"async/await"}}],"과 같은 다양한 비동기 처리 방식이 존재합니다. 각 방식마다 에러를 핸들링하는 방법도 달라집니다."]}],"\n",["$","h3",null,{"id":"5fdefbc4","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"콜백 패턴에서의 에러 핸들링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"콜백 패턴에서는 주로 첫 번째 인자로 에러 객체를 전달하는 방식으로 에러를 처리합니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"fs.readFile('somefile.txt', (err, data) => {\n  if (err) {\n    return console.error('Error reading file:', err);\n  }\n  console.log('File data:', data);\n});\n"}],"position":{"start":{"line":53,"column":1,"offset":1400},"end":{"line":60,"column":4,"offset":1572}}},"children":"fs.readFile('somefile.txt', (err, data) => {\n  if (err) {\n    return console.error('Error reading file:', err);\n  }\n  console.log('File data:', data);\n});\n"}}]}],"\n",["$","h3",null,{"id":"e39fc9ca","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"프로미스 패턴에서의 에러 핸들링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["프로미스는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"then","position":{"start":{"line":64,"column":7,"offset":1603},"end":{"line":64,"column":13,"offset":1609}}}],"position":{"start":{"line":64,"column":7,"offset":1603},"end":{"line":64,"column":13,"offset":1609}}},"children":"then"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":64,"column":15,"offset":1611},"end":{"line":64,"column":22,"offset":1618}}}],"position":{"start":{"line":64,"column":15,"offset":1611},"end":{"line":64,"column":22,"offset":1618}}},"children":"catch"}}]," 메서드를 사용해 에러를 처리할 수 있습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const readFile = (filePath) => {\n  return new Promise((resolve, reject) => {\n    fs.readFile(filePath, (err, data) => {\n      if (err) {\n        return reject(err);\n      }\n      resolve(data);\n    });\n  });\n};\n\nreadFile('somefile.txt').then((data) => {\n  console.log('File data:', data);\n}).catch((err) => {\n  console.error('Error reading file:', err);\n});\n"}],"position":{"start":{"line":66,"column":1,"offset":1645},"end":{"line":83,"column":4,"offset":2020}}},"children":"const readFile = (filePath) => {\n  return new Promise((resolve, reject) => {\n    fs.readFile(filePath, (err, data) => {\n      if (err) {\n        return reject(err);\n      }\n      resolve(data);\n    });\n  });\n};\n\nreadFile('somefile.txt').then((data) => {\n  console.log('File data:', data);\n}).catch((err) => {\n  console.error('Error reading file:', err);\n});\n"}}]}],"\n",["$","h3",null,{"id":"2915052c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"async/await에서의 에러 핸들링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async/await","position":{"start":{"line":87,"column":1,"offset":2049},"end":{"line":87,"column":14,"offset":2062}}}],"position":{"start":{"line":87,"column":1,"offset":2049},"end":{"line":87,"column":14,"offset":2062}}},"children":"async/await"}}],"는 비동기 코드를 동기 코드처럼 작성할 수 있게 해주며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"try...catch","position":{"start":{"line":87,"column":46,"offset":2094},"end":{"line":87,"column":59,"offset":2107}}}],"position":{"start":{"line":87,"column":46,"offset":2094},"end":{"line":87,"column":59,"offset":2107}}},"children":"try...catch"}}],"를 사용해 에러를 처리합니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const readFileAsync = async (filePath) => {\n  try {\n    const data = await fs.promises.readFile(filePath);\n    console.log('File data:', data);\n  } catch (err) {\n    console.error('Error reading file:', err);\n  }\n};\n\nreadFileAsync('somefile.txt');\n"}],"position":{"start":{"line":89,"column":1,"offset":2125},"end":{"line":100,"column":4,"offset":2390}}},"children":"const readFileAsync = async (filePath) => {\n  try {\n    const data = await fs.promises.readFile(filePath);\n    console.log('File data:', data);\n  } catch (err) {\n    console.error('Error reading file:', err);\n  }\n};\n\nreadFileAsync('somefile.txt');\n"}}]}],"\n",["$","h2",null,{"id":"8ac6b147","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"에러 로깅 및 모니터링"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["에러를 제대로 처리하는 것뿐만 아니라, 로깅하고 모니터링하는 것도 중요합니다. 이를 통해 발생한 에러를 추적하고, 문제 해결에 도움을 받을 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"winston","position":{"start":{"line":104,"column":87,"offset":2495},"end":{"line":104,"column":96,"offset":2504}}}],"position":{"start":{"line":104,"column":87,"offset":2495},"end":{"line":104,"column":96,"offset":2504}}},"children":"winston"}}],"과 같은 로깅 라이브러리와, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Sentry","position":{"start":{"line":104,"column":112,"offset":2520},"end":{"line":104,"column":120,"offset":2528}}}],"position":{"start":{"line":104,"column":112,"offset":2520},"end":{"line":104,"column":120,"offset":2528}}},"children":"Sentry"}}],"나 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"New Relic","position":{"start":{"line":104,"column":122,"offset":2530},"end":{"line":104,"column":133,"offset":2541}}}],"position":{"start":{"line":104,"column":122,"offset":2530},"end":{"line":104,"column":133,"offset":2541}}},"children":"New Relic"}}],"과 같은 모니터링 도구를 사용하면 효율적으로 에러를 관리할 수 있습니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const winston = require('winston');\n\nconst logger = winston.createLogger({\n  level: 'error',\n  format: winston.format.json(),\n  transports: [\n    new winston.transports.File({ filename: 'error.log' })\n  ],\n});\n\ntry {\n  throw new Error('Something went wrong');\n} catch (err) {\n  logger.error('Caught an exception:', err);\n}\n"}],"position":{"start":{"line":106,"column":1,"offset":2583},"end":{"line":122,"column":4,"offset":2923}}},"children":"const winston = require('winston');\n\nconst logger = winston.createLogger({\n  level: 'error',\n  format: winston.format.json(),\n  transports: [\n    new winston.transports.File({ filename: 'error.log' })\n  ],\n});\n\ntry {\n  throw new Error('Something went wrong');\n} catch (err) {\n  logger.error('Caught an exception:', err);\n}\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Node.js에서 안정적인 애플리케이션을 개발하는 데 있어서 에러 핸들링은 매우 중요합니다. 다양한 에러 유형을 이해하고, 적절한 핸들링 방법을 적용하면 에러로 인한 문제를 최소화할 수 있습니다. 비동기 코드에서의 에러 핸들링, 중앙 집중식 에러 관리, 그리고 에러 로깅 및 모니터링을 통해 더 안정적이고 신뢰성 있는 애플리케이션을 구축하세요."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Node.js 에러 핸들링: 안정적인 애플리케이션 개발","toc":[{"tagName":"h1","title":"Node.js 에러 핸들링: 안정적인 애플리케이션 개발","id":"dba7d463"},{"tagName":"h2","title":"에러의 종류","id":"bdbc730f"},{"tagName":"h2","title":"에러 핸들링 기본 원칙","id":"ad5d7a49"},{"tagName":"h3","title":"1. 에러를 무시하지 않습니다","id":"e0ad2e76"},{"tagName":"h3","title":"2. 중앙 집중식 에러 핸들링","id":"539667b0"},{"tagName":"h3","title":"3. 사용자에게 유용한 에러 메시지 제공","id":"2eb1c0f0"},{"tagName":"h3","title":"4. 예외와 에러를 구분하여 처리","id":"26615d13"},{"tagName":"h2","title":"비동기 코드에서의 에러 핸들링","id":"6ae54418"},{"tagName":"h3","title":"콜백 패턴에서의 에러 핸들링","id":"5fdefbc4"},{"tagName":"h3","title":"프로미스 패턴에서의 에러 핸들링","id":"e39fc9ca"},{"tagName":"h3","title":"async/await에서의 에러 핸들링","id":"2915052c"},{"tagName":"h2","title":"에러 로깅 및 모니터링","id":"8ac6b147"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
