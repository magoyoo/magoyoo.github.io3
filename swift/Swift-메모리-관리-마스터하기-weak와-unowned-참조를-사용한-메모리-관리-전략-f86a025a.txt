1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%95%98%EA%B8%B0-weak%EC%99%80-unowned-%EC%B0%B8%EC%A1%B0%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EC%A0%84%EB%9E%B5-f86a025a","d"],{"children":["__PAGE__?{\"slug\":\"Swift-메모리-관리-마스터하기-weak와-unowned-참조를-사용한-메모리-관리-전략-f86a025a\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%95%98%EA%B8%B0-weak%EC%99%80-unowned-%EC%B0%B8%EC%A1%B0%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EC%A0%84%EB%9E%B5-f86a025a","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-메모리-관리-마스터하기-weak와-unowned-참조를-사용한-메모리-관리-전략-f86a025a\"}"},"styles":[]}],"segment":["slug","Swift-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%95%98%EA%B8%B0-weak%EC%99%80-unowned-%EC%B0%B8%EC%A1%B0%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EC%A0%84%EB%9E%B5-f86a025a","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift 메모리 관리 마스터하기: weak와 unowned 참조를 사용한 메모리 관리 전략. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Swift에서 메모리 관리를 효과적으로 수행하는 방법, 특히 `weak`와 `unowned` 참조를 사용한 메모리 관리 전략에 대해 설명합니다. 이 기사를 통해 메모리 누수를 방지하고 메모리 효율성을 극대화하는 방법을 배우게 됩니다."}],["$","meta","3",{"name":"keywords","content":"Swift,메모리 관리,weak,unowned"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%95%98%EA%B8%B0-weak%EC%99%80-unowned-%EC%B0%B8%EC%A1%B0%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EC%A0%84%EB%9E%B5-f86a025a"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift 메모리 관리 마스터하기: weak와 unowned 참조를 사용한 메모리 관리 전략. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift 메모리 관리 마스터하기: weak와 unowned 참조를 사용한 메모리 관리 전략. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Swift에서 메모리 관리를 효과적으로 수행하는 방법, 특히 `weak`와 `unowned` 참조를 사용한 메모리 관리 전략에 대해 설명합니다. 이 기사를 통해 메모리 누수를 방지하고 메모리 효율성을 극대화하는 방법을 배우게 됩니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%95%98%EA%B8%B0-weak%EC%99%80-unowned-%EC%B0%B8%EC%A1%B0%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EC%A0%84%EB%9E%B5-f86a025a"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift 메모리 관리 마스터하기: weak와 unowned 참조를 사용한 메모리 관리 전략. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Swift에서 메모리 관리를 효과적으로 수행하는 방법, 특히 `weak`와 `unowned` 참조를 사용한 메모리 관리 전략에 대해 설명합니다. 이 기사를 통해 메모리 누수를 방지하고 메모리 효율성을 극대화하는 방법을 배우게 됩니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner5.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift 메모리 관리 마스터하기: weak와 unowned 참조를 사용한 메모리 관리 전략."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift 메모리 관리 마스터하기: weak와 unowned 참조를 사용한 메모리 관리 전략."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-25"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"3fa5efb8","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift 메모리 관리 마스터하기: weak와 unowned 참조를 사용한 메모리 관리 전략"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서는 자동 참조 카운팅(Automatic Reference Counting, ARC)을 사용하여 메모리를 관리합니다. ARC는 객체의 생명 주기를 추적하고 필요 없을 때 자동으로 메모리를 해제합니다. 하지만 ARC가 모든 메모리 문제를 다 해결하지는 못합니다. 강한 참조 순환(strong reference cycle) 같은 문제는 여전히 수동으로 해결해야 합니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak","position":{"start":{"line":4,"column":219,"offset":274},"end":{"line":4,"column":225,"offset":280}}}],"position":{"start":{"line":4,"column":219,"offset":274},"end":{"line":4,"column":225,"offset":280}}},"children":"weak"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unowned","position":{"start":{"line":4,"column":227,"offset":282},"end":{"line":4,"column":236,"offset":291}}}],"position":{"start":{"line":4,"column":227,"offset":282},"end":{"line":4,"column":236,"offset":291}}},"children":"unowned"}}]," 참조를 사용해 이러한 문제를 어떻게 해결할 수 있는지 알아보겠습니다."]}],"\n",["$","h2",null,{"id":"3b9d0174","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"자동 참조 카운팅(ARC)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"ARC는 각 객체가 얼마나 많은 참조를 받고 있는지 추적합니다. 객체에 대한 참조가 추가될 때마다 참조 카운트가 증가하고, 참조가 삭제될 때마다 감소합니다. 참조 카운트가 0이 되는 순간, 객체는 메모리에서 해제됩니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["그러나 두 객체가 서로를 강하게(강한 참조) 참조하면 참조 카운트가 0이 되지 않아 메모리 누수가 발생할 수 있습니다. 이를 해결하기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak","position":{"start":{"line":10,"column":79,"offset":553},"end":{"line":10,"column":85,"offset":559}}}],"position":{"start":{"line":10,"column":79,"offset":553},"end":{"line":10,"column":85,"offset":559}}},"children":"weak"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unowned","position":{"start":{"line":10,"column":87,"offset":561},"end":{"line":10,"column":96,"offset":570}}}],"position":{"start":{"line":10,"column":87,"offset":561},"end":{"line":10,"column":96,"offset":570}}},"children":"unowned"}}]," 참조가 등장합니다."]}],"\n",["$","h2",null,{"id":"388a7c2d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"weak 참조"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak","position":{"start":{"line":14,"column":1,"offset":595},"end":{"line":14,"column":7,"offset":601}}}],"position":{"start":{"line":14,"column":1,"offset":595},"end":{"line":14,"column":7,"offset":601}}},"children":"weak"}}]," 참조는 강한 참조 순환 문제를 해결하는 주요 도구 중 하나입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak","position":{"start":{"line":14,"column":45,"offset":639},"end":{"line":14,"column":51,"offset":645}}}],"position":{"start":{"line":14,"column":45,"offset":639},"end":{"line":14,"column":51,"offset":645}}},"children":"weak"}}]," 참조는 참조하는 객체가 메모리에서 해제되더라도 참조를 유지하지 않습니다. 그렇기 때문에 참조 카운트를 증가시키지 않습니다. 이런 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak","position":{"start":{"line":14,"column":124,"offset":718},"end":{"line":14,"column":130,"offset":724}}}],"position":{"start":{"line":14,"column":124,"offset":718},"end":{"line":14,"column":130,"offset":724}}},"children":"weak"}}]," 참조는 종종 순환 참조를 피하기 위해 사용됩니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class Person {\n    let name: String\n    init(name: String) { self.name = name }\n    var apartment: Apartment?\n}\n\nclass Apartment {\n    let unit: String\n    init(unit: String) { self.unit = unit }\n    weak var tenant: Person?\n}\n\nvar john: Person? = Person(name: \"John Appleseed\")\nvar unit4A: Apartment? = Apartment(unit: \"4A\")\n\njohn!.apartment = unit4A\nunit4A!.tenant = john\n"}],"position":{"start":{"line":16,"column":1,"offset":754},"end":{"line":34,"column":4,"offset":1140}}},"children":"class Person {\n    let name: String\n    init(name: String) { self.name = name }\n    var apartment: Apartment?\n}\n\nclass Apartment {\n    let unit: String\n    init(unit: String) { self.unit = unit }\n    weak var tenant: Person?\n}\n\nvar john: Person? = Person(name: \"John Appleseed\")\nvar unit4A: Apartment? = Apartment(unit: \"4A\")\n\njohn!.apartment = unit4A\nunit4A!.tenant = john\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Person","position":{"start":{"line":36,"column":9,"offset":1150},"end":{"line":36,"column":17,"offset":1158}}}],"position":{"start":{"line":36,"column":9,"offset":1150},"end":{"line":36,"column":17,"offset":1158}}},"children":"Person"}}]," 객체와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Apartment","position":{"start":{"line":36,"column":22,"offset":1163},"end":{"line":36,"column":33,"offset":1174}}}],"position":{"start":{"line":36,"column":22,"offset":1163},"end":{"line":36,"column":33,"offset":1174}}},"children":"Apartment"}}]," 객체가 서로를 참조하고 있음을 볼 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Apartment","position":{"start":{"line":36,"column":61,"offset":1202},"end":{"line":36,"column":72,"offset":1213}}}],"position":{"start":{"line":36,"column":61,"offset":1202},"end":{"line":36,"column":72,"offset":1213}}},"children":"Apartment"}}]," 클래스의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tenant","position":{"start":{"line":36,"column":78,"offset":1219},"end":{"line":36,"column":86,"offset":1227}}}],"position":{"start":{"line":36,"column":78,"offset":1219},"end":{"line":36,"column":86,"offset":1227}}},"children":"tenant"}}]," 속성이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak","position":{"start":{"line":36,"column":91,"offset":1232},"end":{"line":36,"column":97,"offset":1238}}}],"position":{"start":{"line":36,"column":91,"offset":1232},"end":{"line":36,"column":97,"offset":1238}}},"children":"weak"}}],"으로 선언되었기 때문에, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Person","position":{"start":{"line":36,"column":111,"offset":1252},"end":{"line":36,"column":119,"offset":1260}}}],"position":{"start":{"line":36,"column":111,"offset":1252},"end":{"line":36,"column":119,"offset":1260}}},"children":"Person"}}]," 객체는 참조 카운터를 증가시키지 않고 메모리에서 해제될 수 있습니다."]}],"\n",["$","h3",null,{"id":"052f92b0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"weak 참조의 특징"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nil","position":{"start":{"line":40,"column":3,"offset":1320},"end":{"line":40,"column":8,"offset":1325}}}],"position":{"start":{"line":40,"column":3,"offset":1320},"end":{"line":40,"column":8,"offset":1325}}},"children":"nil"}}],"로 설정될 수 있다."]}],"\n",["$","li","li-1",{"children":["메모리가 해제되면 자동으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nil","position":{"start":{"line":41,"column":18,"offset":1354},"end":{"line":41,"column":23,"offset":1359}}}],"position":{"start":{"line":41,"column":18,"offset":1354},"end":{"line":41,"column":23,"offset":1359}}},"children":"nil"}}],"이 된다."]}],"\n",["$","li","li-2",{"children":"참조 카운트를 증가시키지 않는다."}],"\n"]}],"\n",["$","h2",null,{"id":"1f930bd3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"unowned 참조"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unowned","position":{"start":{"line":46,"column":1,"offset":1402},"end":{"line":46,"column":10,"offset":1411}}}],"position":{"start":{"line":46,"column":1,"offset":1402},"end":{"line":46,"column":10,"offset":1411}}},"children":"unowned"}}]," 참조는 또 다른 강력한 도구로, 참조하는 객체가 해제되더라도 참조를 유지하지 않습니다. 그러나 이 참조는 메모리가 해제되더라도 자동으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nil","position":{"start":{"line":46,"column":87,"offset":1488},"end":{"line":46,"column":92,"offset":1493}}}],"position":{"start":{"line":46,"column":87,"offset":1488},"end":{"line":46,"column":92,"offset":1493}}},"children":"nil"}}],"이 되지 않으므로, 해제된 참조를 접근하려 하면 런타임 에러가 발생합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unowned","position":{"start":{"line":46,"column":134,"offset":1535},"end":{"line":46,"column":143,"offset":1544}}}],"position":{"start":{"line":46,"column":134,"offset":1535},"end":{"line":46,"column":143,"offset":1544}}},"children":"unowned"}}]," 참조는 참조가 항상 유효하다고 판단되는 경우에 사용됩니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class Customer {\n    let name: String\n    var card: CreditCard?\n    init(name: String) {\n        self.name = name\n    }\n}\n\nclass CreditCard {\n    let number: UInt64\n    unowned let customer: Customer\n    init(number: UInt64, customer: Customer) {\n        self.number = number\n        self.customer = customer\n    }\n}\n\nvar john: Customer? = Customer(name: \"John Appleseed\")\njohn!.card = CreditCard(number: 1234_5678_9012_3456, customer: john!)\n"}],"position":{"start":{"line":48,"column":1,"offset":1579},"end":{"line":68,"column":4,"offset":2034}}},"children":"class Customer {\n    let name: String\n    var card: CreditCard?\n    init(name: String) {\n        self.name = name\n    }\n}\n\nclass CreditCard {\n    let number: UInt64\n    unowned let customer: Customer\n    init(number: UInt64, customer: Customer) {\n        self.number = number\n        self.customer = customer\n    }\n}\n\nvar john: Customer? = Customer(name: \"John Appleseed\")\njohn!.card = CreditCard(number: 1234_5678_9012_3456, customer: john!)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CreditCard","position":{"start":{"line":70,"column":8,"offset":2043},"end":{"line":70,"column":20,"offset":2055}}}],"position":{"start":{"line":70,"column":8,"offset":2043},"end":{"line":70,"column":20,"offset":2055}}},"children":"CreditCard"}}]," 클래스는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unowned","position":{"start":{"line":70,"column":26,"offset":2061},"end":{"line":70,"column":35,"offset":2070}}}],"position":{"start":{"line":70,"column":26,"offset":2061},"end":{"line":70,"column":35,"offset":2070}}},"children":"unowned"}}]," 참조를 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Customer","position":{"start":{"line":70,"column":45,"offset":2080},"end":{"line":70,"column":55,"offset":2090}}}],"position":{"start":{"line":70,"column":45,"offset":2080},"end":{"line":70,"column":55,"offset":2090}}},"children":"Customer"}}]," 객체를 참조합니다. 이는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Customer","position":{"start":{"line":70,"column":70,"offset":2105},"end":{"line":70,"column":80,"offset":2115}}}],"position":{"start":{"line":70,"column":70,"offset":2105},"end":{"line":70,"column":80,"offset":2115}}},"children":"Customer"}}]," 객체가 항상 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CreditCard","position":{"start":{"line":70,"column":88,"offset":2123},"end":{"line":70,"column":100,"offset":2135}}}],"position":{"start":{"line":70,"column":88,"offset":2123},"end":{"line":70,"column":100,"offset":2135}}},"children":"CreditCard"}}]," 객체보다 오래 살아남음을 보장하기 때문에 안전합니다."]}],"\n",["$","h3",null,{"id":"3d629cdb","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"unowned 참조의 특징"}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nil","position":{"start":{"line":74,"column":3,"offset":2189},"end":{"line":74,"column":8,"offset":2194}}}],"position":{"start":{"line":74,"column":3,"offset":2189},"end":{"line":74,"column":8,"offset":2194}}},"children":"nil"}}],"로 설정될 수 없다."]}],"\n",["$","li","li-1",{"children":"메모리가 해제되더라도 참조를 유지하지만, 접근 시 크래시가 발생할 수 있다."}],"\n",["$","li","li-2",{"children":"참조 카운트를 증가시키지 않는다."}],"\n"]}],"\n",["$","h2",null,{"id":"1d1cbfa5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"언제 weak와 unowned 참조를 사용해야 할까?"}],"\n",["$","ul","ul-2",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak","position":{"start":{"line":80,"column":5,"offset":2311},"end":{"line":80,"column":11,"offset":2317}}}],"position":{"start":{"line":80,"column":5,"offset":2311},"end":{"line":80,"column":11,"offset":2317}}},"children":"weak"}}]," 참조"]}],"는 상대 객체가 해제될 수 있으며, 이를 안전하게 처리하기 원할 때 사용합니다. 주로 부모-자식 관계에서 자식이 부모를 약하게 참조하도록 설정합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unowned","position":{"start":{"line":81,"column":5,"offset":2410},"end":{"line":81,"column":14,"offset":2419}}}],"position":{"start":{"line":81,"column":5,"offset":2410},"end":{"line":81,"column":14,"offset":2419}}},"children":"unowned"}}]," 참조"]}],"는 상대 객체의 생명 주기가 참조하는 객체보다 길거나 같음을 확신할 수 있을 때 사용합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unowned","position":{"start":{"line":81,"column":71,"offset":2476},"end":{"line":81,"column":80,"offset":2485}}}],"position":{"start":{"line":81,"column":71,"offset":2476},"end":{"line":81,"column":80,"offset":2485}}},"children":"unowned"}}]," 참조는 일반적으로 약한 참조보다 성능이 좋습니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["ARC는 Swift의 메모리 관리를 자동화하여 개발자가 메모리 누수나 해제 문제에 신경 쓰지 않도록 돕습니다. 그러나 강한 참조 순환 문제는 여전히 개발자가 수동으로 해결해야 합니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak","position":{"start":{"line":85,"column":111,"offset":2632},"end":{"line":85,"column":117,"offset":2638}}}],"position":{"start":{"line":85,"column":111,"offset":2632},"end":{"line":85,"column":117,"offset":2638}}},"children":"weak"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unowned","position":{"start":{"line":85,"column":119,"offset":2640},"end":{"line":85,"column":128,"offset":2649}}}],"position":{"start":{"line":85,"column":119,"offset":2640},"end":{"line":85,"column":128,"offset":2649}}},"children":"unowned"}}]," 참조를 사용하여 이러한 문제를 어떻게 해결할 수 있는지 설명했습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"weak","position":{"start":{"line":85,"column":168,"offset":2689},"end":{"line":85,"column":174,"offset":2695}}}],"position":{"start":{"line":85,"column":168,"offset":2689},"end":{"line":85,"column":174,"offset":2695}}},"children":"weak"}}]," 참조는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nil","position":{"start":{"line":85,"column":179,"offset":2700},"end":{"line":85,"column":184,"offset":2705}}}],"position":{"start":{"line":85,"column":179,"offset":2700},"end":{"line":85,"column":184,"offset":2705}}},"children":"nil"}}],"을 허용하며 메모리 해제 후 자동으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nil","position":{"start":{"line":85,"column":205,"offset":2726},"end":{"line":85,"column":210,"offset":2731}}}],"position":{"start":{"line":85,"column":205,"offset":2726},"end":{"line":85,"column":210,"offset":2731}}},"children":"nil"}}],"이 되는 것을 보장합니다. 반면에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unowned","position":{"start":{"line":85,"column":229,"offset":2750},"end":{"line":85,"column":238,"offset":2759}}}],"position":{"start":{"line":85,"column":229,"offset":2750},"end":{"line":85,"column":238,"offset":2759}}},"children":"unowned"}}]," 참조는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nil","position":{"start":{"line":85,"column":243,"offset":2764},"end":{"line":85,"column":248,"offset":2769}}}],"position":{"start":{"line":85,"column":243,"offset":2764},"end":{"line":85,"column":248,"offset":2769}}},"children":"nil"}}],"을 허용하지 않으며 참조 객체가 항상 유효할 것으로 가정됩니다. 이 두 가지 도구를 적절히 사용하면 메모리 관리를 더욱 효과적으로 할 수 있습니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift 메모리 관리 마스터하기: weak와 unowned 참조를 사용한 메모리 관리 전략.","toc":[{"tagName":"h1","title":"Swift 메모리 관리 마스터하기: weak와 unowned 참조를 사용한 메모리 관리 전략","id":"3fa5efb8"},{"tagName":"h2","title":"자동 참조 카운팅(ARC)","id":"3b9d0174"},{"tagName":"h2","title":"weak 참조","id":"388a7c2d"},{"tagName":"h3","title":"weak 참조의 특징","id":"052f92b0"},{"tagName":"h2","title":"unowned 참조","id":"1f930bd3"},{"tagName":"h3","title":"unowned 참조의 특징","id":"3d629cdb"},{"tagName":"h2","title":"언제 weak와 unowned 참조를 사용해야 할까?","id":"1d1cbfa5"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
