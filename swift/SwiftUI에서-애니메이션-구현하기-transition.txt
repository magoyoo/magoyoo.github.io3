1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-transition","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI에서-애니메이션-구현하기-transition\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-transition","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI에서-애니메이션-구현하기-transition\"}"},"styles":[]}],"segment":["slug","SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-transition","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI Transition 애니메이션: .transition() Modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 SwiftUI에서 .transition() modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법을 설명합니다. 기본 전환 효과인 슬라이드, 투명도, 확대/축소 애니메이션부터 커스텀 전환 애니메이션 및 복합 전환 애니메이션까지 다양한 예제를 통해 전환 애니메이션을 효과적으로 사용하는 방법을 다룹니다. SwiftUI의 강력한 전환 애니메이션 기능을 활용하여 매끄럽고 시각적으로 매력적인 사용자 인터페이스를 구현하는 방법을 배워보세요."}],["$","meta","3",{"name":"keywords","content":"swift,swiftUI,animation"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-transition"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI Transition 애니메이션: .transition() Modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI Transition 애니메이션: .transition() Modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 SwiftUI에서 .transition() modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법을 설명합니다. 기본 전환 효과인 슬라이드, 투명도, 확대/축소 애니메이션부터 커스텀 전환 애니메이션 및 복합 전환 애니메이션까지 다양한 예제를 통해 전환 애니메이션을 효과적으로 사용하는 방법을 다룹니다. SwiftUI의 강력한 전환 애니메이션 기능을 활용하여 매끄럽고 시각적으로 매력적인 사용자 인터페이스를 구현하는 방법을 배워보세요."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-transition"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI Transition 애니메이션: .transition() Modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 SwiftUI에서 .transition() modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법을 설명합니다. 기본 전환 효과인 슬라이드, 투명도, 확대/축소 애니메이션부터 커스텀 전환 애니메이션 및 복합 전환 애니메이션까지 다양한 예제를 통해 전환 애니메이션을 효과적으로 사용하는 방법을 다룹니다. SwiftUI의 강력한 전환 애니메이션 기능을 활용하여 매끄럽고 시각적으로 매력적인 사용자 인터페이스를 구현하는 방법을 배워보세요."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
10:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
11:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T4bf,import SwiftUI

struct RotateTransition: ViewModifier {
    let angle: Double

    func body(content: Content) -> some View {
        content
            .rotationEffect(.degrees(angle))
            .opacity(angle == 0 ? 1 : 0)
    }
}

extension AnyTransition {
    static var rotate: AnyTransition {
        .modifier(
            active: RotateTransition(angle: -90),
            identity: RotateTransition(angle: 0)
        )
    }
}

struct ContentView: View {
    @State private var isVisible = false

    var body: some View {
        VStack {
            if isVisible {
                Text("Hello, SwiftUI!")
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(10)
                    .transition(.rotate)
            }

            Spacer()

            Button(action: {
                withAnimation {
                    isVisible.toggle()
                }
            }) {
                Text("Toggle Text")
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(10)
            }
        }
    }
}
f:T4bf,import SwiftUI

struct RotateTransition: ViewModifier {
    let angle: Double

    func body(content: Content) -> some View {
        content
            .rotationEffect(.degrees(angle))
            .opacity(angle == 0 ? 1 : 0)
    }
}

extension AnyTransition {
    static var rotate: AnyTransition {
        .modifier(
            active: RotateTransition(angle: -90),
            identity: RotateTransition(angle: 0)
        )
    }
}

struct ContentView: View {
    @State private var isVisible = false

    var body: some View {
        VStack {
            if isVisible {
                Text("Hello, SwiftUI!")
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(10)
                    .transition(.rotate)
            }

            Spacer()

            Button(action: {
                withAnimation {
                    isVisible.toggle()
                }
            }) {
                Text("Toggle Text")
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(10)
            }
        }
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBasic.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI Transition 애니메이션: .transition() Modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI Transition 애니메이션: .transition() Modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-05-27"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h2",null,{"id":"f9526833","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Transition 애니메이션: .transition() Modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 애플의 최신 UI 프레임워크로, 선언형 문법을 통해 간결하고 직관적인 방식으로 사용자 인터페이스를 구축할 수 있습니다. SwiftUI의 강력한 기능 중 하나는 뷰의 상태 변화에 따라 애니메이션을 쉽게 적용할 수 있다는 점입니다. 특히 .transition() modifier를 사용하면 뷰의 삽입 및 제거 시 애니메이션을 적용하여 더욱 매끄럽고 시각적으로 매력적인 사용자 경험을 제공할 수 있습니다. 이번 글에서는 .transition() modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법에 대해 자세히 알아보겠습니다."}],"\n",["$","h2",null,{"id":"7050791d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":".transition() Modifier의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":".transition() modifier는 뷰가 삽입되거나 제거될 때 적용되는 애니메이션을 정의합니다. 이는 뷰가 등장하거나 사라질 때 시각적으로 매끄럽게 전환되도록 도와줍니다. SwiftUI는 기본적으로 제공하는 여러 전환 효과를 통해 손쉽게 애니메이션을 적용할 수 있습니다."}],"\n",["$","h3",null,{"id":"bb334c19","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"기본 전환 효과"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 여러 기본 전환 효과를 제공합니다. 가장 많이 사용되는 전환 효과 몇 가지를 소개합니다."}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":".slide"}],": 뷰가 슬라이드하면서 등장하거나 사라집니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":".opacity"}],": 뷰의 투명도가 변경되면서 등장하거나 사라집니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":".scale"}],": 뷰가 확대되거나 축소되면서 등장하거나 사라집니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 각 전환 효과를 예제와 함께 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"82b7190a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":".slide 전환 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":".slide 전환 애니메이션은 뷰가 슬라이드하면서 등장하거나 사라지는 효과를 줍니다. 다음은 버튼을 클릭하여 텍스트 뷰가 슬라이드하면서 나타나고 사라지는 예제입니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var isVisible = false\n\n    var body: some View {\n        VStack {\n            if isVisible {\n                Text(\"Hello, SwiftUI!\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n                    .transition(.slide)\n            }\n\n            Spacer()\n\n            Button(action: {\n                withAnimation {\n                    isVisible.toggle()\n                }\n            }) {\n                Text(\"Toggle Text\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":24,"column":1,"offset":928},"end":{"line":57,"column":4,"offset":1731}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var isVisible = false\n\n    var body: some View {\n        VStack {\n            if isVisible {\n                Text(\"Hello, SwiftUI!\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n                    .transition(.slide)\n            }\n\n            Spacer()\n\n            Button(action: {\n                withAnimation {\n                    isVisible.toggle()\n                }\n            }) {\n                Text(\"Toggle Text\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"isVisible","position":{"start":{"line":59,"column":8,"offset":1740},"end":{"line":59,"column":19,"offset":1751}}}],"position":{"start":{"line":59,"column":8,"offset":1740},"end":{"line":59,"column":19,"offset":1751}}},"children":"isVisible"}}]," 상태 변수는 텍스트 뷰의 가시성을 제어합니다. 버튼을 클릭하면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"isVisible","position":{"start":{"line":59,"column":55,"offset":1787},"end":{"line":59,"column":66,"offset":1798}}}],"position":{"start":{"line":59,"column":55,"offset":1787},"end":{"line":59,"column":66,"offset":1798}}},"children":"isVisible"}}],"의 값이 토글되며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"withAnimation","position":{"start":{"line":59,"column":77,"offset":1809},"end":{"line":59,"column":92,"offset":1824}}}],"position":{"start":{"line":59,"column":77,"offset":1809},"end":{"line":59,"column":92,"offset":1824}}},"children":"withAnimation"}}]," 블록 내에서 전환 애니메이션이 적용됩니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".transition(.slide)","position":{"start":{"line":59,"column":117,"offset":1849},"end":{"line":59,"column":138,"offset":1870}}}],"position":{"start":{"line":59,"column":117,"offset":1849},"end":{"line":59,"column":138,"offset":1870}}},"children":".transition(.slide)"}}]," modifier를 사용하여 뷰가 슬라이드하면서 나타나고 사라지도록 설정했습니다."]}],"\n",["$","h2",null,{"id":"ac540f87","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":".opacity 전환 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":".opacity 전환 애니메이션은 뷰의 투명도가 변경되면서 등장하거나 사라지는 효과를 줍니다. 다음은 버튼을 클릭하여 텍스트 뷰가 투명도 변화를 통해 나타나고 사라지는 예제입니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var isVisible = false\n\n    var body: some View {\n        VStack {\n            if isVisible {\n                Text(\"Hello, SwiftUI!\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n                    .transition(.opacity)\n            }\n\n            Spacer()\n\n            Button(action: {\n                withAnimation {\n                    isVisible.toggle()\n                }\n            }) {\n                Text(\"Toggle Text\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":65,"column":1,"offset":2041},"end":{"line":98,"column":4,"offset":2846}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var isVisible = false\n\n    var body: some View {\n        VStack {\n            if isVisible {\n                Text(\"Hello, SwiftUI!\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n                    .transition(.opacity)\n            }\n\n            Spacer()\n\n            Button(action: {\n                withAnimation {\n                    isVisible.toggle()\n                }\n            }) {\n                Text(\"Toggle Text\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".transition(.opacity)","position":{"start":{"line":100,"column":8,"offset":2855},"end":{"line":100,"column":31,"offset":2878}}}],"position":{"start":{"line":100,"column":8,"offset":2855},"end":{"line":100,"column":31,"offset":2878}}},"children":".transition(.opacity)"}}]," modifier를 사용하여 뷰가 투명도 변화를 통해 나타나고 사라지도록 설정했습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"withAnimation","position":{"start":{"line":100,"column":80,"offset":2927},"end":{"line":100,"column":95,"offset":2942}}}],"position":{"start":{"line":100,"column":80,"offset":2927},"end":{"line":100,"column":95,"offset":2942}}},"children":"withAnimation"}}]," 블록 내에서 애니메이션이 적용되므로, 버튼을 클릭할 때 텍스트 뷰가 부드럽게 전환됩니다."]}],"\n",["$","h2",null,{"id":"fa88ef71","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":".scale 전환 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":".scale 전환 애니메이션은 뷰가 확대되거나 축소되면서 등장하거나 사라지는 효과를 줍니다. 다음은 버튼을 클릭하여 텍스트 뷰가 확대 또는 축소를 통해 나타나고 사라지는 예제입니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var isVisible = false\n\n    var body: some View {\n        VStack {\n            if isVisible {\n                Text(\"Hello, SwiftUI!\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n                    .transition(.scale)\n            }\n\n            Spacer()\n\n            Button(action: {\n                withAnimation {\n                    isVisible.toggle()\n                }\n            }) {\n                Text(\"Toggle Text\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":106,"column":1,"offset":3117},"end":{"line":139,"column":4,"offset":3920}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var isVisible = false\n\n    var body: some View {\n        VStack {\n            if isVisible {\n                Text(\"Hello, SwiftUI!\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n                    .transition(.scale)\n            }\n\n            Spacer()\n\n            Button(action: {\n                withAnimation {\n                    isVisible.toggle()\n                }\n            }) {\n                Text(\"Toggle Text\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".transition(.scale)","position":{"start":{"line":141,"column":8,"offset":3929},"end":{"line":141,"column":29,"offset":3950}}}],"position":{"start":{"line":141,"column":8,"offset":3929},"end":{"line":141,"column":29,"offset":3950}}},"children":".transition(.scale)"}}]," modifier를 사용하여 뷰가 확대 또는 축소를 통해 나타나고 사라지도록 설정했습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"withAnimation","position":{"start":{"line":141,"column":80,"offset":4001},"end":{"line":141,"column":95,"offset":4016}}}],"position":{"start":{"line":141,"column":80,"offset":4001},"end":{"line":141,"column":95,"offset":4016}}},"children":"withAnimation"}}]," 블록 내에서 애니메이션이 적용되므로, 버튼을 클릭할 때 텍스트 뷰가 부드럽게 전환됩니다."]}],"\n",["$","h2",null,{"id":"e98b1c7a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"커스텀 전환 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 기본 제공 전환 효과 외에도 커스텀 전환 애니메이션을 만들 수 있는 기능을 제공합니다. 이를 통해 더욱 복잡하고 독창적인 애니메이션을 구현할 수 있습니다."}],"\n",["$","h3",null,{"id":"d23fda14","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제: 회전 전환 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 커스텀 전환 애니메이션을 사용하여 뷰가 회전하면서 등장하고 사라지는 예제입니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":151,"column":1,"offset":4253},"end":{"line":203,"column":4,"offset":5480}}},"children":"$f"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"RotateTransition","position":{"start":{"line":205,"column":8,"offset":5489},"end":{"line":205,"column":26,"offset":5507}}}],"position":{"start":{"line":205,"column":8,"offset":5489},"end":{"line":205,"column":26,"offset":5507}}},"children":"RotateTransition"}}],"이라는 커스텀 ViewModifier를 정의하고, 이를 사용하여 뷰가 회전하면서 등장하고 사라지도록 설정했습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AnyTransition.rotate","position":{"start":{"line":205,"column":90,"offset":5571},"end":{"line":205,"column":112,"offset":5593}}}],"position":{"start":{"line":205,"column":90,"offset":5571},"end":{"line":205,"column":112,"offset":5593}}},"children":"AnyTransition.rotate"}}],"를 확장하여 커스텀 전환 애니메이션을 생성하였으며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".transition(.rotate)","position":{"start":{"line":205,"column":141,"offset":5622},"end":{"line":205,"column":163,"offset":5644}}}],"position":{"start":{"line":205,"column":141,"offset":5622},"end":{"line":205,"column":163,"offset":5644}}},"children":".transition(.rotate)"}}]," modifier를 사용하여 적용했습니다."]}],"\n",["$","h2",null,{"id":"30aba39e","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"복합 전환 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI에서는 여러 전환 애니메이션을 결합하여 더욱 복잡한 효과를 구현할 수 있습니다. 예를 들어, 슬라이드와 투명도 변화를 결합하여 뷰가 슬라이드하면서 점점 투명해지도록 할 수 있습니다."}],"\n",["$","h3",null,{"id":"c8975156","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제: 슬라이드와 투명도 결합 전환 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 슬라이드와 투명도 변화를 결합하여 뷰가 슬라이드하면서 점점 투명해지는 예제입니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var isVisible = false\n\n    var body: some View {\n        VStack {\n            if isVisible {\n                Text(\"Hello, SwiftUI!\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n                    .transition(AnyTransition.slide.combined(with: .opacity))\n            }\n\n            Spacer()\n\n            Button(action: {\n                withAnimation {\n                    isVisible.toggle()\n                }\n            }) {\n                Text(\"Toggle Text\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":215,"column":1,"offset":5877},"end":{"line":248,"column":4,"offset":6718}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var isVisible = false\n\n    var body: some View {\n        VStack {\n            if isVisible {\n                Text(\"Hello, SwiftUI!\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n                    .transition(AnyTransition.slide.combined(with: .opacity))\n            }\n\n            Spacer()\n\n            Button(action: {\n                withAnimation {\n                    isVisible.toggle()\n                }\n            }) {\n                Text(\"Toggle Text\")\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".transition(AnyTransition.slide.combined(with: .opacity))","position":{"start":{"line":250,"column":8,"offset":6727},"end":{"line":250,"column":67,"offset":6786}}}],"position":{"start":{"line":250,"column":8,"offset":6727},"end":{"line":250,"column":67,"offset":6786}}},"children":".transition(AnyTransition.slide.combined(with: .opacity))"}}],"를 사용하여 슬라이드와 투명도 변화를 결합한 전환 애니메이션을 적용했습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"withAnimation","position":{"start":{"line":250,"column":110,"offset":6829},"end":{"line":250,"column":125,"offset":6844}}}],"position":{"start":{"line":250,"column":110,"offset":6829},"end":{"line":250,"column":125,"offset":6844}}},"children":"withAnimation"}}]," 블록 내에서 애니메이션이 적용되므로, 버튼을 클릭할 때 텍스트 뷰가 부드럽게 전환됩니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI의 .transition() modifier를 사용하면 뷰의 삽입 및 제거 시 애니메이션을 쉽게 적용할 수 있습니다. 기본 제공되는 슬라이드, 투명도, 확대/축소 전"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"환 애니메이션뿐만 아니라, 커스텀 전환 애니메이션을 만들어 더욱 복잡하고 독창적인 효과를 구현할 수 있습니다. 전환 애니메이션을 적절히 활용하면 사용자에게 더욱 매끄럽고 시각적으로 매력적인 인터페이스를 제공할 수 있습니다. SwiftUI의 전환 애니메이션 기능을 잘 이해하고 활용하여 동적인 UI를 구현해 보세요."}]]}]}],["$","$L10",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L11",null,{"articleTitle":"SwiftUI Transition 애니메이션: .transition() Modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법","toc":[{"tagName":"h2","title":"Transition 애니메이션: .transition() Modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법","id":"f9526833"},{"tagName":"h2","title":".transition() Modifier의 기본 개념","id":"7050791d"},{"tagName":"h3","title":"기본 전환 효과","id":"bb334c19"},{"tagName":"h2","title":".slide 전환 애니메이션","id":"82b7190a"},{"tagName":"h2","title":".opacity 전환 애니메이션","id":"ac540f87"},{"tagName":"h2","title":".scale 전환 애니메이션","id":"fa88ef71"},{"tagName":"h2","title":"커스텀 전환 애니메이션","id":"e98b1c7a"},{"tagName":"h3","title":"예제: 회전 전환 애니메이션","id":"d23fda14"},{"tagName":"h2","title":"복합 전환 애니메이션","id":"30aba39e"},{"tagName":"h3","title":"예제: 슬라이드와 투명도 결합 전환 애니메이션","id":"c8975156"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
