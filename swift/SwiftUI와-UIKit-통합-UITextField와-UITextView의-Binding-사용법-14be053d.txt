1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI%EC%99%80-UIKit-%ED%86%B5%ED%95%A9-UITextField%EC%99%80-UITextView%EC%9D%98-Binding-%EC%82%AC%EC%9A%A9%EB%B2%95-14be053d","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI와-UIKit-통합-UITextField와-UITextView의-Binding-사용법-14be053d\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI%EC%99%80-UIKit-%ED%86%B5%ED%95%A9-UITextField%EC%99%80-UITextView%EC%9D%98-Binding-%EC%82%AC%EC%9A%A9%EB%B2%95-14be053d","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI와-UIKit-통합-UITextField와-UITextView의-Binding-사용법-14be053d\"}"},"styles":[]}],"segment":["slug","SwiftUI%EC%99%80-UIKit-%ED%86%B5%ED%95%A9-UITextField%EC%99%80-UITextView%EC%9D%98-Binding-%EC%82%AC%EC%9A%A9%EB%B2%95-14be053d","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI와 UIKit 통합: UITextField와 UITextView의 Binding 사용법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"SwiftUI와 UIKit을 통합하여 UITextField와 UITextView에 Binding을 적용하는 방법을 자세히 다룹니다. 이를 통해 개발자는 SwiftUI의 기능을 유지하면서도 UIKit의 강력한 컴포넌트를 활용할 수 있습니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,UIKit,Binding,UITextField,UITextView"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI%EC%99%80-UIKit-%ED%86%B5%ED%95%A9-UITextField%EC%99%80-UITextView%EC%9D%98-Binding-%EC%82%AC%EC%9A%A9%EB%B2%95-14be053d"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI와 UIKit 통합: UITextField와 UITextView의 Binding 사용법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI와 UIKit 통합: UITextField와 UITextView의 Binding 사용법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"SwiftUI와 UIKit을 통합하여 UITextField와 UITextView에 Binding을 적용하는 방법을 자세히 다룹니다. 이를 통해 개발자는 SwiftUI의 기능을 유지하면서도 UIKit의 강력한 컴포넌트를 활용할 수 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI%EC%99%80-UIKit-%ED%86%B5%ED%95%A9-UITextField%EC%99%80-UITextView%EC%9D%98-Binding-%EC%82%AC%EC%9A%A9%EB%B2%95-14be053d"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI와 UIKit 통합: UITextField와 UITextView의 Binding 사용법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"SwiftUI와 UIKit을 통합하여 UITextField와 UITextView에 Binding을 적용하는 방법을 자세히 다룹니다. 이를 통해 개발자는 SwiftUI의 기능을 유지하면서도 UIKit의 강력한 컴포넌트를 활용할 수 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner5.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI와 UIKit 통합: UITextField와 UITextView의 Binding 사용법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI와 UIKit 통합: UITextField와 UITextView의 Binding 사용법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-11"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"c61efa86","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI와 UIKit 통합: UITextField와 UITextView의 Binding 사용법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI는 애플의 새로운 사용자 인터페이스 프레임워크로, 선언적인 방법으로 UI를 구성할 수 있게 해줍니다. 하지만 아직도 UIKit과의 통합이 필요한 시나리오가 많습니다. 특히 텍스트 입력 컴포넌트인 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextField","position":{"start":{"line":4,"column":117,"offset":176},"end":{"line":4,"column":130,"offset":189}}}],"position":{"start":{"line":4,"column":117,"offset":176},"end":{"line":4,"column":130,"offset":189}}},"children":"UITextField"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":4,"column":132,"offset":191},"end":{"line":4,"column":144,"offset":203}}}],"position":{"start":{"line":4,"column":132,"offset":191},"end":{"line":4,"column":144,"offset":203}}},"children":"UITextView"}}],"에 대해 SwiftUI와 UIKit을 통합하여 사용하는 방법을 이해하는 것이 중요합니다. 이 글에서는 SwiftUI와 UIKit을 통합하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextField","position":{"start":{"line":4,"column":222,"offset":281},"end":{"line":4,"column":235,"offset":294}}}],"position":{"start":{"line":4,"column":222,"offset":281},"end":{"line":4,"column":235,"offset":294}}},"children":"UITextField"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":4,"column":237,"offset":296},"end":{"line":4,"column":249,"offset":308}}}],"position":{"start":{"line":4,"column":237,"offset":296},"end":{"line":4,"column":249,"offset":308}}},"children":"UITextView"}}],"에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Binding","position":{"start":{"line":4,"column":251,"offset":310},"end":{"line":4,"column":260,"offset":319}}}],"position":{"start":{"line":4,"column":251,"offset":310},"end":{"line":4,"column":260,"offset":319}}},"children":"Binding"}}],"을 적용하는 방법을 다룹니다."]}],"\n",["$","h2",null,{"id":"e3f17a96","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"SwiftUI와 UIKit 통합의 필요성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI는 강력한 프레임워크지만, 아직 모든 것을 완벽하게 대체하지는 않습니다. 특히 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextField","position":{"start":{"line":8,"column":52,"offset":415},"end":{"line":8,"column":65,"offset":428}}}],"position":{"start":{"line":8,"column":52,"offset":415},"end":{"line":8,"column":65,"offset":428}}},"children":"UITextField"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":8,"column":67,"offset":430},"end":{"line":8,"column":79,"offset":442}}}],"position":{"start":{"line":8,"column":67,"offset":430},"end":{"line":8,"column":79,"offset":442}}},"children":"UITextView"}}],"와 같은 고급 컴포넌트를 사용하는 경우, UIKit의 기능을 활용해야 할 때가 있습니다. SwiftUI와 UIKit을 통합함으로써, 다음과 같은 장점을 얻을 수 있습니다:"]}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"기존 코드 재사용"}],": 이미 작성된 UIKit 기반의 코드를 그대로 사용할 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"세부 기능 접근"}],": UIKit이 제공하는 다양한 커스터마이즈 옵션을 사용할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"점진적 전환"}],": 애플리케이션의 일부를 SwiftUI로 전환하면서 프로젝트를 점진적으로 업데이트할 수 있습니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"f11d5b8e","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UITextField와 Binding 적용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["UITextField를 SwiftUI에서 사용하기 위해서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewRepresentable","position":{"start":{"line":16,"column":34,"offset":782},"end":{"line":16,"column":55,"offset":803}}}],"position":{"start":{"line":16,"column":34,"offset":782},"end":{"line":16,"column":55,"offset":803}}},"children":"UIViewRepresentable"}}]," 프로토콜을 따르는 커스텀 뷰를 만들어야 합니다. 이는 UIKit 컴포넌트를 SwiftUI에서 사용할 수 있게 해줍니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\nimport UIKit\n\nstruct TextFieldWrapper: UIViewRepresentable {\n    @Binding var text: String\n\n    class Coordinator: NSObject, UITextFieldDelegate {\n        var parent: TextFieldWrapper\n\n        init(_ parent: TextFieldWrapper) {\n            self.parent = parent\n        }\n\n        func textFieldDidChangeSelection(_ textField: UITextField) {\n            parent.text = textField.text ?? \"\"\n        }\n    }\n\n    func makeCoordinator() -> Coordinator {\n        Coordinator(self)\n    }\n\n    func makeUIView(context: Context) -> UITextField {\n        let textField = UITextField()\n        textField.delegate = context.coordinator\n        return textField\n    }\n\n    func updateUIView(_ uiView: UITextField, context: Context) {\n        uiView.text = text\n    }\n}\n"}],"position":{"start":{"line":18,"column":1,"offset":872},"end":{"line":51,"column":4,"offset":1655}}},"children":"import SwiftUI\nimport UIKit\n\nstruct TextFieldWrapper: UIViewRepresentable {\n    @Binding var text: String\n\n    class Coordinator: NSObject, UITextFieldDelegate {\n        var parent: TextFieldWrapper\n\n        init(_ parent: TextFieldWrapper) {\n            self.parent = parent\n        }\n\n        func textFieldDidChangeSelection(_ textField: UITextField) {\n            parent.text = textField.text ?? \"\"\n        }\n    }\n\n    func makeCoordinator() -> Coordinator {\n        Coordinator(self)\n    }\n\n    func makeUIView(context: Context) -> UITextField {\n        let textField = UITextField()\n        textField.delegate = context.coordinator\n        return textField\n    }\n\n    func updateUIView(_ uiView: UITextField, context: Context) {\n        uiView.text = text\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewRepresentable","position":{"start":{"line":53,"column":9,"offset":1665},"end":{"line":53,"column":30,"offset":1686}}}],"position":{"start":{"line":53,"column":9,"offset":1665},"end":{"line":53,"column":30,"offset":1686}}},"children":"UIViewRepresentable"}}]," 프로토콜을 구현하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextField","position":{"start":{"line":53,"column":42,"offset":1698},"end":{"line":53,"column":55,"offset":1711}}}],"position":{"start":{"line":53,"column":42,"offset":1698},"end":{"line":53,"column":55,"offset":1711}}},"children":"UITextField"}}],"와 SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Binding","position":{"start":{"line":53,"column":66,"offset":1722},"end":{"line":53,"column":75,"offset":1731}}}],"position":{"start":{"line":53,"column":66,"offset":1722},"end":{"line":53,"column":75,"offset":1731}}},"children":"Binding"}}],"을 연결합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"makeCoordinator","position":{"start":{"line":53,"column":84,"offset":1740},"end":{"line":53,"column":101,"offset":1757}}}],"position":{"start":{"line":53,"column":84,"offset":1740},"end":{"line":53,"column":101,"offset":1757}}},"children":"makeCoordinator"}}]," 메소드는 텍스트 필드의 델리게이트 메소드를 처리하는 코디네이터 객체를 생성합니다."]}],"\n",["$","h2",null,{"id":"347c5b76","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"예제: SwiftUI에서 UITextField 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 어떻게 SwiftUI에서 사용되는지 예제를 보도록 하겠습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    @State private var text: String = \"\"\n\n    var body: some View {\n        VStack {\n            Text(\"입력한 텍스트: \\(text)\")\n                .padding()\n            TextFieldWrapper(text: $text)\n                .padding()\n                .border(Color.gray)\n        }\n        .padding()\n    }\n}\n"}],"position":{"start":{"line":59,"column":1,"offset":1879},"end":{"line":74,"column":4,"offset":2209}}},"children":"struct ContentView: View {\n    @State private var text: String = \"\"\n\n    var body: some View {\n        VStack {\n            Text(\"입력한 텍스트: \\(text)\")\n                .padding()\n            TextFieldWrapper(text: $text)\n                .padding()\n                .border(Color.gray)\n        }\n        .padding()\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ContentView","position":{"start":{"line":76,"column":9,"offset":2219},"end":{"line":76,"column":22,"offset":2232}}}],"position":{"start":{"line":76,"column":9,"offset":2219},"end":{"line":76,"column":22,"offset":2232}}},"children":"ContentView"}}],"라는 SwiftUI 뷰에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TextFieldWrapper","position":{"start":{"line":76,"column":37,"offset":2247},"end":{"line":76,"column":55,"offset":2265}}}],"position":{"start":{"line":76,"column":37,"offset":2247},"end":{"line":76,"column":55,"offset":2265}}},"children":"TextFieldWrapper"}}],"를 사용하여 텍스트 필드를 구현하였습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@State","position":{"start":{"line":76,"column":79,"offset":2289},"end":{"line":76,"column":87,"offset":2297}}}],"position":{"start":{"line":76,"column":79,"offset":2289},"end":{"line":76,"column":87,"offset":2297}}},"children":"@State"}}]," 프로퍼티를 통해 텍스트 상태를 관리하고, 이를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TextFieldWrapper","position":{"start":{"line":76,"column":114,"offset":2324},"end":{"line":76,"column":132,"offset":2342}}}],"position":{"start":{"line":76,"column":114,"offset":2324},"end":{"line":76,"column":132,"offset":2342}}},"children":"TextFieldWrapper"}}],"와 바인딩합니다."]}],"\n",["$","h2",null,{"id":"3bb89ea4","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UITextView와 Binding 적용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 비슷한 방법을 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":80,"column":17,"offset":2398},"end":{"line":80,"column":29,"offset":2410}}}],"position":{"start":{"line":80,"column":17,"offset":2398},"end":{"line":80,"column":29,"offset":2410}}},"children":"UITextView"}}],"를 SwiftUI에서 사용하는 방법을 살펴보겠습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewRepresentable","position":{"start":{"line":80,"column":59,"offset":2440},"end":{"line":80,"column":80,"offset":2461}}}],"position":{"start":{"line":80,"column":59,"offset":2440},"end":{"line":80,"column":80,"offset":2461}}},"children":"UIViewRepresentable"}}],"을 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":80,"column":87,"offset":2468},"end":{"line":80,"column":99,"offset":2480}}}],"position":{"start":{"line":80,"column":87,"offset":2468},"end":{"line":80,"column":99,"offset":2480}}},"children":"UITextView"}}],"를 SwiftUI에서 사용할 수 있도록 래핑합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\nimport UIKit\n\nstruct TextViewWrapper: UIViewRepresentable {\n    @Binding var text: String\n\n    class Coordinator: NSObject, UITextViewDelegate {\n        var parent: TextViewWrapper\n\n        init(_ parent: TextViewWrapper) {\n            self.parent = parent\n        }\n\n        func textViewDidChange(_ textView: UITextView) {\n            parent.text = textView.text\n        }\n    }\n\n    func makeCoordinator() -> Coordinator {\n        Coordinator(self)\n    }\n\n    func makeUIView(context: Context) -> UITextView {\n        let textView = UITextView()\n        textView.delegate = context.coordinator\n        return textView\n    }\n\n    func updateUIView(_ uiView: UITextView, context: Context) {\n        uiView.text = text\n    }\n}\n"}],"position":{"start":{"line":82,"column":1,"offset":2510},"end":{"line":115,"column":4,"offset":3264}}},"children":"import SwiftUI\nimport UIKit\n\nstruct TextViewWrapper: UIViewRepresentable {\n    @Binding var text: String\n\n    class Coordinator: NSObject, UITextViewDelegate {\n        var parent: TextViewWrapper\n\n        init(_ parent: TextViewWrapper) {\n            self.parent = parent\n        }\n\n        func textViewDidChange(_ textView: UITextView) {\n            parent.text = textView.text\n        }\n    }\n\n    func makeCoordinator() -> Coordinator {\n        Coordinator(self)\n    }\n\n    func makeUIView(context: Context) -> UITextView {\n        let textView = UITextView()\n        textView.delegate = context.coordinator\n        return textView\n    }\n\n    func updateUIView(_ uiView: UITextView, context: Context) {\n        uiView.text = text\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewRepresentable","position":{"start":{"line":117,"column":7,"offset":3272},"end":{"line":117,"column":28,"offset":3293}}}],"position":{"start":{"line":117,"column":7,"offset":3272},"end":{"line":117,"column":28,"offset":3293}}},"children":"UIViewRepresentable"}}]," 프로토콜을 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":117,"column":40,"offset":3305},"end":{"line":117,"column":52,"offset":3317}}}],"position":{"start":{"line":117,"column":40,"offset":3305},"end":{"line":117,"column":52,"offset":3317}}},"children":"UITextView"}}],"와 SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Binding","position":{"start":{"line":117,"column":63,"offset":3328},"end":{"line":117,"column":72,"offset":3337}}}],"position":{"start":{"line":117,"column":63,"offset":3328},"end":{"line":117,"column":72,"offset":3337}}},"children":"Binding"}}],"을 연결한 예입니다. 마찬가지로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"makeCoordinator","position":{"start":{"line":117,"column":90,"offset":3355},"end":{"line":117,"column":107,"offset":3372}}}],"position":{"start":{"line":117,"column":90,"offset":3355},"end":{"line":117,"column":107,"offset":3372}}},"children":"makeCoordinator"}}]," 메소드를 통해 텍스트 뷰의 델리게이트 메소드를 처리하는 코디네이터 객체를 생성합니다."]}],"\n",["$","h2",null,{"id":"bddb9a4d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"예제: SwiftUI에서 UITextView 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 어떻게 SwiftUI에서 사용되는지 예제를 보도록 하겠습니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    @State private var textViewText: String = \"\"\n\n    var body: some View {\n        VStack {\n            Text(\"입력한 텍스트:\")\n            TextViewWrapper(text: $textViewText)\n                .frame(height: 200)\n                .border(Color.gray)\n                .padding()\n            Text(\"텍스트 내용: \\(textViewText)\")\n        }\n        .padding()\n    }\n}\n"}],"position":{"start":{"line":123,"column":1,"offset":3495},"end":{"line":139,"column":4,"offset":3885}}},"children":"struct ContentView: View {\n    @State private var textViewText: String = \"\"\n\n    var body: some View {\n        VStack {\n            Text(\"입력한 텍스트:\")\n            TextViewWrapper(text: $textViewText)\n                .frame(height: 200)\n                .border(Color.gray)\n                .padding()\n            Text(\"텍스트 내용: \\(textViewText)\")\n        }\n        .padding()\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ContentView","position":{"start":{"line":141,"column":9,"offset":3895},"end":{"line":141,"column":22,"offset":3908}}}],"position":{"start":{"line":141,"column":9,"offset":3895},"end":{"line":141,"column":22,"offset":3908}}},"children":"ContentView"}}],"라는 SwiftUI 뷰에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TextViewWrapper","position":{"start":{"line":141,"column":37,"offset":3923},"end":{"line":141,"column":54,"offset":3940}}}],"position":{"start":{"line":141,"column":37,"offset":3923},"end":{"line":141,"column":54,"offset":3940}}},"children":"TextViewWrapper"}}],"를 사용하여 텍스트 뷰를 구현하였습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@State","position":{"start":{"line":141,"column":77,"offset":3963},"end":{"line":141,"column":85,"offset":3971}}}],"position":{"start":{"line":141,"column":77,"offset":3963},"end":{"line":141,"column":85,"offset":3971}}},"children":"@State"}}]," 프로퍼티를 통해 텍스트 상태를 관리하고, 이를 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TextViewWrapper","position":{"start":{"line":141,"column":112,"offset":3998},"end":{"line":141,"column":129,"offset":4015}}}],"position":{"start":{"line":141,"column":112,"offset":3998},"end":{"line":141,"column":129,"offset":4015}}},"children":"TextViewWrapper"}}],"와 바인딩합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI와 UIKit을 통합하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextField","position":{"start":{"line":145,"column":22,"offset":4054},"end":{"line":145,"column":35,"offset":4067}}}],"position":{"start":{"line":145,"column":22,"offset":4054},"end":{"line":145,"column":35,"offset":4067}}},"children":"UITextField"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":145,"column":37,"offset":4069},"end":{"line":145,"column":49,"offset":4081}}}],"position":{"start":{"line":145,"column":37,"offset":4069},"end":{"line":145,"column":49,"offset":4081}}},"children":"UITextView"}}],"에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Binding","position":{"start":{"line":145,"column":51,"offset":4083},"end":{"line":145,"column":60,"offset":4092}}}],"position":{"start":{"line":145,"column":51,"offset":4083},"end":{"line":145,"column":60,"offset":4092}}},"children":"Binding"}}],"을 적용하는 방법을 알아보았습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewRepresentable","position":{"start":{"line":145,"column":80,"offset":4112},"end":{"line":145,"column":101,"offset":4133}}}],"position":{"start":{"line":145,"column":80,"offset":4112},"end":{"line":145,"column":101,"offset":4133}}},"children":"UIViewRepresentable"}}]," 프로토콜을 사용하여 SwiftUI와 UIKit 간의 상호 운용성을 제공하며, 이를 통해 개발자는 SwiftUI의 기능을 유지하면서도 UIKit의 강력한 컴포넌트를 활용할 수 있습니다. 이러한 접근 방식은 프로젝트를 점진적으로 SwiftUI로 전환하거나, 기존의 UIKit 코드와 새로운 SwiftUI 코드를 함께 사용할 때 유용합니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI와 UIKit 통합: UITextField와 UITextView의 Binding 사용법","toc":[{"tagName":"h1","title":"SwiftUI와 UIKit 통합: UITextField와 UITextView의 Binding 사용법","id":"c61efa86"},{"tagName":"h2","title":"SwiftUI와 UIKit 통합의 필요성","id":"e3f17a96"},{"tagName":"h2","title":"UITextField와 Binding 적용하기","id":"f11d5b8e"},{"tagName":"h2","title":"예제: SwiftUI에서 UITextField 사용하기","id":"347c5b76"},{"tagName":"h2","title":"UITextView와 Binding 적용하기","id":"3bb89ea4"},{"tagName":"h2","title":"예제: SwiftUI에서 UITextView 사용하기","id":"bddb9a4d"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
