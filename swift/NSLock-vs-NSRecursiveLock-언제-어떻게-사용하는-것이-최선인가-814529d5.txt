1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","NSLock-vs-NSRecursiveLock-%EC%96%B8%EC%A0%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%B4-%EC%B5%9C%EC%84%A0%EC%9D%B8%EA%B0%80-814529d5","d"],{"children":["__PAGE__?{\"slug\":\"NSLock-vs-NSRecursiveLock-언제-어떻게-사용하는-것이-최선인가-814529d5\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","NSLock-vs-NSRecursiveLock-%EC%96%B8%EC%A0%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%B4-%EC%B5%9C%EC%84%A0%EC%9D%B8%EA%B0%80-814529d5","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"NSLock-vs-NSRecursiveLock-언제-어떻게-사용하는-것이-최선인가-814529d5\"}"},"styles":[]}],"segment":["slug","NSLock-vs-NSRecursiveLock-%EC%96%B8%EC%A0%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%B4-%EC%B5%9C%EC%84%A0%EC%9D%B8%EA%B0%80-814529d5","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"NSLock vs NSRecursiveLock: 언제, 어떻게 사용하는 것이 최선인가? | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift에서 동시성 문제를 해결하는 주요 방법 중 두 가지인 NSLock과 NSRecursiveLock에 대해 알아보고, 각각의 사용 시기와 방법에 대해 설명합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,동시성,NSLock,NSRecursiveLock"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/NSLock-vs-NSRecursiveLock-%EC%96%B8%EC%A0%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%B4-%EC%B5%9C%EC%84%A0%EC%9D%B8%EA%B0%80-814529d5"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"NSLock vs NSRecursiveLock: 언제, 어떻게 사용하는 것이 최선인가? | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"NSLock vs NSRecursiveLock: 언제, 어떻게 사용하는 것이 최선인가? | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift에서 동시성 문제를 해결하는 주요 방법 중 두 가지인 NSLock과 NSRecursiveLock에 대해 알아보고, 각각의 사용 시기와 방법에 대해 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/NSLock-vs-NSRecursiveLock-%EC%96%B8%EC%A0%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%B4-%EC%B5%9C%EC%84%A0%EC%9D%B8%EA%B0%80-814529d5"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"NSLock vs NSRecursiveLock: 언제, 어떻게 사용하는 것이 최선인가? | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift에서 동시성 문제를 해결하는 주요 방법 중 두 가지인 NSLock과 NSRecursiveLock에 대해 알아보고, 각각의 사용 시기와 방법에 대해 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"NSLock vs NSRecursiveLock: 언제, 어떻게 사용하는 것이 최선인가?"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"NSLock vs NSRecursiveLock: 언제, 어떻게 사용하는 것이 최선인가?"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-02"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"4ef72f35","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"NSLock vs NSRecursiveLock: 언제, 어떻게 사용하는 것이 최선인가?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["동시성 프로그래밍에서 가장 큰 과제 중 하나는 데이터 경합을 방지하는 것입니다. 여러 스레드가 동일한 자원에 동시에 접근하려고 할 때, 데이터가 손상되거나 예기치 않은 동작이 발생할 수 있습니다. 이를 방지하기 위해 락(lock)을 사용하여 자원의 접근을 제어합니다. Swift에서는 대표적으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLock","position":{"start":{"line":4,"column":166,"offset":218},"end":{"line":4,"column":174,"offset":226}}}],"position":{"start":{"line":4,"column":166,"offset":218},"end":{"line":4,"column":174,"offset":226}}},"children":"NSLock"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSRecursiveLock","position":{"start":{"line":4,"column":176,"offset":228},"end":{"line":4,"column":193,"offset":245}}}],"position":{"start":{"line":4,"column":176,"offset":228},"end":{"line":4,"column":193,"offset":245}}},"children":"NSRecursiveLock"}}],"을 사용할 수 있습니다. 이번 글에서는 이 두 가지 락의 차이점과 각각을 언제 어떻게 사용하는 것이 최선인지 알아보겠습니다."]}],"\n",["$","h2",null,{"id":"65c04f1f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"NSLock"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLock","position":{"start":{"line":8,"column":1,"offset":327},"end":{"line":8,"column":9,"offset":335}}}],"position":{"start":{"line":8,"column":1,"offset":327},"end":{"line":8,"column":9,"offset":335}}},"children":"NSLock"}}],"은 가장 기본적인 형태의 락으로, 단일 스레드가 자원에 접근하는 동안 다른 스레드의 접근을 차단합니다. 다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLock","position":{"start":{"line":8,"column":71,"offset":397},"end":{"line":8,"column":79,"offset":405}}}],"position":{"start":{"line":8,"column":71,"offset":397},"end":{"line":8,"column":79,"offset":405}}},"children":"NSLock"}}],"의 주요 특징입니다:"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"간편성"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLock","position":{"start":{"line":10,"column":12,"offset":429},"end":{"line":10,"column":20,"offset":437}}}],"position":{"start":{"line":10,"column":12,"offset":429},"end":{"line":10,"column":20,"offset":437}}},"children":"NSLock"}}],"은 상대적으로 사용하기 간단합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"lock()","position":{"start":{"line":10,"column":40,"offset":457},"end":{"line":10,"column":48,"offset":465}}}],"position":{"start":{"line":10,"column":40,"offset":457},"end":{"line":10,"column":48,"offset":465}}},"children":"lock()"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unlock()","position":{"start":{"line":10,"column":50,"offset":467},"end":{"line":10,"column":60,"offset":477}}}],"position":{"start":{"line":10,"column":50,"offset":467},"end":{"line":10,"column":60,"offset":477}}},"children":"unlock()"}}]," 메소드를 통해 자원을 잠그고 풀 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"고성능"}],": 상당히 가벼운 락으로, 성능이 중요한 경우에 유리합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"비재귀적"}],": 동일 스레드 내에서 중복 잠금을 허용하지 않습니다. 동일 스레드가 이미 잠긴 락을 다시 잠그려고 하면 데드락(교착 상태)이 발생합니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"ae2bbb1c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"사용 예시"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\n\nlet lock = NSLock()\nvar sharedResource = 0\n\nfunc modifyResource() {\n    lock.lock()\n    sharedResource += 1\n    lock.unlock()\n}\n\nDispatchQueue.concurrentPerform(iterations: 10) { _ in\n    modifyResource()\n}\n\nprint(sharedResource)\n"}],"position":{"start":{"line":16,"column":1,"offset":647},"end":{"line":33,"column":4,"offset":908}}},"children":"import Foundation\n\nlet lock = NSLock()\nvar sharedResource = 0\n\nfunc modifyResource() {\n    lock.lock()\n    sharedResource += 1\n    lock.unlock()\n}\n\nDispatchQueue.concurrentPerform(iterations: 10) { _ in\n    modifyResource()\n}\n\nprint(sharedResource)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예시에서 여러 스레드가 동시에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"modifyResource()","position":{"start":{"line":35,"column":20,"offset":929},"end":{"line":35,"column":38,"offset":947}}}],"position":{"start":{"line":35,"column":20,"offset":929},"end":{"line":35,"column":38,"offset":947}}},"children":"modifyResource()"}}]," 함수를 호출할 수 있지만, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLock","position":{"start":{"line":35,"column":54,"offset":963},"end":{"line":35,"column":62,"offset":971}}}],"position":{"start":{"line":35,"column":54,"offset":963},"end":{"line":35,"column":62,"offset":971}}},"children":"NSLock"}}],"을 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sharedResource","position":{"start":{"line":35,"column":69,"offset":978},"end":{"line":35,"column":85,"offset":994}}}],"position":{"start":{"line":35,"column":69,"offset":978},"end":{"line":35,"column":85,"offset":994}}},"children":"sharedResource"}}],"에 접근하는 것을 직렬화(순서대로 처리)할 수 있습니다."]}],"\n",["$","h2",null,{"id":"17792ca0","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"NSRecursiveLock"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSRecursiveLock","position":{"start":{"line":39,"column":1,"offset":1047},"end":{"line":39,"column":18,"offset":1064}}}],"position":{"start":{"line":39,"column":1,"offset":1047},"end":{"line":39,"column":18,"offset":1064}}},"children":"NSRecursiveLock"}}],"은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLock","position":{"start":{"line":39,"column":20,"offset":1066},"end":{"line":39,"column":28,"offset":1074}}}],"position":{"start":{"line":39,"column":20,"offset":1066},"end":{"line":39,"column":28,"offset":1074}}},"children":"NSLock"}}],"과 매우 유사하지만, 같은 스레드에서 중복 잠금을 허용한다는 중요한 차이점이 있습니다. 이는 특정 상황에서 매우 유용할 수 있습니다."]}],"\n",["$","h3",null,{"id":"f8cad7b0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"주요 특징"}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"재귀적 잠금 허용"}],": 동일 스레드가 동일한 락을 여러 번 잠글 수 있으며, 잠금 횟수만큼 풀어야 다른 스레드가 접근할 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"복잡한 알고리즘"}],": 재귀적 알고리즘이나 재귀적 함수 호출에 적합합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"오버헤드"}],": 일반적으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLock","position":{"start":{"line":45,"column":19,"offset":1303},"end":{"line":45,"column":27,"offset":1311}}}],"position":{"start":{"line":45,"column":19,"offset":1303},"end":{"line":45,"column":27,"offset":1311}}},"children":"NSLock"}}],"보다 약간 더 많은 오버헤드가 있지만, 특정 상황에서 이를 통해 코드의 간결함과 안전성을 확보할 수 있습니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"ae2bbb1c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"사용 예시"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\n\nlet recursiveLock = NSRecursiveLock()\nvar recursiveSharedResource = 0\n\nfunc recursiveFunction(count: Int) {\n    recursiveLock.lock()\n    if count > 0 {\n        recursiveSharedResource += 1\n        recursiveFunction(count: count - 1) // 재귀 호출\n    }\n    recursiveLock.unlock()\n}\n\nrecursiveFunction(count: 10)\nprint(recursiveSharedResource)\n"}],"position":{"start":{"line":49,"column":1,"offset":1385},"end":{"line":66,"column":4,"offset":1754}}},"children":"import Foundation\n\nlet recursiveLock = NSRecursiveLock()\nvar recursiveSharedResource = 0\n\nfunc recursiveFunction(count: Int) {\n    recursiveLock.lock()\n    if count > 0 {\n        recursiveSharedResource += 1\n        recursiveFunction(count: count - 1) // 재귀 호출\n    }\n    recursiveLock.unlock()\n}\n\nrecursiveFunction(count: 10)\nprint(recursiveSharedResource)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예시에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"recursiveFunction","position":{"start":{"line":68,"column":9,"offset":1764},"end":{"line":68,"column":28,"offset":1783}}}],"position":{"start":{"line":68,"column":9,"offset":1764},"end":{"line":68,"column":28,"offset":1783}}},"children":"recursiveFunction"}}],"이 재귀적으로 호출될 때마다 동일한 락을 여러 번 잠그지만, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSRecursiveLock","position":{"start":{"line":68,"column":62,"offset":1817},"end":{"line":68,"column":79,"offset":1834}}}],"position":{"start":{"line":68,"column":62,"offset":1817},"end":{"line":68,"column":79,"offset":1834}}},"children":"NSRecursiveLock"}}]," 덕분에 문제가 발생하지 않습니다. 마지막에 모든 락이 풀리면 다른 스레드가 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"recursiveSharedResource","position":{"start":{"line":68,"column":122,"offset":1877},"end":{"line":68,"column":147,"offset":1902}}}],"position":{"start":{"line":68,"column":122,"offset":1877},"end":{"line":68,"column":147,"offset":1902}}},"children":"recursiveSharedResource"}}],"에 접근할 수 있습니다."]}],"\n",["$","h2",null,{"id":"1fddc1b5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"언제, 어떻게 사용할 것인가?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이제 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLock","position":{"start":{"line":72,"column":4,"offset":1941},"end":{"line":72,"column":12,"offset":1949}}}],"position":{"start":{"line":72,"column":4,"offset":1941},"end":{"line":72,"column":12,"offset":1949}}},"children":"NSLock"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSRecursiveLock","position":{"start":{"line":72,"column":14,"offset":1951},"end":{"line":72,"column":31,"offset":1968}}}],"position":{"start":{"line":72,"column":14,"offset":1951},"end":{"line":72,"column":31,"offset":1968}}},"children":"NSRecursiveLock"}}],"의 차이점과 사용 예시를 살펴봤습니다. 그렇다면 언제 각각을 사용하는 것이 최선일까요?"]}],"\n",["$","h3",null,{"id":"da39a3ee","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLock","position":{"start":{"line":74,"column":5,"offset":2022},"end":{"line":74,"column":13,"offset":2030}}}],"position":{"start":{"line":74,"column":5,"offset":2022},"end":{"line":74,"column":13,"offset":2030}}},"children":"NSLock"}}]," 사용 시기"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLock","position":{"start":{"line":76,"column":1,"offset":2038},"end":{"line":76,"column":9,"offset":2046}}}],"position":{"start":{"line":76,"column":1,"offset":2038},"end":{"line":76,"column":9,"offset":2046}}},"children":"NSLock"}}],"을 사용하는 것이 더 적합한 경우는 다음과 같습니다:"]}],"\n",["$","ul","ul-2",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"성능이 중요한 경우"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLock","position":{"start":{"line":78,"column":19,"offset":2095},"end":{"line":78,"column":27,"offset":2103}}}],"position":{"start":{"line":78,"column":19,"offset":2095},"end":{"line":78,"column":27,"offset":2103}}},"children":"NSLock"}}],"은 락의 오버헤드가 적으므로, 성능이 중요한 상황에서 유리합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"비재귀적 코드"}],": 동일 스레드에서 중복 잠금이 발생하지 않는 경우에 적합합니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"da39a3ee","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSRecursiveLock","position":{"start":{"line":81,"column":5,"offset":2195},"end":{"line":81,"column":22,"offset":2212}}}],"position":{"start":{"line":81,"column":5,"offset":2195},"end":{"line":81,"column":22,"offset":2212}}},"children":"NSRecursiveLock"}}]," 사용 시기"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSRecursiveLock","position":{"start":{"line":83,"column":1,"offset":2220},"end":{"line":83,"column":18,"offset":2237}}}],"position":{"start":{"line":83,"column":1,"offset":2220},"end":{"line":83,"column":18,"offset":2237}}},"children":"NSRecursiveLock"}}],"을 사용하는 것이 더 적합한 경우는 다음과 같습니다:"]}],"\n",["$","ul","ul-3",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"재귀적 알고리즘"}],": 재귀적 함수나 알고리즘을 구현할 때 유리합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"복잡한 코드"}],": 동일 스레드에서 중복 잠금이 발생할 수 있는 복잡한 시나리오에서 적합합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서 동시성 문제를 해결하는 대표적인 방법인 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLock","position":{"start":{"line":90,"column":31,"offset":2406},"end":{"line":90,"column":39,"offset":2414}}}],"position":{"start":{"line":90,"column":31,"offset":2406},"end":{"line":90,"column":39,"offset":2414}}},"children":"NSLock"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSRecursiveLock","position":{"start":{"line":90,"column":41,"offset":2416},"end":{"line":90,"column":58,"offset":2433}}}],"position":{"start":{"line":90,"column":41,"offset":2416},"end":{"line":90,"column":58,"offset":2433}}},"children":"NSRecursiveLock"}}],"에 대해 살펴봤습니다. 각각의 특성과 사용 사례를 이해함으로써, 상황에 맞는 최적의 락을 선택하여 안정적이고 효율적인 코드를 작성할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSLock","position":{"start":{"line":90,"column":140,"offset":2515},"end":{"line":90,"column":148,"offset":2523}}}],"position":{"start":{"line":90,"column":140,"offset":2515},"end":{"line":90,"column":148,"offset":2523}}},"children":"NSLock"}}],"은 비재귀적 상황에서 고성능을 제공하며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSRecursiveLock","position":{"start":{"line":90,"column":171,"offset":2546},"end":{"line":90,"column":188,"offset":2563}}}],"position":{"start":{"line":90,"column":171,"offset":2546},"end":{"line":90,"column":188,"offset":2563}}},"children":"NSRecursiveLock"}}],"은 재귀적 알고리즘에서 코드의 간결함과 안정성을 제공합니다. 각자 상황에 맞는 락을 잘 선택하고 활용하는 것이 중요합니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"NSLock vs NSRecursiveLock: 언제, 어떻게 사용하는 것이 최선인가?","toc":[{"tagName":"h1","title":"NSLock vs NSRecursiveLock: 언제, 어떻게 사용하는 것이 최선인가?","id":"4ef72f35"},{"tagName":"h2","title":"NSLock","id":"65c04f1f"},{"tagName":"h3","title":"사용 예시","id":"ae2bbb1c"},{"tagName":"h2","title":"NSRecursiveLock","id":"17792ca0"},{"tagName":"h3","title":"주요 특징","id":"f8cad7b0"},{"tagName":"h3","title":"사용 예시","id":"ae2bbb1c"},{"tagName":"h2","title":"언제, 어떻게 사용할 것인가?","id":"1fddc1b5"},{"tagName":"h3","title":"$undefined","id":""},{"tagName":"h3","title":"$undefined","id":""},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
