1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","Nextjs-Incremental-Static-RegenerationISR-%ED%99%9C%EC%9A%A9%EB%B2%95-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94-470f6c01","d"],{"children":["__PAGE__?{\"slug\":\"Nextjs-Incremental-Static-RegenerationISR-활용법-성능-최적화-470f6c01\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","Nextjs-Incremental-Static-RegenerationISR-%ED%99%9C%EC%9A%A9%EB%B2%95-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94-470f6c01","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Nextjs-Incremental-Static-RegenerationISR-활용법-성능-최적화-470f6c01\"}"},"styles":[]}],"segment":["slug","Nextjs-Incremental-Static-RegenerationISR-%ED%99%9C%EC%9A%A9%EB%B2%95-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94-470f6c01","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Next.js Incremental Static Regeneration(ISR) 활용법: 성능 최적화 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Next.js의 Incremental Static Regeneration(ISR)을 활용하여 성능을 최적화하는 방법에 대해 알아봅니다. ISR을 이용하면 정적 생성의 장점을 유지하면서도 데이터를 실시간으로 업데이트할 수 있어 효율적입니다."}],["$","meta","3",{"name":"keywords","content":"Next.js,ISR,JavaScript,성능 최적화"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/Nextjs-Incremental-Static-RegenerationISR-%ED%99%9C%EC%9A%A9%EB%B2%95-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94-470f6c01"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Next.js Incremental Static Regeneration(ISR) 활용법: 성능 최적화 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Next.js Incremental Static Regeneration(ISR) 활용법: 성능 최적화 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Next.js의 Incremental Static Regeneration(ISR)을 활용하여 성능을 최적화하는 방법에 대해 알아봅니다. ISR을 이용하면 정적 생성의 장점을 유지하면서도 데이터를 실시간으로 업데이트할 수 있어 효율적입니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/Nextjs-Incremental-Static-RegenerationISR-%ED%99%9C%EC%9A%A9%EB%B2%95-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94-470f6c01"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Next.js Incremental Static Regeneration(ISR) 활용법: 성능 최적화 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Next.js의 Incremental Static Regeneration(ISR)을 활용하여 성능을 최적화하는 방법에 대해 알아봅니다. ISR을 이용하면 정적 생성의 장점을 유지하면서도 데이터를 실시간으로 업데이트할 수 있어 효율적입니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Next.js Incremental Static Regeneration(ISR) 활용법: 성능 최적화"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Next.js Incremental Static Regeneration(ISR) 활용법: 성능 최적화"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-25"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"fdfcd329","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Next.js Incremental Static Regeneration(ISR) 활용법: 성능 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Next.js는 프론트엔드 개발자들 사이에서 널리 사용되는 React 프레임워크로, 정적 사이트 생성(SSG)과 서버 사이드 렌더링(SSR) 기능을 모두 지원합니다. 이 중 Incremental Static Regeneration(ISR)은 Next.js 9.5 이후로 도입된 기능으로, 정적 생성의 장점을 유지하면서도 페이지를 실시간으로 업데이트할 수 있는 강력한 도구입니다. 이 글에서는 ISR을 활용하여 어떻게 성능을 최적화할 수 있는지 자세히 알아보겠습니다."}],"\n",["$","h2",null,{"id":"b688103d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Incremental Static Regeneration(ISR)이란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"ISR은 정적 사이트 생성(SSG)의 단점을 보완하기 위해 도입되었습니다. SSG는 빌드 시점에 모든 페이지를 생성하여 빠른 로딩 속도를 제공하지만, 데이터가 변경될 때마다 전체 사이트를 다시 빌드해야 하는 불편함이 있습니다. ISR은 이러한 문제를 해결하기 위해 페이지를 처음 요청할 때마다 네트워크 요청 없이도 최신 데이터를 제공할 수 있도록 합니다."}],"\n",["$","h3",null,{"id":"fcbf2f4f","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"ISR의 작동 방식"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["ISR은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticProps","position":{"start":{"line":12,"column":6,"offset":588},"end":{"line":12,"column":22,"offset":604}}}],"position":{"start":{"line":12,"column":6,"offset":588},"end":{"line":12,"column":22,"offset":604}}},"children":"getStaticProps"}}]," 함수와 함께 사용됩니다. 페이지가 처음 요청될 때, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticProps","position":{"start":{"line":12,"column":52,"offset":634},"end":{"line":12,"column":68,"offset":650}}}],"position":{"start":{"line":12,"column":52,"offset":634},"end":{"line":12,"column":68,"offset":650}}},"children":"getStaticProps"}}]," 함수가 실행되고 이후 다시 요청될 때까지 해당 페이지는 캐시에 보관됩니다. 지정된 시간(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"revalidate","position":{"start":{"line":12,"column":118,"offset":700},"end":{"line":12,"column":130,"offset":712}}}],"position":{"start":{"line":12,"column":118,"offset":700},"end":{"line":12,"column":130,"offset":712}}},"children":"revalidate"}}]," 옵션) 이후에는 페이지를 다시 생성하여 최신 데이터를 제공할 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"export async function getStaticProps() {\n  const data = await fetchData();\n\n  return {\n    props: { data },\n    revalidate: 60, // 1분마다 페이지 재생성\n  };\n}\n"}],"position":{"start":{"line":14,"column":1,"offset":756},"end":{"line":23,"column":4,"offset":924}}},"children":"export async function getStaticProps() {\n  const data = await fetchData();\n\n  return {\n    props: { data },\n    revalidate: 60, // 1분마다 페이지 재생성\n  };\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getStaticProps","position":{"start":{"line":25,"column":9,"offset":934},"end":{"line":25,"column":25,"offset":950}}}],"position":{"start":{"line":25,"column":9,"offset":934},"end":{"line":25,"column":25,"offset":950}}},"children":"getStaticProps"}}]," 함수가 데이터를 받아와서 페이지에 전달하며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"revalidate","position":{"start":{"line":25,"column":51,"offset":976},"end":{"line":25,"column":63,"offset":988}}}],"position":{"start":{"line":25,"column":51,"offset":976},"end":{"line":25,"column":63,"offset":988}}},"children":"revalidate"}}]," 옵션을 통해 페이지가 60초마다 재생성되도록 설정하였습니다."]}],"\n",["$","h2",null,{"id":"6df77c80","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"ISR을 활용한 성능 최적화 방법"}],"\n",["$","h3",null,{"id":"4c543c05","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. 데이터 업데이트 주기 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["ISR의 가장 큰 장점은 데이터가 빈번하게 변경되지 않는 경우에도 최신 데이터를 사용할 수 있다는 것입니다. 따라서 Ajax 호출을 줄이고 서버 부하를 줄일 수 있습니다. 데이터가 자주 변경되지 않는다면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"revalidate","position":{"start":{"line":31,"column":115,"offset":1185},"end":{"line":31,"column":127,"offset":1197}}}],"position":{"start":{"line":31,"column":115,"offset":1185},"end":{"line":31,"column":127,"offset":1197}}},"children":"revalidate"}}]," 시간을 늘리고, 자주 변경된다면 줄이는 것이 좋습니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"export async function getStaticProps() {\n  const data = await fetchData();\n\n  return {\n    props: { data },\n    revalidate: 600, // 10분마다 페이지 재생성\n  };\n}\n"}],"position":{"start":{"line":33,"column":1,"offset":1230},"end":{"line":42,"column":4,"offset":1400}}},"children":"export async function getStaticProps() {\n  const data = await fetchData();\n\n  return {\n    props: { data },\n    revalidate: 600, // 10분마다 페이지 재생성\n  };\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"revalidate","position":{"start":{"line":44,"column":9,"offset":1410},"end":{"line":44,"column":21,"offset":1422}}}],"position":{"start":{"line":44,"column":9,"offset":1410},"end":{"line":44,"column":21,"offset":1422}}},"children":"revalidate"}}]," 시간을 10분으로 설정하여 서버 요청을 줄입니다."]}],"\n",["$","h3",null,{"id":"4d15ab81","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. API 호출 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SSR을 사용하면 페이지 요청마다 API 호출이 발생합니다. 그러나 ISR을 사용하면 정적 페이지가 캐시에 저장되므로 API 호출 빈도를 줄일 수 있습니다. 이는 서버와 클라이언트 모두의 성능을 향상시킵니다."}],"\n",["$","h3",null,{"id":"78d27cbd","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 사용자 경험 개선"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"ISR을 활용하면 사용자에게 더 빠른 페이지 로딩 속도를 제공할 수 있습니다. 이는 검색 엔진 최적화(SEO)에도 긍정적인 영향을 미칩니다. 초기 로드 속도가 빠르면 사용자 이탈률도 줄어듭니다."}],"\n",["$","h3",null,{"id":"a5e61d54","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"4. 서버 부하 감소"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"전체 사이트를 다시 빌드하지 않아도 되므로 서버 부하가 줄어듭니다. 이는 특히 대규모 애플리케이션에서 중요한 요소입니다. 동시에, 서버 리소스를 효율적으로 사용하여 더 많은 사용자를 처리할 수 있습니다."}],"\n",["$","h2",null,{"id":"72218fe5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"ISR의 한계와 고려사항"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"ISR은 매우 유용한 기능이지만, 모든 상황에 적합한 것은 아닙니다. 실시간 데이터가 필요한 경우나 데이터가 자주 변경되는 경우에는 다른 접근 방식이 필요할 수 있습니다. 또한 ISR을 사용하려면 CDN을 잘 활용해야 하며, 캐시 전략을 신중하게 설정해야 합니다."}],"\n",["$","h3",null,{"id":"ebb65ffb","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"ISR 사용 시 주의할 점"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"잠재적 지연"}],": 데이터가 업데이트되기 전에 사용자가 오래된 데이터를 볼 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"재빌드 비용"}],": 재빌드가 필요한 페이지가 많아지면, 이에 따른 리소스 소모가 커질 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"캐시 관리"}],": 캐시된 페이지가 많아지면 관리가 복잡해질 수 있습니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Incremental Static Regeneration(ISR)은 Next.js에서 제공하는 강력한 기능으로, 정적 사이트 생성과 서버 사이드 렌더링의 장점을 결합한 방식입니다. 이를 효과적으로 활용하면 성능을 크게 향상시키고, 사용자 경험을 개선할 수 있습니다. 하지만 모든 상황에 적합하지 않으므로 적절한 경우에만 사용하는 것이 좋습니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"ISR을 잘 활용하여 더 나은 웹 애플리케이션을 개발해 보세요!"}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Next.js Incremental Static Regeneration(ISR) 활용법: 성능 최적화","toc":[{"tagName":"h1","title":"Next.js Incremental Static Regeneration(ISR) 활용법: 성능 최적화","id":"fdfcd329"},{"tagName":"h2","title":"Incremental Static Regeneration(ISR)이란?","id":"b688103d"},{"tagName":"h3","title":"ISR의 작동 방식","id":"fcbf2f4f"},{"tagName":"h2","title":"ISR을 활용한 성능 최적화 방법","id":"6df77c80"},{"tagName":"h3","title":"1. 데이터 업데이트 주기 최적화","id":"4c543c05"},{"tagName":"h3","title":"2. API 호출 최적화","id":"4d15ab81"},{"tagName":"h3","title":"3. 사용자 경험 개선","id":"78d27cbd"},{"tagName":"h3","title":"4. 서버 부하 감소","id":"a5e61d54"},{"tagName":"h2","title":"ISR의 한계와 고려사항","id":"72218fe5"},{"tagName":"h3","title":"ISR 사용 시 주의할 점","id":"ebb65ffb"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
