1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","UIKit%EC%9D%98-Custom-Transition-%EB%A7%9E%EC%B6%A4%ED%98%95-%ED%99%94%EB%A9%B4-%EC%A0%84%ED%99%98-%ED%9A%A8%EA%B3%BC-e473e007","d"],{"children":["__PAGE__?{\"slug\":\"UIKit의-Custom-Transition-맞춤형-화면-전환-효과-e473e007\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","UIKit%EC%9D%98-Custom-Transition-%EB%A7%9E%EC%B6%A4%ED%98%95-%ED%99%94%EB%A9%B4-%EC%A0%84%ED%99%98-%ED%9A%A8%EA%B3%BC-e473e007","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"UIKit의-Custom-Transition-맞춤형-화면-전환-효과-e473e007\"}"},"styles":[]}],"segment":["slug","UIKit%EC%9D%98-Custom-Transition-%EB%A7%9E%EC%B6%A4%ED%98%95-%ED%99%94%EB%A9%B4-%EC%A0%84%ED%99%98-%ED%9A%A8%EA%B3%BC-e473e007","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"UIKit의 Custom Transition: 맞춤형 화면 전환 효과 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 Swift의 UIKit을 이용해 커스텀 화면 전환 효과를 구현하는 방법에 대해 설명합니다. 기본적인 개념, 필요한 클래스 및 프로토콜, 예제 코드 등을 포함하여 깊이 있게 다룰 것입니다."}],["$","meta","3",{"name":"keywords","content":"Swift,UIKit,커스텀 트랜지션,iOS 개발"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/UIKit%EC%9D%98-Custom-Transition-%EB%A7%9E%EC%B6%A4%ED%98%95-%ED%99%94%EB%A9%B4-%EC%A0%84%ED%99%98-%ED%9A%A8%EA%B3%BC-e473e007"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"UIKit의 Custom Transition: 맞춤형 화면 전환 효과 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"UIKit의 Custom Transition: 맞춤형 화면 전환 효과 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 Swift의 UIKit을 이용해 커스텀 화면 전환 효과를 구현하는 방법에 대해 설명합니다. 기본적인 개념, 필요한 클래스 및 프로토콜, 예제 코드 등을 포함하여 깊이 있게 다룰 것입니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/UIKit%EC%9D%98-Custom-Transition-%EB%A7%9E%EC%B6%A4%ED%98%95-%ED%99%94%EB%A9%B4-%EC%A0%84%ED%99%98-%ED%9A%A8%EA%B3%BC-e473e007"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"UIKit의 Custom Transition: 맞춤형 화면 전환 효과 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 Swift의 UIKit을 이용해 커스텀 화면 전환 효과를 구현하는 방법에 대해 설명합니다. 기본적인 개념, 필요한 클래스 및 프로토콜, 예제 코드 등을 포함하여 깊이 있게 다룰 것입니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner5.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"UIKit의 Custom Transition: 맞춤형 화면 전환 효과"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"UIKit의 Custom Transition: 맞춤형 화면 전환 효과"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-21"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"b9ebec85","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"UIKit의 Custom Transition: 맞춤형 화면 전환 효과"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"UIKit을 이용한 iOS 개발에서는 기본적으로 제공되는 여러 화면 전환 효과가 있지만, 경우에 따라 좀 더 맞춤화된 특별한 효과를 원할 때가 있습니다. 이 글에서는 Swift와 UIKit을 활용해 커스텀 화면 전환 효과를 구현하는 방법을 자세히 설명하겠습니다."}],"\n",["$","h2",null,{"id":"598f6048","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"기본 개념 이해하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["UIKit에서 화면 전환(transition)을 커스터마이징 하기 위해서는 몇 가지 주요 개념과 객체를 이해해야 합니다. 여기서 중요한 클래스와 프로토콜은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewControllerAnimatedTransitioning","position":{"start":{"line":8,"column":88,"offset":293},"end":{"line":8,"column":127,"offset":332}}}],"position":{"start":{"line":8,"column":88,"offset":293},"end":{"line":8,"column":127,"offset":332}}},"children":"UIViewControllerAnimatedTransitioning"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewControllerTransitioningDelegate","position":{"start":{"line":8,"column":129,"offset":334},"end":{"line":8,"column":168,"offset":373}}}],"position":{"start":{"line":8,"column":129,"offset":334},"end":{"line":8,"column":168,"offset":373}}},"children":"UIViewControllerTransitioningDelegate"}}],", 그리고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewControllerContextTransitioning","position":{"start":{"line":8,"column":174,"offset":379},"end":{"line":8,"column":212,"offset":417}}}],"position":{"start":{"line":8,"column":174,"offset":379},"end":{"line":8,"column":212,"offset":417}}},"children":"UIViewControllerContextTransitioning"}}]," 입니다."]}],"\n",["$","h3",null,{"id":"da39a3ee","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewControllerAnimatedTransitioning","position":{"start":{"line":10,"column":5,"offset":428},"end":{"line":10,"column":44,"offset":467}}}],"position":{"start":{"line":10,"column":5,"offset":428},"end":{"line":10,"column":44,"offset":467}}},"children":"UIViewControllerAnimatedTransitioning"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 프로토콜은 커스텀 애니메이션 객체를 정의할 때 사용됩니다. 화면 전환에 필요한 애니메이션의 구현체를 만들기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"animateTransition(using:)","position":{"start":{"line":12,"column":66,"offset":534},"end":{"line":12,"column":93,"offset":561}}}],"position":{"start":{"line":12,"column":66,"offset":534},"end":{"line":12,"column":93,"offset":561}}},"children":"animateTransition(using:)"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"transitionDuration(using:)","position":{"start":{"line":12,"column":95,"offset":563},"end":{"line":12,"column":123,"offset":591}}}],"position":{"start":{"line":12,"column":95,"offset":563},"end":{"line":12,"column":123,"offset":591}}},"children":"transitionDuration(using:)"}}]," 메소드를 필수적으로 구현해야 합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class CustomAnimator: NSObject, UIViewControllerAnimatedTransitioning {\n    func transitionDuration(using transitionContext: UIViewControllerContextTransitioning?) -> TimeInterval {\n        return 0.5 // 애니메이션의 지속 시간\n    }\n\n    func animateTransition(using transitionContext: UIViewControllerContextTransitioning) {\n        // 애니메이션 코드 구현\n    }\n}\n"}],"position":{"start":{"line":14,"column":1,"offset":614},"end":{"line":24,"column":4,"offset":973}}},"children":"class CustomAnimator: NSObject, UIViewControllerAnimatedTransitioning {\n    func transitionDuration(using transitionContext: UIViewControllerContextTransitioning?) -> TimeInterval {\n        return 0.5 // 애니메이션의 지속 시간\n    }\n\n    func animateTransition(using transitionContext: UIViewControllerContextTransitioning) {\n        // 애니메이션 코드 구현\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"da39a3ee","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewControllerTransitioningDelegate","position":{"start":{"line":26,"column":5,"offset":979},"end":{"line":26,"column":44,"offset":1018}}}],"position":{"start":{"line":26,"column":5,"offset":979},"end":{"line":26,"column":44,"offset":1018}}},"children":"UIViewControllerTransitioningDelegate"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 프로토콜은 화면 전환 관리자로서, 커스텀 전환을 시작하기 위해 필요합니다. 다양한 전환 방식 (예: 프레젠테이션, 해제 등)에 따라 다른 애니메이터 객체를 반환하는 메소드를 포함하고 있습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class CustomTransitioningDelegate: NSObject, UIViewControllerTransitioningDelegate {\n    func animationController(forPresented presented: UIViewController, presenting: UIViewController, source: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        return CustomAnimator()\n    }\n\n    func animationController(forDismissed dismissed: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        return CustomAnimator()\n    }\n}\n"}],"position":{"start":{"line":30,"column":1,"offset":1131},"end":{"line":40,"column":4,"offset":1593}}},"children":"class CustomTransitioningDelegate: NSObject, UIViewControllerTransitioningDelegate {\n    func animationController(forPresented presented: UIViewController, presenting: UIViewController, source: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        return CustomAnimator()\n    }\n\n    func animationController(forDismissed dismissed: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        return CustomAnimator()\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"da39a3ee","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewControllerContextTransitioning","position":{"start":{"line":42,"column":5,"offset":1599},"end":{"line":42,"column":43,"offset":1637}}}],"position":{"start":{"line":42,"column":5,"offset":1599},"end":{"line":42,"column":43,"offset":1637}}},"children":"UIViewControllerContextTransitioning"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 객체는 화면 전환 중 컨텍스트 정보를 제공합니다. 전환 중에 포함될 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fromView","position":{"start":{"line":44,"column":41,"offset":1679},"end":{"line":44,"column":51,"offset":1689}}}],"position":{"start":{"line":44,"column":41,"offset":1679},"end":{"line":44,"column":51,"offset":1689}}},"children":"fromView"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toView","position":{"start":{"line":44,"column":53,"offset":1691},"end":{"line":44,"column":61,"offset":1699}}}],"position":{"start":{"line":44,"column":53,"offset":1691},"end":{"line":44,"column":61,"offset":1699}}},"children":"toView"}}]," 등을 관리하며 애니메이션의 시작과 끝을 처리합니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func animateTransition(using transitionContext: UIViewControllerContextTransitioning) {\n    guard let fromView = transitionContext.view(forKey: .from),\n          let toView = transitionContext.view(forKey: .to) else { return }\n\n    let containerView = transitionContext.containerView\n    containerView.addSubview(toView)\n\n    // 초기 상태 설정\n    toView.alpha = 0\n\n    // 애니메이션 처리\n    UIView.animate(withDuration: transitionDuration(using: transitionContext), animations: {\n        toView.alpha = 1\n    }, completion: { finished in\n        transitionContext.completeTransition(finished)\n    })\n}\n"}],"position":{"start":{"line":46,"column":1,"offset":1730},"end":{"line":64,"column":4,"offset":2333}}},"children":"func animateTransition(using transitionContext: UIViewControllerContextTransitioning) {\n    guard let fromView = transitionContext.view(forKey: .from),\n          let toView = transitionContext.view(forKey: .to) else { return }\n\n    let containerView = transitionContext.containerView\n    containerView.addSubview(toView)\n\n    // 초기 상태 설정\n    toView.alpha = 0\n\n    // 애니메이션 처리\n    UIView.animate(withDuration: transitionDuration(using: transitionContext), animations: {\n        toView.alpha = 1\n    }, completion: { finished in\n        transitionContext.completeTransition(finished)\n    })\n}\n"}}]}],"\n",["$","h2",null,{"id":"aa530ee0","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"실전 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 위 개념들을 이용해 실제 커스텀 화면 전환을 구현해보겠습니다. 간단한 페이드 인/아웃 효과를 예제로 사용할 것입니다."}],"\n",["$","h3",null,{"id":"d9910a37","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"1. Animator 클래스 정의"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewControllerAnimatedTransitioning","position":{"start":{"line":72,"column":4,"offset":2442},"end":{"line":72,"column":43,"offset":2481}}}],"position":{"start":{"line":72,"column":4,"offset":2442},"end":{"line":72,"column":43,"offset":2481}}},"children":"UIViewControllerAnimatedTransitioning"}}]," 프로토콜을 구현한 애니메이터 클래스를 만듭니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class FadeAnimator: NSObject, UIViewControllerAnimatedTransitioning {\n    func transitionDuration(using transitionContext: UIViewControllerContextTransitioning?) -> TimeInterval {\n        return 0.5\n    }\n\n    func animateTransition(using transitionContext: UIViewControllerContextTransitioning) {\n        guard let fromView = transitionContext.view(forKey: .from),\n              let toView = transitionContext.view(forKey: .to) else { return }\n\n        let containerView = transitionContext.containerView\n        containerView.addSubview(toView)\n\n        toView.alpha = 0\n\n        UIView.animate(withDuration: transitionDuration(using: transitionContext), animations: {\n            toView.alpha = 1\n        }, completion: { finished in\n            fromView.removeFromSuperview()\n            transitionContext.completeTransition(finished)\n        })\n    }\n}\n"}],"position":{"start":{"line":74,"column":1,"offset":2510},"end":{"line":97,"column":4,"offset":3380}}},"children":"class FadeAnimator: NSObject, UIViewControllerAnimatedTransitioning {\n    func transitionDuration(using transitionContext: UIViewControllerContextTransitioning?) -> TimeInterval {\n        return 0.5\n    }\n\n    func animateTransition(using transitionContext: UIViewControllerContextTransitioning) {\n        guard let fromView = transitionContext.view(forKey: .from),\n              let toView = transitionContext.view(forKey: .to) else { return }\n\n        let containerView = transitionContext.containerView\n        containerView.addSubview(toView)\n\n        toView.alpha = 0\n\n        UIView.animate(withDuration: transitionDuration(using: transitionContext), animations: {\n            toView.alpha = 1\n        }, completion: { finished in\n            fromView.removeFromSuperview()\n            transitionContext.completeTransition(finished)\n        })\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"173ea3b2","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"2. TransitioningDelegate 클래스 정의"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 애니메이션을 적용할 뷰 컨트롤러에 해당 델리게이트를 설정합니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class FadeTransitioningDelegate: NSObject, UIViewControllerTransitioningDelegate {\n    func animationController(forPresented presented: UIViewController, presenting: UIViewController, source: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        return FadeAnimator()\n    }\n\n    func animationController(forDismissed dismissed: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        return FadeAnimator()\n    }\n}\n"}],"position":{"start":{"line":103,"column":1,"offset":3459},"end":{"line":113,"column":4,"offset":3915}}},"children":"class FadeTransitioningDelegate: NSObject, UIViewControllerTransitioningDelegate {\n    func animationController(forPresented presented: UIViewController, presenting: UIViewController, source: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        return FadeAnimator()\n    }\n\n    func animationController(forDismissed dismissed: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        return FadeAnimator()\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"a5de34b7","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"3. 뷰 컨트롤러 설정"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"마지막으로, 뷰 컨트롤러에서 해당 델리게이트를 설정하고 화면 전환을 수행합니다."}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class ViewController: UIViewController {\n    let transitioningDelegate = FadeTransitioningDelegate()\n\n    func presentNewViewController() {\n        let newViewController = UIViewController()\n        newViewController.modalPresentationStyle = .fullScreen\n        newViewController.transitioningDelegate = transitioningDelegate\n        present(newViewController, animated: true, completion: nil)\n    }\n}\n"}],"position":{"start":{"line":119,"column":1,"offset":3981},"end":{"line":130,"column":4,"offset":4395}}},"children":"class ViewController: UIViewController {\n    let transitioningDelegate = FadeTransitioningDelegate()\n\n    func presentNewViewController() {\n        let newViewController = UIViewController()\n        newViewController.modalPresentationStyle = .fullScreen\n        newViewController.transitioningDelegate = transitioningDelegate\n        present(newViewController, animated: true, completion: nil)\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기까지 UIKit과 Swift를 이용해 커스텀 화면 전환 효과를 구현하는 방법을 살펴보았습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewControllerAnimatedTransitioning","position":{"start":{"line":134,"column":56,"offset":4459},"end":{"line":134,"column":95,"offset":4498}}}],"position":{"start":{"line":134,"column":56,"offset":4459},"end":{"line":134,"column":95,"offset":4498}}},"children":"UIViewControllerAnimatedTransitioning"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewControllerTransitioningDelegate","position":{"start":{"line":134,"column":97,"offset":4500},"end":{"line":134,"column":136,"offset":4539}}}],"position":{"start":{"line":134,"column":97,"offset":4500},"end":{"line":134,"column":136,"offset":4539}}},"children":"UIViewControllerTransitioningDelegate"}}],", 그리고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewControllerContextTransitioning","position":{"start":{"line":134,"column":142,"offset":4545},"end":{"line":134,"column":180,"offset":4583}}}],"position":{"start":{"line":134,"column":142,"offset":4545},"end":{"line":134,"column":180,"offset":4583}}},"children":"UIViewControllerContextTransitioning"}}],"의 역할과 구현 방법을 잘 이해하면 다양한 맞춤형 전환 효과를 만들어낼 수 있습니다. 화면 전환을 커스터마이징하여 사용자 경험을 더욱 풍부하게 만들 수 있는 기회를 놓치지 마세요."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"UIKit의 Custom Transition: 맞춤형 화면 전환 효과","toc":[{"tagName":"h1","title":"UIKit의 Custom Transition: 맞춤형 화면 전환 효과","id":"b9ebec85"},{"tagName":"h2","title":"기본 개념 이해하기","id":"598f6048"},{"tagName":"h3","title":"$undefined","id":""},{"tagName":"h3","title":"$undefined","id":""},{"tagName":"h3","title":"$undefined","id":""},{"tagName":"h2","title":"실전 예제","id":"aa530ee0"},{"tagName":"h3","title":"1. Animator 클래스 정의","id":"d9910a37"},{"tagName":"h3","title":"2. TransitioningDelegate 클래스 정의","id":"173ea3b2"},{"tagName":"h3","title":"3. 뷰 컨트롤러 설정","id":"a5de34b7"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
