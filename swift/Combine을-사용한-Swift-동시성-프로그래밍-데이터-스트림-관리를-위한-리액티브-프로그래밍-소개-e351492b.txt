1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Combine%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-Swift-%EB%8F%99%EC%8B%9C%EC%84%B1-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%8A%A4%ED%8A%B8%EB%A6%BC-%EA%B4%80%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%86%8C%EA%B0%9C-e351492b","d"],{"children":["__PAGE__?{\"slug\":\"Combine을-사용한-Swift-동시성-프로그래밍-데이터-스트림-관리를-위한-리액티브-프로그래밍-소개-e351492b\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Combine%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-Swift-%EB%8F%99%EC%8B%9C%EC%84%B1-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%8A%A4%ED%8A%B8%EB%A6%BC-%EA%B4%80%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%86%8C%EA%B0%9C-e351492b","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Combine을-사용한-Swift-동시성-프로그래밍-데이터-스트림-관리를-위한-리액티브-프로그래밍-소개-e351492b\"}"},"styles":[]}],"segment":["slug","Combine%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-Swift-%EB%8F%99%EC%8B%9C%EC%84%B1-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%8A%A4%ED%8A%B8%EB%A6%BC-%EA%B4%80%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%86%8C%EA%B0%9C-e351492b","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Combine을 사용한 Swift 동시성 프로그래밍: 데이터 스트림 관리를 위한 리액티브 프로그래밍 소개. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 Swift의 `Combine` 프레임워크를 사용한 동시성 프로그래밍과 데이터 스트림 관리를 다룹니다. 리액티브 프로그래밍 개념부터 `Combine`을 활용한 실제 구현 방법까지 자세히 설명합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,Combine,동시성 프로그래밍,리액티브 프로그래밍"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Combine%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-Swift-%EB%8F%99%EC%8B%9C%EC%84%B1-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%8A%A4%ED%8A%B8%EB%A6%BC-%EA%B4%80%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%86%8C%EA%B0%9C-e351492b"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Combine을 사용한 Swift 동시성 프로그래밍: 데이터 스트림 관리를 위한 리액티브 프로그래밍 소개. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Combine을 사용한 Swift 동시성 프로그래밍: 데이터 스트림 관리를 위한 리액티브 프로그래밍 소개. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 Swift의 `Combine` 프레임워크를 사용한 동시성 프로그래밍과 데이터 스트림 관리를 다룹니다. 리액티브 프로그래밍 개념부터 `Combine`을 활용한 실제 구현 방법까지 자세히 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Combine%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-Swift-%EB%8F%99%EC%8B%9C%EC%84%B1-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%8A%A4%ED%8A%B8%EB%A6%BC-%EA%B4%80%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%86%8C%EA%B0%9C-e351492b"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Combine을 사용한 Swift 동시성 프로그래밍: 데이터 스트림 관리를 위한 리액티브 프로그래밍 소개. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 Swift의 `Combine` 프레임워크를 사용한 동시성 프로그래밍과 데이터 스트림 관리를 다룹니다. 리액티브 프로그래밍 개념부터 `Combine`을 활용한 실제 구현 방법까지 자세히 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Combine을 사용한 Swift 동시성 프로그래밍: 데이터 스트림 관리를 위한 리액티브 프로그래밍 소개."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Combine을 사용한 Swift 동시성 프로그래밍: 데이터 스트림 관리를 위한 리액티브 프로그래밍 소개."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-28"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"338fe0ef","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Combine을 사용한 Swift 동시성 프로그래밍: 데이터 스트림 관리를 위한 리액티브 프로그래밍 소개"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift는 Apple의 강력한 프로그래밍 언어로, iOS, macOS, watchOS, 그리고 tvOS 애플리케이션 개발에 널리 사용됩니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Combine","position":{"start":{"line":4,"column":81,"offset":143},"end":{"line":4,"column":90,"offset":152}}}],"position":{"start":{"line":4,"column":81,"offset":143},"end":{"line":4,"column":90,"offset":152}}},"children":"Combine"}}]," 프레임워크는 Swift의 방대한 기능을 한층 더 강화하여, 동시성 프로그래밍과 데이터 스트림 관리를 더욱 쉽게 할 수 있도록 도와줍니다. 이 글에서는 리액티브 프로그래밍의 기본 개념부터 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Combine","position":{"start":{"line":4,"column":195,"offset":257},"end":{"line":4,"column":204,"offset":266}}}],"position":{"start":{"line":4,"column":195,"offset":257},"end":{"line":4,"column":204,"offset":266}}},"children":"Combine"}}],"을 활용한 코드 예제까지 다양하게 다뤄보겠습니다."]}],"\n",["$","h2",null,{"id":"745ec1a9","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"리액티브 프로그래밍이란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"리액티브 프로그래밍은 데이터의 흐름을 중심으로 프로그래밍하는 패러다임입니다. 이는 '반응형'이라는 뜻으로, 데이터 소스의 변화에 따라 자동으로 처리 로직이 실행되는 것을 말합니다. 예를 들어, 사용자 인터페이스(UI) 컴포넌트가 데이터 소스의 변경을 감지하고 즉시 업데이트 되는 것이 이에 해당합니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"리액티브 프로그래밍의 주요 개념은 다음과 같습니다:"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"Observable"}],": 데이터 스트림을 나타내며, 여러 값들을 연속적으로 방출합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"Observer"}],": Observable에서 방출된 값을 구독(subscribe)하여 처리합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"Operator"}],": 데이터 스트림을 변환하거나 필터링하는데 사용됩니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"ec8c4609","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Combine 프레임워크 개요"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Combine","position":{"start":{"line":18,"column":1,"offset":692},"end":{"line":18,"column":10,"offset":701}}}],"position":{"start":{"line":18,"column":1,"offset":692},"end":{"line":18,"column":10,"offset":701}}},"children":"Combine"}}],"은 Apple이 iOS 13과 macOS Catalina에서 처음 도입한 프레임워크로, Swift 언어에서 리액티브 프로그래밍을 구현할 수 있게 해줍니다. Combine 프레임워크의 주요 구성 요소는 다음과 같습니다:"]}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"Publisher"}],": 데이터 스트림을 생성합니다. 예를 들어, 네트워크 요청의 결과 또는 사용자 인터페이스 이벤트가 될 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"Subscriber"}],": Publisher가 방출하는 값들을 받아 처리합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"Operator"}],": 데이터 스트림을 변환하거나 조작할 수 있는 메서드입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"map","position":{"start":{"line":22,"column":49,"offset":1000},"end":{"line":22,"column":54,"offset":1005}}}],"position":{"start":{"line":22,"column":49,"offset":1000},"end":{"line":22,"column":54,"offset":1005}}},"children":"map"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"filter","position":{"start":{"line":22,"column":56,"offset":1007},"end":{"line":22,"column":64,"offset":1015}}}],"position":{"start":{"line":22,"column":56,"offset":1007},"end":{"line":22,"column":64,"offset":1015}}},"children":"filter"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"reduce","position":{"start":{"line":22,"column":66,"offset":1017},"end":{"line":22,"column":74,"offset":1025}}}],"position":{"start":{"line":22,"column":66,"offset":1017},"end":{"line":22,"column":74,"offset":1025}}},"children":"reduce"}}]," 등이 포함됩니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"05b78378","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Combine 기본 사용법"}],"\n",["$","h3",null,{"id":"61d70d6e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Publisher"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Publisher는 데이터 스트림을 생성하는 역할을 합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Just","position":{"start":{"line":28,"column":35,"offset":1105},"end":{"line":28,"column":41,"offset":1111}}}],"position":{"start":{"line":28,"column":35,"offset":1105},"end":{"line":28,"column":41,"offset":1111}}},"children":"Just"}}],"와 같은 단순한 Publisher부터 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"URLSession","position":{"start":{"line":28,"column":62,"offset":1132},"end":{"line":28,"column":74,"offset":1144}}}],"position":{"start":{"line":28,"column":62,"offset":1132},"end":{"line":28,"column":74,"offset":1144}}},"children":"URLSession"}}],"과 같은 복잡한 네트워크 요청까지 다양합니다. 아래는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Just","position":{"start":{"line":28,"column":104,"offset":1174},"end":{"line":28,"column":110,"offset":1180}}}],"position":{"start":{"line":28,"column":104,"offset":1174},"end":{"line":28,"column":110,"offset":1180}}},"children":"Just"}}],"를 사용한 간단한 예제입니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Combine\n\nlet justPublisher = Just(\"Hello, Combine!\")\n"}],"position":{"start":{"line":30,"column":1,"offset":1198},"end":{"line":34,"column":4,"offset":1270}}},"children":"import Combine\n\nlet justPublisher = Just(\"Hello, Combine!\")\n"}}]}],"\n",["$","h3",null,{"id":"16b20e68","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Subscriber"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Subscriber는 Publisher가 방출하는 값을 구독합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sink {}","position":{"start":{"line":38,"column":39,"offset":1326},"end":{"line":38,"column":48,"offset":1335}}}],"position":{"start":{"line":38,"column":39,"offset":1326},"end":{"line":38,"column":48,"offset":1335}}},"children":"sink {}"}}]," 메서드를 사용하여 값을 받아 처리할 수 있습니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let subscription = justPublisher.sink { value in\n    print(value)\n}\n"}],"position":{"start":{"line":40,"column":1,"offset":1365},"end":{"line":44,"column":4,"offset":1445}}},"children":"let subscription = justPublisher.sink { value in\n    print(value)\n}\n"}}]}],"\n",["$","h3",null,{"id":"d0e687b0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Operator"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Operator를 사용하여 데이터 스트림을 변환할 수 있습니다. 예를 들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"map","position":{"start":{"line":48,"column":44,"offset":1504},"end":{"line":48,"column":49,"offset":1509}}}],"position":{"start":{"line":48,"column":44,"offset":1504},"end":{"line":48,"column":49,"offset":1509}}},"children":"map"}}]," 연산을 사용하여 방출된 값을 변경할 수 있습니다:"]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let mappedPublisher = justPublisher.map { $0.uppercased() }\nmappedPublisher.sink { value in\n    print(value)\n}\n"}],"position":{"start":{"line":50,"column":1,"offset":1539},"end":{"line":55,"column":4,"offset":1662}}},"children":"let mappedPublisher = justPublisher.map { $0.uppercased() }\nmappedPublisher.sink { value in\n    print(value)\n}\n"}}]}],"\n",["$","h2",null,{"id":"abd77079","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"실습: 네트워크 요청 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Combine을 사용하여 네트워크 요청을 리액티브하게 처리하는 방법을 살펴보겠습니다. 아래 예제는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"URLSession","position":{"start":{"line":59,"column":56,"offset":1738},"end":{"line":59,"column":68,"offset":1750}}}],"position":{"start":{"line":59,"column":56,"offset":1738},"end":{"line":59,"column":68,"offset":1750}}},"children":"URLSession"}}],"을 사용하여 JSON 데이터를 가져오는 코드입니다:"]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Combine\n\nstruct Post: Decodable {\n    let title: String\n}\n\nlet url = URL(string: \"https://jsonplaceholder.typicode.com/posts/1\")!\n\nlet cancellable = URLSession.shared.dataTaskPublisher(for: url)\n    .map { $0.data }\n    .decode(type: Post.self, decoder: JSONDecoder())\n    .sink(receiveCompletion: { completion in\n        switch completion {\n        case .finished:\n            print(\"Request completed\")\n        case .failure(let error):\n            print(\"Error: \\(error)\")\n        }\n    }, receiveValue: { post in\n        print(\"Post title: \\(post.title)\")\n    })\n"}],"position":{"start":{"line":61,"column":1,"offset":1780},"end":{"line":83,"column":4,"offset":2366}}},"children":"import Combine\n\nstruct Post: Decodable {\n    let title: String\n}\n\nlet url = URL(string: \"https://jsonplaceholder.typicode.com/posts/1\")!\n\nlet cancellable = URLSession.shared.dataTaskPublisher(for: url)\n    .map { $0.data }\n    .decode(type: Post.self, decoder: JSONDecoder())\n    .sink(receiveCompletion: { completion in\n        switch completion {\n        case .finished:\n            print(\"Request completed\")\n        case .failure(let error):\n            print(\"Error: \\(error)\")\n        }\n    }, receiveValue: { post in\n        print(\"Post title: \\(post.title)\")\n    })\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"dataTaskPublisher(for:)","position":{"start":{"line":85,"column":9,"offset":2376},"end":{"line":85,"column":34,"offset":2401}}}],"position":{"start":{"line":85,"column":9,"offset":2376},"end":{"line":85,"column":34,"offset":2401}}},"children":"dataTaskPublisher(for:)"}}]," 메서드를 사용하여 URL 요청의 결과를 Observable로 변환하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"map","position":{"start":{"line":85,"column":75,"offset":2442},"end":{"line":85,"column":80,"offset":2447}}}],"position":{"start":{"line":85,"column":75,"offset":2442},"end":{"line":85,"column":80,"offset":2447}}},"children":"map"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"decode","position":{"start":{"line":85,"column":82,"offset":2449},"end":{"line":85,"column":90,"offset":2457}}}],"position":{"start":{"line":85,"column":82,"offset":2449},"end":{"line":85,"column":90,"offset":2457}}},"children":"decode"}}]," 연산을 통해 데이터를 가공합니다. 마지막으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sink","position":{"start":{"line":85,"column":116,"offset":2483},"end":{"line":85,"column":122,"offset":2489}}}],"position":{"start":{"line":85,"column":116,"offset":2483},"end":{"line":85,"column":122,"offset":2489}}},"children":"sink"}}]," 메서드를 사용하여 결과를 구독하고, 성공 및 실패 시의 동작을 정의합니다."]}],"\n",["$","h2",null,{"id":"f98ba603","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Combine의 장점"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Combine을 사용하면 코드의 가독성을 크게 향상시킬 수 있습니다. 아래는 Combine을 사용하지 않는 경우와 사용하는 경우의 비교입니다:"}],"\n",["$","h3",null,{"id":"d8e8feff","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"기존 방식"}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"URLSession.shared.dataTask(with: url) { data, response, error in\n    if let data = data {\n        do {\n            let post = try JSONDecoder().decode(Post.self, from: data)\n            print(\"Post title: \\(post.title)\")\n        } catch {\n            print(\"Error decoding JSON: \\(error)\")\n        }\n    }\n}.resume()\n"}],"position":{"start":{"line":93,"column":1,"offset":2641},"end":{"line":104,"column":4,"offset":2970}}},"children":"URLSession.shared.dataTask(with: url) { data, response, error in\n    if let data = data {\n        do {\n            let post = try JSONDecoder().decode(Post.self, from: data)\n            print(\"Post title: \\(post.title)\")\n        } catch {\n            print(\"Error decoding JSON: \\(error)\")\n        }\n    }\n}.resume()\n"}}]}],"\n",["$","h3",null,{"id":"16766208","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Combine 방식"}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let cancellable = URLSession.shared.dataTaskPublisher(for: url)\n    .map { $0.data }\n    .decode(type: Post.self, decoder: JSONDecoder())\n    .sink(receiveCompletion: { completion in\n        switch completion {\n        case .finished:\n            print(\"Request completed\")\n        case .failure(let error):\n            print(\"Error: \\(error)\")\n        }\n    }, receiveValue: { post in\n        print(\"Post title: \\(post.title)\")\n    })\n"}],"position":{"start":{"line":108,"column":1,"offset":2988},"end":{"line":122,"column":4,"offset":3436}}},"children":"let cancellable = URLSession.shared.dataTaskPublisher(for: url)\n    .map { $0.data }\n    .decode(type: Post.self, decoder: JSONDecoder())\n    .sink(receiveCompletion: { completion in\n        switch completion {\n        case .finished:\n            print(\"Request completed\")\n        case .failure(let error):\n            print(\"Error: \\(error)\")\n        }\n    }, receiveValue: { post in\n        print(\"Post title: \\(post.title)\")\n    })\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Combine을 사용하면 네트워크 요청과 데이터 처리를 더욱 선언적으로 작성할 수 있어, 코드의 명확성과 유지보수성이 높아집니다."}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Combine 프레임워크는 Swift에서 리액티브 프로그래밍을 구현할 수 있는 강력한 도구입니다. Publisher, Subscriber, Operator를 사용하여 동시성 프로그래밍과 데이터 스트림 관리를 더욱 쉽게 할 수 있습니다. 네트워크 요청부터 사용자 인터페이스 이벤트 처리까지, 다양한 용도로 Combine을 활용할 수 있습니다. 이 글이 Combine을 사용한 프로젝트에 도움이 되었길 바랍니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Combine을 사용한 Swift 동시성 프로그래밍: 데이터 스트림 관리를 위한 리액티브 프로그래밍 소개.","toc":[{"tagName":"h1","title":"Combine을 사용한 Swift 동시성 프로그래밍: 데이터 스트림 관리를 위한 리액티브 프로그래밍 소개","id":"338fe0ef"},{"tagName":"h2","title":"리액티브 프로그래밍이란?","id":"745ec1a9"},{"tagName":"h2","title":"Combine 프레임워크 개요","id":"ec8c4609"},{"tagName":"h2","title":"Combine 기본 사용법","id":"05b78378"},{"tagName":"h3","title":"Publisher","id":"61d70d6e"},{"tagName":"h3","title":"Subscriber","id":"16b20e68"},{"tagName":"h3","title":"Operator","id":"d0e687b0"},{"tagName":"h2","title":"실습: 네트워크 요청 처리","id":"abd77079"},{"tagName":"h2","title":"Combine의 장점","id":"f98ba603"},{"tagName":"h3","title":"기존 방식","id":"d8e8feff"},{"tagName":"h3","title":"Combine 방식","id":"16766208"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
