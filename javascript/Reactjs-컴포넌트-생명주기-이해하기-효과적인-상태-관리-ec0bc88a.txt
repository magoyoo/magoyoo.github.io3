1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","Reactjs-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%ED%9A%A8%EA%B3%BC%EC%A0%81%EC%9D%B8-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-ec0bc88a","d"],{"children":["__PAGE__?{\"slug\":\"Reactjs-컴포넌트-생명주기-이해하기-효과적인-상태-관리-ec0bc88a\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","Reactjs-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%ED%9A%A8%EA%B3%BC%EC%A0%81%EC%9D%B8-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-ec0bc88a","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Reactjs-컴포넌트-생명주기-이해하기-효과적인-상태-관리-ec0bc88a\"}"},"styles":[]}],"segment":["slug","Reactjs-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%ED%9A%A8%EA%B3%BC%EC%A0%81%EC%9D%B8-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-ec0bc88a","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"React.js 컴포넌트 생명주기 이해하기: 효과적인 상태 관리 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"React.js 컴포넌트 생명주기를 이해하여 효과적인 상태 관리를 위한 상세한 안내입니다. 이 글은 각 생명주기 메서드를 설명하고, 상태 관리 최적화를 위한 팁과 모범 사례를 제공합니다."}],["$","meta","3",{"name":"keywords","content":"React.js,컴포넌트 생명주기,상태 관리"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/Reactjs-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%ED%9A%A8%EA%B3%BC%EC%A0%81%EC%9D%B8-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-ec0bc88a"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"React.js 컴포넌트 생명주기 이해하기: 효과적인 상태 관리 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"React.js 컴포넌트 생명주기 이해하기: 효과적인 상태 관리 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"React.js 컴포넌트 생명주기를 이해하여 효과적인 상태 관리를 위한 상세한 안내입니다. 이 글은 각 생명주기 메서드를 설명하고, 상태 관리 최적화를 위한 팁과 모범 사례를 제공합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/Reactjs-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%ED%9A%A8%EA%B3%BC%EC%A0%81%EC%9D%B8-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-ec0bc88a"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"React.js 컴포넌트 생명주기 이해하기: 효과적인 상태 관리 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"React.js 컴포넌트 생명주기를 이해하여 효과적인 상태 관리를 위한 상세한 안내입니다. 이 글은 각 생명주기 메서드를 설명하고, 상태 관리 최적화를 위한 팁과 모범 사례를 제공합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"React.js 컴포넌트 생명주기 이해하기: 효과적인 상태 관리"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"React.js 컴포넌트 생명주기 이해하기: 효과적인 상태 관리"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-16"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"d020683f","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"React.js 컴포넌트 생명주기 이해하기: 효과적인 상태 관리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"React.js는 사용자 인터페이스를 구축하기 위해 널리 사용되는 JavaScript 라이브러리입니다. 이 라이브러리의 핵심 개념 중 하나는 컴포넌트의 생명주기입니다. 생명주기를 이해하면 효과적인 상태 관리를 통해 성능을 최적화할 수 있고, 코드의 예측 가능성과 유지 보수성을 높일 수 있습니다. 본 글에서는 React 컴포넌트의 생명주기를 깊이 있게 이해하고, 상태 관리 최적화 방법을 알아봅니다."}],"\n",["$","h2",null,{"id":"b280483c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"컴포넌트 생명주기 메서드"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"React 컴포넌트는 생명주기 동안 여러 단계에서 다양한 메서드를 호출합니다. 이 메서드들은 다음과 같은 주기로 호출됩니다."}],"\n",["$","h3",null,{"id":"eef656da","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Mounting (마운팅)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"마운팅은 컴포넌트가 처음으로 DOM에 삽입될 때 발생합니다. 이 과정에서 다음의 메서드들이 순차적으로 호출됩니다."}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"constructor()","position":{"start":{"line":14,"column":3,"offset":441},"end":{"line":14,"column":18,"offset":456}}}],"position":{"start":{"line":14,"column":3,"offset":441},"end":{"line":14,"column":18,"offset":456}}},"children":"constructor()"}}],": 컴포넌트가 생성될 때 가장 먼저 실행됩니다. 초기 상태를 설정하거나 인스턴스 변수를 초기화할 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"static getDerivedStateFromProps()","position":{"start":{"line":15,"column":3,"offset":520},"end":{"line":15,"column":38,"offset":555}}}],"position":{"start":{"line":15,"column":3,"offset":520},"end":{"line":15,"column":38,"offset":555}}},"children":"static getDerivedStateFromProps()"}}],": props로부터 상태를 동기화할 때 사용됩니다. 이 메서드는 주로 드물게 사용되며, 필요한 경우에만 활용됩니다."]}],"\n",["$","li","li-2",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"render()","position":{"start":{"line":16,"column":3,"offset":622},"end":{"line":16,"column":13,"offset":632}}}],"position":{"start":{"line":16,"column":3,"offset":622},"end":{"line":16,"column":13,"offset":632}}},"children":"render()"}}],": JSX를 반환하여 어떤 UI 요소가 렌더링될지 결정합니다. 이 메서드는 순수 함수로 동작하며, 상태나 props에 의해 결정됩니다."]}],"\n",["$","li","li-3",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentDidMount()","position":{"start":{"line":17,"column":3,"offset":710},"end":{"line":17,"column":24,"offset":731}}}],"position":{"start":{"line":17,"column":3,"offset":710},"end":{"line":17,"column":24,"offset":731}}},"children":"componentDidMount()"}}],": 컴포넌트가 DOM에 삽입된 후에 호출됩니다. 여기서 데이터 요청이나 타이머 설정과 같은 side effect 작업을 수행할 수 있습니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"9bc4fb9e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Updating (업데이트)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"컴포넌트가 갱신될 때 발생합니다. 이는 props나 state가 변화할 때마다 발생하며, 다음의 메서드들이 호출됩니다."}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"static getDerivedStateFromProps()","position":{"start":{"line":23,"column":3,"offset":902},"end":{"line":23,"column":38,"offset":937}}}],"position":{"start":{"line":23,"column":3,"offset":902},"end":{"line":23,"column":38,"offset":937}}},"children":"static getDerivedStateFromProps()"}}],": 이 메서드는 업데이트 과정에서도 호출됩니다."]}],"\n",["$","li","li-1",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"shouldComponentUpdate()","position":{"start":{"line":24,"column":3,"offset":966},"end":{"line":24,"column":28,"offset":991}}}],"position":{"start":{"line":24,"column":3,"offset":966},"end":{"line":24,"column":28,"offset":991}}},"children":"shouldComponentUpdate()"}}],": 컴포넌트가 업데이트될지 여부를 결정합니다. 이 메서드는 기본적으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true","position":{"start":{"line":24,"column":67,"offset":1030},"end":{"line":24,"column":73,"offset":1036}}}],"position":{"start":{"line":24,"column":67,"offset":1030},"end":{"line":24,"column":73,"offset":1036}}},"children":"true"}}],"를 반환하며, 성능 최적화를 위해 재정의할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"render()","position":{"start":{"line":25,"column":3,"offset":1070},"end":{"line":25,"column":13,"offset":1080}}}],"position":{"start":{"line":25,"column":3,"offset":1070},"end":{"line":25,"column":13,"offset":1080}}},"children":"render()"}}],": 업데이트된 상태나 props를 기반으로 다시 렌더링됩니다."]}],"\n",["$","li","li-3",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"getSnapshotBeforeUpdate()","position":{"start":{"line":26,"column":3,"offset":1117},"end":{"line":26,"column":30,"offset":1144}}}],"position":{"start":{"line":26,"column":3,"offset":1117},"end":{"line":26,"column":30,"offset":1144}}},"children":"getSnapshotBeforeUpdate()"}}],": 실제 DOM이 업데이트되기 직전에 호출됩니다. 이때 컴포넌트의 현재 상태를 스냅샷으로 캡처할 수 있습니다."]}],"\n",["$","li","li-4",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentDidUpdate()","position":{"start":{"line":27,"column":3,"offset":1208},"end":{"line":27,"column":25,"offset":1230}}}],"position":{"start":{"line":27,"column":3,"offset":1208},"end":{"line":27,"column":25,"offset":1230}}},"children":"componentDidUpdate()"}}],": 컴포넌트가 업데이트된 후에 호출됩니다. 여기서 이전의 props나 상태를 비교하여 추가적인 side effect 작업을 수행할 수 있습니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"5afcd13d","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Unmounting (언마운팅)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"컴포넌트가 DOM에서 제거될 때 발생합니다. 다음의 메서드가 호출됩니다."}],"\n",["$","ul","ul-2",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentWillUnmount()","position":{"start":{"line":33,"column":3,"offset":1379},"end":{"line":33,"column":27,"offset":1403}}}],"position":{"start":{"line":33,"column":3,"offset":1379},"end":{"line":33,"column":27,"offset":1403}}},"children":"componentWillUnmount()"}}],": 컴포넌트가 언마운트되기 직전에 호출됩니다. 여기서 타이머를 정리하거나 구독 해제를 수행할 수 있습니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"b7106023","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Error Handling (에러 처리)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"컴포넌트 내에서 에러가 발생할 수 있습니다. 이를 처리하기 위한 메서드들이 제공됩니다."}],"\n",["$","ul","ul-3",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"static getDerivedStateFromError()","position":{"start":{"line":39,"column":3,"offset":1544},"end":{"line":39,"column":38,"offset":1579}}}],"position":{"start":{"line":39,"column":3,"offset":1544},"end":{"line":39,"column":38,"offset":1579}}},"children":"static getDerivedStateFromError()"}}],": 에러가 발생하면 상태를 업데이트하기 위해 호출됩니다."]}],"\n",["$","li","li-1",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentDidCatch()","position":{"start":{"line":40,"column":3,"offset":1613},"end":{"line":40,"column":24,"offset":1634}}}],"position":{"start":{"line":40,"column":3,"offset":1613},"end":{"line":40,"column":24,"offset":1634}}},"children":"componentDidCatch()"}}],": 렌더링 과정에서 발생한 에러를 캡처하여 처리할 수 있습니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"49cceecb","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"효과적인 상태 관리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"컴포넌트 생명주기를 이해한 후에는 상태 관리를 최적화하는 방법에 대해 알아보겠습니다."}],"\n",["$","h3",null,{"id":"02e4d0bd","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"상태 최소화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"컴포넌트의 상태 수를 최소화하는 것이 좋습니다. 필요하지 않은 상태는 로컬 상태로 유지하거나, 상위 컴포넌트로 옮겨서 관리할 수 있습니다. 이를 통해 데이터 흐름을 단순화하고 버그를 줄일 수 있습니다."}],"\n",["$","h3",null,{"id":"3bed0605","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"불변성 유지"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["상태를 업데이트할 때는 불변성을 유지하는 것이 중요합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.assign","position":{"start":{"line":52,"column":34,"offset":1906},"end":{"line":52,"column":49,"offset":1921}}}],"position":{"start":{"line":52,"column":34,"offset":1906},"end":{"line":52,"column":49,"offset":1921}}},"children":"Object.assign"}}],"이나 전개 연산자(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...","position":{"start":{"line":52,"column":59,"offset":1931},"end":{"line":52,"column":64,"offset":1936}}}],"position":{"start":{"line":52,"column":59,"offset":1931},"end":{"line":52,"column":64,"offset":1936}}},"children":"..."}}],")를 사용하여 새로운 객체를 생성하고, 기존 객체를 변경하지 않도록 합니다. 이는 상태 변경이 예측 가능하게 하고 디버깅을 쉽게 합니다."]}],"\n",["$","h3",null,{"id":"bcf698af","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"비동기 작업 관리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["비동기 작업을 처리할 때는 생명주기 메서드를 적절히 활용해야 합니다. 예를 들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentDidMount","position":{"start":{"line":56,"column":47,"offset":2075},"end":{"line":56,"column":66,"offset":2094}}}],"position":{"start":{"line":56,"column":47,"offset":2075},"end":{"line":56,"column":66,"offset":2094}}},"children":"componentDidMount"}}],"에서 데이터를 요청하고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentWillUnmount","position":{"start":{"line":56,"column":79,"offset":2107},"end":{"line":56,"column":101,"offset":2129}}}],"position":{"start":{"line":56,"column":79,"offset":2107},"end":{"line":56,"column":101,"offset":2129}}},"children":"componentWillUnmount"}}],"에서 정리 작업을 수행합니다. 또한, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":56,"column":122,"offset":2150},"end":{"line":56,"column":133,"offset":2161}}}],"position":{"start":{"line":56,"column":122,"offset":2150},"end":{"line":56,"column":133,"offset":2161}}},"children":"useEffect"}}]," 훅을 사용하여 비동기 작업을 관리할 수도 있습니다."]}],"\n",["$","h3",null,{"id":"8870b7a1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Context API와 Redux 활용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"전역 상태 관리가 필요한 경우, Context API나 Redux를 사용할 수 있습니다. Context API는 간단한 전역 상태 관리를 지원하며, Redux는 더욱 복잡한 상태 관리를 위한 도구를 제공합니다. 이를 통해 상태를 컴포넌트 트리 전체에서 쉽게 공유하고, 상태 관리 로직을 중앙 집중화할 수 있습니다."}],"\n",["$","h2",null,{"id":"a49bcef8","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"모범 사례"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"상태 초기화:"}]," 상태를 초기화할 때는 가능하면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"constructor","position":{"start":{"line":64,"column":33,"offset":2438},"end":{"line":64,"column":46,"offset":2451}}}],"position":{"start":{"line":64,"column":33,"offset":2438},"end":{"line":64,"column":46,"offset":2451}}},"children":"constructor"}}],"나 클래스 필드 초기화자를 사용합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"성능 최적화:"}]," 불필요한 렌더링을 방지하기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"shouldComponentUpdate","position":{"start":{"line":65,"column":34,"offset":2506},"end":{"line":65,"column":57,"offset":2529}}}],"position":{"start":{"line":65,"column":34,"offset":2506},"end":{"line":65,"column":57,"offset":2529}}},"children":"shouldComponentUpdate"}}],"를 재정의하거나 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React.memo","position":{"start":{"line":65,"column":66,"offset":2538},"end":{"line":65,"column":78,"offset":2550}}}],"position":{"start":{"line":65,"column":66,"offset":2538},"end":{"line":65,"column":78,"offset":2550}}},"children":"React.memo"}}],"를 사용합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"클린업:"}]," 언마운트 시 리소스를 정리하기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentWillUnmount","position":{"start":{"line":66,"column":33,"offset":2591},"end":{"line":66,"column":55,"offset":2613}}}],"position":{"start":{"line":66,"column":33,"offset":2591},"end":{"line":66,"column":55,"offset":2613}}},"children":"componentWillUnmount"}}],"에서 클린업 작업을 수행합니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"일관성 유지:"}]," 상태 관리 로직을 일관성 있게 유지하고, 불변성을 지킵니다."]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"React의 컴포넌트 생명주기 메서드를 잘 활용하고 상태 관리를 최적화하면 더 나은 성능과 유지 보수성을 가진 애플리케이션을 개발할 수 있습니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"React.js 컴포넌트 생명주기 이해하기: 효과적인 상태 관리","toc":[{"tagName":"h1","title":"React.js 컴포넌트 생명주기 이해하기: 효과적인 상태 관리","id":"d020683f"},{"tagName":"h2","title":"컴포넌트 생명주기 메서드","id":"b280483c"},{"tagName":"h3","title":"Mounting (마운팅)","id":"eef656da"},{"tagName":"h3","title":"Updating (업데이트)","id":"9bc4fb9e"},{"tagName":"h3","title":"Unmounting (언마운팅)","id":"5afcd13d"},{"tagName":"h3","title":"Error Handling (에러 처리)","id":"b7106023"},{"tagName":"h2","title":"효과적인 상태 관리","id":"49cceecb"},{"tagName":"h3","title":"상태 최소화","id":"02e4d0bd"},{"tagName":"h3","title":"불변성 유지","id":"3bed0605"},{"tagName":"h3","title":"비동기 작업 관리","id":"bcf698af"},{"tagName":"h3","title":"Context API와 Redux 활용","id":"8870b7a1"},{"tagName":"h2","title":"모범 사례","id":"a49bcef8"}],"language":"kr"}]}]]}]]
8:null
