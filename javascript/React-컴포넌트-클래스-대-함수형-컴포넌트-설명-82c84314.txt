1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","React-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%8C%80-%ED%95%A8%EC%88%98%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%84%A4%EB%AA%85-82c84314","d"],{"children":["__PAGE__?{\"slug\":\"React-컴포넌트-클래스-대-함수형-컴포넌트-설명-82c84314\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","React-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%8C%80-%ED%95%A8%EC%88%98%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%84%A4%EB%AA%85-82c84314","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"React-컴포넌트-클래스-대-함수형-컴포넌트-설명-82c84314\"}"},"styles":[]}],"segment":["slug","React-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%8C%80-%ED%95%A8%EC%88%98%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%84%A4%EB%AA%85-82c84314","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"React 컴포넌트: 클래스 대 함수형 컴포넌트 설명. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 React 컴포넌트 유형인 클래스 컴포넌트와 함수형 컴포넌트의 차이점과 각각의 장단점에 대해 다룹니다. 현대 웹 개발에서 이 두 가지 접근 방식에 대한 이해는 필수적입니다."}],["$","meta","3",{"name":"keywords","content":"React,JavaScript,컴포넌트,웹 개발"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/React-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%8C%80-%ED%95%A8%EC%88%98%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%84%A4%EB%AA%85-82c84314"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"React 컴포넌트: 클래스 대 함수형 컴포넌트 설명. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"React 컴포넌트: 클래스 대 함수형 컴포넌트 설명. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 React 컴포넌트 유형인 클래스 컴포넌트와 함수형 컴포넌트의 차이점과 각각의 장단점에 대해 다룹니다. 현대 웹 개발에서 이 두 가지 접근 방식에 대한 이해는 필수적입니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/React-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%8C%80-%ED%95%A8%EC%88%98%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%84%A4%EB%AA%85-82c84314"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"React 컴포넌트: 클래스 대 함수형 컴포넌트 설명. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 React 컴포넌트 유형인 클래스 컴포넌트와 함수형 컴포넌트의 차이점과 각각의 장단점에 대해 다룹니다. 현대 웹 개발에서 이 두 가지 접근 방식에 대한 이해는 필수적입니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"React 컴포넌트: 클래스 대 함수형 컴포넌트 설명."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"React 컴포넌트: 클래스 대 함수형 컴포넌트 설명."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-22"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"13cc0ba7","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"React 컴포넌트: 클래스 대 함수형 컴포넌트 설명"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"React는 사용자 인터페이스를 구축하기 위한 라이브러리로서, 컴포넌트를 사용하여 UI를 구성합니다. 컴포넌트에는 두 가지 주요 유형이 있습니다: 클래스 컴포넌트와 함수형 컴포넌트입니다. 이 글에서는 두 컴포넌트 유형의 차이점, 장단점, 그리고 실제 사용 사례에 대해 자세히 설명합니다."}],"\n",["$","h2",null,{"id":"2605a6d0","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"클래스 컴포넌트"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"클래스 컴포넌트는 ES6 클래스 문법을 사용하여 정의됩니다. 이들은 상태를 보유하고, 생명 주기 메서드를 활용할 수 있으며, stateful 컴포넌트로 불리기도 합니다."}],"\n",["$","h3",null,{"id":"f4b6e42a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"특징"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"상태 관리"}],": 클래스 컴포넌트는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"state","position":{"start":{"line":12,"column":24,"offset":336},"end":{"line":12,"column":31,"offset":343}}}],"position":{"start":{"line":12,"column":24,"offset":336},"end":{"line":12,"column":31,"offset":343}}},"children":"state"}}]," 객체를 통해 상태를 관리합니다. 상태는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this.state","position":{"start":{"line":12,"column":54,"offset":366},"end":{"line":12,"column":66,"offset":378}}}],"position":{"start":{"line":12,"column":54,"offset":366},"end":{"line":12,"column":66,"offset":378}}},"children":"this.state"}}],"로 접근하며, 상태를 업데이트하려면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this.setState()","position":{"start":{"line":12,"column":86,"offset":398},"end":{"line":12,"column":103,"offset":415}}}],"position":{"start":{"line":12,"column":86,"offset":398},"end":{"line":12,"column":103,"offset":415}}},"children":"this.setState()"}}]," 메서드를 사용합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"생명 주기 메서드"}],": 클래스 컴포넌트는 생명 주기 메서드를 통해 컴포넌트의 특정 시점에 동작을 취할 수 있습니다. 예를 들어 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentDidMount()","position":{"start":{"line":13,"column":76,"offset":503},"end":{"line":13,"column":97,"offset":524}}}],"position":{"start":{"line":13,"column":76,"offset":503},"end":{"line":13,"column":97,"offset":524}}},"children":"componentDidMount()"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentDidUpdate()","position":{"start":{"line":13,"column":99,"offset":526},"end":{"line":13,"column":121,"offset":548}}}],"position":{"start":{"line":13,"column":99,"offset":526},"end":{"line":13,"column":121,"offset":548}}},"children":"componentDidUpdate()"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"componentWillUnmount()","position":{"start":{"line":13,"column":123,"offset":550},"end":{"line":13,"column":147,"offset":574}}}],"position":{"start":{"line":13,"column":123,"offset":550},"end":{"line":13,"column":147,"offset":574}}},"children":"componentWillUnmount()"}}]," 등이 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this","position":{"start":{"line":14,"column":5,"offset":588},"end":{"line":14,"column":11,"offset":594}}}],"position":{"start":{"line":14,"column":5,"offset":588},"end":{"line":14,"column":11,"offset":594}}},"children":"this"}}]," 키워드"]}],": 클래스 컴포넌트에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this","position":{"start":{"line":14,"column":31,"offset":614},"end":{"line":14,"column":37,"offset":620}}}],"position":{"start":{"line":14,"column":31,"offset":614},"end":{"line":14,"column":37,"offset":620}}},"children":"this"}}]," 키워드를 다루는 것이 중요합니다. 메서드를 호출할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this","position":{"start":{"line":14,"column":68,"offset":651},"end":{"line":14,"column":74,"offset":657}}}],"position":{"start":{"line":14,"column":68,"offset":651},"end":{"line":14,"column":74,"offset":657}}},"children":"this"}}],"를 정확히 바인딩 하는 것이 필수적입니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"e862f8a7","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { Component } from 'react';\n\nclass MyClassComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 0 };\n  }\n\n  componentDidMount() {\n    console.log('Component mounted');\n  }\n\n  componentDidUpdate() {\n    console.log('Component updated');\n  }\n\n  componentWillUnmount() {\n    console.log('Component will unmount');\n  }\n\n  increment = () => {\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  render() {\n    return (\n      <div>\n        <p>Count: {this.state.count}</p>\n        <button onClick={this.increment}>Increment</button>\n      </div>\n    );\n  }\n}\n\nexport default MyClassComponent;\n"}],"position":{"start":{"line":18,"column":1,"offset":690},"end":{"line":54,"column":4,"offset":1359}}},"children":"import React, { Component } from 'react';\n\nclass MyClassComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 0 };\n  }\n\n  componentDidMount() {\n    console.log('Component mounted');\n  }\n\n  componentDidUpdate() {\n    console.log('Component updated');\n  }\n\n  componentWillUnmount() {\n    console.log('Component will unmount');\n  }\n\n  increment = () => {\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  render() {\n    return (\n      <div>\n        <p>Count: {this.state.count}</p>\n        <button onClick={this.increment}>Increment</button>\n      </div>\n    );\n  }\n}\n\nexport default MyClassComponent;\n"}}]}],"\n",["$","h2",null,{"id":"f31ebb03","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"함수형 컴포넌트"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"함수형 컴포넌트는 단순히 함수를 사용하여 정의됩니다. 초기에는 상태와 생명 주기 메서드를 지원하지 않았으나, React 16.8에서 Hooks가 도입되면서 이 제약이 해소되었습니다."}],"\n",["$","h3",null,{"id":"f4b6e42a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"특징"}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"간단한 정의"}],": 함수형 컴포넌트는 함수로 정의되며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"state","position":{"start":{"line":62,"column":35,"offset":1519},"end":{"line":62,"column":42,"offset":1526}}}],"position":{"start":{"line":62,"column":35,"offset":1519},"end":{"line":62,"column":42,"offset":1526}}},"children":"state"}}],"와 생명 주기 메서드를 직접적으로 사용하지 않습니다. Hooks를 활용하여 상태 관리와 생명 주기 메서드를 사용할 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"Hooks 사용"}],": ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState","position":{"start":{"line":63,"column":17,"offset":1614},"end":{"line":63,"column":27,"offset":1624}}}],"position":{"start":{"line":63,"column":17,"offset":1614},"end":{"line":63,"column":27,"offset":1624}}},"children":"useState"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useEffect","position":{"start":{"line":63,"column":29,"offset":1626},"end":{"line":63,"column":40,"offset":1637}}}],"position":{"start":{"line":63,"column":29,"offset":1626},"end":{"line":63,"column":40,"offset":1637}}},"children":"useEffect"}}],"와 같은 Hooks를 사용하여 상태와 생명 주기를 관리할 수 있습니다. 이러한 기능은 함수형 컴포넌트를 더 강력하게 만듭니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this","position":{"start":{"line":64,"column":5,"offset":1712},"end":{"line":64,"column":11,"offset":1718}}}],"position":{"start":{"line":64,"column":5,"offset":1712},"end":{"line":64,"column":11,"offset":1718}}},"children":"this"}}]," 키워드 없음"]}],": 함수형 컴포넌트에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this","position":{"start":{"line":64,"column":34,"offset":1741},"end":{"line":64,"column":40,"offset":1747}}}],"position":{"start":{"line":64,"column":34,"offset":1741},"end":{"line":64,"column":40,"offset":1747}}},"children":"this"}}]," 키워드를 사용하지 않습니다. 이로 인해 코드를 작성하고 유지보수하는 것이 더 쉬워집니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"e862f8a7","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"import React, { useState, useEffect } from 'react';\n\nconst MyFunctionalComponent = () => {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    console.log('Component mounted');\n    return () => {\n      console.log('Component will unmount');\n    };\n  }, []);\n\n  useEffect(() => {\n    console.log('Component updated');\n  }, [count]);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={increment}>Increment</button>\n    </div>\n  );\n};\n\nexport default MyFunctionalComponent;\n"}],"position":{"start":{"line":68,"column":1,"offset":1807},"end":{"line":98,"column":4,"offset":2390}}},"children":"import React, { useState, useEffect } from 'react';\n\nconst MyFunctionalComponent = () => {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    console.log('Component mounted');\n    return () => {\n      console.log('Component will unmount');\n    };\n  }, []);\n\n  useEffect(() => {\n    console.log('Component updated');\n  }, [count]);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={increment}>Increment</button>\n    </div>\n  );\n};\n\nexport default MyFunctionalComponent;\n"}}]}],"\n",["$","h2",null,{"id":"03d9e778","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"클래스 컴포넌트 vs 함수형 컴포넌트 비교"}],"\n",["$","ul","ul-2",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"문법의 간결성"}],": 함수형 컴포넌트는 클래스 컴포넌트보다 문법이 간결하고 읽기 쉽습니다. 클래스 컴포넌트는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"constructor","position":{"start":{"line":102,"column":65,"offset":2484},"end":{"line":102,"column":78,"offset":2497}}}],"position":{"start":{"line":102,"column":65,"offset":2484},"end":{"line":102,"column":78,"offset":2497}}},"children":"constructor"}}],", 생명 주기 메서드, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this","position":{"start":{"line":102,"column":91,"offset":2510},"end":{"line":102,"column":97,"offset":2516}}}],"position":{"start":{"line":102,"column":91,"offset":2510},"end":{"line":102,"column":97,"offset":2516}}},"children":"this"}}]," 바인딩 등을 추가로 작성해야 합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"성능"}],": 초기에는 클래스 컴포넌트가 성능 상의 이점을 가질 수 있었으나, React의 최신 버전에서는 함수형 컴포넌트와 Hooks를 사용하는 것이 성능 면에서도 유의미합니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"유지보수"}],": 함수형 컴포넌트는 코드가 간결하여 유지보수가 용이합니다. 에러가 발생할 가능성도 더 낮습니다."]}],"\n",["$","li","li-3",{"children":[["$","strong",null,{"className":"font-black","children":"Hooks"}],": Hooks의 도입으로 함수형 컴포넌트에서도 상태 관리와 생명 주기를 사용할 수 있게 되어, 함수형 컴포넌트의 선호도가 높아지고 있습니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"React 컴포넌트를 사용할 때, 클래스 컴포넌트와 함수형 컴포넌트 각각의 특성과 장단점을 이해하는 것이 중요합니다. 일반적으로 함수형 컴포넌트가 더 간단하고 유지보수하기 쉽기 때문에, 많이 사용되고 있습니다. 그러나 특정 상황에서는 클래스 컴포넌트가 더욱 적합할 수 있으므로, 두 접근 방식을 모두 숙지하는 것이 필요합니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"React 컴포넌트: 클래스 대 함수형 컴포넌트 설명.","toc":[{"tagName":"h1","title":"React 컴포넌트: 클래스 대 함수형 컴포넌트 설명","id":"13cc0ba7"},{"tagName":"h2","title":"클래스 컴포넌트","id":"2605a6d0"},{"tagName":"h3","title":"특징","id":"f4b6e42a"},{"tagName":"h3","title":"예제","id":"e862f8a7"},{"tagName":"h2","title":"함수형 컴포넌트","id":"f31ebb03"},{"tagName":"h3","title":"특징","id":"f4b6e42a"},{"tagName":"h3","title":"예제","id":"e862f8a7"},{"tagName":"h2","title":"클래스 컴포넌트 vs 함수형 컴포넌트 비교","id":"03d9e778"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
