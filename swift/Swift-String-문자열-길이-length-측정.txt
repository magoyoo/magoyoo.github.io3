1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-String-%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B8%B8%EC%9D%B4-length-%EC%B8%A1%EC%A0%95","d"],{"children":["__PAGE__?{\"slug\":\"Swift-String-문자열-길이-length-측정\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-String-%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B8%B8%EC%9D%B4-length-%EC%B8%A1%EC%A0%95","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-String-문자열-길이-length-측정\"}"},"styles":[]}],"segment":["slug","Swift-String-%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B8%B8%EC%9D%B4-length-%EC%B8%A1%EC%A0%95","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift String length - 문자열 길이 측정, 텍스트 조작 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift에서 문자열을 다루는 것은 모든 iOS 개발자에게 필수적인 기술입니다. 문자열 길이를 측정하는 기본 방법은 count 속성을 사용하는 것이며, NSString의 length 속성을 통해 유니코드 문자열을 정확히 처리할 수 있습니다. 이 글에서는 문자열 길이 측정의 다양한 방법과 유니코드 스칼라 및 그래프 클러스터에 대한 이해를 돕고, 문자열 자르기, 연결, 비교, 특정 문자 접근 및 변경과 같은 문자열 조작 예제를 제공합니다"}],["$","meta","3",{"name":"keywords","content":"swift,WkWebview"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-String-%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B8%B8%EC%9D%B4-length-%EC%B8%A1%EC%A0%95"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift String length - 문자열 길이 측정, 텍스트 조작 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift String length - 문자열 길이 측정, 텍스트 조작 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift에서 문자열을 다루는 것은 모든 iOS 개발자에게 필수적인 기술입니다. 문자열 길이를 측정하는 기본 방법은 count 속성을 사용하는 것이며, NSString의 length 속성을 통해 유니코드 문자열을 정확히 처리할 수 있습니다. 이 글에서는 문자열 길이 측정의 다양한 방법과 유니코드 스칼라 및 그래프 클러스터에 대한 이해를 돕고, 문자열 자르기, 연결, 비교, 특정 문자 접근 및 변경과 같은 문자열 조작 예제를 제공합니다"}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-String-%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B8%B8%EC%9D%B4-length-%EC%B8%A1%EC%A0%95"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift String length - 문자열 길이 측정, 텍스트 조작 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift에서 문자열을 다루는 것은 모든 iOS 개발자에게 필수적인 기술입니다. 문자열 길이를 측정하는 기본 방법은 count 속성을 사용하는 것이며, NSString의 length 속성을 통해 유니코드 문자열을 정확히 처리할 수 있습니다. 이 글에서는 문자열 길이 측정의 다양한 방법과 유니코드 스칼라 및 그래프 클러스터에 대한 이해를 돕고, 문자열 자르기, 연결, 비교, 특정 문자 접근 및 변경과 같은 문자열 조작 예제를 제공합니다"}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBasic.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift String length - 문자열 길이 측정, 텍스트 조작"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift String length - 문자열 길이 측정, 텍스트 조작"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-05-30"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h3",null,{"id":"2b12264e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Swift 문자열 길이 측정: iOS 개발에서 텍스트 조작 완벽 가이드"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서 문자열을 다루는 것은 모든 iOS 개발자에게 필수적인 기술입니다. 사용자 인터페이스를 만들거나 데이터를 처리하고 사용자 입력을 관리할 때, 문자열 길이를 측정하고 조작하는 방법을 이해하는 것은 매우 중요합니다. 이 포괄적인 가이드는 Swift에서 문자열 길이를 다루는 다양한 방법과 기술을 탐구하여 iOS 애플리케이션에서 텍스트 조작을 마스터할 수 있도록 도와드립니다."}],"\n",["$","h4","h4-0",{"children":"1. Swift에서 문자열 길이의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서 문자열의 길이를 측정하는 기본적인 방법은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"count","position":{"start":{"line":8,"column":32,"offset":324},"end":{"line":8,"column":39,"offset":331}}}],"position":{"start":{"line":8,"column":32,"offset":324},"end":{"line":8,"column":39,"offset":331}}},"children":"count"}}]," 속성을 사용하는 것입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"count","position":{"start":{"line":8,"column":55,"offset":347},"end":{"line":8,"column":62,"offset":354}}}],"position":{"start":{"line":8,"column":55,"offset":347},"end":{"line":8,"column":62,"offset":354}}},"children":"count"}}],"는 문자열의 문자 수를 반환합니다. 예를 들어, 다음과 같이 사용할 수 있습니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let myString = \"Hello, Swift!\"\nlet length = myString.count\nprint(\"문자열의 길이는 \\(length)입니다.\")  // 출력: 문자열의 길이는 13입니다.\n"}],"position":{"start":{"line":10,"column":1,"offset":401},"end":{"line":14,"column":4,"offset":528}}},"children":"let myString = \"Hello, Swift!\"\nlet length = myString.count\nprint(\"문자열의 길이는 \\(length)입니다.\")  // 출력: 문자열의 길이는 13입니다.\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 방법은 대부분의 경우에 적합하지만, 일부 특수 문자나 이모지가 포함된 문자열의 경우 문자 수가 예상과 다를 수 있습니다. 이럴 때는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSString","position":{"start":{"line":16,"column":77,"offset":606},"end":{"line":16,"column":87,"offset":616}}}],"position":{"start":{"line":16,"column":77,"offset":606},"end":{"line":16,"column":87,"offset":616}}},"children":"NSString"}}]," 클래스의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"length","position":{"start":{"line":16,"column":93,"offset":622},"end":{"line":16,"column":101,"offset":630}}}],"position":{"start":{"line":16,"column":93,"offset":622},"end":{"line":16,"column":101,"offset":630}}},"children":"length"}}]," 속성을 사용하는 것이 유용합니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let myNSString = myString as NSString\nlet nsLength = myNSString.length\nprint(\"NSString 길이는 \\(nsLength)입니다.\")  // 출력: NSString 길이는 13입니다.\n"}],"position":{"start":{"line":18,"column":1,"offset":651},"end":{"line":22,"column":4,"offset":800}}},"children":"let myNSString = myString as NSString\nlet nsLength = myNSString.length\nprint(\"NSString 길이는 \\(nsLength)입니다.\")  // 출력: NSString 길이는 13입니다.\n"}}]}],"\n",["$","h4","h4-1",{"children":"2. 유니코드 스칼라와 그래프 클러스터"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift 문자열은 유니코드 스칼라(Unicode Scalars)로 구성되며, 각 스칼라는 고유한 숫자 값을 갖습니다. 유니코드 스칼라는 하나의 문자처럼 보이지만 실제로는 여러 유니코드 코드 포인트로 이루어진 경우가 많습니다. 예를 들어, 이모지나 복합 문자는 여러 유니코드 스칼라로 구성될 수 있습니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["그래프 클러스터(Grapheme Clusters)는 사용자에게 하나의 문자처럼 보이는 유니코드 문자 시퀀스입니다. Swift의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"count","position":{"start":{"line":28,"column":72,"offset":1073},"end":{"line":28,"column":79,"offset":1080}}}],"position":{"start":{"line":28,"column":72,"offset":1073},"end":{"line":28,"column":79,"offset":1080}}},"children":"count"}}]," 속성은 그래프 클러스터의 수를 반환하기 때문에, 정확한 문자 수를 얻을 수 있습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let complexString = \"👨‍👩‍👧‍👦\"\nlet graphemeCount = complexString.count\nprint(\"그래프 클러스터 수는 \\(graphemeCount)입니다.\")  // 출력: 그래프 클러스터 수는 1입니다.\n"}],"position":{"start":{"line":30,"column":1,"offset":1130},"end":{"line":34,"column":4,"offset":1284}}},"children":"let complexString = \"👨‍👩‍👧‍👦\"\nlet graphemeCount = complexString.count\nprint(\"그래프 클러스터 수는 \\(graphemeCount)입니다.\")  // 출력: 그래프 클러스터 수는 1입니다.\n"}}]}],"\n",["$","h4","h4-2",{"children":"3. 문자열 길이 측정의 다양한 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"1. 문자(Character) 수 세기"}],":\n문자 수를 세는 가장 기본적인 방법은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"count","position":{"start":{"line":39,"column":22,"offset":1361},"end":{"line":39,"column":29,"offset":1368}}}],"position":{"start":{"line":39,"column":22,"offset":1361},"end":{"line":39,"column":29,"offset":1368}}},"children":"count"}}]," 속성을 사용하는 것입니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let sampleText = \"Swift 문자열\"\nprint(\"문자 수: \\(sampleText.count)\")  // 출력: 문자 수: 7\n"}],"position":{"start":{"line":41,"column":1,"offset":1385},"end":{"line":44,"column":4,"offset":1477}}},"children":"let sampleText = \"Swift 문자열\"\nprint(\"문자 수: \\(sampleText.count)\")  // 출력: 문자 수: 7\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"2. NSString을 이용한 길이 측정"}],":\nNSString을 사용하여 문자열 길이를 측정하면, 특히 유니코드와 관련된 문제를 피할 수 있습니다."]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let nsString = sampleText as NSString\nprint(\"NSString 길이: \\(nsString.length)\")  // 출력: NSString 길이: 7\n"}],"position":{"start":{"line":49,"column":1,"offset":1565},"end":{"line":52,"column":4,"offset":1679}}},"children":"let nsString = sampleText as NSString\nprint(\"NSString 길이: \\(nsString.length)\")  // 출력: NSString 길이: 7\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"3. 유니코드 스칼라 수 세기"}],":\n유니코드 스칼라의 수를 세는 방법입니다."]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let unicodeScalarsCount = sampleText.unicodeScalars.count\nprint(\"유니코드 스칼라 수: \\(unicodeScalarsCount)\")  // 출력: 유니코드 스칼라 수: 7\n"}],"position":{"start":{"line":57,"column":1,"offset":1727},"end":{"line":60,"column":4,"offset":1863}}},"children":"let unicodeScalarsCount = sampleText.unicodeScalars.count\nprint(\"유니코드 스칼라 수: \\(unicodeScalarsCount)\")  // 출력: 유니코드 스칼라 수: 7\n"}}]}],"\n",["$","h4","h4-3",{"children":"4. 문자열 조작 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"1. 문자열 자르기"}],":\n문자열의 일부분을 추출하는 방법입니다."]}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let longString = \"Hello, Swift World!\"\nlet startIndex = longString.index(longString.startIndex, offsetBy: 7)\nlet endIndex = longString.index(longString.startIndex, offsetBy: 12)\nlet substring = longString[startIndex..<endIndex]\nprint(\"부분 문자열: \\(substring)\")  // 출력: 부분 문자열: Swift\n"}],"position":{"start":{"line":67,"column":1,"offset":1923},"end":{"line":73,"column":4,"offset":2215}}},"children":"let longString = \"Hello, Swift World!\"\nlet startIndex = longString.index(longString.startIndex, offsetBy: 7)\nlet endIndex = longString.index(longString.startIndex, offsetBy: 12)\nlet substring = longString[startIndex..<endIndex]\nprint(\"부분 문자열: \\(substring)\")  // 출력: 부분 문자열: Swift\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"2. 문자열 연결"}],":\n문자열을 연결하는 방법입니다."]}],"\n",["$","pre","pre-7",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let firstPart = \"Hello\"\nlet secondPart = \"Swift\"\nlet combinedString = firstPart + \", \" + secondPart + \"!\"\nprint(\"결합된 문자열: \\(combinedString)\")  // 출력: 결합된 문자열: Hello, Swift!\n"}],"position":{"start":{"line":78,"column":1,"offset":2250},"end":{"line":83,"column":4,"offset":2435}}},"children":"let firstPart = \"Hello\"\nlet secondPart = \"Swift\"\nlet combinedString = firstPart + \", \" + secondPart + \"!\"\nprint(\"결합된 문자열: \\(combinedString)\")  // 출력: 결합된 문자열: Hello, Swift!\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"3. 문자열 비교"}],":\n문자열을 비교하는 방법입니다."]}],"\n",["$","pre","pre-8",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let stringA = \"Swift\"\nlet stringB = \"swift\"\nlet isEqual = stringA == stringB\nprint(\"두 문자열이 같은가요? \\(isEqual)\")  // 출력: 두 문자열이 같은가요? false\n"}],"position":{"start":{"line":88,"column":1,"offset":2470},"end":{"line":93,"column":4,"offset":2619}}},"children":"let stringA = \"Swift\"\nlet stringB = \"swift\"\nlet isEqual = stringA == stringB\nprint(\"두 문자열이 같은가요? \\(isEqual)\")  // 출력: 두 문자열이 같은가요? false\n"}}]}],"\n",["$","h4","h4-4",{"children":"5. 고급 문자열 조작"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"문자열의 특정 문자 접근"}],":\n문자열의 특정 위치에 있는 문자에 접근하는 방법입니다."]}],"\n",["$","pre","pre-9",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let greeting = \"Hello, Swift!\"\nlet firstCharacter = greeting[greeting.startIndex]\nprint(\"첫 번째 문자: \\(firstCharacter)\")  // 출력: 첫 번째 문자: H\n"}],"position":{"start":{"line":100,"column":1,"offset":2691},"end":{"line":104,"column":4,"offset":2840}}},"children":"let greeting = \"Hello, Swift!\"\nlet firstCharacter = greeting[greeting.startIndex]\nprint(\"첫 번째 문자: \\(firstCharacter)\")  // 출력: 첫 번째 문자: H\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","strong",null,{"className":"font-black","children":"문자열의 특정 문자 변경"}],":\n문자열의 특정 문자를 변경하는 방법입니다."]}],"\n",["$","pre","pre-10",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"var mutableString = \"Hello, Swift!\"\nif let commaIndex = mutableString.firstIndex(of: \",\") {\n    mutableString.replaceSubrange(commaIndex...commaIndex, with: \";\")\n}\nprint(\"변경된 문자열: \\(mutableString)\")  // 출력: 변경된 문자열: Hello; Swift!\n"}],"position":{"start":{"line":109,"column":1,"offset":2886},"end":{"line":115,"column":4,"offset":3128}}},"children":"var mutableString = \"Hello, Swift!\"\nif let commaIndex = mutableString.firstIndex(of: \",\") {\n    mutableString.replaceSubrange(commaIndex...commaIndex, with: \";\")\n}\nprint(\"변경된 문자열: \\(mutableString)\")  // 출력: 변경된 문자열: Hello; Swift!\n"}}]}],"\n",["$","h4","h4-5",{"children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서 문자열 길이를 측정하고 조작하는 것은 다양한 애플리케이션에서 중요한 역할을 합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"count","position":{"start":{"line":119,"column":56,"offset":3194},"end":{"line":119,"column":63,"offset":3201}}}],"position":{"start":{"line":119,"column":56,"offset":3194},"end":{"line":119,"column":63,"offset":3201}}},"children":"count"}}]," 속성을 이용한 기본적인 방법부터 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NSString","position":{"start":{"line":119,"column":82,"offset":3220},"end":{"line":119,"column":92,"offset":3230}}}],"position":{"start":{"line":119,"column":82,"offset":3220},"end":{"line":119,"column":92,"offset":3230}}},"children":"NSString"}}],"을 활용한 고급 방법까지, 이 가이드에서 소개한 다양한 기술을 활용하면 문자열을 더 효과적으로 다룰 수 있습니다. Swift의 강력한 문자열 처리 기능을 잘 활용하여, 더욱 강력하고 유연한 iOS 애플리케이션을 개발해 보세요."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift String length - 문자열 길이 측정, 텍스트 조작","toc":[{"tagName":"h3","title":"Swift 문자열 길이 측정: iOS 개발에서 텍스트 조작 완벽 가이드","id":"2b12264e"}],"language":"kr"}]}]]}]]
8:null
