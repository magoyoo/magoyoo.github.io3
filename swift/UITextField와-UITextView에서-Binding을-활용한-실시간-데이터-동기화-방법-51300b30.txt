1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","UITextField%EC%99%80-UITextView%EC%97%90%EC%84%9C-Binding%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%8F%99%EA%B8%B0%ED%99%94-%EB%B0%A9%EB%B2%95-51300b30","d"],{"children":["__PAGE__?{\"slug\":\"UITextField와-UITextView에서-Binding을-활용한-실시간-데이터-동기화-방법-51300b30\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","UITextField%EC%99%80-UITextView%EC%97%90%EC%84%9C-Binding%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%8F%99%EA%B8%B0%ED%99%94-%EB%B0%A9%EB%B2%95-51300b30","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"UITextField와-UITextView에서-Binding을-활용한-실시간-데이터-동기화-방법-51300b30\"}"},"styles":[]}],"segment":["slug","UITextField%EC%99%80-UITextView%EC%97%90%EC%84%9C-Binding%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%8F%99%EA%B8%B0%ED%99%94-%EB%B0%A9%EB%B2%95-51300b30","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"UITextField와 UITextView에서 Binding을 활용한 실시간 데이터 동기화 방법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift 언어에서 `UITextField`와 `UITextView`를 사용하여 실시간 데이터 동기화를 구현하는 방법을 설명합니다. 특히, SwiftUI의 `Binding`을 활용하여 사용자 입력 데이터를 뷰 모델과 효과적으로 연동하는 방법을 다룹니다."}],["$","meta","3",{"name":"keywords","content":"Swift,UITextField,UITextView,Binding"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/UITextField%EC%99%80-UITextView%EC%97%90%EC%84%9C-Binding%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%8F%99%EA%B8%B0%ED%99%94-%EB%B0%A9%EB%B2%95-51300b30"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"UITextField와 UITextView에서 Binding을 활용한 실시간 데이터 동기화 방법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"UITextField와 UITextView에서 Binding을 활용한 실시간 데이터 동기화 방법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift 언어에서 `UITextField`와 `UITextView`를 사용하여 실시간 데이터 동기화를 구현하는 방법을 설명합니다. 특히, SwiftUI의 `Binding`을 활용하여 사용자 입력 데이터를 뷰 모델과 효과적으로 연동하는 방법을 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/UITextField%EC%99%80-UITextView%EC%97%90%EC%84%9C-Binding%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%8F%99%EA%B8%B0%ED%99%94-%EB%B0%A9%EB%B2%95-51300b30"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"UITextField와 UITextView에서 Binding을 활용한 실시간 데이터 동기화 방법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift 언어에서 `UITextField`와 `UITextView`를 사용하여 실시간 데이터 동기화를 구현하는 방법을 설명합니다. 특히, SwiftUI의 `Binding`을 활용하여 사용자 입력 데이터를 뷰 모델과 효과적으로 연동하는 방법을 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"UITextField와 UITextView에서 Binding을 활용한 실시간 데이터 동기화 방법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"UITextField와 UITextView에서 Binding을 활용한 실시간 데이터 동기화 방법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-17"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"84ca7543","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"UITextField와 UITextView에서 Binding을 활용한 실시간 데이터 동기화 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift 언어에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextField","position":{"start":{"line":4,"column":12,"offset":70},"end":{"line":4,"column":25,"offset":83}}}],"position":{"start":{"line":4,"column":12,"offset":70},"end":{"line":4,"column":25,"offset":83}}},"children":"UITextField"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":4,"column":27,"offset":85},"end":{"line":4,"column":39,"offset":97}}}],"position":{"start":{"line":4,"column":27,"offset":85},"end":{"line":4,"column":39,"offset":97}}},"children":"UITextView"}}],"는 사용자 입력을 받는 중요한 요소입니다. 이 글에서는 SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Binding","position":{"start":{"line":4,"column":79,"offset":137},"end":{"line":4,"column":88,"offset":146}}}],"position":{"start":{"line":4,"column":79,"offset":137},"end":{"line":4,"column":88,"offset":146}}},"children":"Binding"}}]," 개념을 활용하여 이 두 요소와 뷰 모델 간의 실시간 데이터 동기화를 구현하는 방법을 다루겠습니다. 이러한 실시간 동기화는 사용자 인터페이스의 반응성을 높이고 코드의 유지 보수성을 개선하는 데 중요한 역할을 합니다."]}],"\n",["$","h2",null,{"id":"2c9c8f88","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Binding의 소개"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Binding","position":{"start":{"line":8,"column":1,"offset":284},"end":{"line":8,"column":10,"offset":293}}}],"position":{"start":{"line":8,"column":1,"offset":284},"end":{"line":8,"column":10,"offset":293}}},"children":"Binding"}}],"은 SwiftUI에서 값의 양방향 데이터 흐름을 허용하는 중요한 개념입니다. 즉, 한쪽에서 값이 변경되면 다른 쪽에서도 자동으로 업데이트됩니다. 이 기능은 사용자 인터페이스를 사용자의 입력과 동기화시킬 때 매우 유용합니다. 예를 들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextField","position":{"start":{"line":8,"column":142,"offset":425},"end":{"line":8,"column":155,"offset":438}}}],"position":{"start":{"line":8,"column":142,"offset":425},"end":{"line":8,"column":155,"offset":438}}},"children":"UITextField"}}],"에서 사용자가 입력한 데이터를 뷰 모델에 즉시 반영하려면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Binding","position":{"start":{"line":8,"column":187,"offset":470},"end":{"line":8,"column":196,"offset":479}}}],"position":{"start":{"line":8,"column":187,"offset":470},"end":{"line":8,"column":196,"offset":479}}},"children":"Binding"}}],"을 사용할 수 있습니다."]}],"\n",["$","h2",null,{"id":"6cdb2baa","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"UIKit와 SwiftUI의 통합"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["UIKit에서 SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Binding","position":{"start":{"line":12,"column":18,"offset":534},"end":{"line":12,"column":27,"offset":543}}}],"position":{"start":{"line":12,"column":18,"offset":534},"end":{"line":12,"column":27,"offset":543}}},"children":"Binding"}}],"을 활용하려면 약간의 추가 작업이 필요합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextField","position":{"start":{"line":12,"column":53,"offset":569},"end":{"line":12,"column":66,"offset":582}}}],"position":{"start":{"line":12,"column":53,"offset":569},"end":{"line":12,"column":66,"offset":582}}},"children":"UITextField"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":12,"column":68,"offset":584},"end":{"line":12,"column":80,"offset":596}}}],"position":{"start":{"line":12,"column":68,"offset":584},"end":{"line":12,"column":80,"offset":596}}},"children":"UITextView"}}],"는 본래 UIKit 요소이지만, 이를 위해 SwiftUI 뷰에 통합할 수 있습니다. 다음 섹션에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextField","position":{"start":{"line":12,"column":136,"offset":652},"end":{"line":12,"column":149,"offset":665}}}],"position":{"start":{"line":12,"column":136,"offset":652},"end":{"line":12,"column":149,"offset":665}}},"children":"UITextField"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":12,"column":151,"offset":667},"end":{"line":12,"column":163,"offset":679}}}],"position":{"start":{"line":12,"column":151,"offset":667},"end":{"line":12,"column":163,"offset":679}}},"children":"UITextView"}}],"를 사용하여 뷰 모델과 실시간으로 데이터를 동기화하는 방법을 단계별로 설명하겠습니다."]}],"\n",["$","h3",null,{"id":"b6b9e0df","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"UITextField의 Binding 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextField","position":{"start":{"line":16,"column":5,"offset":761},"end":{"line":16,"column":18,"offset":774}}}],"position":{"start":{"line":16,"column":5,"offset":761},"end":{"line":16,"column":18,"offset":774}}},"children":"UITextField"}}],"와 뷰 모델 간의 바인딩을 설정하는 방법을 살펴보겠습니다. SwiftUI로 래핑하여 사용할 수 있도록 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewRepresentable","position":{"start":{"line":16,"column":75,"offset":831},"end":{"line":16,"column":96,"offset":852}}}],"position":{"start":{"line":16,"column":75,"offset":831},"end":{"line":16,"column":96,"offset":852}}},"children":"UIViewRepresentable"}}]," 프로토콜을 준수하는 커스텀 뷰를 작성합니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\nimport UIKit\n\nstruct BindingTextField: UIViewRepresentable {\n    @Binding var text: String\n\n    func makeUIView(context: Context) -> UITextField {\n        let textField = UITextField()\n        textField.delegate = context.coordinator\n        return textField\n    }\n\n    func updateUIView(_ uiView: UITextField, context: Context) {\n        uiView.text = text\n    }\n\n    func makeCoordinator() -> Coordinator {\n        Coordinator(self)\n    }\n\n    class Coordinator: NSObject, UITextFieldDelegate {\n        var parent: BindingTextField\n\n        init(_ parent: BindingTextField) {\n            self.parent = parent\n        }\n\n        func textFieldDidChangeSelection(_ textField: UITextField) {\n            parent.text = textField.text ?? \"\"\n        }\n    }\n}\n"}],"position":{"start":{"line":18,"column":1,"offset":879},"end":{"line":51,"column":4,"offset":1662}}},"children":"import SwiftUI\nimport UIKit\n\nstruct BindingTextField: UIViewRepresentable {\n    @Binding var text: String\n\n    func makeUIView(context: Context) -> UITextField {\n        let textField = UITextField()\n        textField.delegate = context.coordinator\n        return textField\n    }\n\n    func updateUIView(_ uiView: UITextField, context: Context) {\n        uiView.text = text\n    }\n\n    func makeCoordinator() -> Coordinator {\n        Coordinator(self)\n    }\n\n    class Coordinator: NSObject, UITextFieldDelegate {\n        var parent: BindingTextField\n\n        init(_ parent: BindingTextField) {\n            self.parent = parent\n        }\n\n        func textFieldDidChangeSelection(_ textField: UITextField) {\n            parent.text = textField.text ?? \"\"\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextField","position":{"start":{"line":53,"column":7,"offset":1670},"end":{"line":53,"column":20,"offset":1683}}}],"position":{"start":{"line":53,"column":7,"offset":1670},"end":{"line":53,"column":20,"offset":1683}}},"children":"UITextField"}}],"와 SwiftUI 뷰 모델 간의 데이터를 동기화하기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewRepresentable","position":{"start":{"line":53,"column":52,"offset":1715},"end":{"line":53,"column":73,"offset":1736}}}],"position":{"start":{"line":53,"column":52,"offset":1715},"end":{"line":53,"column":73,"offset":1736}}},"children":"UIViewRepresentable"}}]," 프로토콜을 구현한 예제입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@Binding","position":{"start":{"line":53,"column":91,"offset":1754},"end":{"line":53,"column":101,"offset":1764}}}],"position":{"start":{"line":53,"column":91,"offset":1754},"end":{"line":53,"column":101,"offset":1764}}},"children":"@Binding"}}],"으로 정의된 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"text","position":{"start":{"line":53,"column":108,"offset":1771},"end":{"line":53,"column":114,"offset":1777}}}],"position":{"start":{"line":53,"column":108,"offset":1771},"end":{"line":53,"column":114,"offset":1777}}},"children":"text"}}],"는 SwiftUI와의 양방향 데이터 바인딩을 가능하게 합니다. 코디네이터(Coordinator)는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextFieldDelegate","position":{"start":{"line":53,"column":169,"offset":1832},"end":{"line":53,"column":190,"offset":1853}}}],"position":{"start":{"line":53,"column":169,"offset":1832},"end":{"line":53,"column":190,"offset":1853}}},"children":"UITextFieldDelegate"}}],"를 구현하여 텍스트 변경 이벤트를 처리합니다."]}],"\n",["$","h3",null,{"id":"85a0e779","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"UITextView의 Binding 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":57,"column":1,"offset":1908},"end":{"line":57,"column":13,"offset":1920}}}],"position":{"start":{"line":57,"column":1,"offset":1908},"end":{"line":57,"column":13,"offset":1920}}},"children":"UITextView"}}],"도 유사한 방식으로 구현할 수 있습니다. 필요에 따라 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewRepresentable","position":{"start":{"line":57,"column":43,"offset":1950},"end":{"line":57,"column":64,"offset":1971}}}],"position":{"start":{"line":57,"column":43,"offset":1950},"end":{"line":57,"column":64,"offset":1971}}},"children":"UIViewRepresentable"}}]," 프로토콜을 활용하여 사용자 입력을 뷰 모델과 동기화할 수 있습니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\nimport UIKit\n\nstruct BindingTextView: UIViewRepresentable {\n    @Binding var text: String\n\n    func makeUIView(context: Context) -> UITextView {\n        let textView = UITextView()\n        textView.delegate = context.coordinator\n        return textView\n    }\n\n    func updateUIView(_ uiView: UITextView, context: Context) {\n        uiView.text = text\n    }\n\n    func makeCoordinator() -> Coordinator {\n        Coordinator(self)\n    }\n\n    class Coordinator: NSObject, UITextViewDelegate {\n        var parent: BindingTextView\n\n        init(_ parent: BindingTextView) {\n            self.parent = parent\n        }\n\n        func textViewDidChange(_ textView: UITextView) {\n            parent.text = textView.text\n        }\n    }\n}\n"}],"position":{"start":{"line":59,"column":1,"offset":2011},"end":{"line":92,"column":4,"offset":2765}}},"children":"import SwiftUI\nimport UIKit\n\nstruct BindingTextView: UIViewRepresentable {\n    @Binding var text: String\n\n    func makeUIView(context: Context) -> UITextView {\n        let textView = UITextView()\n        textView.delegate = context.coordinator\n        return textView\n    }\n\n    func updateUIView(_ uiView: UITextView, context: Context) {\n        uiView.text = text\n    }\n\n    func makeCoordinator() -> Coordinator {\n        Coordinator(self)\n    }\n\n    class Coordinator: NSObject, UITextViewDelegate {\n        var parent: BindingTextView\n\n        init(_ parent: BindingTextView) {\n            self.parent = parent\n        }\n\n        func textViewDidChange(_ textView: UITextView) {\n            parent.text = textView.text\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"BindingTextView","position":{"start":{"line":94,"column":1,"offset":2767},"end":{"line":94,"column":18,"offset":2784}}}],"position":{"start":{"line":94,"column":1,"offset":2767},"end":{"line":94,"column":18,"offset":2784}}},"children":"BindingTextView"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":94,"column":20,"offset":2786},"end":{"line":94,"column":32,"offset":2798}}}],"position":{"start":{"line":94,"column":20,"offset":2786},"end":{"line":94,"column":32,"offset":2798}}},"children":"UITextView"}}],"와 뷰 모델 간의 실시간 데이터 동기화를 지원합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Coordinator","position":{"start":{"line":94,"column":62,"offset":2828},"end":{"line":94,"column":75,"offset":2841}}}],"position":{"start":{"line":94,"column":62,"offset":2828},"end":{"line":94,"column":75,"offset":2841}}},"children":"Coordinator"}}]," 클래스는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextViewDelegate","position":{"start":{"line":94,"column":81,"offset":2847},"end":{"line":94,"column":101,"offset":2867}}}],"position":{"start":{"line":94,"column":81,"offset":2847},"end":{"line":94,"column":101,"offset":2867}}},"children":"UITextViewDelegate"}}],"를 구현하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"textViewDidChange","position":{"start":{"line":94,"column":108,"offset":2874},"end":{"line":94,"column":127,"offset":2893}}}],"position":{"start":{"line":94,"column":108,"offset":2874},"end":{"line":94,"column":127,"offset":2893}}},"children":"textViewDidChange"}}]," 메서드를 통해 텍스트 변경을 감지합니다."]}],"\n",["$","h2",null,{"id":"af7af39c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"사용 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위에서 정의한 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"BindingTextField","position":{"start":{"line":98,"column":9,"offset":2936},"end":{"line":98,"column":27,"offset":2954}}}],"position":{"start":{"line":98,"column":9,"offset":2936},"end":{"line":98,"column":27,"offset":2954}}},"children":"BindingTextField"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"BindingTextView","position":{"start":{"line":98,"column":29,"offset":2956},"end":{"line":98,"column":46,"offset":2973}}}],"position":{"start":{"line":98,"column":29,"offset":2956},"end":{"line":98,"column":46,"offset":2973}}},"children":"BindingTextView"}}],"를 실제 SwiftUI 뷰에서 사용하는 방법을 알아보겠습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    @State private var textFieldText: String = \"\"\n    @State private var textViewText: String = \"\"\n\n    var body: some View {\n        VStack {\n            BindingTextField(text: $textFieldText)\n                .padding()\n                .border(Color.gray)\n\n            BindingTextView(text: $textViewText)\n                .padding()\n                .border(Color.gray)\n\n            Text(\"TextField Content: \\(textFieldText)\")\n            Text(\"TextView Content: \\(textViewText)\")\n        }\n        .padding()\n    }\n}\n"}],"position":{"start":{"line":100,"column":1,"offset":3009},"end":{"line":121,"column":4,"offset":3566}}},"children":"struct ContentView: View {\n    @State private var textFieldText: String = \"\"\n    @State private var textViewText: String = \"\"\n\n    var body: some View {\n        VStack {\n            BindingTextField(text: $textFieldText)\n                .padding()\n                .border(Color.gray)\n\n            BindingTextView(text: $textViewText)\n                .padding()\n                .border(Color.gray)\n\n            Text(\"TextField Content: \\(textFieldText)\")\n            Text(\"TextView Content: \\(textViewText)\")\n        }\n        .padding()\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ContentView","position":{"start":{"line":123,"column":1,"offset":3568},"end":{"line":123,"column":14,"offset":3581}}}],"position":{"start":{"line":123,"column":1,"offset":3568},"end":{"line":123,"column":14,"offset":3581}}},"children":"ContentView"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@State","position":{"start":{"line":123,"column":16,"offset":3583},"end":{"line":123,"column":24,"offset":3591}}}],"position":{"start":{"line":123,"column":16,"offset":3583},"end":{"line":123,"column":24,"offset":3591}}},"children":"@State"}}]," 변수로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"textFieldText","position":{"start":{"line":123,"column":29,"offset":3596},"end":{"line":123,"column":44,"offset":3611}}}],"position":{"start":{"line":123,"column":29,"offset":3596},"end":{"line":123,"column":44,"offset":3611}}},"children":"textFieldText"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"textViewText","position":{"start":{"line":123,"column":46,"offset":3613},"end":{"line":123,"column":60,"offset":3627}}}],"position":{"start":{"line":123,"column":46,"offset":3613},"end":{"line":123,"column":60,"offset":3627}}},"children":"textViewText"}}],"를 정의하여 바인딩을 통해 데이터를 동기화합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"BindingTextField","position":{"start":{"line":123,"column":88,"offset":3655},"end":{"line":123,"column":106,"offset":3673}}}],"position":{"start":{"line":123,"column":88,"offset":3655},"end":{"line":123,"column":106,"offset":3673}}},"children":"BindingTextField"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"BindingTextView","position":{"start":{"line":123,"column":108,"offset":3675},"end":{"line":123,"column":125,"offset":3692}}}],"position":{"start":{"line":123,"column":108,"offset":3675},"end":{"line":123,"column":125,"offset":3692}}},"children":"BindingTextView"}}],"를 사용하여 사용자 입력 텍스트를 실시간으로 추적하고 UI에 반영할 수 있습니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Binding","position":{"start":{"line":127,"column":10,"offset":3755},"end":{"line":127,"column":19,"offset":3764}}}],"position":{"start":{"line":127,"column":10,"offset":3755},"end":{"line":127,"column":19,"offset":3764}}},"children":"Binding"}}],"을 활용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextField","position":{"start":{"line":127,"column":26,"offset":3771},"end":{"line":127,"column":39,"offset":3784}}}],"position":{"start":{"line":127,"column":26,"offset":3771},"end":{"line":127,"column":39,"offset":3784}}},"children":"UITextField"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UITextView","position":{"start":{"line":127,"column":41,"offset":3786},"end":{"line":127,"column":53,"offset":3798}}}],"position":{"start":{"line":127,"column":41,"offset":3786},"end":{"line":127,"column":53,"offset":3798}}},"children":"UITextView"}}],"를 실시간으로 뷰 모델과 동기화하는 방법을 살펴보았습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UIViewRepresentable","position":{"start":{"line":127,"column":86,"offset":3831},"end":{"line":127,"column":107,"offset":3852}}}],"position":{"start":{"line":127,"column":86,"offset":3831},"end":{"line":127,"column":107,"offset":3852}}},"children":"UIViewRepresentable"}}],"를 사용하여 UIKit 요소를 SwiftUI에서 사용할 수 있도록 하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@Binding","position":{"start":{"line":127,"column":148,"offset":3893},"end":{"line":127,"column":158,"offset":3903}}}],"position":{"start":{"line":127,"column":148,"offset":3893},"end":{"line":127,"column":158,"offset":3903}}},"children":"@Binding"}}],"을 통해 양방향 데이터 바인딩을 구현할 수 있습니다. 이 방법은 프로젝트에 따라 사용자 인터페이스의 반응성을 높이고 유지보수성을 향상시키는 데 큰 도움이 될 것입니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"UITextField와 UITextView에서 Binding을 활용한 실시간 데이터 동기화 방법","toc":[{"tagName":"h1","title":"UITextField와 UITextView에서 Binding을 활용한 실시간 데이터 동기화 방법","id":"84ca7543"},{"tagName":"h2","title":"Binding의 소개","id":"2c9c8f88"},{"tagName":"h2","title":"UIKit와 SwiftUI의 통합","id":"6cdb2baa"},{"tagName":"h3","title":"UITextField의 Binding 구현","id":"b6b9e0df"},{"tagName":"h3","title":"UITextView의 Binding 구현","id":"85a0e779"},{"tagName":"h2","title":"사용 예제","id":"af7af39c"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
