1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI-API-%ED%86%B5%EC%8B%A0-%EC%99%B8%EB%B6%80-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%97%86%EC%9D%B4-%EB%AA%A8%EB%93%88%ED%99%94%ED%95%B4%EB%B3%B4%EA%B8%B0-63cb77dc","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI-API-통신-외부-라이브러리-없이-모듈화해보기-63cb77dc\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI-API-%ED%86%B5%EC%8B%A0-%EC%99%B8%EB%B6%80-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%97%86%EC%9D%B4-%EB%AA%A8%EB%93%88%ED%99%94%ED%95%B4%EB%B3%B4%EA%B8%B0-63cb77dc","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI-API-통신-외부-라이브러리-없이-모듈화해보기-63cb77dc\"}"},"styles":[]}],"segment":["slug","SwiftUI-API-%ED%86%B5%EC%8B%A0-%EC%99%B8%EB%B6%80-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%97%86%EC%9D%B4-%EB%AA%A8%EB%93%88%ED%99%94%ED%95%B4%EB%B3%B4%EA%B8%B0-63cb77dc","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI API 통신: 외부 라이브러리 없이 모듈화해보기 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 외부 라이브러리를 사용하지 않고 SwiftUI에서 API 통신을 관리하는 모듈화 방법에 대해 다룹니다. Swift의 Codable 프로토콜과 URLSession을 활용해 데이터를 주고받는 과정을 자세히 설명합니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,API 통신,모듈화,URLSession"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI-API-%ED%86%B5%EC%8B%A0-%EC%99%B8%EB%B6%80-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%97%86%EC%9D%B4-%EB%AA%A8%EB%93%88%ED%99%94%ED%95%B4%EB%B3%B4%EA%B8%B0-63cb77dc"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI API 통신: 외부 라이브러리 없이 모듈화해보기 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI API 통신: 외부 라이브러리 없이 모듈화해보기 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 외부 라이브러리를 사용하지 않고 SwiftUI에서 API 통신을 관리하는 모듈화 방법에 대해 다룹니다. Swift의 Codable 프로토콜과 URLSession을 활용해 데이터를 주고받는 과정을 자세히 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI-API-%ED%86%B5%EC%8B%A0-%EC%99%B8%EB%B6%80-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%97%86%EC%9D%B4-%EB%AA%A8%EB%93%88%ED%99%94%ED%95%B4%EB%B3%B4%EA%B8%B0-63cb77dc"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI API 통신: 외부 라이브러리 없이 모듈화해보기 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 외부 라이브러리를 사용하지 않고 SwiftUI에서 API 통신을 관리하는 모듈화 방법에 대해 다룹니다. Swift의 Codable 프로토콜과 URLSession을 활용해 데이터를 주고받는 과정을 자세히 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI API 통신: 외부 라이브러리 없이 모듈화해보기"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI API 통신: 외부 라이브러리 없이 모듈화해보기"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-13"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"74192507","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI API 통신: 외부 라이브러리 없이 모듈화해보기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI는 사용자 인터페이스를 작성하는 현대적인 방법을 제공하지만, 네트워크 요청을 처리하고 데이터를 관리하는 방법에 대한 별도의 라이브러리는 제공하지 않습니다. 하지만 Swift의 강력한 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Codable","position":{"start":{"line":4,"column":110,"offset":148},"end":{"line":4,"column":119,"offset":157}}}],"position":{"start":{"line":4,"column":110,"offset":148},"end":{"line":4,"column":119,"offset":157}}},"children":"Codable"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"URLSession","position":{"start":{"line":4,"column":121,"offset":159},"end":{"line":4,"column":133,"offset":171}}}],"position":{"start":{"line":4,"column":121,"offset":159},"end":{"line":4,"column":133,"offset":171}}},"children":"URLSession"}}],"을 활용하면 외부 라이브러리 없이도 네트워크 통신을 효과적으로 모듈화할 수 있습니다. 이 글에서는 그 구체적인 방법을 설명합니다."]}],"\n",["$","h2",null,{"id":"07f6c01a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"1. 모델(Model) 정의하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["먼저, 네트워크 요청에서 받을 데이터를 표현할 모델을 정의합니다. Swift의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Codable","position":{"start":{"line":8,"column":45,"offset":311},"end":{"line":8,"column":54,"offset":320}}}],"position":{"start":{"line":8,"column":45,"offset":311},"end":{"line":8,"column":54,"offset":320}}},"children":"Codable"}}]," 프로토콜을 사용하여 JSON 데이터를 손쉽게 변환할 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct Post: Codable, Identifiable {\n    let id: Int\n    let title: String\n    let body: String\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":359},"end":{"line":16,"column":4,"offset":469}}},"children":"struct Post: Codable, Identifiable {\n    let id: Int\n    let title: String\n    let body: String\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 모델은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id","position":{"start":{"line":18,"column":8,"offset":478},"end":{"line":18,"column":12,"offset":482}}}],"position":{"start":{"line":18,"column":8,"offset":478},"end":{"line":18,"column":12,"offset":482}}},"children":"id"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"title","position":{"start":{"line":18,"column":14,"offset":484},"end":{"line":18,"column":21,"offset":491}}}],"position":{"start":{"line":18,"column":14,"offset":484},"end":{"line":18,"column":21,"offset":491}}},"children":"title"}}],", ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"body","position":{"start":{"line":18,"column":23,"offset":493},"end":{"line":18,"column":29,"offset":499}}}],"position":{"start":{"line":18,"column":23,"offset":493},"end":{"line":18,"column":29,"offset":499}}},"children":"body"}}],"라는 세 가지 속성을 가진 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Post","position":{"start":{"line":18,"column":44,"offset":514},"end":{"line":18,"column":50,"offset":520}}}],"position":{"start":{"line":18,"column":44,"offset":514},"end":{"line":18,"column":50,"offset":520}}},"children":"Post"}}]," 구조체를 정의합니다."]}],"\n",["$","h2",null,{"id":"60dbffef","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"2. 네트워크 레이어 만들기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음으로, 네트워크 요청을 처리할 클래스를 만듭니다. 모듈화를 위해 이 클래스를 별도의 파일에 정의하는 것이 좋습니다. 여기서는 URLSession을 사용해 보겠습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\n\nclass NetworkManager {\n    static let shared = NetworkManager()\n    private let baseURL = \"https://jsonplaceholder.typicode.com\"\n\n    private init() {}\n\n    func fetchPosts(completion: @escaping ([Post]?) -> Void) {\n        guard let url = URL(string: \"\\(baseURL)/posts\") else {\n            completion(nil)\n            return\n        }\n\n        let task = URLSession.shared.dataTask(with: url) { data, response, error in\n            guard let data = data, error == nil else {\n                completion(nil)\n                return\n            }\n\n            let posts = try? JSONDecoder().decode([Post].self, from: data)\n            completion(posts)\n        }\n\n        task.resume()\n    }\n}\n"}],"position":{"start":{"line":24,"column":1,"offset":650},"end":{"line":52,"column":4,"offset":1373}}},"children":"import Foundation\n\nclass NetworkManager {\n    static let shared = NetworkManager()\n    private let baseURL = \"https://jsonplaceholder.typicode.com\"\n\n    private init() {}\n\n    func fetchPosts(completion: @escaping ([Post]?) -> Void) {\n        guard let url = URL(string: \"\\(baseURL)/posts\") else {\n            completion(nil)\n            return\n        }\n\n        let task = URLSession.shared.dataTask(with: url) { data, response, error in\n            guard let data = data, error == nil else {\n                completion(nil)\n                return\n            }\n\n            let posts = try? JSONDecoder().decode([Post].self, from: data)\n            completion(posts)\n        }\n\n        task.resume()\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["네트워크 매니저 클래스는 싱글톤 패턴을 사용하여 인스턴스를 관리합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetchPosts","position":{"start":{"line":54,"column":41,"offset":1415},"end":{"line":54,"column":53,"offset":1427}}}],"position":{"start":{"line":54,"column":41,"offset":1415},"end":{"line":54,"column":53,"offset":1427}}},"children":"fetchPosts"}}]," 메서드는 네트워크 요청을 보내고, 결과를 디코딩한 후 완료 핸들러를 통해 반환합니다."]}],"\n",["$","h2",null,{"id":"c03b382f","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"3. ViewModel 정의하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"네트워크에서 받아온 데이터를 SwiftUI에서 사용하려면 ViewModel을 정의해야 합니다. 이 ViewModel은 네트워크 매니저를 사용하여 데이터를 가져옵니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Combine\n\nclass PostViewModel: ObservableObject {\n    @Published var posts = [Post]()\n    private var cancellables = Set<AnyCancellable>()\n\n    init() {\n        fetchPosts()\n    }\n\n    func fetchPosts() {\n        NetworkManager.shared.fetchPosts { [weak self] posts in\n            guard let self = self else { return }\n            DispatchQueue.main.async {\n                self.posts = posts ?? []\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":60,"column":1,"offset":1593},"end":{"line":80,"column":4,"offset":2042}}},"children":"import Combine\n\nclass PostViewModel: ObservableObject {\n    @Published var posts = [Post]()\n    private var cancellables = Set<AnyCancellable>()\n\n    init() {\n        fetchPosts()\n    }\n\n    func fetchPosts() {\n        NetworkManager.shared.fetchPosts { [weak self] posts in\n            guard let self = self else { return }\n            DispatchQueue.main.async {\n                self.posts = posts ?? []\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["ViewModel 클래스는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ObservableObject","position":{"start":{"line":82,"column":16,"offset":2059},"end":{"line":82,"column":34,"offset":2077}}}],"position":{"start":{"line":82,"column":16,"offset":2059},"end":{"line":82,"column":34,"offset":2077}}},"children":"ObservableObject"}}],"를 채택하여 뷰와 데이터를 연결합니다. 네트워크 요청이 완료되면 UI가 업데이트됩니다."]}],"\n",["$","h2",null,{"id":"f0562b9b","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"4. SwiftUI View에서 ViewModel 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 최종적으로 SwiftUI View에서 ViewModel을 사용하여 데이터를 표시해 봅시다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @StateObject private var viewModel = PostViewModel()\n\n    var body: some View {\n        NavigationView {\n            List(viewModel.posts) { post in\n                VStack(alignment: .leading) {\n                    Text(post.title)\n                        .font(.headline)\n                    Text(post.body)\n                        .font(.subheadline)\n                }\n            }\n            .navigationTitle(\"Posts\")\n        }\n        .onAppear {\n            viewModel.fetchPosts()\n        }\n    }\n}\n"}],"position":{"start":{"line":88,"column":1,"offset":2219},"end":{"line":111,"column":4,"offset":2784}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @StateObject private var viewModel = PostViewModel()\n\n    var body: some View {\n        NavigationView {\n            List(viewModel.posts) { post in\n                VStack(alignment: .leading) {\n                    Text(post.title)\n                        .font(.headline)\n                    Text(post.body)\n                        .font(.subheadline)\n                }\n            }\n            .navigationTitle(\"Posts\")\n        }\n        .onAppear {\n            viewModel.fetchPosts()\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ContentView","position":{"start":{"line":113,"column":1,"offset":2786},"end":{"line":113,"column":14,"offset":2799}}}],"position":{"start":{"line":113,"column":1,"offset":2786},"end":{"line":113,"column":14,"offset":2799}}},"children":"ContentView"}}],"는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"PostViewModel","position":{"start":{"line":113,"column":16,"offset":2801},"end":{"line":113,"column":31,"offset":2816}}}],"position":{"start":{"line":113,"column":16,"offset":2801},"end":{"line":113,"column":31,"offset":2816}}},"children":"PostViewModel"}}]," 인스턴스를 생성하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"List","position":{"start":{"line":113,"column":44,"offset":2829},"end":{"line":113,"column":50,"offset":2835}}}],"position":{"start":{"line":113,"column":44,"offset":2829},"end":{"line":113,"column":50,"offset":2835}}},"children":"List"}}]," 뷰에서 포스트 데이터를 표시합니다. 네트워크 요청은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onAppear","position":{"start":{"line":113,"column":80,"offset":2865},"end":{"line":113,"column":90,"offset":2875}}}],"position":{"start":{"line":113,"column":80,"offset":2865},"end":{"line":113,"column":90,"offset":2875}}},"children":"onAppear"}}]," 이벤트에서 호출됩니다."]}],"\n",["$","h2",null,{"id":"65a842f7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"5. 결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 글에서는 SwiftUI에서 외부 라이브러리를 사용하지 않고 API 통신을 모듈화하는 방법을 다뤘습니다. 네트워크 매니저, ViewModel, 그리고 뷰를 분리하여 각 부분의 역할을 명확히 하고 유지보수가 용이하게 만들었습니다. Swift의 강력한 내장 기능을 활용하면 이러한 작업을 쉽게 수행할 수 있습니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI API 통신: 외부 라이브러리 없이 모듈화해보기","toc":[{"tagName":"h1","title":"SwiftUI API 통신: 외부 라이브러리 없이 모듈화해보기","id":"74192507"},{"tagName":"h2","title":"1. 모델(Model) 정의하기","id":"07f6c01a"},{"tagName":"h2","title":"2. 네트워크 레이어 만들기","id":"60dbffef"},{"tagName":"h2","title":"3. ViewModel 정의하기","id":"c03b382f"},{"tagName":"h2","title":"4. SwiftUI View에서 ViewModel 사용하기","id":"f0562b9b"},{"tagName":"h2","title":"5. 결론","id":"65a842f7"}],"language":"kr"}]}]]}]]
8:null
