1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","%EA%B3%A0%ED%95%B4%EC%83%81%EB%8F%84-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-%EB%8C%80%EC%9A%A9%EB%9F%89-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%ED%95%98%EC%97%AC-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%82%AC%EC%9A%A9-%EC%B5%9C%EC%86%8C%ED%99%94-%EB%B0%A9%EB%B2%95-71364726","d"],{"children":["__PAGE__?{\"slug\":\"고해상도-이미지-처리하기-대용량-이미지를-효율적으로-리사이징하여-메모리-사용-최소화-방법-71364726\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","%EA%B3%A0%ED%95%B4%EC%83%81%EB%8F%84-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-%EB%8C%80%EC%9A%A9%EB%9F%89-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%ED%95%98%EC%97%AC-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%82%AC%EC%9A%A9-%EC%B5%9C%EC%86%8C%ED%99%94-%EB%B0%A9%EB%B2%95-71364726","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"고해상도-이미지-처리하기-대용량-이미지를-효율적으로-리사이징하여-메모리-사용-최소화-방법-71364726\"}"},"styles":[]}],"segment":["slug","%EA%B3%A0%ED%95%B4%EC%83%81%EB%8F%84-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-%EB%8C%80%EC%9A%A9%EB%9F%89-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%ED%95%98%EC%97%AC-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%82%AC%EC%9A%A9-%EC%B5%9C%EC%86%8C%ED%99%94-%EB%B0%A9%EB%B2%95-71364726","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"고해상도 이미지 처리하기: 대용량 이미지를 효율적으로 리사이징하여 메모리 사용 최소화 방법. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Swift 프로그래밍 언어를 사용하여 고해상도 대용량 이미지를 효율적으로 처리하고 리사이징하는 방법을 소개합니다. 메모리 사용을 최소화하면서도 완벽한 결과를 얻기 위한 다양한 기술과 방법을 다룰 것입니다."}],["$","meta","3",{"name":"keywords","content":"Swift,이미지 처리,리사이징,메모리 최적화"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/%EA%B3%A0%ED%95%B4%EC%83%81%EB%8F%84-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-%EB%8C%80%EC%9A%A9%EB%9F%89-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%ED%95%98%EC%97%AC-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%82%AC%EC%9A%A9-%EC%B5%9C%EC%86%8C%ED%99%94-%EB%B0%A9%EB%B2%95-71364726"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"고해상도 이미지 처리하기: 대용량 이미지를 효율적으로 리사이징하여 메모리 사용 최소화 방법. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"고해상도 이미지 처리하기: 대용량 이미지를 효율적으로 리사이징하여 메모리 사용 최소화 방법. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Swift 프로그래밍 언어를 사용하여 고해상도 대용량 이미지를 효율적으로 처리하고 리사이징하는 방법을 소개합니다. 메모리 사용을 최소화하면서도 완벽한 결과를 얻기 위한 다양한 기술과 방법을 다룰 것입니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/%EA%B3%A0%ED%95%B4%EC%83%81%EB%8F%84-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-%EB%8C%80%EC%9A%A9%EB%9F%89-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95%ED%95%98%EC%97%AC-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%82%AC%EC%9A%A9-%EC%B5%9C%EC%86%8C%ED%99%94-%EB%B0%A9%EB%B2%95-71364726"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"고해상도 이미지 처리하기: 대용량 이미지를 효율적으로 리사이징하여 메모리 사용 최소화 방법. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Swift 프로그래밍 언어를 사용하여 고해상도 대용량 이미지를 효율적으로 처리하고 리사이징하는 방법을 소개합니다. 메모리 사용을 최소화하면서도 완벽한 결과를 얻기 위한 다양한 기술과 방법을 다룰 것입니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"고해상도 이미지 처리하기: 대용량 이미지를 효율적으로 리사이징하여 메모리 사용 최소화 방법."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"고해상도 이미지 처리하기: 대용량 이미지를 효율적으로 리사이징하여 메모리 사용 최소화 방법."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-30"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"8c33f3b0","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"고해상도 이미지 처리하기: 대용량 이미지를 효율적으로 리사이징하여 메모리 사용 최소화 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다양한 모바일 애플리케이션과 웹 서비스에서 고해상도 이미지를 효율적으로 처리하는 것은 매우 중요한 과제입니다. 고해상도 이미지는 선명하고 멋진 시각적 경험을 제공하지만, 이와 동시에 상당한 메모리와 프로세싱 자원을 소모하게 됩니다. Swift를 사용하여 이러한 이미지를 효율적으로 처리하고, 메모리 사용을 최소화하면서도 원하는 크기로 리사이징하는 방법에 대해 알아보겠습니다."}],"\n",["$","h2",null,{"id":"dd55a297","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"1. 이미지를 로드하고 리사이징하는 기본 원리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이미지를 로드하고 리사이징하는 방식은 그 자체로 메모리 사용에 큰 영향을 미칠 수 있습니다. 기본적으로 이미지를 로드하고 리사이징하는 과정은 다음과 같은 단계로 이루어집니다."}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":"이미지를 로드합니다."}],"\n",["$","li","li-1",{"children":"원하는 크기로 리사이징합니다."}],"\n",["$","li","li-2",{"children":"리사이징된 이미지를 화면에 표시합니다."}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이미지를 로드할 때는 가능한 한 적은 메모리를 사용하도록 최적화된 방법을 사용해야 합니다. Swift에서는 'UIImage' 클래스를 통해 이미지를 로드하고, 리사이징하며, 화면에 표시할 수 있습니다."}],"\n",["$","h2",null,{"id":"1f6e13c1","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"2. 고해상도 이미지 로딩 및 메모리 절약 기법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"고해상도 이미지를 로드할 때 가장 큰 문제는 메모리 사용입니다. 특히 메모리 사용량이 제한적인 모바일 환경에서는 더욱 신경써야 합니다. 메모리 사용을 최소화하기 위한 기법을 살펴보겠습니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import UIKit\n\nfunc loadImage(named: String) -> UIImage? {\n    guard let imagePath = Bundle.main.path(forResource: named, ofType: nil) else { return nil }\n    guard let imageData = try? Data(contentsOf: URL(fileURLWithPath: imagePath)) else { return nil }\n    return UIImage(data: imageData)\n}\n"}],"position":{"start":{"line":20,"column":1,"offset":708},"end":{"line":28,"column":4,"offset":1013}}},"children":"import UIKit\n\nfunc loadImage(named: String) -> UIImage? {\n    guard let imagePath = Bundle.main.path(forResource: named, ofType: nil) else { return nil }\n    guard let imageData = try? Data(contentsOf: URL(fileURLWithPath: imagePath)) else { return nil }\n    return UIImage(data: imageData)\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위 코드에서 보듯이 이미지를 NSData로서 먼저 로드한 뒤, 이를 UIImage로 변환합니다. 이렇게 하면 메모리 사용을 좀 더 세밀하게 제어할 수 있습니다."}],"\n",["$","h2",null,{"id":"6e0f8198","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"3. 이미지 리사이징 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이미지를 리사이징할 때에는 'UIGraphicsImageRenderer'를 사용하는 것이 좋습니다. 이는 효율적인 메모리 사용과 높은 성능을 갖추고 있는 리사이징 방법입니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"func resizeImage(image: UIImage, targetSize: CGSize) -> UIImage {\n    let size = image.size\n    let widthRatio  = targetSize.width  / size.width\n    let heightRatio = targetSize.height / size.height\n    let newSize = widthRatio > heightRatio ? \n        CGSize(width: size.width * heightRatio, height: size.height * heightRatio) :\n        CGSize(width: size.width * widthRatio,  height: size.height * widthRatio)\n\n    let renderer = UIGraphicsImageRenderer(size: newSize)\n    let newImage = renderer.image { context in\n        image.draw(in: CGRect(origin: .zero, size: newSize))\n    }\n    return newImage\n}\n"}],"position":{"start":{"line":36,"column":1,"offset":1224},"end":{"line":51,"column":4,"offset":1843}}},"children":"func resizeImage(image: UIImage, targetSize: CGSize) -> UIImage {\n    let size = image.size\n    let widthRatio  = targetSize.width  / size.width\n    let heightRatio = targetSize.height / size.height\n    let newSize = widthRatio > heightRatio ? \n        CGSize(width: size.width * heightRatio, height: size.height * heightRatio) :\n        CGSize(width: size.width * widthRatio,  height: size.height * widthRatio)\n\n    let renderer = UIGraphicsImageRenderer(size: newSize)\n    let newImage = renderer.image { context in\n        image.draw(in: CGRect(origin: .zero, size: newSize))\n    }\n    return newImage\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이 방법은 'UIGraphicsBeginImageContextWithOptions'보다 더 나은 성능을 제공합니다. 더불어, 메모리 누수를 방지할 수 있습니다."}],"\n",["$","h2",null,{"id":"756b188a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"4. 메모리 캐시 활용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서 이미지를 효율적으로 다루기 위해서는 메모리 캐시를 잘 활용하는 것이 필수적입니다. 'NSCache' 클래스를 사용하여 자주 사용되는 이미지를 캐시할 수 있습니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let imageCache = NSCache<NSString, UIImage>()\n"}],"position":{"start":{"line":59,"column":1,"offset":2053},"end":{"line":61,"column":4,"offset":2111}}},"children":"let imageCache = NSCache<NSString, UIImage>()\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"캐시를 사용하면 이미지를 반복적으로 로드하는 대신, 메모리에 저장된 이미지를 빠르게 불러올 수 있습니다. 이를 통해 메모리 사용을 최적화할 수 있습니다."}],"\n",["$","h2",null,{"id":"9c185de5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"5. 최적화된 이미지 포맷 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이미지 포맷 자체도 메모리 사용에 큰 영향을 미칩니다. PNG, JPEG, HEIF 포맷은 각각 장단점이 있으며, 사용할 이미지의 특성에 따라 적절하게 선택하는 것이 중요합니다."}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":"PNG: 무손실 압축 포맷, 투명도 지원. 고품질의 이미지에 적합하지만 파일 크기가 큼."}],"\n",["$","li","li-1",{"children":"JPEG: 손실 압축 포맷, 투명도 미지원. 파일 크기가 작고, 일반적인 사진에 적합."}],"\n",["$","li","li-2",{"children":"HEIF: 고효율 압축 포맷, iOS 11 이후로 지원. 높은 품질을 유지하면서 파일 크기가 작은 장점."}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"고해상도 이미지를 효율적으로 처리하는 것은 성능과 메모리 사용을 최적화하는 데 매우 중요합니다. Swift를 사용하여 이미지를 로드하고 리사이징하는 다양한 방법을 이해함으로써, 효율적인 메모리 관리와 뛰어난 사용자 경험을 제공하는 애플리케이션을 개발할 수 있습니다. 위에서 소개한 다양한 기법을 활용하여 메모리 사용량을 줄이고, 애플리케이션의 성능을 향상시킬 수 있습니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"고해상도 이미지 처리하기: 대용량 이미지를 효율적으로 리사이징하여 메모리 사용 최소화 방법.","toc":[{"tagName":"h1","title":"고해상도 이미지 처리하기: 대용량 이미지를 효율적으로 리사이징하여 메모리 사용 최소화 방법","id":"8c33f3b0"},{"tagName":"h2","title":"1. 이미지를 로드하고 리사이징하는 기본 원리","id":"dd55a297"},{"tagName":"h2","title":"2. 고해상도 이미지 로딩 및 메모리 절약 기법","id":"1f6e13c1"},{"tagName":"h2","title":"3. 이미지 리사이징 방법","id":"6e0f8198"},{"tagName":"h2","title":"4. 메모리 캐시 활용","id":"756b188a"},{"tagName":"h2","title":"5. 최적화된 이미지 포맷 사용","id":"9c185de5"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
