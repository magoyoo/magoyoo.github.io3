1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift%EB%A1%9C-Reference-Type%EA%B3%BC-ARC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-Assign-%EB%B0%A9%EB%B2%95-b9bc9ca7","d"],{"children":["__PAGE__?{\"slug\":\"Swift로-Reference-Type과-ARC-활용한-프로퍼티-Assign-방법-b9bc9ca7\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift%EB%A1%9C-Reference-Type%EA%B3%BC-ARC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-Assign-%EB%B0%A9%EB%B2%95-b9bc9ca7","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift로-Reference-Type과-ARC-활용한-프로퍼티-Assign-방법-b9bc9ca7\"}"},"styles":[]}],"segment":["slug","Swift%EB%A1%9C-Reference-Type%EA%B3%BC-ARC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-Assign-%EB%B0%A9%EB%B2%95-b9bc9ca7","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift로 Reference Type과 ARC 활용한 프로퍼티 Assign 방법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift 프로그래밍 언어에서 Reference Type과 ARC(Automatic Reference Counting)을 활용하여 프로퍼티를 효과적으로 할당하는 방법에 대해 알아봅니다. 프로퍼티의 메모리 관리와 ARC의 작동 원리에 대해 심도 있게 다룹니다."}],["$","meta","3",{"name":"keywords","content":"Swift,Reference Type,ARC,메모리 관리"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift%EB%A1%9C-Reference-Type%EA%B3%BC-ARC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-Assign-%EB%B0%A9%EB%B2%95-b9bc9ca7"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift로 Reference Type과 ARC 활용한 프로퍼티 Assign 방법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift로 Reference Type과 ARC 활용한 프로퍼티 Assign 방법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift 프로그래밍 언어에서 Reference Type과 ARC(Automatic Reference Counting)을 활용하여 프로퍼티를 효과적으로 할당하는 방법에 대해 알아봅니다. 프로퍼티의 메모리 관리와 ARC의 작동 원리에 대해 심도 있게 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift%EB%A1%9C-Reference-Type%EA%B3%BC-ARC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-Assign-%EB%B0%A9%EB%B2%95-b9bc9ca7"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift로 Reference Type과 ARC 활용한 프로퍼티 Assign 방법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift 프로그래밍 언어에서 Reference Type과 ARC(Automatic Reference Counting)을 활용하여 프로퍼티를 효과적으로 할당하는 방법에 대해 알아봅니다. 프로퍼티의 메모리 관리와 ARC의 작동 원리에 대해 심도 있게 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner4.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner4.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift로 Reference Type과 ARC 활용한 프로퍼티 Assign 방법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift로 Reference Type과 ARC 활용한 프로퍼티 Assign 방법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-15"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"c3efff63","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift로 Reference Type과 ARC 활용한 프로퍼티 Assign 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift는 강력하고 직관적인 프로그래밍 언어로, 특히 메모리 관리를 위한 자동 참조 카운팅(Automatic Reference Counting, ARC)을 통해 개발자가 메모리 관리를 쉽게 할 수 있도록 돕습니다. 이 글에서는 Swift에서 Reference Type을 활용해 프로퍼티를 할당하며, ARC가 어떻게 작동하는지에 대해 자세히 설명합니다."}],"\n",["$","h2",null,{"id":"0a723921","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Reference Type과 Value Type의 차이"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift는 값을 저장하고 전송할 때 두 가지 방법, 즉 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Reference Type","position":{"start":{"line":8,"column":33,"offset":316},"end":{"line":8,"column":49,"offset":332}}}],"position":{"start":{"line":8,"column":33,"offset":316},"end":{"line":8,"column":49,"offset":332}}},"children":"Reference Type"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Value Type","position":{"start":{"line":8,"column":51,"offset":334},"end":{"line":8,"column":63,"offset":346}}}],"position":{"start":{"line":8,"column":51,"offset":334},"end":{"line":8,"column":63,"offset":346}}},"children":"Value Type"}}],"을 제공합니다. 이 두 가지 타입은 메모리에 어떻게 저장되고 참조되는지에 큰 차이가 있습니다."]}],"\n",["$","h3",null,{"id":"9e3aee9c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Value Type"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Value Type은 변수를 다른 변수에 할당할 때, 값을 복사해서 전달합니다. Swift의 기본 데이터 타입(Int, Float, Double 등) 및 구조체(struct)는 모두 Value Type입니다. 예를 들어, 아래 코드를 봅시다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct Point {\n    var x: Int\n    var y: Int\n}\n\nvar point1 = Point(x: 0, y: 0)\nvar point2 = point1\npoint2.x = 10\n\nprint(point1.x) // 0 \n"}],"position":{"start":{"line":14,"column":1,"offset":553},"end":{"line":25,"column":4,"offset":701}}},"children":"struct Point {\n    var x: Int\n    var y: Int\n}\n\nvar point1 = Point(x: 0, y: 0)\nvar point2 = point1\npoint2.x = 10\n\nprint(point1.x) // 0 \n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"point1","position":{"start":{"line":27,"column":5,"offset":707},"end":{"line":27,"column":13,"offset":715}}}],"position":{"start":{"line":27,"column":5,"offset":707},"end":{"line":27,"column":13,"offset":715}}},"children":"point1"}}],"을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"point2","position":{"start":{"line":27,"column":15,"offset":717},"end":{"line":27,"column":23,"offset":725}}}],"position":{"start":{"line":27,"column":15,"offset":717},"end":{"line":27,"column":23,"offset":725}}},"children":"point2"}}],"에 할당할 때, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"point2","position":{"start":{"line":27,"column":32,"offset":734},"end":{"line":27,"column":40,"offset":742}}}],"position":{"start":{"line":27,"column":32,"offset":734},"end":{"line":27,"column":40,"offset":742}}},"children":"point2"}}],"는 독립적인 복사본이 됩니다. 따라서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"point2","position":{"start":{"line":27,"column":61,"offset":763},"end":{"line":27,"column":69,"offset":771}}}],"position":{"start":{"line":27,"column":61,"offset":763},"end":{"line":27,"column":69,"offset":771}}},"children":"point2"}}],"의 값을 변경해도 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"point1","position":{"start":{"line":27,"column":79,"offset":781},"end":{"line":27,"column":87,"offset":789}}}],"position":{"start":{"line":27,"column":79,"offset":781},"end":{"line":27,"column":87,"offset":789}}},"children":"point1"}}],"에 영향을 주지 않습니다."]}],"\n",["$","h3",null,{"id":"95277be6","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Reference Type"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Referece Type은 변수를 다른 변수에 할당할 때, 동일한 인스턴스를 참조하게 됩니다. Swift의 클래스(class)는 Reference Type입니다. 예를 들어, 아래 코드를 봅시다:"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class Point {\n    var x: Int\n    var y: Int\n    init(x: Int, y: Int) {\n        self.x = x\n        self.y = y\n    }\n}\n\nvar point1 = Point(x: 0, y: 0)\nvar point2 = point1\npoint2.x = 10\n\nprint(point1.x) // 10\n"}],"position":{"start":{"line":33,"column":1,"offset":936},"end":{"line":48,"column":4,"offset":1154}}},"children":"class Point {\n    var x: Int\n    var y: Int\n    init(x: Int, y: Int) {\n        self.x = x\n        self.y = y\n    }\n}\n\nvar point1 = Point(x: 0, y: 0)\nvar point2 = point1\npoint2.x = 10\n\nprint(point1.x) // 10\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"point1","position":{"start":{"line":50,"column":5,"offset":1160},"end":{"line":50,"column":13,"offset":1168}}}],"position":{"start":{"line":50,"column":5,"offset":1160},"end":{"line":50,"column":13,"offset":1168}}},"children":"point1"}}],"을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"point2","position":{"start":{"line":50,"column":15,"offset":1170},"end":{"line":50,"column":23,"offset":1178}}}],"position":{"start":{"line":50,"column":15,"offset":1170},"end":{"line":50,"column":23,"offset":1178}}},"children":"point2"}}],"에 할당할 때, 둘 다 동일한 인스턴스를 참조하게 됩니다. 따라서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"point2","position":{"start":{"line":50,"column":60,"offset":1215},"end":{"line":50,"column":68,"offset":1223}}}],"position":{"start":{"line":50,"column":60,"offset":1215},"end":{"line":50,"column":68,"offset":1223}}},"children":"point2"}}],"의 값을 변경하면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"point1","position":{"start":{"line":50,"column":78,"offset":1233},"end":{"line":50,"column":86,"offset":1241}}}],"position":{"start":{"line":50,"column":78,"offset":1233},"end":{"line":50,"column":86,"offset":1241}}},"children":"point1"}}],"도 영향을 받게 됩니다."]}],"\n",["$","h2",null,{"id":"f2d7f706","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"ARC(Automatic Reference Counting)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["ARC는 Swift에서 메모리 관리를 자동화하는 기능으로, Reference Type의 인스턴스가 더 이상 필요하지 않을 때 메모리에서 자동으로 해제합니다. ARC는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"강한 참조","position":{"start":{"line":54,"column":94,"offset":1387},"end":{"line":54,"column":101,"offset":1394}}}],"position":{"start":{"line":54,"column":94,"offset":1387},"end":{"line":54,"column":101,"offset":1394}}},"children":"강한 참조"}}],"(strong reference)와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"약한 참조","position":{"start":{"line":54,"column":121,"offset":1414},"end":{"line":54,"column":128,"offset":1421}}}],"position":{"start":{"line":54,"column":121,"offset":1414},"end":{"line":54,"column":128,"offset":1421}}},"children":"약한 참조"}}],"(weak reference), ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"미약 참조","position":{"start":{"line":54,"column":146,"offset":1439},"end":{"line":54,"column":153,"offset":1446}}}],"position":{"start":{"line":54,"column":146,"offset":1439},"end":{"line":54,"column":153,"offset":1446}}},"children":"미약 참조"}}],"(unowned reference)라는 세 가지 유형의 참조를 사용하여 메모리를 관리합니다."]}],"\n",["$","h3",null,{"id":"c1a03e52","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"강한 참조(Strong Reference)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"기본적으로 모든 참조는 강한 참조입니다. 강한 참조는 인스턴스의 참조 카운트를 증가시켜, 인스턴스가 참조될 때마다 ARC가 인스턴스를 메모리에 유지합니다. 예를 들어:"}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class Person {\n    var name: String\n    var bestFriend: Person?\n    init(name: String) {\n        self.name = name\n    }\n}\n\nvar john: Person? = Person(name: \"John\")\nvar doe: Person? = Person(name: \"Doe\")\n\njohn?.bestFriend = doe\n"}],"position":{"start":{"line":60,"column":1,"offset":1623},"end":{"line":73,"column":4,"offset":1862}}},"children":"class Person {\n    var name: String\n    var bestFriend: Person?\n    init(name: String) {\n        self.name = name\n    }\n}\n\nvar john: Person? = Person(name: \"John\")\nvar doe: Person? = Person(name: \"Doe\")\n\njohn?.bestFriend = doe\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"john","position":{"start":{"line":75,"column":6,"offset":1869},"end":{"line":75,"column":12,"offset":1875}}}],"position":{"start":{"line":75,"column":6,"offset":1869},"end":{"line":75,"column":12,"offset":1875}}},"children":"john"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"doe","position":{"start":{"line":75,"column":14,"offset":1877},"end":{"line":75,"column":19,"offset":1882}}}],"position":{"start":{"line":75,"column":14,"offset":1877},"end":{"line":75,"column":19,"offset":1882}}},"children":"doe"}}],"가 서로를 강하게 참조하고 있어, 두 객체는 서로 없애지 않는 한 메모리에 계속 남아 있게 됩니다."]}],"\n",["$","h3",null,{"id":"ff3895e0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"약한 참조(Weak Reference)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["약한 참조는 인스턴스의 참조 카운트를 증가시키지 않습니다. 즉, 인스턴스가 다른 강한 참조가 없으면 메모리에서 해제될 수 있습니다. 약한 참조는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"optional","position":{"start":{"line":79,"column":82,"offset":2047},"end":{"line":79,"column":92,"offset":2057}}}],"position":{"start":{"line":79,"column":82,"offset":2047},"end":{"line":79,"column":92,"offset":2057}}},"children":"optional"}}]," 타입이어야 하며, 메모리 해제 시 자동으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nil","position":{"start":{"line":79,"column":117,"offset":2082},"end":{"line":79,"column":122,"offset":2087}}}],"position":{"start":{"line":79,"column":117,"offset":2082},"end":{"line":79,"column":122,"offset":2087}}},"children":"nil"}}],"로 설정됩니다. 예:"]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class Person {\n    var name: String\n    weak var bestFriend: Person?\n    init(name: String) {\n        self.name = name\n    }\n}\n\nvar john: Person? = Person(name: \"John\")\nvar doe: Person? = Person(name: \"Doe\")\n\njohn?.bestFriend = doe\n"}],"position":{"start":{"line":81,"column":1,"offset":2100},"end":{"line":94,"column":4,"offset":2344}}},"children":"class Person {\n    var name: String\n    weak var bestFriend: Person?\n    init(name: String) {\n        self.name = name\n    }\n}\n\nvar john: Person? = Person(name: \"John\")\nvar doe: Person? = Person(name: \"Doe\")\n\njohn?.bestFriend = doe\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"bestFriend","position":{"start":{"line":96,"column":6,"offset":2351},"end":{"line":96,"column":18,"offset":2363}}}],"position":{"start":{"line":96,"column":6,"offset":2351},"end":{"line":96,"column":18,"offset":2363}}},"children":"bestFriend"}}]," 속성이 약한 참조이므로, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"doe","position":{"start":{"line":96,"column":33,"offset":2378},"end":{"line":96,"column":38,"offset":2383}}}],"position":{"start":{"line":96,"column":33,"offset":2378},"end":{"line":96,"column":38,"offset":2383}}},"children":"doe"}}],"가 다른 곳에서 강하게 참조되지 않으면 메모리에서 해제될 수 있습니다."]}],"\n",["$","h3",null,{"id":"d8691b65","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"미약 참조(Unowned Reference)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["미약 참조는 약한 참조와 비슷하지만, 해제된 인스턴스를 참조할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nil","position":{"start":{"line":100,"column":38,"offset":2491},"end":{"line":100,"column":43,"offset":2496}}}],"position":{"start":{"line":100,"column":38,"offset":2491},"end":{"line":100,"column":43,"offset":2496}}},"children":"nil"}}],"이 되지 않으며 프로그램이 크래시됩니다. 미약 참조는 해제될 인스턴스가 확실히 존재하는 경우에 사용합니다. 예:"]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class Customer {\n    var name: String\n    var card: CreditCard?\n    init(name: String) {\n        self.name = name\n    }\n}\n\nclass CreditCard {\n    let number: UInt64\n    unowned let customer: Customer\n    init(number: UInt64, customer: Customer) {\n        self.number = number\n        self.customer = customer\n    }\n}\n\nvar john: Customer? = Customer(name: \"John\")\nvar card: CreditCard? = CreditCard(number: 1234_5678_9012_3456, customer: john!)\n\njohn?.card = card\n"}],"position":{"start":{"line":102,"column":1,"offset":2560},"end":{"line":124,"column":4,"offset":3035}}},"children":"class Customer {\n    var name: String\n    var card: CreditCard?\n    init(name: String) {\n        self.name = name\n    }\n}\n\nclass CreditCard {\n    let number: UInt64\n    unowned let customer: Customer\n    init(number: UInt64, customer: Customer) {\n        self.number = number\n        self.customer = customer\n    }\n}\n\nvar john: Customer? = Customer(name: \"John\")\nvar card: CreditCard? = CreditCard(number: 1234_5678_9012_3456, customer: john!)\n\njohn?.card = card\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CreditCard","position":{"start":{"line":126,"column":5,"offset":3041},"end":{"line":126,"column":17,"offset":3053}}}],"position":{"start":{"line":126,"column":5,"offset":3041},"end":{"line":126,"column":17,"offset":3053}}},"children":"CreditCard"}}],"의 고객 참조는 미약 참조로, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Customer","position":{"start":{"line":126,"column":34,"offset":3070},"end":{"line":126,"column":44,"offset":3080}}}],"position":{"start":{"line":126,"column":34,"offset":3070},"end":{"line":126,"column":44,"offset":3080}}},"children":"Customer"}}]," 인스턴스가 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CreditCard","position":{"start":{"line":126,"column":51,"offset":3087},"end":{"line":126,"column":63,"offset":3099}}}],"position":{"start":{"line":126,"column":51,"offset":3087},"end":{"line":126,"column":63,"offset":3099}}},"children":"CreditCard"}}]," 인스턴스보다 오래 살아남는 것을 보장해야 합니다."]}],"\n",["$","h2",null,{"id":"bdd81a7c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"프로퍼티 Assign 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"프로퍼티를 참조 타입으로 할당할 때, ARC를 이해하고 적절히 활용하는 것이 중요합니다. 예를 들어 프로퍼티가 강한 참조로 남아있으면 메모리 누수가 발생할 수 있습니다. 이 때문에 약한 참조와 미약 참조를 적절히 사용하여 강한 참조 순환을 방지해야 합니다. 이를 통해 안정적이고 효율적인 메모리 관리를 이룰 수 있습니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift의 프로퍼티 할당은 ARC를 이해하고 이를 적절히 활용하는 것이 중요합니다. 이를 통해 메모리 누수를 방지하고, 프로그램이 원하는 대로 작동할 수 있습니다. 인스턴스의 생명 주기를 고려하여 강한 참조, 약한 참조, 미약 참조를 적절히 배치하는 것은 프로페셔널 Swift 개발자가 갖추어야 할 필수적인 능력입니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift로 Reference Type과 ARC 활용한 프로퍼티 Assign 방법","toc":[{"tagName":"h1","title":"Swift로 Reference Type과 ARC 활용한 프로퍼티 Assign 방법","id":"c3efff63"},{"tagName":"h2","title":"Reference Type과 Value Type의 차이","id":"0a723921"},{"tagName":"h3","title":"Value Type","id":"9e3aee9c"},{"tagName":"h3","title":"Reference Type","id":"95277be6"},{"tagName":"h2","title":"ARC(Automatic Reference Counting)","id":"f2d7f706"},{"tagName":"h3","title":"강한 참조(Strong Reference)","id":"c1a03e52"},{"tagName":"h3","title":"약한 참조(Weak Reference)","id":"ff3895e0"},{"tagName":"h3","title":"미약 참조(Unowned Reference)","id":"d8691b65"},{"tagName":"h2","title":"프로퍼티 Assign 방법","id":"bdd81a7c"}],"language":"kr"}]}]]}]]
8:null
