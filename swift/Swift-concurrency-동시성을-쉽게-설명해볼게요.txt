1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift-concurrency-%EB%8F%99%EC%8B%9C%EC%84%B1%EC%9D%84-%EC%89%BD%EA%B2%8C-%EC%84%A4%EB%AA%85%ED%95%B4%EB%B3%BC%EA%B2%8C%EC%9A%94","d"],{"children":["__PAGE__?{\"slug\":\"Swift-concurrency-동시성을-쉽게-설명해볼게요\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift-concurrency-%EB%8F%99%EC%8B%9C%EC%84%B1%EC%9D%84-%EC%89%BD%EA%B2%8C-%EC%84%A4%EB%AA%85%ED%95%B4%EB%B3%BC%EA%B2%8C%EC%9A%94","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift-concurrency-동시성을-쉽게-설명해볼게요\"}"},"styles":[]}],"segment":["slug","Swift-concurrency-%EB%8F%99%EC%8B%9C%EC%84%B1%EC%9D%84-%EC%89%BD%EA%B2%8C-%EC%84%A4%EB%AA%85%ED%95%B4%EB%B3%BC%EA%B2%8C%EC%9A%94","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift Concurrency 동시성을 쉽게 설명해볼게요! | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"동시성(Concurrency) 기능은 Swift 언어에 큰 변화를 가져왔습니다. 동시성은 여러 작업을 동시에 실행하여 성능을 향상시키고, 사용자 경험을 개선할 수 있는 중요한 개념입니다."}],["$","meta","3",{"name":"keywords","content":"swift,SwiftUI"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift-concurrency-%EB%8F%99%EC%8B%9C%EC%84%B1%EC%9D%84-%EC%89%BD%EA%B2%8C-%EC%84%A4%EB%AA%85%ED%95%B4%EB%B3%BC%EA%B2%8C%EC%9A%94"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift Concurrency 동시성을 쉽게 설명해볼게요! | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift Concurrency 동시성을 쉽게 설명해볼게요! | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"동시성(Concurrency) 기능은 Swift 언어에 큰 변화를 가져왔습니다. 동시성은 여러 작업을 동시에 실행하여 성능을 향상시키고, 사용자 경험을 개선할 수 있는 중요한 개념입니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift-concurrency-%EB%8F%99%EC%8B%9C%EC%84%B1%EC%9D%84-%EC%89%BD%EA%B2%8C-%EC%84%A4%EB%AA%85%ED%95%B4%EB%B3%BC%EA%B2%8C%EC%9A%94"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift Concurrency 동시성을 쉽게 설명해볼게요! | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"동시성(Concurrency) 기능은 Swift 언어에 큰 변화를 가져왔습니다. 동시성은 여러 작업을 동시에 실행하여 성능을 향상시키고, 사용자 경험을 개선할 수 있는 중요한 개념입니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBasic.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift Concurrency 동시성을 쉽게 설명해볼게요!"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift Concurrency 동시성을 쉽게 설명해볼게요!"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-01"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h2",null,{"id":"35deb744","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Swift Concurrency 동시성을 쉽게 설명해볼게요!"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift 5.5에서 도입된 동시성(Concurrency) 기능은 Swift 언어에 큰 변화를 가져왔습니다. 동시성은 여러 작업을 동시에 실행하여 성능을 향상시키고, 사용자 경험을 개선할 수 있는 중요한 개념입니다. 이 글에서는 Swift의 동시성 개념을 쉽게 설명하고, 이를 활용하는 방법에 대해 알아보겠습니다."}],"\n",["$","h2",null,{"id":"039acd02","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"동시성이란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"동시성은 여러 작업을 동시에 실행하는 능력을 말합니다. 이는 멀티태스킹의 기본 요소로, 현대적인 애플리케이션에서는 필수적입니다. 예를 들어, 동시성을 사용하면 사용자가 앱을 사용하는 동안 백그라운드에서 데이터를 다운로드하거나 처리할 수 있습니다."}],"\n",["$","h3",null,{"id":"04462dfb","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"전통적인 동시성 접근법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"기존의 Swift에서는 동시성을 구현하기 위해 GCD(Grand Central Dispatch)나 OperationQueue를 사용했습니다. 하지만, 이러한 방법은 코드가 복잡해지고 가독성이 떨어질 수 있습니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"DispatchQueue.global().async {\n    // 백그라운드 작업\n    DispatchQueue.main.async {\n        // 메인 스레드에서 UI 업데이트\n    }\n}\n"}],"position":{"start":{"line":14,"column":1,"offset":504},"end":{"line":21,"column":4,"offset":630}}},"children":"DispatchQueue.global().async {\n    // 백그라운드 작업\n    DispatchQueue.main.async {\n        // 메인 스레드에서 UI 업데이트\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위의 코드는 비동기 작업을 처리하는 전통적인 방법 중 하나입니다. 이제 Swift Concurrency를 사용하여 더 간단하고 직관적인 방법을 살펴보겠습니다."}],"\n",["$","h2",null,{"id":"a013f1aa","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Swift Concurrency의 주요 구성 요소"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift Concurrency는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async","position":{"start":{"line":27,"column":20,"offset":773},"end":{"line":27,"column":27,"offset":780}}}],"position":{"start":{"line":27,"column":20,"offset":773},"end":{"line":27,"column":27,"offset":780}}},"children":"async"}}],"/",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":27,"column":28,"offset":781},"end":{"line":27,"column":35,"offset":788}}}],"position":{"start":{"line":27,"column":28,"offset":781},"end":{"line":27,"column":35,"offset":788}}},"children":"await"}}]," 구문과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Task","position":{"start":{"line":27,"column":40,"offset":793},"end":{"line":27,"column":46,"offset":799}}}],"position":{"start":{"line":27,"column":40,"offset":793},"end":{"line":27,"column":46,"offset":799}}},"children":"Task"}}],"를 통해 동시성을 보다 쉽게 구현할 수 있도록 합니다."]}],"\n",["$","h3",null,{"id":"04ebecfc","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"async와 await"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async","position":{"start":{"line":31,"column":1,"offset":849},"end":{"line":31,"column":8,"offset":856}}}],"position":{"start":{"line":31,"column":1,"offset":849},"end":{"line":31,"column":8,"offset":856}}},"children":"async"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":31,"column":10,"offset":858},"end":{"line":31,"column":17,"offset":865}}}],"position":{"start":{"line":31,"column":10,"offset":858},"end":{"line":31,"column":17,"offset":865}}},"children":"await"}}]," 키워드는 비동기 작업을 처리하는 새로운 방법입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async","position":{"start":{"line":31,"column":47,"offset":895},"end":{"line":31,"column":54,"offset":902}}}],"position":{"start":{"line":31,"column":47,"offset":895},"end":{"line":31,"column":54,"offset":902}}},"children":"async"}}]," 함수는 비동기 작업을 수행하며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":31,"column":73,"offset":921},"end":{"line":31,"column":80,"offset":928}}}],"position":{"start":{"line":31,"column":73,"offset":921},"end":{"line":31,"column":80,"offset":928}}},"children":"await"}}]," 키워드는 비동기 작업의 결과를 기다립니다."]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\n\nfunc fetchUserData() async -> String {\n    // 네트워크 요청을 시뮬레이션하기 위해 2초 대기\n    try? await Task.sleep(nanoseconds: 2 * 1_000_000_000)\n    return \"User Data\"\n}\n\nfunc displayUserData() async {\n    let data = await fetchUserData()\n    print(data)\n}\n\nTask {\n    await displayUserData()\n}\n"}],"position":{"start":{"line":33,"column":1,"offset":954},"end":{"line":50,"column":4,"offset":1265}}},"children":"import Foundation\n\nfunc fetchUserData() async -> String {\n    // 네트워크 요청을 시뮬레이션하기 위해 2초 대기\n    try? await Task.sleep(nanoseconds: 2 * 1_000_000_000)\n    return \"User Data\"\n}\n\nfunc displayUserData() async {\n    let data = await fetchUserData()\n    print(data)\n}\n\nTask {\n    await displayUserData()\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 예제에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetchUserData","position":{"start":{"line":52,"column":9,"offset":1275},"end":{"line":52,"column":24,"offset":1290}}}],"position":{"start":{"line":52,"column":9,"offset":1275},"end":{"line":52,"column":24,"offset":1290}}},"children":"fetchUserData"}}]," 함수는 비동기 작업을 수행하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"displayUserData","position":{"start":{"line":52,"column":43,"offset":1309},"end":{"line":52,"column":60,"offset":1326}}}],"position":{"start":{"line":52,"column":43,"offset":1309},"end":{"line":52,"column":60,"offset":1326}}},"children":"displayUserData"}}]," 함수는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":52,"column":65,"offset":1331},"end":{"line":52,"column":72,"offset":1338}}}],"position":{"start":{"line":52,"column":65,"offset":1331},"end":{"line":52,"column":72,"offset":1338}}},"children":"await"}}]," 키워드를 사용하여 이 작업의 결과를 기다립니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Task","position":{"start":{"line":52,"column":100,"offset":1366},"end":{"line":52,"column":106,"offset":1372}}}],"position":{"start":{"line":52,"column":100,"offset":1366},"end":{"line":52,"column":106,"offset":1372}}},"children":"Task"}}]," 블록은 비동기 컨텍스트에서 함수를 호출하는 방법입니다."]}],"\n",["$","h3",null,{"id":"7bb0ddf9","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"Task"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Task","position":{"start":{"line":56,"column":1,"offset":1415},"end":{"line":56,"column":7,"offset":1421}}}],"position":{"start":{"line":56,"column":1,"offset":1415},"end":{"line":56,"column":7,"offset":1421}}},"children":"Task"}}],"는 비동기 작업을 실행하는 단위입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Task","position":{"start":{"line":56,"column":29,"offset":1443},"end":{"line":56,"column":35,"offset":1449}}}],"position":{"start":{"line":56,"column":29,"offset":1443},"end":{"line":56,"column":35,"offset":1449}}},"children":"Task"}}],"를 사용하여 비동기 작업을 생성하고 실행할 수 있습니다."]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"Task {\n    let data = await fetchUserData()\n    print(data)\n}\n"}],"position":{"start":{"line":58,"column":1,"offset":1482},"end":{"line":63,"column":4,"offset":1556}}},"children":"Task {\n    let data = await fetchUserData()\n    print(data)\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Task","position":{"start":{"line":65,"column":10,"offset":1567},"end":{"line":65,"column":16,"offset":1573}}}],"position":{"start":{"line":65,"column":10,"offset":1567},"end":{"line":65,"column":16,"offset":1573}}},"children":"Task"}}],"를 사용하여 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetchUserData","position":{"start":{"line":65,"column":23,"offset":1580},"end":{"line":65,"column":38,"offset":1595}}}],"position":{"start":{"line":65,"column":23,"offset":1580},"end":{"line":65,"column":38,"offset":1595}}},"children":"fetchUserData"}}]," 함수를 비동기적으로 호출하고, 결과를 출력합니다."]}],"\n",["$","h3",null,{"id":"b67832d1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"TaskGroup"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TaskGroup","position":{"start":{"line":69,"column":1,"offset":1640},"end":{"line":69,"column":12,"offset":1651}}}],"position":{"start":{"line":69,"column":1,"offset":1640},"end":{"line":69,"column":12,"offset":1651}}},"children":"TaskGroup"}}],"은 여러 개의 비동기 작업을 그룹화하여 동시에 실행할 수 있도록 합니다. 이를 통해 병렬 처리를 쉽게 구현할 수 있습니다."]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\n\nfunc fetchMultipleUserData() async {\n    await withTaskGroup(of: String.self) { group in\n        group.addTask {\n            return await fetchUserData()\n        }\n        group.addTask {\n            return await fetchUserData()\n        }\n\n        for await result in group {\n            print(result)\n        }\n    }\n}\n\nTask {\n    await fetchMultipleUserData()\n}\n"}],"position":{"start":{"line":71,"column":1,"offset":1721},"end":{"line":92,"column":4,"offset":2116}}},"children":"import Foundation\n\nfunc fetchMultipleUserData() async {\n    await withTaskGroup(of: String.self) { group in\n        group.addTask {\n            return await fetchUserData()\n        }\n        group.addTask {\n            return await fetchUserData()\n        }\n\n        for await result in group {\n            print(result)\n        }\n    }\n}\n\nTask {\n    await fetchMultipleUserData()\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"withTaskGroup","position":{"start":{"line":94,"column":10,"offset":2127},"end":{"line":94,"column":25,"offset":2142}}}],"position":{"start":{"line":94,"column":10,"offset":2127},"end":{"line":94,"column":25,"offset":2142}}},"children":"withTaskGroup"}}],"을 사용하여 두 개의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetchUserData","position":{"start":{"line":94,"column":37,"offset":2154},"end":{"line":94,"column":52,"offset":2169}}}],"position":{"start":{"line":94,"column":37,"offset":2154},"end":{"line":94,"column":52,"offset":2169}}},"children":"fetchUserData"}}]," 작업을 동시에 실행하고, 결과를 출력합니다."]}],"\n",["$","h2",null,{"id":"f0211ccf","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"동시성을 사용한 실제 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 동시성을 사용하여 실제 애플리케이션에서 네트워크 요청을 처리하는 예제를 살펴보겠습니다."}],"\n",["$","h3",null,{"id":"6c5409c4","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"네트워크 요청 예제"}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import Foundation\n\nstruct User: Decodable {\n    let id: Int\n    let name: String\n}\n\nfunc fetchUser(id: Int) async throws -> User {\n    let url = URL(string: \"https://jsonplaceholder.typicode.com/users/\\(id)\")!\n    let (data, _) = try await URLSession.shared.data(from: url)\n    let user = try JSONDecoder().decode(User.self, from: data)\n    return user\n}\n\nfunc displayUser() async {\n    do {\n        let user = try await fetchUser(id: 1)\n        print(\"User ID: \\(user.id), User Name: \\(user.name)\")\n    } catch {\n        print(\"Failed to fetch user: \\(error)\")\n    }\n}\n\nTask {\n    await displayUser()\n}\n"}],"position":{"start":{"line":102,"column":1,"offset":2284},"end":{"line":129,"column":4,"offset":2900}}},"children":"import Foundation\n\nstruct User: Decodable {\n    let id: Int\n    let name: String\n}\n\nfunc fetchUser(id: Int) async throws -> User {\n    let url = URL(string: \"https://jsonplaceholder.typicode.com/users/\\(id)\")!\n    let (data, _) = try await URLSession.shared.data(from: url)\n    let user = try JSONDecoder().decode(User.self, from: data)\n    return user\n}\n\nfunc displayUser() async {\n    do {\n        let user = try await fetchUser(id: 1)\n        print(\"User ID: \\(user.id), User Name: \\(user.name)\")\n    } catch {\n        print(\"Failed to fetch user: \\(error)\")\n    }\n}\n\nTask {\n    await displayUser()\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위의 예제에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetchUser","position":{"start":{"line":131,"column":10,"offset":2911},"end":{"line":131,"column":21,"offset":2922}}}],"position":{"start":{"line":131,"column":10,"offset":2911},"end":{"line":131,"column":21,"offset":2922}}},"children":"fetchUser"}}]," 함수를 사용하여 네트워크 요청을 비동기적으로 수행하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"displayUser","position":{"start":{"line":131,"column":53,"offset":2954},"end":{"line":131,"column":66,"offset":2967}}}],"position":{"start":{"line":131,"column":53,"offset":2954},"end":{"line":131,"column":66,"offset":2967}}},"children":"displayUser"}}]," 함수에서 결과를 출력합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Task","position":{"start":{"line":131,"column":83,"offset":2984},"end":{"line":131,"column":89,"offset":2990}}}],"position":{"start":{"line":131,"column":83,"offset":2984},"end":{"line":131,"column":89,"offset":2990}}},"children":"Task"}}]," 블록을 사용하여 비동기 컨텍스트에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"displayUser","position":{"start":{"line":131,"column":110,"offset":3011},"end":{"line":131,"column":123,"offset":3024}}}],"position":{"start":{"line":131,"column":110,"offset":3011},"end":{"line":131,"column":123,"offset":3024}}},"children":"displayUser"}}]," 함수를 호출합니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift Concurrency는 비동기 작업을 보다 쉽고 직관적으로 처리할 수 있도록 도와줍니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async","position":{"start":{"line":135,"column":57,"offset":3100},"end":{"line":135,"column":64,"offset":3107}}}],"position":{"start":{"line":135,"column":57,"offset":3100},"end":{"line":135,"column":64,"offset":3107}}},"children":"async"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":135,"column":66,"offset":3109},"end":{"line":135,"column":73,"offset":3116}}}],"position":{"start":{"line":135,"column":66,"offset":3109},"end":{"line":135,"column":73,"offset":3116}}},"children":"await"}}]," 키워드를 사용하면 복잡한 비동기 코드를 간결하게 작성할 수 있으며, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Task","position":{"start":{"line":135,"column":112,"offset":3155},"end":{"line":135,"column":118,"offset":3161}}}],"position":{"start":{"line":135,"column":112,"offset":3155},"end":{"line":135,"column":118,"offset":3161}}},"children":"Task"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TaskGroup","position":{"start":{"line":135,"column":120,"offset":3163},"end":{"line":135,"column":131,"offset":3174}}}],"position":{"start":{"line":135,"column":120,"offset":3163},"end":{"line":135,"column":131,"offset":3174}}},"children":"TaskGroup"}}],"을 통해 병렬 처리를 쉽게 구현할 수 있습니다. Swift Concurrency를 활용하여 성능을 향상시키고 사용자 경험을 개선하는 앱을 개발해 보세요."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift Concurrency 동시성을 쉽게 설명해볼게요!","toc":[{"tagName":"h2","title":"Swift Concurrency 동시성을 쉽게 설명해볼게요!","id":"35deb744"},{"tagName":"h2","title":"동시성이란?","id":"039acd02"},{"tagName":"h3","title":"전통적인 동시성 접근법","id":"04462dfb"},{"tagName":"h2","title":"Swift Concurrency의 주요 구성 요소","id":"a013f1aa"},{"tagName":"h3","title":"async와 await","id":"04ebecfc"},{"tagName":"h3","title":"Task","id":"7bb0ddf9"},{"tagName":"h3","title":"TaskGroup","id":"b67832d1"},{"tagName":"h2","title":"동시성을 사용한 실제 예제","id":"f0211ccf"},{"tagName":"h3","title":"네트워크 요청 예제","id":"6c5409c4"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
