1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI-ForEach%EB%A5%BC-%ED%86%B5%ED%95%B4-View-%EC%B5%9C%EC%A0%81%ED%99%94%ED%95%98%EA%B8%B0-%EA%B8%B0%EB%B3%B8%EC%82%AC%EC%9A%A9%EB%B2%95%EB%B6%80%ED%84%B0-%ED%99%9C%EC%9A%A9%EA%B9%8C%EC%A7%80-79a2c2b0","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI-ForEach를-통해-View-최적화하기-기본사용법부터-활용까지-79a2c2b0\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI-ForEach%EB%A5%BC-%ED%86%B5%ED%95%B4-View-%EC%B5%9C%EC%A0%81%ED%99%94%ED%95%98%EA%B8%B0-%EA%B8%B0%EB%B3%B8%EC%82%AC%EC%9A%A9%EB%B2%95%EB%B6%80%ED%84%B0-%ED%99%9C%EC%9A%A9%EA%B9%8C%EC%A7%80-79a2c2b0","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI-ForEach를-통해-View-최적화하기-기본사용법부터-활용까지-79a2c2b0\"}"},"styles":[]}],"segment":["slug","SwiftUI-ForEach%EB%A5%BC-%ED%86%B5%ED%95%B4-View-%EC%B5%9C%EC%A0%81%ED%99%94%ED%95%98%EA%B8%B0-%EA%B8%B0%EB%B3%B8%EC%82%AC%EC%9A%A9%EB%B2%95%EB%B6%80%ED%84%B0-%ED%99%9C%EC%9A%A9%EA%B9%8C%EC%A7%80-79a2c2b0","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI ForEach를 통해 View 최적화하기: 기본사용법부터 활용까지 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"SwiftUI의 `ForEach` 뷰를 사용하여 효율적이고 최적화된 UI를 구성하는 방법에 대해 알아보겠습니다. 기본 사용법부터 다양한 활용 팁까지, `ForEach`의 잠재력을 완전히 끌어내는 방법을 설명합니다."}],["$","meta","3",{"name":"keywords","content":"SwiftUI,ForEach,iOS,프로그래밍"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI-ForEach%EB%A5%BC-%ED%86%B5%ED%95%B4-View-%EC%B5%9C%EC%A0%81%ED%99%94%ED%95%98%EA%B8%B0-%EA%B8%B0%EB%B3%B8%EC%82%AC%EC%9A%A9%EB%B2%95%EB%B6%80%ED%84%B0-%ED%99%9C%EC%9A%A9%EA%B9%8C%EC%A7%80-79a2c2b0"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI ForEach를 통해 View 최적화하기: 기본사용법부터 활용까지 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI ForEach를 통해 View 최적화하기: 기본사용법부터 활용까지 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"SwiftUI의 `ForEach` 뷰를 사용하여 효율적이고 최적화된 UI를 구성하는 방법에 대해 알아보겠습니다. 기본 사용법부터 다양한 활용 팁까지, `ForEach`의 잠재력을 완전히 끌어내는 방법을 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI-ForEach%EB%A5%BC-%ED%86%B5%ED%95%B4-View-%EC%B5%9C%EC%A0%81%ED%99%94%ED%95%98%EA%B8%B0-%EA%B8%B0%EB%B3%B8%EC%82%AC%EC%9A%A9%EB%B2%95%EB%B6%80%ED%84%B0-%ED%99%9C%EC%9A%A9%EA%B9%8C%EC%A7%80-79a2c2b0"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI ForEach를 통해 View 최적화하기: 기본사용법부터 활용까지 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"SwiftUI의 `ForEach` 뷰를 사용하여 효율적이고 최적화된 UI를 구성하는 방법에 대해 알아보겠습니다. 기본 사용법부터 다양한 활용 팁까지, `ForEach`의 잠재력을 완전히 끌어내는 방법을 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner5.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner5.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI ForEach를 통해 View 최적화하기: 기본사용법부터 활용까지"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI ForEach를 통해 View 최적화하기: 기본사용법부터 활용까지"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-10"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"d1191e43","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"SwiftUI ForEach를 통해 View 최적화하기: 기본사용법부터 활용까지"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI는 UI를 선언적으로 구성할 수 있는 강력한 프레임워크를 제공합니다. 그 중에서도 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ForEach","position":{"start":{"line":4,"column":54,"offset":102},"end":{"line":4,"column":63,"offset":111}}}],"position":{"start":{"line":4,"column":54,"offset":102},"end":{"line":4,"column":63,"offset":111}}},"children":"ForEach"}}]," 뷰는 목록이나 반복되는 뷰를 효율적으로 만들어주는 중요한 도구입니다. 이 글에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ForEach","position":{"start":{"line":4,"column":110,"offset":158},"end":{"line":4,"column":119,"offset":167}}}],"position":{"start":{"line":4,"column":110,"offset":158},"end":{"line":4,"column":119,"offset":167}}},"children":"ForEach"}}],"의 기본 사용법부터 View 최적화에 이르기까지, 단계별로 상세하게 설명하겠습니다."]}],"\n",["$","h2",null,{"id":"91154efa","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"1. ForEach 기본 사용법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ForEach","position":{"start":{"line":8,"column":1,"offset":237},"end":{"line":8,"column":10,"offset":246}}}],"position":{"start":{"line":8,"column":1,"offset":237},"end":{"line":8,"column":10,"offset":246}}},"children":"ForEach"}}],"는 배열이나 범위와 같은 데이터 소스를 순회하며, 각 아이템에 대해 반복되는 뷰를 생성합니다. 기본적인 사용법은 다음과 같습니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    let items = [\"Apple\", \"Orange\", \"Banana\"]\n\n    var body: some View {\n        List {\n            ForEach(items, id: \\.\text{id}) { item in\n                Text(item)\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":320},"end":{"line":24,"column":4,"offset":575}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    let items = [\"Apple\", \"Orange\", \"Banana\"]\n\n    var body: some View {\n        List {\n            ForEach(items, id: \\.\text{id}) { item in\n                Text(item)\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 세 개의 문자열이 포함된 배열을 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ForEach","position":{"start":{"line":26,"column":25,"offset":601},"end":{"line":26,"column":34,"offset":610}}}],"position":{"start":{"line":26,"column":25,"offset":601},"end":{"line":26,"column":34,"offset":610}}},"children":"ForEach"}}],"로 순회하며 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Text","position":{"start":{"line":26,"column":41,"offset":617},"end":{"line":26,"column":47,"offset":623}}}],"position":{"start":{"line":26,"column":41,"offset":617},"end":{"line":26,"column":47,"offset":623}}},"children":"Text"}}]," 뷰를 생성합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id","position":{"start":{"line":26,"column":58,"offset":634},"end":{"line":26,"column":62,"offset":638}}}],"position":{"start":{"line":26,"column":58,"offset":634},"end":{"line":26,"column":62,"offset":638}}},"children":"id"}}],"는 데이터 소스의 각 아이템을 고유하게 식별할 수 있는 속성을 사용해야 합니다."]}],"\n",["$","h2",null,{"id":"46563287","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"2. Identifiable 프로토콜 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id","position":{"start":{"line":30,"column":1,"offset":714},"end":{"line":30,"column":5,"offset":718}}}],"position":{"start":{"line":30,"column":1,"offset":714},"end":{"line":30,"column":5,"offset":718}}},"children":"id"}}],"를 명시적으로 지정하지 않으려면 데이터 모델이 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Identifiable","position":{"start":{"line":30,"column":31,"offset":744},"end":{"line":30,"column":45,"offset":758}}}],"position":{"start":{"line":30,"column":31,"offset":744},"end":{"line":30,"column":45,"offset":758}}},"children":"Identifiable"}}]," 프로토콜을 준수하도록 만들 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Identifiable","position":{"start":{"line":30,"column":69,"offset":782},"end":{"line":30,"column":83,"offset":796}}}],"position":{"start":{"line":30,"column":69,"offset":782},"end":{"line":30,"column":83,"offset":796}}},"children":"Identifiable"}}]," 프로토콜을 사용하면 데이터 내에서 고유한 식별자를 자동으로 제공합니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct Fruit: Identifiable {\n    let id = UUID()\n    let name: String\n}\n\nlet fruits = [\n    Fruit(name: \"Apple\"),\n    Fruit(name: \"Orange\"),\n    Fruit(name: \"Banana\")\n]\n\nstruct ContentView: View {\n    var body: some View {\n        List {\n            ForEach(fruits) { fruit in\n                Text(fruit.name)\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":32,"column":1,"offset":838},"end":{"line":53,"column":4,"offset":1192}}},"children":"struct Fruit: Identifiable {\n    let id = UUID()\n    let name: String\n}\n\nlet fruits = [\n    Fruit(name: \"Apple\"),\n    Fruit(name: \"Orange\"),\n    Fruit(name: \"Banana\")\n]\n\nstruct ContentView: View {\n    var body: some View {\n        List {\n            ForEach(fruits) { fruit in\n                Text(fruit.name)\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 경우 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id","position":{"start":{"line":55,"column":6,"offset":1199},"end":{"line":55,"column":10,"offset":1203}}}],"position":{"start":{"line":55,"column":6,"offset":1199},"end":{"line":55,"column":10,"offset":1203}}},"children":"id"}}],"를 따로 지정하지 않고 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ForEach","position":{"start":{"line":55,"column":23,"offset":1216},"end":{"line":55,"column":32,"offset":1225}}}],"position":{"start":{"line":55,"column":23,"offset":1216},"end":{"line":55,"column":32,"offset":1225}}},"children":"ForEach"}}],"에서 자동으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id","position":{"start":{"line":55,"column":40,"offset":1233},"end":{"line":55,"column":44,"offset":1237}}}],"position":{"start":{"line":55,"column":40,"offset":1233},"end":{"line":55,"column":44,"offset":1237}}},"children":"id"}}],"를 추론합니다."]}],"\n",["$","h2",null,{"id":"cdaf371b","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"3. 인덱스 기반으로 ForEach 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["배열의 각 요소를 직접 접근해야 하는 경우 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ForEach","position":{"start":{"line":59,"column":25,"offset":1300},"end":{"line":59,"column":34,"offset":1309}}}],"position":{"start":{"line":59,"column":25,"offset":1300},"end":{"line":59,"column":34,"offset":1309}}},"children":"ForEach"}}],"를 인덱스 기반으로 사용할 수 있습니다. 이는 뷰를 업데이트하거나 특정 아이템에 접근할 때 유용합니다:"]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    let items = [\"Apple\", \"Orange\", \"Banana\"]\n\n    var body: some View {\n        List {\n            ForEach(items.indices, id: \\.\text{self}) { index in\n                Text(items[index])\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":61,"column":1,"offset":1368},"end":{"line":73,"column":4,"offset":1626}}},"children":"struct ContentView: View {\n    let items = [\"Apple\", \"Orange\", \"Banana\"]\n\n    var body: some View {\n        List {\n            ForEach(items.indices, id: \\.\text{self}) { index in\n                Text(items[index])\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"items","position":{"start":{"line":75,"column":7,"offset":1634},"end":{"line":75,"column":14,"offset":1641}}}],"position":{"start":{"line":75,"column":7,"offset":1634},"end":{"line":75,"column":14,"offset":1641}}},"children":"items"}}]," 배열의 인덱스를 순회하며 각 아이템에 접근합니다."]}],"\n",["$","h2",null,{"id":"c9a3125d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"4. ForEach에서 다양한 뷰 사용하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ForEach","position":{"start":{"line":79,"column":1,"offset":1699},"end":{"line":79,"column":10,"offset":1708}}}],"position":{"start":{"line":79,"column":1,"offset":1699},"end":{"line":79,"column":10,"offset":1708}}},"children":"ForEach"}}],"에서는 각 아이템 당 서로 다른 뷰를 생성할 수도 있습니다. 예를 들어, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"HStack","position":{"start":{"line":79,"column":51,"offset":1749},"end":{"line":79,"column":59,"offset":1757}}}],"position":{"start":{"line":79,"column":51,"offset":1749},"end":{"line":79,"column":59,"offset":1757}}},"children":"HStack"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"VStack","position":{"start":{"line":79,"column":61,"offset":1759},"end":{"line":79,"column":69,"offset":1767}}}],"position":{"start":{"line":79,"column":61,"offset":1759},"end":{"line":79,"column":69,"offset":1767}}},"children":"VStack"}}],"을 조합하여 더욱 다양한 레이아웃을 생성할 수 있습니다:"]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    let items = [\"Apple\", \"Orange\", \"Banana\"]\n\n    var body: some View {\n        VStack {\n            ForEach(items, id: \\.\text{self}) { item in\n                HStack {\n                    Text(\"Fruit: \")\n                    Text(item)\n                        .font(.headline)\n                }\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":81,"column":1,"offset":1800},"end":{"line":97,"column":4,"offset":2167}}},"children":"struct ContentView: View {\n    let items = [\"Apple\", \"Orange\", \"Banana\"]\n\n    var body: some View {\n        VStack {\n            ForEach(items, id: \\.\text{self}) { item in\n                HStack {\n                    Text(\"Fruit: \")\n                    Text(item)\n                        .font(.headline)\n                }\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"HStack","position":{"start":{"line":99,"column":9,"offset":2177},"end":{"line":99,"column":17,"offset":2185}}}],"position":{"start":{"line":99,"column":9,"offset":2177},"end":{"line":99,"column":17,"offset":2185}}},"children":"HStack"}}],"을 사용하여 문자열 앞에 레이블을 추가하여 각 아이템을 더 풍부하게 표시합니다."]}],"\n",["$","h2",null,{"id":"0d119285","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"5. ForEach로 동적 목록 관리하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ForEach","position":{"start":{"line":103,"column":1,"offset":2258},"end":{"line":103,"column":10,"offset":2267}}}],"position":{"start":{"line":103,"column":1,"offset":2258},"end":{"line":103,"column":10,"offset":2267}}},"children":"ForEach"}}],"는 동적 데이터 소스를 다룰 때 특히 유용합니다. 예를 들어 상태 변화를 감지하여 목록을 실시간으로 업데이트할 수 있습니다:"]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct ContentView: View {\n    @State private var fruits = [\n        Fruit(name: \"Apple\"),\n        Fruit(name: \"Orange\"),\n        Fruit(name: \"Banana\")\n    ]\n\n    var body: some View {\n        VStack {\n            List {\n                ForEach(fruits) { fruit in\n                    Text(fruit.name)\n                }\n            }\n            Button(action: {\n                fruits.append(Fruit(name: \"Grapes\"))\n            }) {\n                Text(\"Add Fruit\")\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":105,"column":1,"offset":2338},"end":{"line":128,"column":4,"offset":2848}}},"children":"struct ContentView: View {\n    @State private var fruits = [\n        Fruit(name: \"Apple\"),\n        Fruit(name: \"Orange\"),\n        Fruit(name: \"Banana\")\n    ]\n\n    var body: some View {\n        VStack {\n            List {\n                ForEach(fruits) { fruit in\n                    Text(fruit.name)\n                }\n            }\n            Button(action: {\n                fruits.append(Fruit(name: \"Grapes\"))\n            }) {\n                Text(\"Add Fruit\")\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 예제에서는 버튼을 클릭할 때마다 새로운 아이템이 추가되어 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"List","position":{"start":{"line":130,"column":35,"offset":2884},"end":{"line":130,"column":41,"offset":2890}}}],"position":{"start":{"line":130,"column":35,"offset":2884},"end":{"line":130,"column":41,"offset":2890}}},"children":"List"}}],"가 자동으로 업데이트됩니다."]}],"\n",["$","h2",null,{"id":"1cb5f258","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"6. 성능 최적화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ForEach","position":{"start":{"line":134,"column":1,"offset":2921},"end":{"line":134,"column":10,"offset":2930}}}],"position":{"start":{"line":134,"column":1,"offset":2921},"end":{"line":134,"column":10,"offset":2930}}},"children":"ForEach"}}],"에서 성능을 최적화하려면 항목의 개수와 뷰의 복잡성을 고려해야 합니다. 아래 몇 가지 팁을 소개합니다:"]}],"\n",["$","h3",null,{"id":"9516c35c","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"고유한 식별자 사용"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["데이터 소스의 각 아이템은 고유한 식별자를 가져야 합니다. 이는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id","position":{"start":{"line":138,"column":37,"offset":3041},"end":{"line":138,"column":41,"offset":3045}}}],"position":{"start":{"line":138,"column":37,"offset":3041},"end":{"line":138,"column":41,"offset":3045}}},"children":"id"}}],"를 명시적으로 설정하는 것으로 해결할 수 있습니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id","position":{"start":{"line":138,"column":70,"offset":3074},"end":{"line":138,"column":74,"offset":3078}}}],"position":{"start":{"line":138,"column":70,"offset":3074},"end":{"line":138,"column":74,"offset":3078}}},"children":"id"}}],"를 고유하게 설정하지 않으면, 리렌더링 시 쓸데없는 작업이 발생할 수 있습니다."]}],"\n",["$","h3",null,{"id":"98966d5e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"뷰 구조 단순화"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"복잡한 뷰 계층 구조를 피하고 가능한 한 간단한 뷰를 사용하는 것이 좋습니다."}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct SimpleView: View {\n    let items = [\"Apple\", \"Orange\", \"Banana\"]\n\n    var body: some View {\n        List {\n            ForEach(items, id: \\.\text{self}) { item in\n                Text(item)\n            }\n        }\n    }\n}\n"}],"position":{"start":{"line":144,"column":1,"offset":3183},"end":{"line":156,"column":4,"offset":3423}}},"children":"struct SimpleView: View {\n    let items = [\"Apple\", \"Orange\", \"Banana\"]\n\n    var body: some View {\n        List {\n            ForEach(items, id: \\.\text{self}) { item in\n                Text(item)\n            }\n        }\n    }\n}\n"}}]}],"\n",["$","h3",null,{"id":"80f6cd1b","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"상태 관리를 잘하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"상태 변화를 최소화하고, 상태 업데이트 시 필요한 부분만 리렌더링하도록 설계해야 합니다. 가능하다면 불변 데이터를 사용하는 것이 좋습니다."}],"\n",["$","h2",null,{"id":"3842d2cc","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"7. 결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ForEach","position":{"start":{"line":164,"column":10,"offset":3539},"end":{"line":164,"column":19,"offset":3548}}}],"position":{"start":{"line":164,"column":10,"offset":3539},"end":{"line":164,"column":19,"offset":3548}}},"children":"ForEach"}}],"를 사용하면 반복되는 UI 컴포넌트를 쉽게 관리하면서, 성능 최적화까지 가능하게 합니다. 주요 키 포인트는 데이터를 식별할 수 있게 하고, 뷰를 가능한 한 단순하게 유지하며, 상태 관리를 효율적으로 수행하는 것입니다. 이를 통해 앱의 성능을 크게 향상시킬 수 있습니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"SwiftUI ForEach를 통해 View 최적화하기: 기본사용법부터 활용까지","toc":[{"tagName":"h1","title":"SwiftUI ForEach를 통해 View 최적화하기: 기본사용법부터 활용까지","id":"d1191e43"},{"tagName":"h2","title":"1. ForEach 기본 사용법","id":"91154efa"},{"tagName":"h2","title":"2. Identifiable 프로토콜 사용하기","id":"46563287"},{"tagName":"h2","title":"3. 인덱스 기반으로 ForEach 사용하기","id":"cdaf371b"},{"tagName":"h2","title":"4. ForEach에서 다양한 뷰 사용하기","id":"c9a3125d"},{"tagName":"h2","title":"5. ForEach로 동적 목록 관리하기","id":"0d119285"},{"tagName":"h2","title":"6. 성능 최적화","id":"1cb5f258"},{"tagName":"h3","title":"고유한 식별자 사용","id":"9516c35c"},{"tagName":"h3","title":"뷰 구조 단순화","id":"98966d5e"},{"tagName":"h3","title":"상태 관리를 잘하기","id":"80f6cd1b"},{"tagName":"h2","title":"7. 결론","id":"3842d2cc"}],"language":"kr"}]}]]}]]
8:null
