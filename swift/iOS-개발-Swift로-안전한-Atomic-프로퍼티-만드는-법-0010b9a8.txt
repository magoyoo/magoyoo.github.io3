1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","iOS-%EA%B0%9C%EB%B0%9C-Swift%EB%A1%9C-%EC%95%88%EC%A0%84%ED%95%9C-Atomic-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B2%95-0010b9a8","d"],{"children":["__PAGE__?{\"slug\":\"iOS-개발-Swift로-안전한-Atomic-프로퍼티-만드는-법-0010b9a8\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","iOS-%EA%B0%9C%EB%B0%9C-Swift%EB%A1%9C-%EC%95%88%EC%A0%84%ED%95%9C-Atomic-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B2%95-0010b9a8","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"iOS-개발-Swift로-안전한-Atomic-프로퍼티-만드는-법-0010b9a8\"}"},"styles":[]}],"segment":["slug","iOS-%EA%B0%9C%EB%B0%9C-Swift%EB%A1%9C-%EC%95%88%EC%A0%84%ED%95%9C-Atomic-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B2%95-0010b9a8","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"iOS 개발: Swift로 안전한 Atomic 프로퍼티 만드는 법 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 Swift 언어를 사용해 iOS 애플리케이션에서 안전한 Atomic 프로퍼티를 만드는 방법을 다룹니다. Atomic 프로퍼티를 이용함으로써 멀티스레딩 환경에서 데이터 인코히어런시를 방지할 수 있습니다."}],["$","meta","3",{"name":"keywords","content":"Swift,iOS,멀티스레딩,Atomic"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/iOS-%EA%B0%9C%EB%B0%9C-Swift%EB%A1%9C-%EC%95%88%EC%A0%84%ED%95%9C-Atomic-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B2%95-0010b9a8"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"iOS 개발: Swift로 안전한 Atomic 프로퍼티 만드는 법 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"iOS 개발: Swift로 안전한 Atomic 프로퍼티 만드는 법 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 Swift 언어를 사용해 iOS 애플리케이션에서 안전한 Atomic 프로퍼티를 만드는 방법을 다룹니다. Atomic 프로퍼티를 이용함으로써 멀티스레딩 환경에서 데이터 인코히어런시를 방지할 수 있습니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/iOS-%EA%B0%9C%EB%B0%9C-Swift%EB%A1%9C-%EC%95%88%EC%A0%84%ED%95%9C-Atomic-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B2%95-0010b9a8"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"iOS 개발: Swift로 안전한 Atomic 프로퍼티 만드는 법 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 Swift 언어를 사용해 iOS 애플리케이션에서 안전한 Atomic 프로퍼티를 만드는 방법을 다룹니다. Atomic 프로퍼티를 이용함으로써 멀티스레딩 환경에서 데이터 인코히어런시를 방지할 수 있습니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"iOS 개발: Swift로 안전한 Atomic 프로퍼티 만드는 법"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"iOS 개발: Swift로 안전한 Atomic 프로퍼티 만드는 법"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-22"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"cb19a729","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"iOS 개발: Swift로 안전한 Atomic 프로퍼티 만드는 법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["멀티스레딩 환경에서는 여러 스레드가 동시에 데이터를 변경하려고 할 때 데이터 불일치 문제가 발생할 수 있습니다. 이러한 문제를 해결하기 위해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Atomic 프로퍼티","position":{"start":{"line":4,"column":80,"offset":120},"end":{"line":4,"column":93,"offset":133}}}],"position":{"start":{"line":4,"column":80,"offset":120},"end":{"line":4,"column":93,"offset":133}}},"children":"Atomic 프로퍼티"}}],"를 사용하는 방법을 알아보겠습니다. Swift 언어를 이용해 iOS 애플리케이션에서 안전한 Atomic 프로퍼티를 만들어 봅시다."]}],"\n",["$","h2",null,{"id":"00f3db3a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Atomic 프로퍼티란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Atomic 프로퍼티는 여러 스레드에서 동시에 접근할 수 있는 데이터의 불일치 문제를 방지하기 위한 테크닉입니다. 기본적으로, Atomic 연산은 다음 두 가지를 보장합니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"동시성 제어"}],": 여러 스레드가 동시에 읽거나 쓸 때 데이터를 안전하게 유지합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"인코히어런시 방지"}],": 중간 상태의 데이터가 다른 스레드에 노출되지 않습니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"2afee4f8","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Swift에서의 Atomic 프로퍼티 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift는 기본적으로 Atomic 프로퍼티를 제공하지 않기 때문에 이를 직접 구현해야 합니다. 이를 위해 우리는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":15,"column":65,"offset":518},"end":{"line":15,"column":80,"offset":533}}}],"position":{"start":{"line":15,"column":65,"offset":518},"end":{"line":15,"column":80,"offset":533}}},"children":"DispatchQueue"}}],"를 사용하여 동시성 제어를 할 수 있습니다."]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class Atomic<T> {\n    private var value: T\n    private let queue = DispatchQueue(label: \"Atomic Queue\", attributes: .concurrent)\n\n    init(_ value: T) {\n        self.value = value\n    }\n\n    var get: T {\n        queue.sync {\n            value\n        }\n    }\n\n    func set(_ newValue: T) {\n        queue.async(flags: .barrier) {\n            self.value = newValue\n        }\n    }\n\n    func mutate(_ transform: (inout T) -> ()) {\n        queue.async(flags: .barrier) {\n            transform(&self.value)\n        }\n    }\n}\n"}],"position":{"start":{"line":17,"column":1,"offset":559},"end":{"line":44,"column":4,"offset":1091}}},"children":"class Atomic<T> {\n    private var value: T\n    private let queue = DispatchQueue(label: \"Atomic Queue\", attributes: .concurrent)\n\n    init(_ value: T) {\n        self.value = value\n    }\n\n    var get: T {\n        queue.sync {\n            value\n        }\n    }\n\n    func set(_ newValue: T) {\n        queue.async(flags: .barrier) {\n            self.value = newValue\n        }\n    }\n\n    func mutate(_ transform: (inout T) -> ()) {\n        queue.async(flags: .barrier) {\n            transform(&self.value)\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"queue.sync","position":{"start":{"line":46,"column":8,"offset":1100},"end":{"line":46,"column":20,"offset":1112}}}],"position":{"start":{"line":46,"column":8,"offset":1100},"end":{"line":46,"column":20,"offset":1112}}},"children":"queue.sync"}}],"는 읽기 연산을 위한 동기화 메서드입니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"queue.async(flags: .barrier)","position":{"start":{"line":46,"column":44,"offset":1136},"end":{"line":46,"column":74,"offset":1166}}}],"position":{"start":{"line":46,"column":44,"offset":1136},"end":{"line":46,"column":74,"offset":1166}}},"children":"queue.async(flags: .barrier)"}}],"는 쓰기 연산을 위한 비동기화 메서드로, 이 메서드는 쓰기 작업이 완료될 때까지 다른 작업을 중단시키는 역할을 합니다."]}],"\n",["$","h2",null,{"id":"af7af39c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"사용 예제"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"이제 위의 구현을 어떻게 사용할 수 있는지 예제를 통해 알아보겠습니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"let atomicInt = Atomic(0)\n\n// 쓰기 예제\nDispatchQueue.global().async {\n    atomicInt.set(10)\n}\n\n// 읽기 예제\nDispatchQueue.global().async {\n    print(\"Atomic Value: \\(atomicInt.get)\")\n}\n\n// mutate 예제\nDispatchQueue.global().async {\n    atomicInt.mutate { value in\n        value += 1\n    }\n}\n"}],"position":{"start":{"line":52,"column":1,"offset":1285},"end":{"line":71,"column":4,"offset":1579}}},"children":"let atomicInt = Atomic(0)\n\n// 쓰기 예제\nDispatchQueue.global().async {\n    atomicInt.set(10)\n}\n\n// 읽기 예제\nDispatchQueue.global().async {\n    print(\"Atomic Value: \\(atomicInt.get)\")\n}\n\n// mutate 예제\nDispatchQueue.global().async {\n    atomicInt.mutate { value in\n        value += 1\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서는 여러 스레드에서 동시에 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"atomicInt","position":{"start":{"line":73,"column":22,"offset":1602},"end":{"line":73,"column":33,"offset":1613}}}],"position":{"start":{"line":73,"column":22,"offset":1602},"end":{"line":73,"column":33,"offset":1613}}},"children":"atomicInt"}}],"를 읽고 쓰는 예제를 보여줍니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"atomicInt.set(10)","position":{"start":{"line":73,"column":52,"offset":1632},"end":{"line":73,"column":71,"offset":1651}}}],"position":{"start":{"line":73,"column":52,"offset":1632},"end":{"line":73,"column":71,"offset":1651}}},"children":"atomicInt.set(10)"}}],"은 쓰기 연산으로, 이 연산이 완료될 때까지 다른 연산이 중단됩니다. 마찬가지로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"atomicInt.get","position":{"start":{"line":73,"column":116,"offset":1696},"end":{"line":73,"column":131,"offset":1711}}}],"position":{"start":{"line":73,"column":116,"offset":1696},"end":{"line":73,"column":131,"offset":1711}}},"children":"atomicInt.get"}}],"은 읽기 연산으로, 이 연산은 안전하게 데이터를 읽어옵니다."]}],"\n",["$","h2",null,{"id":"99d22c3c","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"성능 고려사항"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["멀티스레드 환경에서의 성능은 중요합니다. 위 코드에서 사용된 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":77,"column":35,"offset":1792},"end":{"line":77,"column":50,"offset":1807}}}],"position":{"start":{"line":77,"column":35,"offset":1792},"end":{"line":77,"column":50,"offset":1807}}},"children":"DispatchQueue"}}],"는 동기화 오버헤드를 줄이기 위해 최적화되어 있습니다. 하지만 너무 많은 동기화는 성능 저하를 일으킬 수 있으므로 필요한 경우에만 동기화를 사용하길 권장합니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 성능을 좀 더 향상시키기 위한 몇 가지 팁입니다:"}],"\n",["$","ol","ol-1",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"필요한 경우에만 동기화"}],": 가능한 한 동기화 비용을 최소화하는 것이 중요합니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"읽기-쓰기 분리"}],": 읽기와 쓰기를 분리함으로써 읽기 작업을 최대한 빠르게 처리할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"비동기 처리"}],": 쓰기 작업은 가능한 한 비동기적으로 처리하여 메인 스레드를 차단하지 않도록 합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"ed8464a3","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"마무리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Atomic 프로퍼티는 멀티스레딩 환경에서 데이터의 일관성을 유지하는 강력한 도구입니다. Swift에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DispatchQueue","position":{"start":{"line":87,"column":60,"offset":2171},"end":{"line":87,"column":75,"offset":2186}}}],"position":{"start":{"line":87,"column":60,"offset":2171},"end":{"line":87,"column":75,"offset":2186}}},"children":"DispatchQueue"}}],"를 이용하여 이러한 Atomic 프로퍼티를 구현할 수 있습니다. 위의 예제를 참고하여 자신의 애플리케이션에 맞게 고도화된 Atomic 프로퍼티를 만들어 보세요."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"iOS 개발: Swift로 안전한 Atomic 프로퍼티 만드는 법","toc":[{"tagName":"h1","title":"iOS 개발: Swift로 안전한 Atomic 프로퍼티 만드는 법","id":"cb19a729"},{"tagName":"h2","title":"Atomic 프로퍼티란?","id":"00f3db3a"},{"tagName":"h2","title":"Swift에서의 Atomic 프로퍼티 구현","id":"2afee4f8"},{"tagName":"h2","title":"사용 예제","id":"af7af39c"},{"tagName":"h2","title":"성능 고려사항","id":"99d22c3c"},{"tagName":"h2","title":"마무리","id":"ed8464a3"}],"language":"kr"}]}]]}]]
8:null
