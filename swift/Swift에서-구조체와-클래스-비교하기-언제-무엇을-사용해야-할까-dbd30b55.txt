1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift%EC%97%90%EC%84%9C-%EA%B5%AC%EC%A1%B0%EC%B2%B4%EC%99%80-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B9%84%EA%B5%90%ED%95%98%EA%B8%B0-%EC%96%B8%EC%A0%9C-%EB%AC%B4%EC%97%87%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-dbd30b55","d"],{"children":["__PAGE__?{\"slug\":\"Swift에서-구조체와-클래스-비교하기-언제-무엇을-사용해야-할까-dbd30b55\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift%EC%97%90%EC%84%9C-%EA%B5%AC%EC%A1%B0%EC%B2%B4%EC%99%80-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B9%84%EA%B5%90%ED%95%98%EA%B8%B0-%EC%96%B8%EC%A0%9C-%EB%AC%B4%EC%97%87%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-dbd30b55","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift에서-구조체와-클래스-비교하기-언제-무엇을-사용해야-할까-dbd30b55\"}"},"styles":[]}],"segment":["slug","Swift%EC%97%90%EC%84%9C-%EA%B5%AC%EC%A1%B0%EC%B2%B4%EC%99%80-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B9%84%EA%B5%90%ED%95%98%EA%B8%B0-%EC%96%B8%EC%A0%9C-%EB%AC%B4%EC%97%87%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-dbd30b55","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift에서 구조체와 클래스 비교하기: 언제 무엇을 사용해야 할까? | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"Swift 프로그래밍 언어에서 구조체(Struct)와 클래스(Class)는 객체 지향 프로그래밍의 중요한 기초 요소입니다. 각각의 특성과 차이점을 이해하면 더 나은 코드 작성을 할 수 있습니다. 이 글에서는 구조체와 클래스의 특성을 비교하고, 언제 무엇을 사용해야 하는지에 대해 상세히 설명합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,구조체,클래스,비교"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift%EC%97%90%EC%84%9C-%EA%B5%AC%EC%A1%B0%EC%B2%B4%EC%99%80-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B9%84%EA%B5%90%ED%95%98%EA%B8%B0-%EC%96%B8%EC%A0%9C-%EB%AC%B4%EC%97%87%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-dbd30b55"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift에서 구조체와 클래스 비교하기: 언제 무엇을 사용해야 할까? | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift에서 구조체와 클래스 비교하기: 언제 무엇을 사용해야 할까? | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"Swift 프로그래밍 언어에서 구조체(Struct)와 클래스(Class)는 객체 지향 프로그래밍의 중요한 기초 요소입니다. 각각의 특성과 차이점을 이해하면 더 나은 코드 작성을 할 수 있습니다. 이 글에서는 구조체와 클래스의 특성을 비교하고, 언제 무엇을 사용해야 하는지에 대해 상세히 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift%EC%97%90%EC%84%9C-%EA%B5%AC%EC%A1%B0%EC%B2%B4%EC%99%80-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B9%84%EA%B5%90%ED%95%98%EA%B8%B0-%EC%96%B8%EC%A0%9C-%EB%AC%B4%EC%97%87%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-dbd30b55"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift에서 구조체와 클래스 비교하기: 언제 무엇을 사용해야 할까? | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"Swift 프로그래밍 언어에서 구조체(Struct)와 클래스(Class)는 객체 지향 프로그래밍의 중요한 기초 요소입니다. 각각의 특성과 차이점을 이해하면 더 나은 코드 작성을 할 수 있습니다. 이 글에서는 구조체와 클래스의 특성을 비교하고, 언제 무엇을 사용해야 하는지에 대해 상세히 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift에서 구조체와 클래스 비교하기: 언제 무엇을 사용해야 할까?"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift에서 구조체와 클래스 비교하기: 언제 무엇을 사용해야 할까?"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-21"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"53fec2c2","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift에서 구조체와 클래스 비교하기: 언제 무엇을 사용해야 할까?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Swift에서 프로그래밍을 하다 보면 구조체(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"struct","position":{"start":{"line":4,"column":26,"offset":68},"end":{"line":4,"column":34,"offset":76}}}],"position":{"start":{"line":4,"column":26,"offset":68},"end":{"line":4,"column":34,"offset":76}}},"children":"struct"}}],")와 클래스(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"class","position":{"start":{"line":4,"column":41,"offset":83},"end":{"line":4,"column":48,"offset":90}}}],"position":{"start":{"line":4,"column":41,"offset":83},"end":{"line":4,"column":48,"offset":90}}},"children":"class"}}],") 중 무엇을 사용할지 고민하는 경우가 많습니다. 이 둘은 많은 면에서 비슷하지만 중요한 차이점도 존재합니다. 이 글에서는 구조체와 클래스의 특성, 장단점, 사용 시기를 비교하여 Swift 프로그래밍에 대해 더 깊이 있는 이해를 돕겠습니다."]}],"\n",["$","h2",null,{"id":"9dd58313","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":["구조체(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"struct","position":{"start":{"line":6,"column":8,"offset":233},"end":{"line":6,"column":16,"offset":241}}}],"position":{"start":{"line":6,"column":8,"offset":233},"end":{"line":6,"column":16,"offset":241}}},"children":"struct"}}],")의 특징"]}],"\n",["$","h3",null,{"id":"84844ab0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"값 타입(Value Type)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"구조체는 값 타입입니다. 이는 구조체의 인스턴스가 변수나 상수에 할당되거나 함수에 전달될 때마다 완전히 새로운 복사본이 생성됨을 의미합니다. 즉, 원본 데이터가 아닌 복사된 데이터를 다루게 되므로 참조 타입에서 발생하는 데이터의 무결성 문제를 피할 수 있습니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct Point {\n    var x: Int\n    var y: Int\n}\n\nvar point1 = Point(x: 0, y: 0)\nvar point2 = point1 // point1을 복사하여 point2에 할당\npoint2.x = 10\nprint(point1.x) // 출력: 0\nprint(point2.x) // 출력: 10\n"}],"position":{"start":{"line":11,"column":1,"offset":417},"end":{"line":22,"column":4,"offset":620}}},"children":"struct Point {\n    var x: Int\n    var y: Int\n}\n\nvar point1 = Point(x: 0, y: 0)\nvar point2 = point1 // point1을 복사하여 point2에 할당\npoint2.x = 10\nprint(point1.x) // 출력: 0\nprint(point2.x) // 출력: 10\n"}}]}],"\n",["$","h3",null,{"id":"48eb6f91","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"메모리 관리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"구조체는 주로 스택 메모리(Stack Memory)를 사용합니다. 이는 접근 속도와 메모리 관리 측면에서 장점을 가집니다. 가비지 컬렉션(Garbage Collection)이 필요 없으며, 메모리 해제 시점이 명확합니다."}],"\n",["$","h3",null,{"id":"c1f6d1bf","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"상속 불가"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"구조체는 상속할 수 없습니다. 이는 상속 구조를 필요로 하지 않는 간단한 데이터 모델링에 구조체가 적합하다는 것을 의미합니다."}],"\n",["$","h3",null,{"id":"04d9e8a5","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"사용 시기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"구조체는 다음과 같은 경우에 이상적입니다:"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":"값 타입으로 다루어야 할 경우"}],"\n",["$","li","li-1",{"children":"간단한 데이터 저장 및 조작이 필요한 경우"}],"\n",["$","li","li-2",{"children":"메모리 관리와 성능이 중요한 경우"}],"\n",["$","li","li-3",{"children":"상속이 필요 없을 경우"}],"\n"]}],"\n",["$","h2",null,{"id":"bbe678b5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":["클래스(",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"class","position":{"start":{"line":37,"column":8,"offset":963},"end":{"line":37,"column":15,"offset":970}}}],"position":{"start":{"line":37,"column":8,"offset":963},"end":{"line":37,"column":15,"offset":970}}},"children":"class"}}],")의 특징"]}],"\n",["$","h3",null,{"id":"2459bb9f","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"참조 타입(Reference Type)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"클래스는 참조 타입입니다. 이는 클래스의 인스턴스가 변수나 상수에 할당되거나 함수에 전달될 때 참조가 전달됨을 의미합니다. 즉, 동일한 인스턴스를 여러 변수나 상수가 참조할 수 있으며, 하나의 변경 사항이 모든 참조에 영향을 미칩니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"class Point {\n    var x: Int\n    var y: Int\n    init(x: Int, y: Int) {\n        self.x = x\n        self.y = y\n    }\n}\n\nvar point1 = Point(x: 0, y: 0)\nvar point2 = point1 // point1을 참조하여 point2에 할당\npoint2.x = 10\nprint(point1.x) // 출력: 10\nprint(point2.x) // 출력: 10\n"}],"position":{"start":{"line":42,"column":1,"offset":1136},"end":{"line":57,"column":4,"offset":1410}}},"children":"class Point {\n    var x: Int\n    var y: Int\n    init(x: Int, y: Int) {\n        self.x = x\n        self.y = y\n    }\n}\n\nvar point1 = Point(x: 0, y: 0)\nvar point2 = point1 // point1을 참조하여 point2에 할당\npoint2.x = 10\nprint(point1.x) // 출력: 10\nprint(point2.x) // 출력: 10\n"}}]}],"\n",["$","h3",null,{"id":"1af139ca","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"상속 가능"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"클래스는 상속을 통해 다른 클래스로부터 속성과 메서드를 물려받을 수 있습니다. 이는 객체 지향 프로그래밍의 핵심 개념 중 하나로, 코드의 재사용성과 상속 구조를 활용한 설계를 가능하게 합니다."}],"\n",["$","h3",null,{"id":"48eb6f91","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"메모리 관리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"클래스는 힙 메모리(Heap Memory)를 사용합니다. Swift에서는 자동 참조 카운팅(Automatic Reference Counting, ARC)을 이용하여 메모리를 관리합니다. 이는 메모리 관리가 자동으로 이루어지지만, 순환 참조(Circular Reference) 문제를 처리해야 합니다."}],"\n",["$","h3",null,{"id":"04d9e8a5","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"사용 시기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"클래스는 다음과 같은 경우에 적합합니다:"}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":"참조 타입으로 다루어야 할 경우"}],"\n",["$","li","li-1",{"children":"상속을 사용해야할 경우"}],"\n",["$","li","li-2",{"children":"상태 유지 및 공유가 필요한 경우"}],"\n",["$","li","li-3",{"children":"비교적 복잡한 데이터 모델링이 필요한 경우"}],"\n"]}],"\n",["$","h2",null,{"id":"b38996bc","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"구조체와 클래스의 공통점"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"구조체와 클래스는 다음과 같은 공통점을 가집니다:"}],"\n",["$","ul","ul-2",{"children":["\n",["$","li","li-0",{"children":"속성(Stored Property)을 가질 수 있습니다."}],"\n",["$","li","li-1",{"children":"메서드(Method)를 정의할 수 있습니다."}],"\n",["$","li","li-2",{"children":"생성자(Initializer)를 정의할 수 있습니다."}],"\n",["$","li","li-3",{"children":"서브스크립트(Subscript)를 사용할 수 있습니다."}],"\n",["$","li","li-4",{"children":"기본적으로는 같은 문법을 사용합니다."}],"\n"]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"struct Employee {\n    var name: String\n    var age: Int\n    func work() {\n        print(\"\\\\(name) is working\")\n    }\n}\n\nclass Manager {\n    var name: String\n    var age: Int\n    init(name: String, age: Int) { \n        self.name = name\n        self.age = age\n    }\n    func work() {\n        print(\"\\\\(name) is managing\")\n    }\n}\n"}],"position":{"start":{"line":80,"column":1,"offset":2022},"end":{"line":100,"column":4,"offset":2362}}},"children":"struct Employee {\n    var name: String\n    var age: Int\n    func work() {\n        print(\"\\\\(name) is working\")\n    }\n}\n\nclass Manager {\n    var name: String\n    var age: Int\n    init(name: String, age: Int) { \n        self.name = name\n        self.age = age\n    }\n    func work() {\n        print(\"\\\\(name) is managing\")\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서 구조체와 클래스는 각각의 용도와 목적을 가지고 있습니다. 구조체는 값 타입으로 간단한 데이터 모델에 적합하며, 클래스는 참조 타입으로 더 복잡한 구조와 상속 구조를 필요로 할 때 사용됩니다. 상황에 따라 구조체와 클래스를 올바르게 선택하는 것은 코드의 효율성과 유지보수성을 높이는 데 매우 중요합니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"구조체와 클래스 각각의 특징과 사용 시기를 잘 이해하여, 적절한 상황에서 올바른 타입을 선택함으로써 더 나은 코드 작성이 가능해집니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift에서 구조체와 클래스 비교하기: 언제 무엇을 사용해야 할까?","toc":[{"tagName":"h1","title":"Swift에서 구조체와 클래스 비교하기: 언제 무엇을 사용해야 할까?","id":"53fec2c2"},{"tagName":"h2","title":"구조체(","id":"9dd58313"},{"tagName":"h3","title":"값 타입(Value Type)","id":"84844ab0"},{"tagName":"h3","title":"메모리 관리","id":"48eb6f91"},{"tagName":"h3","title":"상속 불가","id":"c1f6d1bf"},{"tagName":"h3","title":"사용 시기","id":"04d9e8a5"},{"tagName":"h2","title":"클래스(","id":"bbe678b5"},{"tagName":"h3","title":"참조 타입(Reference Type)","id":"2459bb9f"},{"tagName":"h3","title":"상속 가능","id":"1af139ca"},{"tagName":"h3","title":"메모리 관리","id":"48eb6f91"},{"tagName":"h3","title":"사용 시기","id":"04d9e8a5"},{"tagName":"h2","title":"구조체와 클래스의 공통점","id":"b38996bc"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
