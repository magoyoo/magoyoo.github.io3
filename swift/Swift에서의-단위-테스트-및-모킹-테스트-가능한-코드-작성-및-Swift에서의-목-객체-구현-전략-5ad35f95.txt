1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","Swift%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%B0%8F-%EB%AA%A8%ED%82%B9-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B0%80%EB%8A%A5%ED%95%9C-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EB%B0%8F-Swift%EC%97%90%EC%84%9C%EC%9D%98-%EB%AA%A9-%EA%B0%9D%EC%B2%B4-%EA%B5%AC%ED%98%84-%EC%A0%84%EB%9E%B5-5ad35f95","d"],{"children":["__PAGE__?{\"slug\":\"Swift에서의-단위-테스트-및-모킹-테스트-가능한-코드-작성-및-Swift에서의-목-객체-구현-전략-5ad35f95\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","Swift%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%B0%8F-%EB%AA%A8%ED%82%B9-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B0%80%EB%8A%A5%ED%95%9C-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EB%B0%8F-Swift%EC%97%90%EC%84%9C%EC%9D%98-%EB%AA%A9-%EA%B0%9D%EC%B2%B4-%EA%B5%AC%ED%98%84-%EC%A0%84%EB%9E%B5-5ad35f95","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"Swift에서의-단위-테스트-및-모킹-테스트-가능한-코드-작성-및-Swift에서의-목-객체-구현-전략-5ad35f95\"}"},"styles":[]}],"segment":["slug","Swift%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%B0%8F-%EB%AA%A8%ED%82%B9-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B0%80%EB%8A%A5%ED%95%9C-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EB%B0%8F-Swift%EC%97%90%EC%84%9C%EC%9D%98-%EB%AA%A9-%EA%B0%9D%EC%B2%B4-%EA%B5%AC%ED%98%84-%EC%A0%84%EB%9E%B5-5ad35f95","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Swift에서의 단위 테스트 및 모킹: 테스트 가능한 코드 작성 및 Swift에서의 목 객체 구현 전략. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글에서는 Swift에서 단위 테스트를 작성하고 모킹(Mock)을 이용해 테스트 가능한 코드를 생성하는 방법을 다룹니다. 테스트 주도 개발(TDD)을 위해 필요한 기초 개념부터 실제 사용 예제를 통해 자세히 설명합니다."}],["$","meta","3",{"name":"keywords","content":"Swift,단위 테스트,모킹,TDD"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/Swift%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%B0%8F-%EB%AA%A8%ED%82%B9-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B0%80%EB%8A%A5%ED%95%9C-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EB%B0%8F-Swift%EC%97%90%EC%84%9C%EC%9D%98-%EB%AA%A9-%EA%B0%9D%EC%B2%B4-%EA%B5%AC%ED%98%84-%EC%A0%84%EB%9E%B5-5ad35f95"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"Swift에서의 단위 테스트 및 모킹: 테스트 가능한 코드 작성 및 Swift에서의 목 객체 구현 전략. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"Swift에서의 단위 테스트 및 모킹: 테스트 가능한 코드 작성 및 Swift에서의 목 객체 구현 전략. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글에서는 Swift에서 단위 테스트를 작성하고 모킹(Mock)을 이용해 테스트 가능한 코드를 생성하는 방법을 다룹니다. 테스트 주도 개발(TDD)을 위해 필요한 기초 개념부터 실제 사용 예제를 통해 자세히 설명합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/Swift%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%B0%8F-%EB%AA%A8%ED%82%B9-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B0%80%EB%8A%A5%ED%95%9C-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EB%B0%8F-Swift%EC%97%90%EC%84%9C%EC%9D%98-%EB%AA%A9-%EA%B0%9D%EC%B2%B4-%EA%B5%AC%ED%98%84-%EC%A0%84%EB%9E%B5-5ad35f95"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"Swift에서의 단위 테스트 및 모킹: 테스트 가능한 코드 작성 및 Swift에서의 목 객체 구현 전략. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글에서는 Swift에서 단위 테스트를 작성하고 모킹(Mock)을 이용해 테스트 가능한 코드를 생성하는 방법을 다룹니다. 테스트 주도 개발(TDD)을 위해 필요한 기초 개념부터 실제 사용 예제를 통해 자세히 설명합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBanner2.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBanner2.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"Swift에서의 단위 테스트 및 모킹: 테스트 가능한 코드 작성 및 Swift에서의 목 객체 구현 전략."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"Swift에서의 단위 테스트 및 모킹: 테스트 가능한 코드 작성 및 Swift에서의 목 객체 구현 전략."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-26"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"9bb5d5a4","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"Swift에서의 단위 테스트 및 모킹: 테스트 가능한 코드 작성 및 Swift에서의 목 객체 구현 전략"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift는 강력하고 사용하기 쉬운 프로그래밍 언어로, 안정적이고 유지보수 가능한 소프트웨어를 개발하기 위한 다양한 도구와 라이브러리를 제공합니다. 그 중에서도 단위 테스트와 모킹(Mock)은 코드의 품질을 높이고 버그를 줄이는 데 중요한 역할을 합니다. 이 글에서는 Swift에서 단위 테스트를 작성하고 모킹을 통해 테스트 가능한 코드를 만드는 방법을 설명합니다."}],"\n",["$","h2",null,{"id":"73717887","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"단위 테스트란 무엇인가?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["단위 테스트(Unit Test)란 소프트웨어의 특정 모듈 또는 함수가 의도한 대로 작동하는지 확인하기 위해 작성된 테스트 코드를 말합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"단위(Unit)","position":{"start":{"line":8,"column":79,"offset":364},"end":{"line":8,"column":89,"offset":374}}}],"position":{"start":{"line":8,"column":79,"offset":364},"end":{"line":8,"column":89,"offset":374}}},"children":"단위(Unit)"}}],"는 일반적으로 코드의 가장 작은 테스트 가능한 부분을 의미합니다. 단위 테스트는 다음과 같은 목적으로 사용됩니다:"]}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"버그 발견:"}]," 코드의 작은 부분에서 발생하는 버그를 조기에 발견할 수 있습니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"리팩토링:"}]," 기존 코드를 변경할 때, 새로운 버그를 발생시키지 않도록 보장할 수 있습니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"문서화:"}]," 테스트 케이스가 코드의 사용법을 명시적으로 나타내기 때문에 일종의 문서화 역할을 할 수 있습니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"1933823d","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"Swift에서 단위 테스트 작성하기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서는 Xcode의 XCTest 프레임워크를 사용하여 단위 테스트를 작성할 수 있습니다. 다음은 간단한 예제입니다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import XCTest\n@testable import YourProject\n\nclass MyClassTests: XCTestCase {\n\n    func testExample() throws {\n        // Given\n        let myClass = MyClass()\n\n        // When\n        let result = myClass.someMethod()\n\n        // Then\n        XCTAssertEqual(result, expectedValue)\n    }\n}\n"}],"position":{"start":{"line":18,"column":1,"offset":707},"end":{"line":35,"column":4,"offset":1008}}},"children":"import XCTest\n@testable import YourProject\n\nclass MyClassTests: XCTestCase {\n\n    func testExample() throws {\n        // Given\n        let myClass = MyClass()\n\n        // When\n        let result = myClass.someMethod()\n\n        // Then\n        XCTAssertEqual(result, expectedValue)\n    }\n}\n"}}]}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import XCTest","position":{"start":{"line":37,"column":3,"offset":1012},"end":{"line":37,"column":18,"offset":1027}}}],"position":{"start":{"line":37,"column":3,"offset":1012},"end":{"line":37,"column":18,"offset":1027}}},"children":"import XCTest"}}],": XCTest 프레임워크를 가져옵니다."]}],"\n",["$","li","li-1",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@testable import YourProject","position":{"start":{"line":38,"column":3,"offset":1052},"end":{"line":38,"column":33,"offset":1082}}}],"position":{"start":{"line":38,"column":3,"offset":1052},"end":{"line":38,"column":33,"offset":1082}}},"children":"@testable import YourProject"}}],": 테스트하려는 프로젝트 모듈을 가져옵니다."]}],"\n",["$","li","li-2",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"class MyClassTests: XCTestCase","position":{"start":{"line":39,"column":3,"offset":1109},"end":{"line":39,"column":35,"offset":1141}}}],"position":{"start":{"line":39,"column":3,"offset":1109},"end":{"line":39,"column":35,"offset":1141}}},"children":"class MyClassTests: XCTestCase"}}],": XCTestCase를 상속받아 테스트 클래스를 만듭니다."]}],"\n",["$","li","li-3",{"children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"func testExample() throws","position":{"start":{"line":40,"column":3,"offset":1177},"end":{"line":40,"column":30,"offset":1204}}}],"position":{"start":{"line":40,"column":3,"offset":1177},"end":{"line":40,"column":30,"offset":1204}}},"children":"func testExample() throws"}}],": 테스트 메서드를 정의합니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"62dfeca7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"모킹(Mock)과 스텁(Stubbing)"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"모킹은 의존성을 교체하여 단위 테스트를 보다 독립적으로 만들 수 있는 기법입니다. 일반적으로 네트워크 요청, 데이터베이스 접근 등 외부 의존성을 테스트할 때 사용됩니다. 스텁(Stubbing)은 모킹의 일종으로, 미리 정의된 값을 반환하는 더미 객체를 만드는 것을 의미합니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서 모킹을 구현하기 위해 Protocol(인터페이스)을 사용할 수 있습니다:"}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"protocol NetworkService {\n    func fetchData(completion: @escaping (Result<Data, Error>) -> Void)\n}\n\nclass RealNetworkService: NetworkService {\n    func fetchData(completion: @escaping (Result<Data, Error>) -> Void) {\n        // 실제 네트워크 요청 코드\n    }\n}\n\nclass MockNetworkService: NetworkService {\n    var testData: Data?\n    var testError: Error?\n\n    func fetchData(completion: @escaping (Result<Data, Error>) -> Void) {\n        if let error = testError {\n            completion(.failure(error))\n        } else if let data = testData {\n            completion(.success(data))\n        }\n    }\n}\n"}],"position":{"start":{"line":48,"column":1,"offset":1456},"end":{"line":71,"column":4,"offset":2060}}},"children":"protocol NetworkService {\n    func fetchData(completion: @escaping (Result<Data, Error>) -> Void)\n}\n\nclass RealNetworkService: NetworkService {\n    func fetchData(completion: @escaping (Result<Data, Error>) -> Void) {\n        // 실제 네트워크 요청 코드\n    }\n}\n\nclass MockNetworkService: NetworkService {\n    var testData: Data?\n    var testError: Error?\n\n    func fetchData(completion: @escaping (Result<Data, Error>) -> Void) {\n        if let error = testError {\n            completion(.failure(error))\n        } else if let data = testData {\n            completion(.success(data))\n        }\n    }\n}\n"}}]}],"\n",["$","h2",null,{"id":"61ac1b24","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"테스트 주도 개발(TDD)와 모킹"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"테스트 주도 개발(Test-Driven Development, TDD)은 테스트를 먼저 작성하고 그 테스트를 통과하는 코드를 작성하는 개발 방법론입니다. TDD를 통해 모듈화, 응집력, 유지보수성을 높일 수 있습니다. 아래는 TDD의 세 단계입니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"빨간불(Red):"}]," 실패하는 테스트 작성"]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"초록불(Green):"}]," 테스트를 통과하는 최소한의 코드 작성"]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"리팩토링(Refactor):"}]," 코드 개선 및 최적화"]}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"TDD는 코드를 보다 작고 독립적으로 만들기 때문에 모킹과 잘 어울립니다. 모킹을 통해 테스트가 외부 서비스를 독립적으로 검증할 수 있습니다."}],"\n",["$","h2",null,{"id":"29d16b67","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"모킹 도구 및 라이브러리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서는 다양한 모킹 라이브러리를 활용할 수 있습니다. 그 중 몇 가지 인기 있는 라이브러리는 다음과 같습니다:"}],"\n",["$","ul","ul-2",{"children":["\n",["$","li","li-0",{"children":[["$","strong",null,{"className":"font-black","children":"Cuckoo:"}]," 프로토콜과 클래스에 대한 목 객체를 생성하는 라이브러리입니다."]}],"\n",["$","li","li-1",{"children":[["$","strong",null,{"className":"font-black","children":"Mockingbird:"}]," Xcode와 XCTest를 활용하여 목 객체를 생성하는 라이브러리입니다."]}],"\n",["$","li","li-2",{"children":[["$","strong",null,{"className":"font-black","children":"Quick/Nimble:"}]," BDD 스타일의 테스트 작성을 지원하는 라이브러리입니다."]}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"Swift에서 단위 테스트와 모킹을 통해 테스트 가능한 코드를 작성하는 방법은 소프트웨어 개발의 핵심 기술 중 하나입니다. 단위 테스트는 코드의 품질을 높이고 유지보수를 쉽게 하며, 모킹을 통해 외부 의존성을 제거하여 테스트의 일관성을 유지할 수 있습니다. 최신 모킹 도구와 TDD 방법론을 활용한다면 보다 견고하고 신뢰할 수 있는 소프트웨어를 개발하는 데 큰 도움이 될 것입니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"Swift에서의 단위 테스트 및 모킹: 테스트 가능한 코드 작성 및 Swift에서의 목 객체 구현 전략.","toc":[{"tagName":"h1","title":"Swift에서의 단위 테스트 및 모킹: 테스트 가능한 코드 작성 및 Swift에서의 목 객체 구현 전략","id":"9bb5d5a4"},{"tagName":"h2","title":"단위 테스트란 무엇인가?","id":"73717887"},{"tagName":"h2","title":"Swift에서 단위 테스트 작성하기","id":"1933823d"},{"tagName":"h2","title":"모킹(Mock)과 스텁(Stubbing)","id":"62dfeca7"},{"tagName":"h2","title":"테스트 주도 개발(TDD)와 모킹","id":"61ac1b24"},{"tagName":"h2","title":"모킹 도구 및 라이브러리","id":"29d16b67"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
