1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["javascript",{"children":[["slug","%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%ED%98%81%EC%8B%A0-JavaScript-AsyncAwait-%EC%99%84%EB%B2%BD-%EA%B0%80%EC%9D%B4%EB%93%9C-01027a2a","d"],{"children":["__PAGE__?{\"slug\":\"비동기-프로그래밍의-혁신-JavaScript-AsyncAwait-완벽-가이드-01027a2a\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","javascript","children",["slug","%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%ED%98%81%EC%8B%A0-JavaScript-AsyncAwait-%EC%99%84%EB%B2%BD-%EA%B0%80%EC%9D%B4%EB%93%9C-01027a2a","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"비동기-프로그래밍의-혁신-JavaScript-AsyncAwait-완벽-가이드-01027a2a\"}"},"styles":[]}],"segment":["slug","%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%ED%98%81%EC%8B%A0-JavaScript-AsyncAwait-%EC%99%84%EB%B2%BD-%EA%B0%80%EC%9D%B4%EB%93%9C-01027a2a","d"]},"styles":[]}],"segment":"javascript"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"비동기 프로그래밍의 혁신: JavaScript Async/Await 완벽 가이드 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"JavaScript의 비동기 프로그래밍 기법인 async/await는 복잡한 콜백 지옥을 해결하고 코드를 더 직관적이고 읽기 쉽게 만들어 줍니다. 이 가이드에서는 async/await의 기본 사용법부터 팁과 트릭까지 포괄적으로 다룹니다."}],["$","meta","3",{"name":"keywords","content":"JavaScript,async/await,비동기 프로그래밍"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/javascript/%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%ED%98%81%EC%8B%A0-JavaScript-AsyncAwait-%EC%99%84%EB%B2%BD-%EA%B0%80%EC%9D%B4%EB%93%9C-01027a2a"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"비동기 프로그래밍의 혁신: JavaScript Async/Await 완벽 가이드 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"비동기 프로그래밍의 혁신: JavaScript Async/Await 완벽 가이드 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"JavaScript의 비동기 프로그래밍 기법인 async/await는 복잡한 콜백 지옥을 해결하고 코드를 더 직관적이고 읽기 쉽게 만들어 줍니다. 이 가이드에서는 async/await의 기본 사용법부터 팁과 트릭까지 포괄적으로 다룹니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/javascript/%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%ED%98%81%EC%8B%A0-JavaScript-AsyncAwait-%EC%99%84%EB%B2%BD-%EA%B0%80%EC%9D%B4%EB%93%9C-01027a2a"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/javascriptBanner3.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"비동기 프로그래밍의 혁신: JavaScript Async/Await 완벽 가이드 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"JavaScript의 비동기 프로그래밍 기법인 async/await는 복잡한 콜백 지옥을 해결하고 코드를 더 직관적이고 읽기 쉽게 만들어 줍니다. 이 가이드에서는 async/await의 기본 사용법부터 팁과 트릭까지 포괄적으로 다룹니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/javascriptBanner3.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","172:static/chunks/app/javascript/[slug]/page-5d9f0fdf07008d20.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/javascriptBanner3.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"비동기 프로그래밍의 혁신: JavaScript Async/Await 완벽 가이드"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"비동기 프로그래밍의 혁신: JavaScript Async/Await 완벽 가이드"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-07-24"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"1a92af89","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"JavaScript 비동기 프로그래밍의 혁신: Async/Await 완벽 가이드"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["JavaScript는 본래 단일 스레드 언어로 설계되었지만, 웹 애플리케이션의 복잡성이 증가하면서 비동기 프로그래밍이 필수 요소로 떠올랐습니다. 전통적으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"콜백 함수(callback function)","position":{"start":{"line":4,"column":88,"offset":136},"end":{"line":4,"column":114,"offset":162}}}],"position":{"start":{"line":4,"column":88,"offset":136},"end":{"line":4,"column":114,"offset":162}}},"children":"콜백 함수(callback function)"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"프로미스(Promise)","position":{"start":{"line":4,"column":116,"offset":164},"end":{"line":4,"column":131,"offset":179}}}],"position":{"start":{"line":4,"column":116,"offset":164},"end":{"line":4,"column":131,"offset":179}}},"children":"프로미스(Promise)"}}],"를 사용해 비동기 작업을 처리했지만, 이는 코드의 가독성을 떨어뜨리고 유지보수를 어렵게 만들었습니다. 이를 해결하기 위해 ECMAScript 2017(ES8)에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async/await","position":{"start":{"line":4,"column":223,"offset":271},"end":{"line":4,"column":236,"offset":284}}}],"position":{"start":{"line":4,"column":223,"offset":271},"end":{"line":4,"column":236,"offset":284}}},"children":"async/await"}}]," 키워드가 도입되었습니다. 이번 가이드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async/await","position":{"start":{"line":4,"column":261,"offset":309},"end":{"line":4,"column":274,"offset":322}}}],"position":{"start":{"line":4,"column":261,"offset":309},"end":{"line":4,"column":274,"offset":322}}},"children":"async/await"}}],"의 기본 개념부터 고급 사용법까지 다뤄보겠습니다."]}],"\n",["$","h2",null,{"id":"9f41f9b8","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async","position":{"start":{"line":8,"column":1,"offset":361},"end":{"line":8,"column":8,"offset":368}}}],"position":{"start":{"line":8,"column":1,"offset":361},"end":{"line":8,"column":8,"offset":368}}},"children":"async"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":8,"column":10,"offset":370},"end":{"line":8,"column":17,"offset":377}}}],"position":{"start":{"line":8,"column":10,"offset":370},"end":{"line":8,"column":17,"offset":377}}},"children":"await"}}],"는 프로미스를 보다 직관적이고 간결하게 처리할 수 있게 해주는 키워드입니다. 비동기 함수를 정의할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async","position":{"start":{"line":8,"column":74,"offset":434},"end":{"line":8,"column":81,"offset":441}}}],"position":{"start":{"line":8,"column":74,"offset":434},"end":{"line":8,"column":81,"offset":441}}},"children":"async"}}]," 키워드를 사용하며, 해당 함수 내에서 프로미스를 처리할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":8,"column":115,"offset":475},"end":{"line":8,"column":122,"offset":482}}}],"position":{"start":{"line":8,"column":115,"offset":475},"end":{"line":8,"column":122,"offset":482}}},"children":"await"}}]," 키워드를 사용합니다."]}],"\n",["$","h3",null,{"id":"60ea2ce7","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"async 함수"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async","position":{"start":{"line":12,"column":1,"offset":510},"end":{"line":12,"column":8,"offset":517}}}],"position":{"start":{"line":12,"column":1,"offset":510},"end":{"line":12,"column":8,"offset":517}}},"children":"async"}}]," 키워드는 함수가 항상 프로미스를 반환하도록 만듭니다. 예를 들어, 다음은 간단한 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async","position":{"start":{"line":12,"column":54,"offset":563},"end":{"line":12,"column":61,"offset":570}}}],"position":{"start":{"line":12,"column":54,"offset":563},"end":{"line":12,"column":61,"offset":570}}},"children":"async"}}]," 함수 입니다:"]}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"async function fetchData() {\n  return 'Hello, Async!';\n}\n"}],"position":{"start":{"line":14,"column":1,"offset":580},"end":{"line":18,"column":4,"offset":654}}},"children":"async function fetchData() {\n  return 'Hello, Async!';\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 함수는 호출시 자동으로 프로미스를 반환합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetchData","position":{"start":{"line":20,"column":29,"offset":684},"end":{"line":20,"column":40,"offset":695}}}],"position":{"start":{"line":20,"column":29,"offset":684},"end":{"line":20,"column":40,"offset":695}}},"children":"fetchData"}}]," 함수는 값을 직접 반환하지만, 이는 내적으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Promise.resolve('Hello, Async!')","position":{"start":{"line":20,"column":66,"offset":721},"end":{"line":20,"column":100,"offset":755}}}],"position":{"start":{"line":20,"column":66,"offset":721},"end":{"line":20,"column":100,"offset":755}}},"children":"Promise.resolve('Hello, Async!')"}}],"로 변환됩니다. 따라서 우리는 다음과 같이 이 값을 처리할 수 있습니다:"]}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"fetchData().then(data => console.log(data)); // Hello, Async!\n"}],"position":{"start":{"line":22,"column":1,"offset":797},"end":{"line":24,"column":4,"offset":876}}},"children":"fetchData().then(data => console.log(data)); // Hello, Async!\n"}}]}],"\n",["$","h3",null,{"id":"b30410df","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"await 키워드"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":28,"column":1,"offset":893},"end":{"line":28,"column":8,"offset":900}}}],"position":{"start":{"line":28,"column":1,"offset":893},"end":{"line":28,"column":8,"offset":900}}},"children":"await"}}]," 키워드는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async","position":{"start":{"line":28,"column":14,"offset":906},"end":{"line":28,"column":21,"offset":913}}}],"position":{"start":{"line":28,"column":14,"offset":906},"end":{"line":28,"column":21,"offset":913}}},"children":"async"}}]," 함수 내에서만 사용할 수 있습니다. 이는 특정 프로미스가 해결될 때까지 함수 실행을 일시 중지하고, 해결된 값을 반환합니다. 다음은 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":28,"column":96,"offset":988},"end":{"line":28,"column":103,"offset":995}}}],"position":{"start":{"line":28,"column":96,"offset":988},"end":{"line":28,"column":103,"offset":995}}},"children":"await"}}]," 키워드를 사용하는 예제입니다:"]}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"async function fetchData() {\n  const response = await fetch('https://api.example.com/data');\n  const data = await response.json();\n  return data;\n}\n"}],"position":{"start":{"line":30,"column":1,"offset":1014},"end":{"line":36,"column":4,"offset":1179}}},"children":"async function fetchData() {\n  const response = await fetch('https://api.example.com/data');\n  const data = await response.json();\n  return data;\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["여기서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch","position":{"start":{"line":38,"column":5,"offset":1185},"end":{"line":38,"column":12,"offset":1192}}}],"position":{"start":{"line":38,"column":5,"offset":1185},"end":{"line":38,"column":12,"offset":1192}}},"children":"fetch"}}],"와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"response.json()","position":{"start":{"line":38,"column":14,"offset":1194},"end":{"line":38,"column":31,"offset":1211}}}],"position":{"start":{"line":38,"column":14,"offset":1194},"end":{"line":38,"column":31,"offset":1211}}},"children":"response.json()"}}],"은 모두 프로미스를 반환합니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":38,"column":49,"offset":1229},"end":{"line":38,"column":56,"offset":1236}}}],"position":{"start":{"line":38,"column":49,"offset":1229},"end":{"line":38,"column":56,"offset":1236}}},"children":"await"}}]," 키워드는 이들 프로미스가 해결될 때까지 기다린 후 그 결과를 반환합니다."]}],"\n",["$","h2",null,{"id":"8488876a","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"에러 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async/await","position":{"start":{"line":42,"column":1,"offset":1289},"end":{"line":42,"column":14,"offset":1302}}}],"position":{"start":{"line":42,"column":1,"offset":1289},"end":{"line":42,"column":14,"offset":1302}}},"children":"async/await"}}],"를 이용한 에러 처리는 매우 간단하지만, 중요한 부분입니다. 일반적으로 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"try","position":{"start":{"line":42,"column":54,"offset":1342},"end":{"line":42,"column":59,"offset":1347}}}],"position":{"start":{"line":42,"column":54,"offset":1342},"end":{"line":42,"column":59,"offset":1347}}},"children":"try"}}],"/",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"catch","position":{"start":{"line":42,"column":60,"offset":1348},"end":{"line":42,"column":67,"offset":1355}}}],"position":{"start":{"line":42,"column":60,"offset":1348},"end":{"line":42,"column":67,"offset":1355}}},"children":"catch"}}]," 블록을 사용합니다:"]}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"async function fetchData() {\n  try {\n    const response = await fetch('https://api.example.com/data');\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Fetch error:', error);\n    throw error; // 필요 시 에러를 다시 던질 수 있습니다.\n  }\n}\n"}],"position":{"start":{"line":44,"column":1,"offset":1368},"end":{"line":58,"column":4,"offset":1740}}},"children":"async function fetchData() {\n  try {\n    const response = await fetch('https://api.example.com/data');\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Fetch error:', error);\n    throw error; // 필요 시 에러를 다시 던질 수 있습니다.\n  }\n}\n"}}]}],"\n",["$","h2",null,{"id":"2bfe55b4","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"복수의 비동기 작업 처리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["때때로 복수의 비동기 작업을 병렬로 처리해야 할 때가 있습니다. 이 경우 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Promise.all","position":{"start":{"line":62,"column":42,"offset":1801},"end":{"line":62,"column":55,"offset":1814}}}],"position":{"start":{"line":62,"column":42,"offset":1801},"end":{"line":62,"column":55,"offset":1814}}},"children":"Promise.all"}}],"과 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await","position":{"start":{"line":62,"column":57,"offset":1816},"end":{"line":62,"column":64,"offset":1823}}}],"position":{"start":{"line":62,"column":57,"offset":1816},"end":{"line":62,"column":64,"offset":1823}}},"children":"await"}}],"를 함께 사용할 수 있습니다:"]}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"async function fetchMultipleData() {\n  const [data1, data2] = await Promise.all([\n    fetch('https://api.example.com/data1').then(response => response.json()),\n    fetch('https://api.example.com/data2').then(response => response.json()),\n  ]);\n  return [data1, data2];\n}\n"}],"position":{"start":{"line":64,"column":1,"offset":1841},"end":{"line":72,"column":4,"offset":2129}}},"children":"async function fetchMultipleData() {\n  const [data1, data2] = await Promise.all([\n    fetch('https://api.example.com/data1').then(response => response.json()),\n    fetch('https://api.example.com/data2').then(response => response.json()),\n  ]);\n  return [data1, data2];\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Promise.all","position":{"start":{"line":74,"column":1,"offset":2131},"end":{"line":74,"column":14,"offset":2144}}}],"position":{"start":{"line":74,"column":1,"offset":2131},"end":{"line":74,"column":14,"offset":2144}}},"children":"Promise.all"}}],"은 배열 내 모든 프로미스가 해결될 때까지 기다린 후 결과를 배열로 반환합니다. 이 방법을 사용하면 네트워크 요청을 병렬로 처리하여 성능을 최적화할 수 있습니다."]}],"\n",["$","h2",null,{"id":"657225d7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"async/await의 실용적인 사례"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async/await","position":{"start":{"line":78,"column":1,"offset":2261},"end":{"line":78,"column":14,"offset":2274}}}],"position":{"start":{"line":78,"column":1,"offset":2261},"end":{"line":78,"column":14,"offset":2274}}},"children":"async/await"}}],"는 다양한 실제 상황에서 유용하게 사용될 수 있습니다. 그릇된 시나리오 몇 가지를 살펴보겠습니다."]}],"\n",["$","h3",null,{"id":"f58b0b60","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"데이터베이스 쿼리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["백엔드(Node.js)에서 데이터베이스 쿼리를 처리할 때 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async/await","position":{"start":{"line":82,"column":33,"offset":2377},"end":{"line":82,"column":46,"offset":2390}}}],"position":{"start":{"line":82,"column":33,"offset":2377},"end":{"line":82,"column":46,"offset":2390}}},"children":"async/await"}}],"는 코드를 단순하고 깔끔하게 만들어줍니다:"]}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const fetchUserData = async (userId) => {\n  try {\n    const user = await db.query('SELECT * FROM users WHERE id = ?', [userId]);\n    return user;\n  } catch (error) {\n    console.error('Database query error:', error);\n    throw error;\n  }\n};\n"}],"position":{"start":{"line":84,"column":1,"offset":2415},"end":{"line":94,"column":4,"offset":2673}}},"children":"const fetchUserData = async (userId) => {\n  try {\n    const user = await db.query('SELECT * FROM users WHERE id = ?', [userId]);\n    return user;\n  } catch (error) {\n    console.error('Database query error:', error);\n    throw error;\n  }\n};\n"}}]}],"\n",["$","h3",null,{"id":"32b4c82e","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"파일 읽기/쓰기"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["Node.js에서 파일 시스템 작업을 처리할 때도 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async/await","position":{"start":{"line":98,"column":29,"offset":2717},"end":{"line":98,"column":42,"offset":2730}}}],"position":{"start":{"line":98,"column":29,"offset":2717},"end":{"line":98,"column":42,"offset":2730}}},"children":"async/await"}}],"는 큰 도움이 됩니다:"]}],"\n",["$","pre","pre-6",{"children":["$","$Ld",null,{"props":{"className":"language-javascript","node":{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const fs = require('fs').promises;\n\nconst readFile = async (filePath) => {\n  try {\n    const data = await fs.readFile(filePath, 'utf-8');\n    return data;\n  } catch (error) {\n    console.error('File read error:', error);\n    throw error;\n  }\n};\n"}],"position":{"start":{"line":100,"column":1,"offset":2744},"end":{"line":112,"column":4,"offset":3006}}},"children":"const fs = require('fs').promises;\n\nconst readFile = async (filePath) => {\n  try {\n    const data = await fs.readFile(filePath, 'utf-8');\n    return data;\n  } catch (error) {\n    console.error('File read error:', error);\n    throw error;\n  }\n};\n"}}]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":[["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async/await","position":{"start":{"line":116,"column":1,"offset":3015},"end":{"line":116,"column":14,"offset":3028}}}],"position":{"start":{"line":116,"column":1,"offset":3015},"end":{"line":116,"column":14,"offset":3028}}},"children":"async/await"}}],"는 JavaScript 비동기 프로그래밍의 강력한 도구입니다. 이를 사용하면 복잡한 비동기 코드를 단순하고 직관적으로 작성할 수 있으며, 에러 처리도 훨씬 간편하게 할 수 있습니다. 익숙해지기까지 시간이 조금 걸릴 수 있지만, 한 번 숙달되면 코드 가독성과 유지보수성에서 확실한 이점을 얻을 수 있습니다."]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 가이드를 통해 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"async/await","position":{"start":{"line":118,"column":11,"offset":3210},"end":{"line":118,"column":24,"offset":3223}}}],"position":{"start":{"line":118,"column":11,"offset":3210},"end":{"line":118,"column":24,"offset":3223}}},"children":"async/await"}}],"의 기본 개념과 고급 사용법을 익히며, 비동기 프로그래밍을 보다 효율적으로 다룰 수 있기를 바랍니다."]}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"비동기 프로그래밍의 혁신: JavaScript Async/Await 완벽 가이드","toc":[{"tagName":"h1","title":"JavaScript 비동기 프로그래밍의 혁신: Async/Await 완벽 가이드","id":"1a92af89"},{"tagName":"h2","title":"기본 개념","id":"9f41f9b8"},{"tagName":"h3","title":"async 함수","id":"60ea2ce7"},{"tagName":"h3","title":"await 키워드","id":"b30410df"},{"tagName":"h2","title":"에러 처리","id":"8488876a"},{"tagName":"h2","title":"복수의 비동기 작업 처리","id":"2bfe55b4"},{"tagName":"h2","title":"async/await의 실용적인 사례","id":"657225d7"},{"tagName":"h3","title":"데이터베이스 쿼리","id":"f58b0b60"},{"tagName":"h3","title":"파일 읽기/쓰기","id":"32b4c82e"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
