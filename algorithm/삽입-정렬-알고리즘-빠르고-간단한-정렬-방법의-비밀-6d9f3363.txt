1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["algorithm",{"children":[["slug","%EC%82%BD%EC%9E%85-%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B9%A0%EB%A5%B4%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%A0%95%EB%A0%AC-%EB%B0%A9%EB%B2%95%EC%9D%98-%EB%B9%84%EB%B0%80-6d9f3363","d"],{"children":["__PAGE__?{\"slug\":\"삽입-정렬-알고리즘-빠르고-간단한-정렬-방법의-비밀-6d9f3363\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","algorithm","children",["slug","%EC%82%BD%EC%9E%85-%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B9%A0%EB%A5%B4%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%A0%95%EB%A0%AC-%EB%B0%A9%EB%B2%95%EC%9D%98-%EB%B9%84%EB%B0%80-6d9f3363","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"삽입-정렬-알고리즘-빠르고-간단한-정렬-방법의-비밀-6d9f3363\"}"},"styles":[]}],"segment":["slug","%EC%82%BD%EC%9E%85-%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B9%A0%EB%A5%B4%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%A0%95%EB%A0%AC-%EB%B0%A9%EB%B2%95%EC%9D%98-%EB%B9%84%EB%B0%80-6d9f3363","d"]},"styles":[]}],"segment":"algorithm"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"삽입 정렬 알고리즘: 빠르고 간단한 정렬 방법의 비밀 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"삽입 정렬은 비교적 단순하면서도 중간정도의 효율성을 가진 정렬 알고리즘입니다. 이 글에서는 삽입 정렬의 동작 원리, 구현 방법 및 그 효율성에 대해 심도 있게 탐구합니다."}],["$","meta","3",{"name":"keywords","content":"삽입 정렬,알고리즘,정렬"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/algorithm/%EC%82%BD%EC%9E%85-%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B9%A0%EB%A5%B4%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%A0%95%EB%A0%AC-%EB%B0%A9%EB%B2%95%EC%9D%98-%EB%B9%84%EB%B0%80-6d9f3363"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"삽입 정렬 알고리즘: 빠르고 간단한 정렬 방법의 비밀 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"삽입 정렬 알고리즘: 빠르고 간단한 정렬 방법의 비밀 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"삽입 정렬은 비교적 단순하면서도 중간정도의 효율성을 가진 정렬 알고리즘입니다. 이 글에서는 삽입 정렬의 동작 원리, 구현 방법 및 그 효율성에 대해 심도 있게 탐구합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/algorithm/%EC%82%BD%EC%9E%85-%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B9%A0%EB%A5%B4%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%A0%95%EB%A0%AC-%EB%B0%A9%EB%B2%95%EC%9D%98-%EB%B9%84%EB%B0%80-6d9f3363"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/defaultBanner1.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"삽입 정렬 알고리즘: 빠르고 간단한 정렬 방법의 비밀 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"삽입 정렬은 비교적 단순하면서도 중간정도의 효율성을 가진 정렬 알고리즘입니다. 이 글에서는 삽입 정렬의 동작 원리, 구현 방법 및 그 효율성에 대해 심도 있게 탐구합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/defaultBanner1.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"MarkDownCode","async":false}
e:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
f:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","406:static/chunks/app/algorithm/[slug]/page-94b16d6f374c2d4c.js"],"name":"","async":false}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/defaultBanner1.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"삽입 정렬 알고리즘: 빠르고 간단한 정렬 방법의 비밀"}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"삽입 정렬 알고리즘: 빠르고 간단한 정렬 방법의 비밀"}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-06-13"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h1",null,{"id":"eb5c46a9","className":"md:text-[42px] text-[26px] font-bold leading-[150%] md:py-[50px] py-[30px] text-gray-900","children":"삽입 정렬 알고리즘: 빠르고 간단한 정렬 방법의 비밀"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"삽입 정렬(Insertion Sort)은 컴퓨터 과학의 기초적인 정렬 알고리즘 중 하나로, 실행이 간단하며 비교적 이해하기 쉬운 방법으로 작동합니다. 이 글에서는 삽입 정렬의 개념, 작동 원리, 구현 방법, 장단점을 상세히 알아보겠습니다."}],"\n",["$","h2",null,{"id":"6a17abf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"삽입 정렬이란?"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"삽입 정렬은 배열의 요소를 하나씩 '삽입'해가며 정렬하는 방식입니다. 이 알고리즘은 배열을 이미 정렬된 부분과 정렬되지 않은 부분으로 나누고, 정렬되지 않은 부분의 요소를 하나씩 정렬된 부분에 삽입합니다. 일반적으로 작은 데이터셋에서는 효율적이지만, 큰 데이터셋에서는 시간이 많이 소요될 수 있습니다."}],"\n",["$","h2",null,{"id":"a4ac031b","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"삽입 정렬의 작동 원리"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"삽입 정렬은 다음과 같은 단계를 통해 배열을 정렬합니다:"}],"\n",["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":"정렬된 부분은 첫 번째 요소만 포함하고, 나머지 요소는 정렬되지 않은 부분에 있습니다."}],"\n",["$","li","li-1",{"children":"정렬되지 않은 배열의 첫 번째 요소를 선택합니다."}],"\n",["$","li","li-2",{"children":"선택된 요소를 이미 정렬된 부분과 비교하며 알맞은 위치에 삽입합니다."}],"\n",["$","li","li-3",{"children":"이러한 과정을 반복하여 모든 요소가 정렬될 때까지 진행합니다."}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"예를 들어, 배열 [4, 3, 2, 10, 12, 1, 5, 6]이 있다고 가정합시다. 삽입 정렬은 이 배열을 다음과 같이 정렬합니다:"}],"\n",["$","ol","ol-1",{"children":["\n",["$","li","li-0",{"children":"초기 상태: [4 | 3, 2, 10, 12, 1, 5, 6]"}],"\n",["$","li","li-1",{"children":"3을 삽입: [3, 4 | 2, 10, 12, 1, 5, 6]"}],"\n",["$","li","li-2",{"children":"2를 삽입: [2, 3, 4 | 10, 12, 1, 5, 6]"}],"\n",["$","li","li-3",{"children":"10을 삽입: [2, 3, 4, 10 | 12, 1, 5, 6]"}],"\n",["$","li","li-4",{"children":"12를 삽입: [2, 3, 4, 10, 12 | 1, 5, 6]"}],"\n",["$","li","li-5",{"children":"1을 삽입: [1, 2, 3, 4, 10, 12 | 5, 6]"}],"\n",["$","li","li-6",{"children":"5를 삽입: [1, 2, 3, 4, 5, 10, 12 | 6]"}],"\n",["$","li","li-7",{"children":"6을 삽입: [1, 2, 3, 4, 5, 6, 10, 12]"}],"\n"]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"결과적으로 순서대로 배열됩니다: [1, 2, 3, 4, 5, 6, 10, 12]"}],"\n",["$","h2",null,{"id":"e55ed8d5","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"삽입 정렬의 구현"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"삽입 정렬은 여러 프로그래밍 언어에서 쉽게 구현할 수 있습니다. 다음은 Python을 사용한 삽입 정렬 알고리즘의 예입니다:"}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-python","node":{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"def insertion_sort(arr):\n    for i in range(1, len(arr)):\n        key = arr[i]\n        j = i - 1\n        while j >= 0 and key < arr[j]:\n            arr[j + 1] = arr[j]\n            j -= 1\n        arr[j + 1] = key\n    return arr\n\n# 예제 사용\narr = [4, 3, 2, 10, 12, 1, 5, 6]\nsorted_arr = insertion_sort(arr)\nprint(sorted_arr)\n"}],"position":{"start":{"line":36,"column":1,"offset":1080},"end":{"line":51,"column":4,"offset":1413}}},"children":"def insertion_sort(arr):\n    for i in range(1, len(arr)):\n        key = arr[i]\n        j = i - 1\n        while j >= 0 and key < arr[j]:\n            arr[j + 1] = arr[j]\n            j -= 1\n        arr[j + 1] = key\n    return arr\n\n# 예제 사용\narr = [4, 3, 2, 10, 12, 1, 5, 6]\nsorted_arr = insertion_sort(arr)\nprint(sorted_arr)\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["이 코드에서는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"insertion_sort","position":{"start":{"line":53,"column":9,"offset":1423},"end":{"line":53,"column":25,"offset":1439}}}],"position":{"start":{"line":53,"column":9,"offset":1423},"end":{"line":53,"column":25,"offset":1439}}},"children":"insertion_sort"}}]," 함수가 배열을 입력으로 받아 정렬된 배열을 반환합니다. 내부적으로는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for","position":{"start":{"line":53,"column":64,"offset":1478},"end":{"line":53,"column":69,"offset":1483}}}],"position":{"start":{"line":53,"column":64,"offset":1478},"end":{"line":53,"column":69,"offset":1483}}},"children":"for"}}]," 루프와 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"while","position":{"start":{"line":53,"column":74,"offset":1488},"end":{"line":53,"column":81,"offset":1495}}}],"position":{"start":{"line":53,"column":74,"offset":1488},"end":{"line":53,"column":81,"offset":1495}}},"children":"while"}}]," 루프를 사용하여 요소를 비교하고, 적절한 위치로 삽입합니다."]}],"\n",["$","h2",null,{"id":"4c1b1916","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"삽입 정렬의 효율성"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"삽입 정렬의 시간 복잡도는 최선의 경우와 최악의 경우로 나눌 수 있습니다. 최선의 경우, 즉 이미 정렬된 배열의 경우 시간 복잡도는 O(n)입니다. 그러나 최악의 경우, 즉 역순으로 정렬된 배열의 경우 시간 복잡도는 O(n^2)입니다. 이는 두 개의 중첩된 루프가 있기 때문입니다."}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"삽입 정렬은 메모리 효율적이지만, 큰 데이터셋을 다룰 때는 성능이 떨어질 수 있습니다. 다음은 삽입 정렬의 장단점입니다:"}],"\n",["$","h3",null,{"id":"0e91a822","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"장점"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":"구현이 간단하고 직관적입니다."}],"\n",["$","li","li-1",{"children":"이미 정렬된 데이터에서는 매우 빠릅니다."}],"\n",["$","li","li-2",{"children":"메모리 추가 공간이 필요 없으며, 제자리(in-place) 정렬 알고리즘입니다."}],"\n"]}],"\n",["$","h3",null,{"id":"7c7251f1","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"단점"}],"\n",["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":"최악의 경우 시간 복잡도는 O(n^2)이라서 큰 데이터셋에 비효율적입니다."}],"\n",["$","li","li-1",{"children":"데이터가 랜덤하게 분포되어 있을 때 성능이 좋지 않습니다."}],"\n"]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"삽입 정렬은 기본적이고 직관적인 정렬 알고리즘으로, 작은 데이터셋에서는 매우 유용할 수 있습니다. 그러나 큰 데이터셋에서는 성능 문제가 있을 수 있으므로, 다른 정렬 알고리즘을 고려하는 것이 좋습니다. 삽입 정렬의 원리를 이해하면 다른 정렬 알고리즘을 이해하는 데도 큰 도움이 될 것입니다."}]]}]}],["$","$Le",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$Lf",null,{"articleTitle":"삽입 정렬 알고리즘: 빠르고 간단한 정렬 방법의 비밀","toc":[{"tagName":"h1","title":"삽입 정렬 알고리즘: 빠르고 간단한 정렬 방법의 비밀","id":"eb5c46a9"},{"tagName":"h2","title":"삽입 정렬이란?","id":"6a17abf2"},{"tagName":"h2","title":"삽입 정렬의 작동 원리","id":"a4ac031b"},{"tagName":"h2","title":"삽입 정렬의 구현","id":"e55ed8d5"},{"tagName":"h2","title":"삽입 정렬의 효율성","id":"4c1b1916"},{"tagName":"h3","title":"장점","id":"0e91a822"},{"tagName":"h3","title":"단점","id":"7c7251f1"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
