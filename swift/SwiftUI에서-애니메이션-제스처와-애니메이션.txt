1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["BTzIZmIeYXT3BlsSUt3SU",[[["",{"children":["swift",{"children":[["slug","SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%A0%9C%EC%8A%A4%EC%B2%98%EC%99%80-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98","d"],{"children":["__PAGE__?{\"slug\":\"SwiftUI에서-애니메이션-제스처와-애니메이션\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","swift","children",["slug","SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%A0%9C%EC%8A%A4%EC%B2%98%EC%99%80-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":\"SwiftUI에서-애니메이션-제스처와-애니메이션\"}"},"styles":[]}],"segment":["slug","SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%A0%9C%EC%8A%A4%EC%B2%98%EC%99%80-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98","d"]},"styles":[]}],"segment":"swift"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI 제스처와 애니메이션: 제스처와 연동하여 애니메이션을 트리거하는 방법. | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"이 글은 SwiftUI에서 제스처(예: 드래그, 탭)와 애니메이션을 연동하여 상호작용적이고 동적인 UI를 구현하는 방법을 설명합니다. 탭, 드래그, 스와이프 제스처를 인식하고 이를 기반으로 다양한 애니메이션을 트리거하는 방법을 다양한 예제를 통해 다룹니다. 제스처와 애니메이션을 결합하여 사용자 경험을 향상시키고, 창의적이고 매력적인 애플리케이션을 만드는 방법을 배워보세요."}],["$","meta","3",{"name":"keywords","content":"swift,swiftUI,animation"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com/swift/SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%A0%9C%EC%8A%A4%EC%B2%98%EC%99%80-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI 제스처와 애니메이션: 제스처와 연동하여 애니메이션을 트리거하는 방법. | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI 제스처와 애니메이션: 제스처와 연동하여 애니메이션을 트리거하는 방법. | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"이 글은 SwiftUI에서 제스처(예: 드래그, 탭)와 애니메이션을 연동하여 상호작용적이고 동적인 UI를 구현하는 방법을 설명합니다. 탭, 드래그, 스와이프 제스처를 인식하고 이를 기반으로 다양한 애니메이션을 트리거하는 방법을 다양한 예제를 통해 다룹니다. 제스처와 애니메이션을 결합하여 사용자 경험을 향상시키고, 창의적이고 매력적인 애플리케이션을 만드는 방법을 배워보세요."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com/swift/SwiftUI%EC%97%90%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%A0%9C%EC%8A%A4%EC%B2%98%EC%99%80-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI 제스처와 애니메이션: 제스처와 연동하여 애니메이션을 트리거하는 방법. | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"이 글은 SwiftUI에서 제스처(예: 드래그, 탭)와 애니메이션을 연동하여 상호작용적이고 동적인 UI를 구현하는 방법을 설명합니다. 탭, 드래그, 스와이프 제스처를 인식하고 이를 기반으로 다양한 애니메이션을 트리거하는 방법을 다양한 예제를 통해 다룹니다. 제스처와 애니메이션을 결합하여 사용자 경험을 향상시키고, 창의적이고 매력적인 애플리케이션을 만드는 방법을 배워보세요."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/images/swiftBasic.jpg"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
a:I{"id":22873,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
b:I{"id":84423,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
c:I{"id":2346,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
d:I{"id":67490,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"MarkDownCode","async":false}
12:I{"id":87272,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
13:I{"id":55026,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","754:static/chunks/754-8b5d90286cb88ad9.js","543:static/chunks/543-fe4d83430fed7822.js","288:static/chunks/app/swift/[slug]/page-4841b882b9c15aba.js"],"name":"","async":false}
e:T444,import SwiftUI

struct ContentView: View {
    @State private var isTapped = false
    @State private var offset = CGSize.zero

    var body: some View {
        VStack {
            Spacer()

            Circle()
                .fill(isTapped ? Color.purple : Color.yellow)
                .frame(width: 100, height: 100)
                .offset(offset)
                .gesture(
                    TapGesture()
                        .onEnded {
                            withAnimation(.easeInOut(duration: 0.5)) {
                                isTapped.toggle()
                            }
                        }
                )
                .gesture(
                    DragGesture()
                        .onChanged { gesture in
                            offset = gesture.translation
                        }
                        .onEnded { _ in
                            withAnimation(.spring()) {
                                offset = .zero
                            }
                        }
                )

            Spacer()
        }
    }
}
f:T444,import SwiftUI

struct ContentView: View {
    @State private var isTapped = false
    @State private var offset = CGSize.zero

    var body: some View {
        VStack {
            Spacer()

            Circle()
                .fill(isTapped ? Color.purple : Color.yellow)
                .frame(width: 100, height: 100)
                .offset(offset)
                .gesture(
                    TapGesture()
                        .onEnded {
                            withAnimation(.easeInOut(duration: 0.5)) {
                                isTapped.toggle()
                            }
                        }
                )
                .gesture(
                    DragGesture()
                        .onChanged { gesture in
                            offset = gesture.translation
                        }
                        .onEnded { _ in
                            withAnimation(.spring()) {
                                offset = .zero
                            }
                        }
                )

            Spacer()
        }
    }
}
10:T402,import SwiftUI

struct ContentView: View {
    @State private var isMenuOpen = false

    var body: some View {
        VStack {
            HStack {
                Button(action: {
                    withAnimation(.ease

InOut) {
                        isMenuOpen.toggle()
                    }
                }) {
                    Text("Menu")
                        .padding()
                        .background(Color.blue)
                        .foregroundColor(.white)
                        .cornerRadius(10)
                }
                Spacer()
            }
            .padding()

            if isMenuOpen {
                VStack(alignment: .leading) {
                    Text("Option 1")
                    Text("Option 2")
                    Text("Option 3")
                }
                .padding()
                .background(Color.gray.opacity(0.2))
                .cornerRadius(10)
                .transition(.move(edge: .top))
            }

            Spacer()
        }
    }
}
11:T402,import SwiftUI

struct ContentView: View {
    @State private var isMenuOpen = false

    var body: some View {
        VStack {
            HStack {
                Button(action: {
                    withAnimation(.ease

InOut) {
                        isMenuOpen.toggle()
                    }
                }) {
                    Text("Menu")
                        .padding()
                        .background(Color.blue)
                        .foregroundColor(.white)
                        .cornerRadius(10)
                }
                Spacer()
            }
            .padding()

            if isMenuOpen {
                VStack(alignment: .leading) {
                    Text("Option 1")
                    Text("Option 2")
                    Text("Option 3")
                }
                .padding()
                .background(Color.gray.opacity(0.2))
                .cornerRadius(10)
                .transition(.move(edge: .top))
            }

            Spacer()
        }
    }
}
9:[["$","$La",null,{"language":"kr","screenType":"ARTICLE_DETAIL"}],["$","section",null,{"className":"flex fixed top-0 left-0 w-full  md:h-[600px] h-[300px] justify-center","style":{"backgroundImage":"url(/images/swiftBasic.jpg)","backgroundPosition":"center","backgroundSize":"contain","backgroundRepeat":"no-repeat"},"children":[["$","div",null,{"className":"w-full md:h-[600px] h-[300px]  bg-[#171E24] bg-opacity-[0.35] absolute top-0 left-0"}],["$","div",null,{"className":"hidden md:flex flex-col justify-end w-[100%] md:w-[700px] px-[20px] pb-[100px]","children":["$","h1",null,{"className":"font-semibold text-[40px] text-gray-100 text-shadow-default z-40","children":"SwiftUI 제스처와 애니메이션: 제스처와 연동하여 애니메이션을 트리거하는 방법."}]}]]}],["$","main",null,{"className":"flex flex-row justify-center md:py-[120px] py-[60px] bg-white md:mt-[600px] mt-[300px] relative z-30 ","children":[["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","div",null,{"className":"toc sticky top-[90px] flex flex-col","children":["$","$Lb",null,{}]}]}],["$","article",null,{"className":"flex flex-col w-full md:w-[600px] px-[20px] md:px-[0px] gap-[40px]","children":[["$","div",null,{"className":"md:hidden border-b-[0.6px] pb-[40px] border-gray-200","children":["$","h1",null,{"className":"text-[28px] font-bold leading-[150%]","children":"SwiftUI 제스처와 애니메이션: 제스처와 연동하여 애니메이션을 트리거하는 방법."}]}],["$","div",null,{"className":"flex flex-col","children":[["$","$Lc",null,{}],["$","div",null,{"children":["작성일 : ",["$","time",null,{"children":"2024-05-27"}]]}]]}],["$","div",null,{"children":["$","div",null,{"className":"md-to-html","children":[["$","h2",null,{"id":"1a486d22","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"제스처와 애니메이션: 제스처(예: 드래그, 탭)와 연동하여 애니메이션을 트리거하는 방법"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI는 선언형 문법을 사용하여 간결하고 직관적인 사용자 인터페이스를 구축할 수 있는 애플의 최신 UI 프레임워크입니다. SwiftUI의 강력한 기능 중 하나는 제스처 인식과 애니메이션을 결합하여 상호작용적이고 동적인 UI를 구현할 수 있다는 점입니다. 제스처(예: 드래그, 탭)를 인식하고, 이를 기반으로 애니메이션을 트리거하면 사용자 경험을 크게 향상시킬 수 있습니다. 이번 글에서는 제스처와 애니메이션을 연동하는 방법과 이를 통해 동적인 UI를 구현하는 방법에 대해 자세히 알아보겠습니다."}],"\n",["$","h2",null,{"id":"455866c7","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"제스처와 애니메이션의 기본 개념"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI에서는 다양한 제스처 인식기를 제공하며, 이를 통해 사용자의 상호작용을 감지할 수 있습니다. 대표적인 제스처로는 탭, 드래그, 스와이프 등이 있습니다. 이러한 제스처와 애니메이션을 결합하면 사용자의 입력에 반응하는 동적인 UI를 구현할 수 있습니다."}],"\n",["$","h3",null,{"id":"27c5bd79","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"탭 제스처와 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["탭 제스처는 사용자가 화면을 한 번 터치하는 동작을 인식합니다. SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TapGesture","position":{"start":{"line":12,"column":46,"offset":569},"end":{"line":12,"column":58,"offset":581}}}],"position":{"start":{"line":12,"column":46,"offset":569},"end":{"line":12,"column":58,"offset":581}}},"children":"TapGesture"}}],"를 사용하여 탭 제스처를 인식하고, 이를 기반으로 애니메이션을 트리거할 수 있습니다."]}],"\n",["$","h4","h4-0",{"children":"예제: 탭 제스처를 사용한 색상 변화 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 탭 제스처를 인식하여 뷰의 색상을 변경하는 애니메이션 예제입니다."}],"\n",["$","pre","pre-0",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var isTapped = false\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            Rectangle()\n                .fill(isTapped ? Color.red : Color.blue)\n                .frame(width: 200, height: 200)\n                .onTapGesture {\n                    withAnimation(.easeInOut(duration: 0.5)) {\n                        isTapped.toggle()\n                    }\n                }\n\n            Spacer()\n        }\n    }\n}\n"}],"position":{"start":{"line":18,"column":1,"offset":705},"end":{"line":41,"column":4,"offset":1212}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var isTapped = false\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            Rectangle()\n                .fill(isTapped ? Color.red : Color.blue)\n                .frame(width: 200, height: 200)\n                .onTapGesture {\n                    withAnimation(.easeInOut(duration: 0.5)) {\n                        isTapped.toggle()\n                    }\n                }\n\n            Spacer()\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Rectangle","position":{"start":{"line":43,"column":8,"offset":1221},"end":{"line":43,"column":19,"offset":1232}}}],"position":{"start":{"line":43,"column":8,"offset":1221},"end":{"line":43,"column":19,"offset":1232}}},"children":"Rectangle"}}]," 뷰는 탭 제스처를 인식하여 색상이 변경됩니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onTapGesture","position":{"start":{"line":43,"column":46,"offset":1259},"end":{"line":43,"column":60,"offset":1273}}}],"position":{"start":{"line":43,"column":46,"offset":1259},"end":{"line":43,"column":60,"offset":1273}}},"children":"onTapGesture"}}]," modifier를 사용하여 탭 제스처를 처리하고, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"withAnimation(.easeInOut(duration: 0.5))","position":{"start":{"line":43,"column":89,"offset":1302},"end":{"line":43,"column":131,"offset":1344}}}],"position":{"start":{"line":43,"column":89,"offset":1302},"end":{"line":43,"column":131,"offset":1344}}},"children":"withAnimation(.easeInOut(duration: 0.5))"}}]," 블록 내에서 상태 변화를 애니메이션으로 적용했습니다."]}],"\n",["$","h3",null,{"id":"3a519255","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"드래그 제스처와 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["드래그 제스처는 사용자가 화면을 끌어당기는 동작을 인식합니다. SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DragGesture","position":{"start":{"line":47,"column":45,"offset":1440},"end":{"line":47,"column":58,"offset":1453}}}],"position":{"start":{"line":47,"column":45,"offset":1440},"end":{"line":47,"column":58,"offset":1453}}},"children":"DragGesture"}}],"를 사용하여 드래그 제스처를 인식하고, 이를 기반으로 애니메이션을 트리거할 수 있습니다."]}],"\n",["$","h4","h4-1",{"children":"예제: 드래그 제스처를 사용한 위치 이동 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 드래그 제스처를 인식하여 뷰의 위치를 이동시키는 애니메이션 예제입니다."}],"\n",["$","pre","pre-1",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var offset = CGSize.zero\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            Circle()\n                .fill(Color.green)\n                .frame(width: 100, height: 100)\n                .offset(offset)\n                .gesture(\n                    DragGesture()\n                        .onChanged { gesture in\n                            offset = gesture.translation\n                        }\n                        .onEnded { _ in\n                            withAnimation(.spring()) {\n                                offset = .zero\n                            }\n                        }\n                )\n\n            Spacer()\n        }\n    }\n}\n"}],"position":{"start":{"line":53,"column":1,"offset":1584},"end":{"line":83,"column":4,"offset":2332}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var offset = CGSize.zero\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            Circle()\n                .fill(Color.green)\n                .frame(width: 100, height: 100)\n                .offset(offset)\n                .gesture(\n                    DragGesture()\n                        .onChanged { gesture in\n                            offset = gesture.translation\n                        }\n                        .onEnded { _ in\n                            withAnimation(.spring()) {\n                                offset = .zero\n                            }\n                        }\n                )\n\n            Spacer()\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Circle","position":{"start":{"line":85,"column":8,"offset":2341},"end":{"line":85,"column":16,"offset":2349}}}],"position":{"start":{"line":85,"column":8,"offset":2341},"end":{"line":85,"column":16,"offset":2349}}},"children":"Circle"}}]," 뷰는 드래그 제스처를 인식하여 위치가 변경됩니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DragGesture","position":{"start":{"line":85,"column":45,"offset":2378},"end":{"line":85,"column":58,"offset":2391}}}],"position":{"start":{"line":85,"column":45,"offset":2378},"end":{"line":85,"column":58,"offset":2391}}},"children":"DragGesture"}}],"를 사용하여 드래그 동작을 처리하고, 드래그가 끝난 후에는 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"withAnimation(.spring())","position":{"start":{"line":85,"column":91,"offset":2424},"end":{"line":85,"column":117,"offset":2450}}}],"position":{"start":{"line":85,"column":91,"offset":2424},"end":{"line":85,"column":117,"offset":2450}}},"children":"withAnimation(.spring())"}}]," 블록 내에서 원래 위치로 돌아가는 애니메이션을 적용했습니다."]}],"\n",["$","h3",null,{"id":"79f9803a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"스와이프 제스처와 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["스와이프 제스처는 사용자가 화면을 스치듯 빠르게 지나가는 동작을 인식합니다. SwiftUI의 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SwipeGesture","position":{"start":{"line":89,"column":53,"offset":2559},"end":{"line":89,"column":67,"offset":2573}}}],"position":{"start":{"line":89,"column":53,"offset":2559},"end":{"line":89,"column":67,"offset":2573}}},"children":"SwipeGesture"}}],"는 직접 제공되지 않지만, ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DragGesture","position":{"start":{"line":89,"column":82,"offset":2588},"end":{"line":89,"column":95,"offset":2601}}}],"position":{"start":{"line":89,"column":82,"offset":2588},"end":{"line":89,"column":95,"offset":2601}}},"children":"DragGesture"}}],"를 활용하여 스와이프 제스처를 구현할 수 있습니다."]}],"\n",["$","h4","h4-2",{"children":"예제: 스와이프 제스처를 사용한 뷰 제거 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 스와이프 제스처를 인식하여 뷰를 제거하는 애니메이션 예제입니다."}],"\n",["$","pre","pre-2",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var isSwiped = false\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            if !isSwiped {\n                Rectangle()\n                    .fill(Color.orange)\n                    .frame(width: 200, height: 200)\n                    .gesture(\n                        DragGesture(minimumDistance: 50)\n                            .onEnded { gesture in\n                                if gesture.translation.width > 100 {\n                                    withAnimation(.easeInOut) {\n                                        isSwiped = true\n                                    }\n                                }\n                            }\n                    )\n            }\n\n            Spacer()\n        }\n    }\n}\n"}],"position":{"start":{"line":95,"column":1,"offset":2707},"end":{"line":125,"column":4,"offset":3519}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var isSwiped = false\n\n    var body: some View {\n        VStack {\n            Spacer()\n\n            if !isSwiped {\n                Rectangle()\n                    .fill(Color.orange)\n                    .frame(width: 200, height: 200)\n                    .gesture(\n                        DragGesture(minimumDistance: 50)\n                            .onEnded { gesture in\n                                if gesture.translation.width > 100 {\n                                    withAnimation(.easeInOut) {\n                                        isSwiped = true\n                                    }\n                                }\n                            }\n                    )\n            }\n\n            Spacer()\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Rectangle","position":{"start":{"line":127,"column":8,"offset":3528},"end":{"line":127,"column":19,"offset":3539}}}],"position":{"start":{"line":127,"column":8,"offset":3528},"end":{"line":127,"column":19,"offset":3539}}},"children":"Rectangle"}}]," 뷰는 스와이프 제스처를 인식하여 제거됩니다. ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DragGesture","position":{"start":{"line":127,"column":45,"offset":3565},"end":{"line":127,"column":58,"offset":3578}}}],"position":{"start":{"line":127,"column":45,"offset":3565},"end":{"line":127,"column":58,"offset":3578}}},"children":"DragGesture"}}],"를 사용하여 스와이프 동작을 감지하고, 스와이프 거리가 일정 기준을 넘으면 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"withAnimation(.easeInOut)","position":{"start":{"line":127,"column":100,"offset":3620},"end":{"line":127,"column":127,"offset":3647}}}],"position":{"start":{"line":127,"column":100,"offset":3620},"end":{"line":127,"column":127,"offset":3647}}},"children":"withAnimation(.easeInOut)"}}]," 블록 내에서 뷰를 제거하는 애니메이션을 적용했습니다."]}],"\n",["$","h2",null,{"id":"0f22a4ea","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"제스처와 복합 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"제스처와 애니메이션을 결합하여 복합적인 효과를 만들 수 있습니다. 여러 제스처를 동시에 인식하고, 이를 기반으로 다양한 애니메이션을 트리거하면 사용자에게 더욱 흥미로운 경험을 제공할 수 있습니다."}],"\n",["$","h3",null,{"id":"94186aa0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"예제: 탭과 드래그 제스처를 결합한 애니메이션"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"다음은 탭 제스처와 드래그 제스처를 결합하여 색상 변화와 위치 이동 애니메이션을 동시에 적용하는 예제입니다."}],"\n",["$","pre","pre-3",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$e"}],"position":{"start":{"line":137,"column":1,"offset":3901},"end":{"line":176,"column":4,"offset":5005}}},"children":"$f"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Circle","position":{"start":{"line":178,"column":8,"offset":5014},"end":{"line":178,"column":16,"offset":5022}}}],"position":{"start":{"line":178,"column":8,"offset":5014},"end":{"line":178,"column":16,"offset":5022}}},"children":"Circle"}}]," 뷰는 탭 제스처와 드래그 제스처를 동시에 인식합니다. 탭 제스처를 인식하면 색상이 변경되고, 드래그 제스처를 인식하면 위치가 이동하며, 드래그가 끝난 후에는 원래 위치로 돌아가는 애니메이션이 적용됩니다."]}],"\n",["$","h2",null,{"id":"9e4272dc","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"제스처와 애니메이션의 활용 사례"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"제스처와 애니메이션을 결합한 기능은 다양한 상황에서 활용될 수 있습니다. 대표적인 활용 사례를 몇 가지 소개합니다."}],"\n",["$","h3",null,{"id":"537a80e0","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"인터랙티브 카드 인터페이스"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"카드 형식의 인터페이스에서 드래그 제스처를 사용하여 카드를 넘기거나 제거할 수 있습니다. 애니메이션을 추가하여 카드가 부드럽게 이동하고, 제거되는 효과를 줄 수 있습니다."}],"\n",["$","pre","pre-4",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var cards = [\"Card 1\", \"Card 2\", \"Card 3\"]\n\n    var body: some View {\n        VStack {\n            ForEach(cards, id: \\.self) { card in\n                Text(card)\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n                    .offset(x: 0, y: CGFloat(cards.firstIndex(of: card)!) * 40)\n                    .gesture(\n                        DragGesture()\n                            .onEnded { gesture in\n                                if gesture.translation.width > 100 {\n                                    withAnimation(.easeInOut) {\n                                        cards.removeAll { $0 == card }\n                                    }\n                                }\n                            }\n                    )\n            }\n            Spacer()\n        }\n    }\n}\n"}],"position":{"start":{"line":188,"column":1,"offset":5343},"end":{"line":218,"column":4,"offset":6317}}},"children":"import SwiftUI\n\nstruct ContentView: View {\n    @State private var cards = [\"Card 1\", \"Card 2\", \"Card 3\"]\n\n    var body: some View {\n        VStack {\n            ForEach(cards, id: \\.self) { card in\n                Text(card)\n                    .padding()\n                    .background(Color.blue)\n                    .foregroundColor(.white)\n                    .cornerRadius(10)\n                    .offset(x: 0, y: CGFloat(cards.firstIndex(of: card)!) * 40)\n                    .gesture(\n                        DragGesture()\n                            .onEnded { gesture in\n                                if gesture.translation.width > 100 {\n                                    withAnimation(.easeInOut) {\n                                        cards.removeAll { $0 == card }\n                                    }\n                                }\n                            }\n                    )\n            }\n            Spacer()\n        }\n    }\n}\n"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"위 코드에서 각 카드 뷰는 드래그 제스처를 인식하여 오른쪽으로 스와이프하면 제거되는 애니메이션을 적용합니다."}],"\n",["$","h3",null,{"id":"bc46011a","className":"md:text-[24px] text-[20px] font-medium leading-[140%] md:py-[30px] py-[18px] text-gray-800","children":"탭하여 펼쳐지는 메뉴"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"탭 제스처를 사용하여 메뉴를 펼치거나 접을 수 있습니다. 애니메이션을 추가하여 메뉴가 부드럽게 열리고 닫히는 효과를 줄 수 있습니다."}],"\n",["$","pre","pre-5",{"children":["$","$Ld",null,{"props":{"className":"language-swift","node":{"type":"element","tagName":"code","properties":{"className":["language-swift"]},"children":[{"type":"text","value":"$10"}],"position":{"start":{"line":226,"column":1,"offset":6474},"end":{"line":268,"column":4,"offset":7512}}},"children":"$11"}}]}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":["위 코드에서 ",["$","$Ld",null,{"props":{"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Menu","position":{"start":{"line":270,"column":8,"offset":7521},"end":{"line":270,"column":14,"offset":7527}}}],"position":{"start":{"line":270,"column":8,"offset":7521},"end":{"line":270,"column":14,"offset":7527}}},"children":"Menu"}}]," 버튼을 탭하면 메뉴가 부드럽게 열리고 닫히는 애니메이션을 적용했습니다."]}],"\n",["$","h2",null,{"id":"5b12bcf2","className":"md:text-[32px] text-[22px] font-semibold leading-[145%] md:py-[30px] py-[20px] text-gray-800","children":"결론"}],"\n",["$","p",null,{"className":"md:text-[16px] text-[15px] leading-[180%] text-gray-800 md:py-[20px] py-[20px]","children":"SwiftUI에서는 제스처 인식과 애니메이션을 결합하여 상호작용적이고 동적인 UI를 쉽게 구현할 수 있습니다. 탭, 드래그, 스와이프 제스처를 인식하고 이를 기반으로 다양한 애니메이션을 트리거하면 사용자 경험을 크게 향상시킬 수 있습니다. 제스처와 애니메이션을 적절히 활용하여 창의적이고 흥미로운 애플리케이션을 만들어 보세요. SwiftUI의 강력한 기능을 잘 이해하고 활용하면, 사용자에게 더욱 매력적인 인터페이스를 제공할 수 있습니다."}]]}]}],["$","$L12",null,{}]]}],["$","div",null,{"className":"xl:flex hidden w-[300px]","children":["$","$L13",null,{"articleTitle":"SwiftUI 제스처와 애니메이션: 제스처와 연동하여 애니메이션을 트리거하는 방법.","toc":[{"tagName":"h2","title":"제스처와 애니메이션: 제스처(예: 드래그, 탭)와 연동하여 애니메이션을 트리거하는 방법","id":"1a486d22"},{"tagName":"h2","title":"제스처와 애니메이션의 기본 개념","id":"455866c7"},{"tagName":"h3","title":"탭 제스처와 애니메이션","id":"27c5bd79"},{"tagName":"h3","title":"드래그 제스처와 애니메이션","id":"3a519255"},{"tagName":"h3","title":"스와이프 제스처와 애니메이션","id":"79f9803a"},{"tagName":"h2","title":"제스처와 복합 애니메이션","id":"0f22a4ea"},{"tagName":"h3","title":"예제: 탭과 드래그 제스처를 결합한 애니메이션","id":"94186aa0"},{"tagName":"h2","title":"제스처와 애니메이션의 활용 사례","id":"9e4272dc"},{"tagName":"h3","title":"인터랙티브 카드 인터페이스","id":"537a80e0"},{"tagName":"h3","title":"탭하여 펼쳐지는 메뉴","id":"bc46011a"},{"tagName":"h2","title":"결론","id":"5b12bcf2"}],"language":"kr"}]}]]}]]
8:null
